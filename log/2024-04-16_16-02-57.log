strategy: BEAM
iter: 0
annotated_samples_num: 177
unannotated_samples_num: 3367
Epoch [1/10], Batch [1/22], Loss: 3.7589
Epoch [1/10], Batch [2/22], Loss: 2.6604
Epoch [1/10], Batch [3/22], Loss: 4.1355
Epoch [1/10], Batch [4/22], Loss: 3.0129
Epoch [1/10], Batch [5/22], Loss: 1.1656
Epoch [1/10], Batch [6/22], Loss: 1.4469
Epoch [1/10], Batch [7/22], Loss: 1.4955
Epoch [1/10], Batch [8/22], Loss: 1.2089
Epoch [1/10], Batch [9/22], Loss: 0.8152
Epoch [1/10], Batch [10/22], Loss: 1.1272
Epoch [1/10], Batch [11/22], Loss: 0.7465
Epoch [1/10], Batch [12/22], Loss: 0.7434
Epoch [1/10], Batch [13/22], Loss: 0.6223
Epoch [1/10], Batch [14/22], Loss: 0.6056
Epoch [1/10], Batch [15/22], Loss: 0.7457
Epoch [1/10], Batch [16/22], Loss: 0.5633
Epoch [1/10], Batch [17/22], Loss: 0.3219
Epoch [1/10], Batch [18/22], Loss: 0.3778
Epoch [1/10], Batch [19/22], Loss: 0.3628
Epoch [1/10], Batch [20/22], Loss: 0.3418
Epoch [1/10], Batch [21/22], Loss: 0.2663
Epoch [1/10], Batch [22/22], Loss: 0.2835
Epoch [1/10], Average Loss: 1.2185
-----------------------------------------------------------
strategy: BEAM
iter: 0
epoch: 0
Test Loss: 0.4632
F1_overall: 0.3920
F1_AGENT: 0.5512
F1_TARGET: 0.2058
-----------------------------------------------------------
Epoch [2/10], Batch [1/22], Loss: 0.4729
Epoch [2/10], Batch [2/22], Loss: 0.3427
Epoch [2/10], Batch [3/22], Loss: 0.5360
Epoch [2/10], Batch [4/22], Loss: 0.4759
Epoch [2/10], Batch [5/22], Loss: 0.2938
Epoch [2/10], Batch [6/22], Loss: 0.4423
Epoch [2/10], Batch [7/22], Loss: 0.2894
Epoch [2/10], Batch [8/22], Loss: 0.2771
Epoch [2/10], Batch [9/22], Loss: 0.1656
Epoch [2/10], Batch [10/22], Loss: 0.4537
Epoch [2/10], Batch [11/22], Loss: 0.2752
Epoch [2/10], Batch [12/22], Loss: 0.2650
Epoch [2/10], Batch [13/22], Loss: 0.2515
Epoch [2/10], Batch [14/22], Loss: 0.1717
Epoch [2/10], Batch [15/22], Loss: 0.2573
Epoch [2/10], Batch [16/22], Loss: 0.2438
Epoch [2/10], Batch [17/22], Loss: 0.2048
Epoch [2/10], Batch [18/22], Loss: 0.2544
Epoch [2/10], Batch [19/22], Loss: 0.2009
Epoch [2/10], Batch [20/22], Loss: 0.1789
Epoch [2/10], Batch [21/22], Loss: 0.1612
Epoch [2/10], Batch [22/22], Loss: 0.1452
Epoch [2/10], Average Loss: 0.2890
-----------------------------------------------------------
strategy: BEAM
iter: 0
epoch: 1
Test Loss: 0.4229
F1_overall: 0.4371
F1_AGENT: 0.5925
F1_TARGET: 0.2649
-----------------------------------------------------------
Epoch [3/10], Batch [1/22], Loss: 0.1870
Epoch [3/10], Batch [2/22], Loss: 0.1080
Epoch [3/10], Batch [3/22], Loss: 0.2020
Epoch [3/10], Batch [4/22], Loss: 0.2978
Epoch [3/10], Batch [5/22], Loss: 0.1039
Epoch [3/10], Batch [6/22], Loss: 0.2024
Epoch [3/10], Batch [7/22], Loss: 0.1108
Epoch [3/10], Batch [8/22], Loss: 0.1723
Epoch [3/10], Batch [9/22], Loss: 0.1386
Epoch [3/10], Batch [10/22], Loss: 0.2873
Epoch [3/10], Batch [11/22], Loss: 0.1721
Epoch [3/10], Batch [12/22], Loss: 0.1269
Epoch [3/10], Batch [13/22], Loss: 0.0646
Epoch [3/10], Batch [14/22], Loss: 0.0857
Epoch [3/10], Batch [15/22], Loss: 0.1403
Epoch [3/10], Batch [16/22], Loss: 0.1327
Epoch [3/10], Batch [17/22], Loss: 0.1530
Epoch [3/10], Batch [18/22], Loss: 0.1401
Epoch [3/10], Batch [19/22], Loss: 0.1633
Epoch [3/10], Batch [20/22], Loss: 0.1050
Epoch [3/10], Batch [21/22], Loss: 0.1033
Epoch [3/10], Batch [22/22], Loss: 0.1011
Epoch [3/10], Average Loss: 0.1499
-----------------------------------------------------------
strategy: BEAM
iter: 0
epoch: 2
Test Loss: 0.3845
F1_overall: 0.4840
F1_AGENT: 0.6387
F1_TARGET: 0.3158
-----------------------------------------------------------
Epoch [4/10], Batch [1/22], Loss: 0.1351
Epoch [4/10], Batch [2/22], Loss: 0.0684
Epoch [4/10], Batch [3/22], Loss: 0.1186
Epoch [4/10], Batch [4/22], Loss: 0.1202
Epoch [4/10], Batch [5/22], Loss: 0.0969
Epoch [4/10], Batch [6/22], Loss: 0.0739
Epoch [4/10], Batch [7/22], Loss: 0.0981
Epoch [4/10], Batch [8/22], Loss: 0.1132
Epoch [4/10], Batch [9/22], Loss: 0.0532
Epoch [4/10], Batch [10/22], Loss: 0.1810
Epoch [4/10], Batch [11/22], Loss: 0.1235
Epoch [4/10], Batch [12/22], Loss: 0.1150
Epoch [4/10], Batch [13/22], Loss: 0.1441
Epoch [4/10], Batch [14/22], Loss: 0.0555
Epoch [4/10], Batch [15/22], Loss: 0.0934
Epoch [4/10], Batch [16/22], Loss: 0.0769
Epoch [4/10], Batch [17/22], Loss: 0.1228
Epoch [4/10], Batch [18/22], Loss: 0.2227
Epoch [4/10], Batch [19/22], Loss: 0.1561
Epoch [4/10], Batch [20/22], Loss: 0.1602
Epoch [4/10], Batch [21/22], Loss: 0.1269
Epoch [4/10], Batch [22/22], Loss: 0.1136
Epoch [4/10], Average Loss: 0.1168
-----------------------------------------------------------
strategy: BEAM
iter: 0
epoch: 3
Test Loss: 0.3777
F1_overall: 0.5083
F1_AGENT: 0.6253
F1_TARGET: 0.3871
-----------------------------------------------------------
Epoch [5/10], Batch [1/22], Loss: 0.0700
Epoch [5/10], Batch [2/22], Loss: 0.0477
Epoch [5/10], Batch [3/22], Loss: 0.0658
Epoch [5/10], Batch [4/22], Loss: 0.1028
Epoch [5/10], Batch [5/22], Loss: 0.1797
Epoch [5/10], Batch [6/22], Loss: 0.0796
Epoch [5/10], Batch [7/22], Loss: 0.1252
Epoch [5/10], Batch [8/22], Loss: 0.0564
Epoch [5/10], Batch [9/22], Loss: 0.0596
Epoch [5/10], Batch [10/22], Loss: 0.0957
Epoch [5/10], Batch [11/22], Loss: 0.2059
Epoch [5/10], Batch [12/22], Loss: 0.0868
Epoch [5/10], Batch [13/22], Loss: 0.0936
Epoch [5/10], Batch [14/22], Loss: 0.0807
Epoch [5/10], Batch [15/22], Loss: 0.0817
Epoch [5/10], Batch [16/22], Loss: 0.0541
Epoch [5/10], Batch [17/22], Loss: 0.0950
Epoch [5/10], Batch [18/22], Loss: 0.0729
Epoch [5/10], Batch [19/22], Loss: 0.1245
Epoch [5/10], Batch [20/22], Loss: 0.0662
Epoch [5/10], Batch [21/22], Loss: 0.0743
Epoch [5/10], Batch [22/22], Loss: 0.0650
Epoch [5/10], Average Loss: 0.0902
-----------------------------------------------------------
strategy: BEAM
iter: 0
epoch: 4
Test Loss: 0.3874
F1_overall: 0.4670
F1_AGENT: 0.6115
F1_TARGET: 0.3085
-----------------------------------------------------------
Epoch [6/10], Batch [1/22], Loss: 0.0758
Epoch [6/10], Batch [2/22], Loss: 0.0587
Epoch [6/10], Batch [3/22], Loss: 0.0549
Epoch [6/10], Batch [4/22], Loss: 0.0873
Epoch [6/10], Batch [5/22], Loss: 0.0333
Epoch [6/10], Batch [6/22], Loss: 0.0343
Epoch [6/10], Batch [7/22], Loss: 0.1666
Epoch [6/10], Batch [8/22], Loss: 0.0767
Epoch [6/10], Batch [9/22], Loss: 0.0357
Epoch [6/10], Batch [10/22], Loss: 0.0537
Epoch [6/10], Batch [11/22], Loss: 0.0954
Epoch [6/10], Batch [12/22], Loss: 0.0504
Epoch [6/10], Batch [13/22], Loss: 0.0344
Epoch [6/10], Batch [14/22], Loss: 0.0548
Epoch [6/10], Batch [15/22], Loss: 0.0327
Epoch [6/10], Batch [16/22], Loss: 0.0688
Epoch [6/10], Batch [17/22], Loss: 0.0249
Epoch [6/10], Batch [18/22], Loss: 0.0596
Epoch [6/10], Batch [19/22], Loss: 0.1026
Epoch [6/10], Batch [20/22], Loss: 0.0420
Epoch [6/10], Batch [21/22], Loss: 0.0650
Epoch [6/10], Batch [22/22], Loss: 0.0455
Epoch [6/10], Average Loss: 0.0615
-----------------------------------------------------------
strategy: BEAM
iter: 0
epoch: 5
Test Loss: 0.4374
F1_overall: 0.4513
F1_AGENT: 0.5274
F1_TARGET: 0.3926
-----------------------------------------------------------
Epoch [7/10], Batch [1/22], Loss: 0.0594
Epoch [7/10], Batch [2/22], Loss: 0.0421
Epoch [7/10], Batch [3/22], Loss: 0.0457
Epoch [7/10], Batch [4/22], Loss: 0.0412
Epoch [7/10], Batch [5/22], Loss: 0.0649
Epoch [7/10], Batch [6/22], Loss: 0.0398
Epoch [7/10], Batch [7/22], Loss: 0.0454
Epoch [7/10], Batch [8/22], Loss: 0.0876
Epoch [7/10], Batch [9/22], Loss: 0.0276
Epoch [7/10], Batch [10/22], Loss: 0.0395
Epoch [7/10], Batch [11/22], Loss: 0.0454
Epoch [7/10], Batch [12/22], Loss: 0.0424
Epoch [7/10], Batch [13/22], Loss: 0.0408
Epoch [7/10], Batch [14/22], Loss: 0.0271
Epoch [7/10], Batch [15/22], Loss: 0.1188
Epoch [7/10], Batch [16/22], Loss: 0.0704
Epoch [7/10], Batch [17/22], Loss: 0.0378
Epoch [7/10], Batch [18/22], Loss: 0.0361
Epoch [7/10], Batch [19/22], Loss: 0.1274
Epoch [7/10], Batch [20/22], Loss: 0.0283
Epoch [7/10], Batch [21/22], Loss: 0.0731
Epoch [7/10], Batch [22/22], Loss: 0.0425
Epoch [7/10], Average Loss: 0.0538
-----------------------------------------------------------
strategy: BEAM
iter: 0
epoch: 6
Test Loss: 0.4659
F1_overall: 0.4614
F1_AGENT: 0.5691
F1_TARGET: 0.3727
-----------------------------------------------------------
Epoch [8/10], Batch [1/22], Loss: 0.0810
Epoch [8/10], Batch [2/22], Loss: 0.0254
Epoch [8/10], Batch [3/22], Loss: 0.0436
Epoch [8/10], Batch [4/22], Loss: 0.0193
Epoch [8/10], Batch [5/22], Loss: 0.0297
Epoch [8/10], Batch [6/22], Loss: 0.0302
Epoch [8/10], Batch [7/22], Loss: 0.0673
Epoch [8/10], Batch [8/22], Loss: 0.0712
Epoch [8/10], Batch [9/22], Loss: 0.0203
Epoch [8/10], Batch [10/22], Loss: 0.0685
Epoch [8/10], Batch [11/22], Loss: 0.0591
Epoch [8/10], Batch [12/22], Loss: 0.0487
Epoch [8/10], Batch [13/22], Loss: 0.0252
Epoch [8/10], Batch [14/22], Loss: 0.0372
Epoch [8/10], Batch [15/22], Loss: 0.0703
Epoch [8/10], Batch [16/22], Loss: 0.0241
Epoch [8/10], Batch [17/22], Loss: 0.0256
Epoch [8/10], Batch [18/22], Loss: 0.0734
Epoch [8/10], Batch [19/22], Loss: 0.0617
Epoch [8/10], Batch [20/22], Loss: 0.0373
Epoch [8/10], Batch [21/22], Loss: 0.0164
Epoch [8/10], Batch [22/22], Loss: 0.0793
Epoch [8/10], Average Loss: 0.0461
-----------------------------------------------------------
strategy: BEAM
iter: 0
epoch: 7
Test Loss: 0.4959
F1_overall: 0.5024
F1_AGENT: 0.6457
F1_TARGET: 0.3414
-----------------------------------------------------------
Epoch [9/10], Batch [1/22], Loss: 0.0323
Epoch [9/10], Batch [2/22], Loss: 0.0148
Epoch [9/10], Batch [3/22], Loss: 0.0588
Epoch [9/10], Batch [4/22], Loss: 0.0294
Epoch [9/10], Batch [5/22], Loss: 0.0183
Epoch [9/10], Batch [6/22], Loss: 0.0801
Epoch [9/10], Batch [7/22], Loss: 0.0398
Epoch [9/10], Batch [8/22], Loss: 0.0411
Epoch [9/10], Batch [9/22], Loss: 0.0131
Epoch [9/10], Batch [10/22], Loss: 0.0737
Epoch [9/10], Batch [11/22], Loss: 0.0339
Epoch [9/10], Batch [12/22], Loss: 0.0990
Epoch [9/10], Batch [13/22], Loss: 0.0417
Epoch [9/10], Batch [14/22], Loss: 0.0152
Epoch [9/10], Batch [15/22], Loss: 0.0691
Epoch [9/10], Batch [16/22], Loss: 0.0144
Epoch [9/10], Batch [17/22], Loss: 0.0410
Epoch [9/10], Batch [18/22], Loss: 0.0805
Epoch [9/10], Batch [19/22], Loss: 0.0141
Epoch [9/10], Batch [20/22], Loss: 0.0624
Epoch [9/10], Batch [21/22], Loss: 0.0240
Epoch [9/10], Batch [22/22], Loss: 0.1096
Epoch [9/10], Average Loss: 0.0457
-----------------------------------------------------------
strategy: BEAM
iter: 0
epoch: 8
Test Loss: 0.5674
F1_overall: 0.4496
F1_AGENT: 0.5931
F1_TARGET: 0.2944
-----------------------------------------------------------
Epoch [10/10], Batch [1/22], Loss: 0.0550
Epoch [10/10], Batch [2/22], Loss: 0.0276
Epoch [10/10], Batch [3/22], Loss: 0.0097
Epoch [10/10], Batch [4/22], Loss: 0.0090
Epoch [10/10], Batch [5/22], Loss: 0.0404
Epoch [10/10], Batch [6/22], Loss: 0.0187
Epoch [10/10], Batch [7/22], Loss: 0.0263
Epoch [10/10], Batch [8/22], Loss: 0.0097
Epoch [10/10], Batch [9/22], Loss: 0.0280
Epoch [10/10], Batch [10/22], Loss: 0.0176
Epoch [10/10], Batch [11/22], Loss: 0.0432
Epoch [10/10], Batch [12/22], Loss: 0.0368
Epoch [10/10], Batch [13/22], Loss: 0.0343
Epoch [10/10], Batch [14/22], Loss: 0.0075
Epoch [10/10], Batch [15/22], Loss: 0.1173
Epoch [10/10], Batch [16/22], Loss: 0.0777
Epoch [10/10], Batch [17/22], Loss: 0.0687
Epoch [10/10], Batch [18/22], Loss: 0.0234
Epoch [10/10], Batch [19/22], Loss: 0.0388
Epoch [10/10], Batch [20/22], Loss: 0.0160
Epoch [10/10], Batch [21/22], Loss: 0.0319
Epoch [10/10], Batch [22/22], Loss: 0.0297
Epoch [10/10], Average Loss: 0.0349
-----------------------------------------------------------
strategy: BEAM
iter: 0
epoch: 9
Test Loss: 0.5382
F1_overall: 0.4796
F1_AGENT: 0.5996
F1_TARGET: 0.3601
-----------------------------------------------------------
sorted_beam_scores: [(1790, tensor(-0.4144, dtype=torch.float64)), (2250, tensor(-0.4136, dtype=torch.float64)), (19, tensor(-0.3951, dtype=torch.float64)), (2908, tensor(-0.3929, dtype=torch.float64)), (2093, tensor(-0.3821, dtype=torch.float64)), (3085, tensor(-0.3734, dtype=torch.float64)), (1502, tensor(-0.3731, dtype=torch.float64)), (1361, tensor(-0.3231, dtype=torch.float64)), (602, tensor(-0.3220, dtype=torch.float64)), (897, tensor(-0.3171, dtype=torch.float64)), (1120, tensor(-0.3169, dtype=torch.float64)), (685, tensor(-0.3097, dtype=torch.float64)), (5, tensor(-0.3005, dtype=torch.float64)), (2594, tensor(-0.2917, dtype=torch.float64)), (1764, tensor(-0.2904, dtype=torch.float64)), (589, tensor(-0.2890, dtype=torch.float64)), (960, tensor(-0.2860, dtype=torch.float64)), (1386, tensor(-0.2792, dtype=torch.float64)), (1581, tensor(-0.2713, dtype=torch.float64)), (508, tensor(-0.2688, dtype=torch.float64)), (271, tensor(-0.2613, dtype=torch.float64)), (1506, tensor(-0.2577, dtype=torch.float64)), (2468, tensor(-0.2556, dtype=torch.float64)), (2118, tensor(-0.2554, dtype=torch.float64)), (865, tensor(-0.2537, dtype=torch.float64)), (535, tensor(-0.2457, dtype=torch.float64)), (742, tensor(-0.2454, dtype=torch.float64)), (2608, tensor(-0.2428, dtype=torch.float64)), (1742, tensor(-0.2413, dtype=torch.float64)), (1829, tensor(-0.2409, dtype=torch.float64)), (567, tensor(-0.2392, dtype=torch.float64)), (1027, tensor(-0.2382, dtype=torch.float64)), (734, tensor(-0.2333, dtype=torch.float64)), (750, tensor(-0.2309, dtype=torch.float64)), (54, tensor(-0.2290, dtype=torch.float64)), (1269, tensor(-0.2281, dtype=torch.float64)), (2352, tensor(-0.2274, dtype=torch.float64)), (2688, tensor(-0.2260, dtype=torch.float64)), (490, tensor(-0.2250, dtype=torch.float64)), (2067, tensor(-0.2241, dtype=torch.float64)), (1562, tensor(-0.2188, dtype=torch.float64)), (936, tensor(-0.2181, dtype=torch.float64)), (905, tensor(-0.2181, dtype=torch.float64)), (2014, tensor(-0.2165, dtype=torch.float64)), (2470, tensor(-0.2158, dtype=torch.float64)), (224, tensor(-0.2152, dtype=torch.float64)), (1423, tensor(-0.2141, dtype=torch.float64)), (2170, tensor(-0.2140, dtype=torch.float64)), (2245, tensor(-0.2136, dtype=torch.float64)), (2480, tensor(-0.2132, dtype=torch.float64)), (442, tensor(-0.2119, dtype=torch.float64)), (1028, tensor(-0.2114, dtype=torch.float64)), (774, tensor(-0.2099, dtype=torch.float64)), (3048, tensor(-0.2090, dtype=torch.float64)), (3314, tensor(-0.2083, dtype=torch.float64)), (3225, tensor(-0.2076, dtype=torch.float64)), (2437, tensor(-0.2073, dtype=torch.float64)), (1779, tensor(-0.2071, dtype=torch.float64)), (1969, tensor(-0.2011, dtype=torch.float64)), (1693, tensor(-0.2006, dtype=torch.float64)), (3011, tensor(-0.2002, dtype=torch.float64)), (3307, tensor(-0.1987, dtype=torch.float64)), (135, tensor(-0.1983, dtype=torch.float64)), (2921, tensor(-0.1962, dtype=torch.float64)), (222, tensor(-0.1953, dtype=torch.float64)), (2622, tensor(-0.1944, dtype=torch.float64)), (78, tensor(-0.1943, dtype=torch.float64)), (2275, tensor(-0.1942, dtype=torch.float64)), (2049, tensor(-0.1942, dtype=torch.float64)), (2096, tensor(-0.1935, dtype=torch.float64)), (695, tensor(-0.1929, dtype=torch.float64)), (594, tensor(-0.1926, dtype=torch.float64)), (1054, tensor(-0.1918, dtype=torch.float64)), (2202, tensor(-0.1909, dtype=torch.float64)), (1589, tensor(-0.1903, dtype=torch.float64)), (826, tensor(-0.1894, dtype=torch.float64)), (2712, tensor(-0.1876, dtype=torch.float64)), (2252, tensor(-0.1875, dtype=torch.float64)), (292, tensor(-0.1859, dtype=torch.float64)), (1620, tensor(-0.1856, dtype=torch.float64)), (1320, tensor(-0.1852, dtype=torch.float64)), (1738, tensor(-0.1848, dtype=torch.float64)), (1792, tensor(-0.1845, dtype=torch.float64)), (157, tensor(-0.1842, dtype=torch.float64)), (831, tensor(-0.1842, dtype=torch.float64)), (3058, tensor(-0.1829, dtype=torch.float64)), (1350, tensor(-0.1824, dtype=torch.float64)), (1466, tensor(-0.1807, dtype=torch.float64)), (2528, tensor(-0.1799, dtype=torch.float64)), (1525, tensor(-0.1796, dtype=torch.float64)), (2240, tensor(-0.1794, dtype=torch.float64)), (1756, tensor(-0.1790, dtype=torch.float64)), (455, tensor(-0.1783, dtype=torch.float64)), (2376, tensor(-0.1781, dtype=torch.float64)), (775, tensor(-0.1780, dtype=torch.float64)), (801, tensor(-0.1774, dtype=torch.float64)), (2514, tensor(-0.1770, dtype=torch.float64)), (1319, tensor(-0.1766, dtype=torch.float64)), (2918, tensor(-0.1761, dtype=torch.float64)), (2865, tensor(-0.1761, dtype=torch.float64)), (1745, tensor(-0.1754, dtype=torch.float64)), (3361, tensor(-0.1754, dtype=torch.float64)), (2457, tensor(-0.1754, dtype=torch.float64)), (3105, tensor(-0.1752, dtype=torch.float64)), (1950, tensor(-0.1747, dtype=torch.float64)), (2386, tensor(-0.1743, dtype=torch.float64)), (1173, tensor(-0.1743, dtype=torch.float64)), (1600, tensor(-0.1740, dtype=torch.float64)), (647, tensor(-0.1738, dtype=torch.float64)), (1287, tensor(-0.1734, dtype=torch.float64)), (3285, tensor(-0.1731, dtype=torch.float64)), (225, tensor(-0.1728, dtype=torch.float64)), (2843, tensor(-0.1720, dtype=torch.float64)), (876, tensor(-0.1718, dtype=torch.float64)), (56, tensor(-0.1713, dtype=torch.float64)), (1956, tensor(-0.1712, dtype=torch.float64)), (1828, tensor(-0.1711, dtype=torch.float64)), (1152, tensor(-0.1708, dtype=torch.float64)), (1021, tensor(-0.1698, dtype=torch.float64)), (2217, tensor(-0.1698, dtype=torch.float64)), (16, tensor(-0.1697, dtype=torch.float64)), (209, tensor(-0.1691, dtype=torch.float64)), (3027, tensor(-0.1690, dtype=torch.float64)), (1677, tensor(-0.1683, dtype=torch.float64)), (212, tensor(-0.1682, dtype=torch.float64)), (240, tensor(-0.1680, dtype=torch.float64)), (2451, tensor(-0.1678, dtype=torch.float64)), (3031, tensor(-0.1675, dtype=torch.float64)), (3141, tensor(-0.1675, dtype=torch.float64)), (3200, tensor(-0.1675, dtype=torch.float64)), (3207, tensor(-0.1674, dtype=torch.float64)), (1310, tensor(-0.1672, dtype=torch.float64)), (2766, tensor(-0.1671, dtype=torch.float64)), (3083, tensor(-0.1661, dtype=torch.float64)), (235, tensor(-0.1659, dtype=torch.float64)), (3077, tensor(-0.1658, dtype=torch.float64)), (2489, tensor(-0.1657, dtype=torch.float64)), (2937, tensor(-0.1656, dtype=torch.float64)), (1750, tensor(-0.1655, dtype=torch.float64)), (1928, tensor(-0.1653, dtype=torch.float64)), (307, tensor(-0.1647, dtype=torch.float64)), (1515, tensor(-0.1645, dtype=torch.float64)), (1836, tensor(-0.1641, dtype=torch.float64)), (1214, tensor(-0.1638, dtype=torch.float64)), (2228, tensor(-0.1635, dtype=torch.float64)), (437, tensor(-0.1634, dtype=torch.float64)), (2863, tensor(-0.1633, dtype=torch.float64)), (869, tensor(-0.1628, dtype=torch.float64)), (1734, tensor(-0.1623, dtype=torch.float64)), (2964, tensor(-0.1618, dtype=torch.float64)), (1433, tensor(-0.1611, dtype=torch.float64)), (2077, tensor(-0.1604, dtype=torch.float64)), (2947, tensor(-0.1604, dtype=torch.float64)), (50, tensor(-0.1603, dtype=torch.float64)), (218, tensor(-0.1594, dtype=torch.float64)), (232, tensor(-0.1593, dtype=torch.float64)), (932, tensor(-0.1589, dtype=torch.float64)), (1428, tensor(-0.1587, dtype=torch.float64)), (1438, tensor(-0.1578, dtype=torch.float64)), (2699, tensor(-0.1577, dtype=torch.float64)), (3262, tensor(-0.1577, dtype=torch.float64)), (369, tensor(-0.1573, dtype=torch.float64)), (2372, tensor(-0.1567, dtype=torch.float64)), (295, tensor(-0.1562, dtype=torch.float64)), (2887, tensor(-0.1560, dtype=torch.float64)), (2036, tensor(-0.1560, dtype=torch.float64)), (1909, tensor(-0.1557, dtype=torch.float64)), (453, tensor(-0.1554, dtype=torch.float64)), (516, tensor(-0.1552, dtype=torch.float64)), (512, tensor(-0.1551, dtype=torch.float64)), (2497, tensor(-0.1551, dtype=torch.float64)), (1097, tensor(-0.1549, dtype=torch.float64)), (151, tensor(-0.1549, dtype=torch.float64)), (1456, tensor(-0.1549, dtype=torch.float64)), (409, tensor(-0.1548, dtype=torch.float64)), (706, tensor(-0.1544, dtype=torch.float64)), (1363, tensor(-0.1543, dtype=torch.float64)), (3163, tensor(-0.1542, dtype=torch.float64)), (2353, tensor(-0.1538, dtype=torch.float64)), (888, tensor(-0.1533, dtype=torch.float64)), (3101, tensor(-0.1529, dtype=torch.float64)), (1761, tensor(-0.1528, dtype=torch.float64)), (1011, tensor(-0.1524, dtype=torch.float64)), (57, tensor(-0.1522, dtype=torch.float64)), (269, tensor(-0.1519, dtype=torch.float64)), (883, tensor(-0.1516, dtype=torch.float64)), (131, tensor(-0.1515, dtype=torch.float64)), (529, tensor(-0.1515, dtype=torch.float64)), (877, tensor(-0.1512, dtype=torch.float64)), (241, tensor(-0.1510, dtype=torch.float64)), (1892, tensor(-0.1510, dtype=torch.float64)), (2244, tensor(-0.1508, dtype=torch.float64)), (3075, tensor(-0.1506, dtype=torch.float64)), (2219, tensor(-0.1502, dtype=torch.float64)), (772, tensor(-0.1499, dtype=torch.float64)), (1667, tensor(-0.1494, dtype=torch.float64)), (2638, tensor(-0.1493, dtype=torch.float64)), (623, tensor(-0.1493, dtype=torch.float64)), (1220, tensor(-0.1490, dtype=torch.float64)), (1022, tensor(-0.1489, dtype=torch.float64)), (2048, tensor(-0.1488, dtype=torch.float64)), (2363, tensor(-0.1486, dtype=torch.float64)), (3274, tensor(-0.1485, dtype=torch.float64)), (1833, tensor(-0.1484, dtype=torch.float64)), (67, tensor(-0.1482, dtype=torch.float64)), (447, tensor(-0.1481, dtype=torch.float64)), (1357, tensor(-0.1479, dtype=torch.float64)), (2982, tensor(-0.1479, dtype=torch.float64)), (1819, tensor(-0.1479, dtype=torch.float64)), (538, tensor(-0.1478, dtype=torch.float64)), (2891, tensor(-0.1477, dtype=torch.float64)), (272, tensor(-0.1477, dtype=torch.float64)), (3284, tensor(-0.1477, dtype=torch.float64)), (961, tensor(-0.1475, dtype=torch.float64)), (2113, tensor(-0.1472, dtype=torch.float64)), (2098, tensor(-0.1471, dtype=torch.float64)), (765, tensor(-0.1471, dtype=torch.float64)), (1474, tensor(-0.1471, dtype=torch.float64)), (420, tensor(-0.1468, dtype=torch.float64)), (1418, tensor(-0.1467, dtype=torch.float64)), (2440, tensor(-0.1464, dtype=torch.float64)), (1451, tensor(-0.1462, dtype=torch.float64)), (1262, tensor(-0.1462, dtype=torch.float64)), (2153, tensor(-0.1460, dtype=torch.float64)), (1552, tensor(-0.1458, dtype=torch.float64)), (3066, tensor(-0.1457, dtype=torch.float64)), (999, tensor(-0.1455, dtype=torch.float64)), (1700, tensor(-0.1454, dtype=torch.float64)), (2461, tensor(-0.1454, dtype=torch.float64)), (2706, tensor(-0.1452, dtype=torch.float64)), (1117, tensor(-0.1451, dtype=torch.float64)), (580, tensor(-0.1449, dtype=torch.float64)), (2073, tensor(-0.1446, dtype=torch.float64)), (3350, tensor(-0.1445, dtype=torch.float64)), (2576, tensor(-0.1443, dtype=torch.float64)), (1521, tensor(-0.1442, dtype=torch.float64)), (2788, tensor(-0.1439, dtype=torch.float64)), (2667, tensor(-0.1439, dtype=torch.float64)), (2407, tensor(-0.1439, dtype=torch.float64)), (1317, tensor(-0.1437, dtype=torch.float64)), (1209, tensor(-0.1437, dtype=torch.float64)), (743, tensor(-0.1433, dtype=torch.float64)), (1494, tensor(-0.1432, dtype=torch.float64)), (1280, tensor(-0.1432, dtype=torch.float64)), (712, tensor(-0.1428, dtype=torch.float64)), (3045, tensor(-0.1423, dtype=torch.float64)), (2231, tensor(-0.1420, dtype=torch.float64)), (758, tensor(-0.1420, dtype=torch.float64)), (280, tensor(-0.1418, dtype=torch.float64)), (1511, tensor(-0.1416, dtype=torch.float64)), (132, tensor(-0.1413, dtype=torch.float64)), (966, tensor(-0.1410, dtype=torch.float64)), (96, tensor(-0.1408, dtype=torch.float64)), (66, tensor(-0.1407, dtype=torch.float64)), (2343, tensor(-0.1407, dtype=torch.float64)), (1125, tensor(-0.1404, dtype=torch.float64)), (1395, tensor(-0.1403, dtype=torch.float64)), (208, tensor(-0.1402, dtype=torch.float64)), (287, tensor(-0.1399, dtype=torch.float64)), (921, tensor(-0.1399, dtype=torch.float64)), (2331, tensor(-0.1397, dtype=torch.float64)), (785, tensor(-0.1392, dtype=torch.float64)), (10, tensor(-0.1391, dtype=torch.float64)), (89, tensor(-0.1390, dtype=torch.float64)), (763, tensor(-0.1389, dtype=torch.float64)), (258, tensor(-0.1389, dtype=torch.float64)), (1056, tensor(-0.1388, dtype=torch.float64)), (1985, tensor(-0.1387, dtype=torch.float64)), (2609, tensor(-0.1384, dtype=torch.float64)), (2938, tensor(-0.1381, dtype=torch.float64)), (2124, tensor(-0.1380, dtype=torch.float64)), (1391, tensor(-0.1377, dtype=torch.float64)), (2057, tensor(-0.1376, dtype=torch.float64)), (1752, tensor(-0.1375, dtype=torch.float64)), (1938, tensor(-0.1372, dtype=torch.float64)), (1444, tensor(-0.1368, dtype=torch.float64)), (794, tensor(-0.1365, dtype=torch.float64)), (810, tensor(-0.1365, dtype=torch.float64)), (1301, tensor(-0.1364, dtype=torch.float64)), (572, tensor(-0.1364, dtype=torch.float64)), (2754, tensor(-0.1364, dtype=torch.float64)), (2907, tensor(-0.1363, dtype=torch.float64)), (3114, tensor(-0.1362, dtype=torch.float64)), (3157, tensor(-0.1362, dtype=torch.float64)), (667, tensor(-0.1361, dtype=torch.float64)), (2954, tensor(-0.1360, dtype=torch.float64)), (3033, tensor(-0.1359, dtype=torch.float64)), (63, tensor(-0.1359, dtype=torch.float64)), (1777, tensor(-0.1358, dtype=torch.float64)), (634, tensor(-0.1356, dtype=torch.float64)), (1652, tensor(-0.1355, dtype=torch.float64)), (3239, tensor(-0.1355, dtype=torch.float64)), (1922, tensor(-0.1352, dtype=torch.float64)), (2553, tensor(-0.1350, dtype=torch.float64)), (74, tensor(-0.1348, dtype=torch.float64)), (3339, tensor(-0.1348, dtype=torch.float64)), (1019, tensor(-0.1346, dtype=torch.float64)), (3343, tensor(-0.1344, dtype=torch.float64)), (1379, tensor(-0.1343, dtype=torch.float64)), (2165, tensor(-0.1342, dtype=torch.float64)), (1217, tensor(-0.1341, dtype=torch.float64)), (116, tensor(-0.1340, dtype=torch.float64)), (206, tensor(-0.1340, dtype=torch.float64)), (2691, tensor(-0.1338, dtype=torch.float64)), (1127, tensor(-0.1338, dtype=torch.float64)), (620, tensor(-0.1330, dtype=torch.float64)), (1205, tensor(-0.1325, dtype=torch.float64)), (1231, tensor(-0.1324, dtype=torch.float64)), (2281, tensor(-0.1324, dtype=torch.float64)), (2508, tensor(-0.1323, dtype=torch.float64)), (2499, tensor(-0.1321, dtype=torch.float64)), (1146, tensor(-0.1320, dtype=torch.float64)), (1691, tensor(-0.1318, dtype=torch.float64)), (852, tensor(-0.1318, dtype=torch.float64)), (59, tensor(-0.1316, dtype=torch.float64)), (101, tensor(-0.1313, dtype=torch.float64)), (1355, tensor(-0.1313, dtype=torch.float64)), (1545, tensor(-0.1311, dtype=torch.float64)), (1063, tensor(-0.1308, dtype=torch.float64)), (2193, tensor(-0.1307, dtype=torch.float64)), (3156, tensor(-0.1305, dtype=torch.float64)), (330, tensor(-0.1304, dtype=torch.float64)), (2148, tensor(-0.1303, dtype=torch.float64)), (2385, tensor(-0.1302, dtype=torch.float64)), (1513, tensor(-0.1301, dtype=torch.float64)), (715, tensor(-0.1299, dtype=torch.float64)), (338, tensor(-0.1297, dtype=torch.float64)), (451, tensor(-0.1295, dtype=torch.float64)), (1724, tensor(-0.1294, dtype=torch.float64)), (898, tensor(-0.1292, dtype=torch.float64)), (2255, tensor(-0.1291, dtype=torch.float64)), (1616, tensor(-0.1289, dtype=torch.float64)), (847, tensor(-0.1289, dtype=torch.float64)), (1558, tensor(-0.1287, dtype=torch.float64)), (537, tensor(-0.1285, dtype=torch.float64)), (2664, tensor(-0.1284, dtype=torch.float64)), (462, tensor(-0.1284, dtype=torch.float64)), (1191, tensor(-0.1284, dtype=torch.float64)), (3078, tensor(-0.1283, dtype=torch.float64)), (3046, tensor(-0.1283, dtype=torch.float64)), (3098, tensor(-0.1281, dtype=torch.float64)), (378, tensor(-0.1281, dtype=torch.float64)), (98, tensor(-0.1281, dtype=torch.float64)), (1285, tensor(-0.1280, dtype=torch.float64)), (591, tensor(-0.1280, dtype=torch.float64)), (3265, tensor(-0.1280, dtype=torch.float64)), (2253, tensor(-0.1280, dtype=torch.float64)), (2435, tensor(-0.1278, dtype=torch.float64)), (1501, tensor(-0.1278, dtype=torch.float64)), (2682, tensor(-0.1277, dtype=torch.float64)), (114, tensor(-0.1277, dtype=torch.float64)), (942, tensor(-0.1277, dtype=torch.float64)), (1991, tensor(-0.1276, dtype=torch.float64)), (1016, tensor(-0.1275, dtype=torch.float64)), (1210, tensor(-0.1273, dtype=torch.float64)), (2650, tensor(-0.1270, dtype=torch.float64)), (1983, tensor(-0.1270, dtype=torch.float64)), (688, tensor(-0.1270, dtype=torch.float64)), (486, tensor(-0.1268, dtype=torch.float64)), (1919, tensor(-0.1267, dtype=torch.float64)), (142, tensor(-0.1265, dtype=torch.float64)), (2397, tensor(-0.1261, dtype=torch.float64)), (1487, tensor(-0.1260, dtype=torch.float64)), (1884, tensor(-0.1257, dtype=torch.float64)), (3193, tensor(-0.1257, dtype=torch.float64)), (2723, tensor(-0.1256, dtype=torch.float64)), (1396, tensor(-0.1255, dtype=torch.float64)), (1528, tensor(-0.1253, dtype=torch.float64)), (2445, tensor(-0.1251, dtype=torch.float64)), (2955, tensor(-0.1250, dtype=torch.float64)), (182, tensor(-0.1249, dtype=torch.float64)), (522, tensor(-0.1247, dtype=torch.float64)), (2402, tensor(-0.1246, dtype=torch.float64)), (1181, tensor(-0.1242, dtype=torch.float64)), (2853, tensor(-0.1239, dtype=torch.float64)), (2854, tensor(-0.1238, dtype=torch.float64)), (660, tensor(-0.1238, dtype=torch.float64)), (3097, tensor(-0.1237, dtype=torch.float64)), (1232, tensor(-0.1234, dtype=torch.float64)), (1169, tensor(-0.1234, dtype=torch.float64)), (2575, tensor(-0.1233, dtype=torch.float64)), (2261, tensor(-0.1233, dtype=torch.float64)), (2050, tensor(-0.1233, dtype=torch.float64)), (3270, tensor(-0.1232, dtype=torch.float64)), (2406, tensor(-0.1231, dtype=torch.float64)), (2324, tensor(-0.1231, dtype=torch.float64)), (1989, tensor(-0.1228, dtype=torch.float64)), (1945, tensor(-0.1226, dtype=torch.float64)), (3356, tensor(-0.1225, dtype=torch.float64)), (2164, tensor(-0.1225, dtype=torch.float64)), (1358, tensor(-0.1225, dtype=torch.float64)), (689, tensor(-0.1225, dtype=torch.float64)), (3149, tensor(-0.1225, dtype=torch.float64)), (3296, tensor(-0.1224, dtype=torch.float64)), (2107, tensor(-0.1222, dtype=torch.float64)), (2962, tensor(-0.1219, dtype=torch.float64)), (2464, tensor(-0.1218, dtype=torch.float64)), (1467, tensor(-0.1215, dtype=torch.float64)), (1650, tensor(-0.1215, dtype=torch.float64)), (2078, tensor(-0.1212, dtype=torch.float64)), (1455, tensor(-0.1211, dtype=torch.float64)), (590, tensor(-0.1209, dtype=torch.float64)), (1632, tensor(-0.1209, dtype=torch.float64)), (2272, tensor(-0.1209, dtype=torch.float64)), (3276, tensor(-0.1207, dtype=torch.float64)), (1588, tensor(-0.1204, dtype=torch.float64)), (1791, tensor(-0.1203, dtype=torch.float64)), (1290, tensor(-0.1203, dtype=torch.float64)), (2051, tensor(-0.1201, dtype=torch.float64)), (1087, tensor(-0.1201, dtype=torch.float64)), (2831, tensor(-0.1201, dtype=torch.float64)), (650, tensor(-0.1199, dtype=torch.float64)), (412, tensor(-0.1196, dtype=torch.float64)), (3123, tensor(-0.1193, dtype=torch.float64)), (2204, tensor(-0.1192, dtype=torch.float64)), (2892, tensor(-0.1192, dtype=torch.float64)), (1839, tensor(-0.1190, dtype=torch.float64)), (1010, tensor(-0.1190, dtype=torch.float64)), (2173, tensor(-0.1190, dtype=torch.float64)), (2416, tensor(-0.1189, dtype=torch.float64)), (530, tensor(-0.1188, dtype=torch.float64)), (2990, tensor(-0.1188, dtype=torch.float64)), (1179, tensor(-0.1187, dtype=torch.float64)), (1441, tensor(-0.1187, dtype=torch.float64)), (1582, tensor(-0.1185, dtype=torch.float64)), (2776, tensor(-0.1183, dtype=torch.float64)), (1168, tensor(-0.1183, dtype=torch.float64)), (2711, tensor(-0.1181, dtype=torch.float64)), (1085, tensor(-0.1180, dtype=torch.float64)), (2700, tensor(-0.1179, dtype=torch.float64)), (3198, tensor(-0.1179, dtype=torch.float64)), (2779, tensor(-0.1178, dtype=torch.float64)), (2804, tensor(-0.1176, dtype=torch.float64)), (2104, tensor(-0.1175, dtype=torch.float64)), (174, tensor(-0.1175, dtype=torch.float64)), (2739, tensor(-0.1172, dtype=torch.float64)), (3321, tensor(-0.1172, dtype=torch.float64)), (3015, tensor(-0.1172, dtype=torch.float64)), (1584, tensor(-0.1170, dtype=torch.float64)), (1651, tensor(-0.1168, dtype=torch.float64)), (385, tensor(-0.1168, dtype=torch.float64)), (274, tensor(-0.1167, dtype=torch.float64)), (1365, tensor(-0.1166, dtype=torch.float64)), (889, tensor(-0.1165, dtype=torch.float64)), (1440, tensor(-0.1164, dtype=torch.float64)), (495, tensor(-0.1164, dtype=torch.float64)), (2680, tensor(-0.1163, dtype=torch.float64)), (1124, tensor(-0.1162, dtype=torch.float64)), (118, tensor(-0.1161, dtype=torch.float64)), (329, tensor(-0.1161, dtype=torch.float64)), (1780, tensor(-0.1159, dtype=torch.float64)), (1975, tensor(-0.1158, dtype=torch.float64)), (2117, tensor(-0.1155, dtype=torch.float64)), (1965, tensor(-0.1154, dtype=torch.float64)), (2195, tensor(-0.1153, dtype=torch.float64)), (2297, tensor(-0.1152, dtype=torch.float64)), (2227, tensor(-0.1151, dtype=torch.float64)), (1238, tensor(-0.1149, dtype=torch.float64)), (1716, tensor(-0.1149, dtype=torch.float64)), (947, tensor(-0.1148, dtype=torch.float64)), (2677, tensor(-0.1147, dtype=torch.float64)), (881, tensor(-0.1145, dtype=torch.float64)), (493, tensor(-0.1144, dtype=torch.float64)), (306, tensor(-0.1141, dtype=torch.float64)), (489, tensor(-0.1141, dtype=torch.float64)), (2749, tensor(-0.1140, dtype=torch.float64)), (332, tensor(-0.1139, dtype=torch.float64)), (1943, tensor(-0.1139, dtype=torch.float64)), (2626, tensor(-0.1138, dtype=torch.float64)), (1256, tensor(-0.1137, dtype=torch.float64)), (3182, tensor(-0.1133, dtype=torch.float64)), (1701, tensor(-0.1133, dtype=torch.float64)), (170, tensor(-0.1132, dtype=torch.float64)), (2586, tensor(-0.1132, dtype=torch.float64)), (3086, tensor(-0.1132, dtype=torch.float64)), (2641, tensor(-0.1131, dtype=torch.float64)), (717, tensor(-0.1130, dtype=torch.float64)), (2973, tensor(-0.1130, dtype=torch.float64)), (2615, tensor(-0.1129, dtype=torch.float64)), (3177, tensor(-0.1128, dtype=torch.float64)), (2467, tensor(-0.1128, dtype=torch.float64)), (2628, tensor(-0.1127, dtype=torch.float64)), (1698, tensor(-0.1126, dtype=torch.float64)), (1799, tensor(-0.1125, dtype=torch.float64)), (2722, tensor(-0.1121, dtype=torch.float64)), (1110, tensor(-0.1121, dtype=torch.float64)), (3286, tensor(-0.1121, dtype=torch.float64)), (823, tensor(-0.1121, dtype=torch.float64)), (277, tensor(-0.1120, dtype=torch.float64)), (1030, tensor(-0.1118, dtype=torch.float64)), (2129, tensor(-0.1118, dtype=torch.float64)), (622, tensor(-0.1116, dtype=torch.float64)), (891, tensor(-0.1116, dtype=torch.float64)), (2563, tensor(-0.1113, dtype=torch.float64)), (2530, tensor(-0.1113, dtype=torch.float64)), (550, tensor(-0.1112, dtype=torch.float64)), (1535, tensor(-0.1112, dtype=torch.float64)), (3357, tensor(-0.1111, dtype=torch.float64)), (949, tensor(-0.1107, dtype=torch.float64)), (233, tensor(-0.1107, dtype=torch.float64)), (2064, tensor(-0.1107, dtype=torch.float64)), (2752, tensor(-0.1107, dtype=torch.float64)), (1478, tensor(-0.1106, dtype=torch.float64)), (2399, tensor(-0.1105, dtype=torch.float64)), (228, tensor(-0.1104, dtype=torch.float64)), (245, tensor(-0.1104, dtype=torch.float64)), (2109, tensor(-0.1103, dtype=torch.float64)), (2140, tensor(-0.1103, dtype=torch.float64)), (1687, tensor(-0.1103, dtype=torch.float64)), (795, tensor(-0.1102, dtype=torch.float64)), (1618, tensor(-0.1100, dtype=torch.float64)), (653, tensor(-0.1100, dtype=torch.float64)), (6, tensor(-0.1099, dtype=torch.float64)), (1517, tensor(-0.1097, dtype=torch.float64)), (521, tensor(-0.1096, dtype=torch.float64)), (1075, tensor(-0.1096, dtype=torch.float64)), (1573, tensor(-0.1095, dtype=torch.float64)), (2436, tensor(-0.1095, dtype=torch.float64)), (3174, tensor(-0.1095, dtype=torch.float64)), (195, tensor(-0.1094, dtype=torch.float64)), (2289, tensor(-0.1094, dtype=torch.float64)), (2826, tensor(-0.1094, dtype=torch.float64)), (1308, tensor(-0.1093, dtype=torch.float64)), (882, tensor(-0.1088, dtype=torch.float64)), (3337, tensor(-0.1084, dtype=torch.float64)), (839, tensor(-0.1084, dtype=torch.float64)), (3208, tensor(-0.1083, dtype=torch.float64)), (3184, tensor(-0.1083, dtype=torch.float64)), (343, tensor(-0.1082, dtype=torch.float64)), (1215, tensor(-0.1082, dtype=torch.float64)), (1886, tensor(-0.1081, dtype=torch.float64)), (1184, tensor(-0.1081, dtype=torch.float64)), (284, tensor(-0.1081, dtype=torch.float64)), (2216, tensor(-0.1081, dtype=torch.float64)), (2367, tensor(-0.1077, dtype=torch.float64)), (3216, tensor(-0.1076, dtype=torch.float64)), (1954, tensor(-0.1076, dtype=torch.float64)), (1990, tensor(-0.1076, dtype=torch.float64)), (2540, tensor(-0.1075, dtype=torch.float64)), (90, tensor(-0.1075, dtype=torch.float64)), (2190, tensor(-0.1074, dtype=torch.float64)), (3211, tensor(-0.1071, dtype=torch.float64)), (2890, tensor(-0.1071, dtype=torch.float64)), (2062, tensor(-0.1070, dtype=torch.float64)), (1776, tensor(-0.1068, dtype=torch.float64)), (1633, tensor(-0.1068, dtype=torch.float64)), (2661, tensor(-0.1068, dtype=torch.float64)), (1195, tensor(-0.1066, dtype=torch.float64)), (71, tensor(-0.1066, dtype=torch.float64)), (1728, tensor(-0.1064, dtype=torch.float64)), (2001, tensor(-0.1060, dtype=torch.float64)), (186, tensor(-0.1059, dtype=torch.float64)), (387, tensor(-0.1058, dtype=torch.float64)), (139, tensor(-0.1058, dtype=torch.float64)), (1349, tensor(-0.1057, dtype=torch.float64)), (2246, tensor(-0.1057, dtype=torch.float64)), (1707, tensor(-0.1057, dtype=torch.float64)), (322, tensor(-0.1056, dtype=torch.float64)), (2454, tensor(-0.1054, dtype=torch.float64)), (2527, tensor(-0.1054, dtype=torch.float64)), (971, tensor(-0.1054, dtype=torch.float64)), (311, tensor(-0.1054, dtype=torch.float64)), (2857, tensor(-0.1054, dtype=torch.float64)), (259, tensor(-0.1053, dtype=torch.float64)), (631, tensor(-0.1052, dtype=torch.float64)), (270, tensor(-0.1052, dtype=torch.float64)), (2522, tensor(-0.1052, dtype=torch.float64)), (2490, tensor(-0.1051, dtype=torch.float64)), (1543, tensor(-0.1051, dtype=torch.float64)), (2379, tensor(-0.1050, dtype=torch.float64)), (586, tensor(-0.1049, dtype=torch.float64)), (273, tensor(-0.1049, dtype=torch.float64)), (2861, tensor(-0.1049, dtype=torch.float64)), (1020, tensor(-0.1047, dtype=torch.float64)), (729, tensor(-0.1047, dtype=torch.float64)), (844, tensor(-0.1047, dtype=torch.float64)), (1462, tensor(-0.1046, dtype=torch.float64)), (396, tensor(-0.1046, dtype=torch.float64)), (2097, tensor(-0.1046, dtype=torch.float64)), (2708, tensor(-0.1046, dtype=torch.float64)), (2911, tensor(-0.1045, dtype=torch.float64)), (68, tensor(-0.1045, dtype=torch.float64)), (799, tensor(-0.1044, dtype=torch.float64)), (2646, tensor(-0.1044, dtype=torch.float64)), (2605, tensor(-0.1040, dtype=torch.float64)), (1888, tensor(-0.1040, dtype=torch.float64)), (3354, tensor(-0.1040, dtype=torch.float64)), (3352, tensor(-0.1038, dtype=torch.float64)), (1864, tensor(-0.1037, dtype=torch.float64)), (230, tensor(-0.1035, dtype=torch.float64)), (1426, tensor(-0.1034, dtype=torch.float64)), (690, tensor(-0.1034, dtype=torch.float64)), (1223, tensor(-0.1034, dtype=torch.float64)), (1800, tensor(-0.1033, dtype=torch.float64)), (3278, tensor(-0.1033, dtype=torch.float64)), (1065, tensor(-0.1030, dtype=torch.float64)), (1859, tensor(-0.1030, dtype=torch.float64)), (757, tensor(-0.1029, dtype=torch.float64)), (202, tensor(-0.1028, dtype=torch.float64)), (65, tensor(-0.1028, dtype=torch.float64)), (76, tensor(-0.1028, dtype=torch.float64)), (2809, tensor(-0.1028, dtype=torch.float64)), (1999, tensor(-0.1027, dtype=torch.float64)), (415, tensor(-0.1026, dtype=torch.float64)), (963, tensor(-0.1026, dtype=torch.float64)), (2895, tensor(-0.1025, dtype=torch.float64)), (2915, tensor(-0.1024, dtype=torch.float64)), (305, tensor(-0.1022, dtype=torch.float64)), (2845, tensor(-0.1022, dtype=torch.float64)), (1314, tensor(-0.1021, dtype=torch.float64)), (2593, tensor(-0.1019, dtype=torch.float64)), (1112, tensor(-0.1017, dtype=torch.float64)), (1732, tensor(-0.1016, dtype=torch.float64)), (1406, tensor(-0.1016, dtype=torch.float64)), (2254, tensor(-0.1016, dtype=torch.float64)), (2855, tensor(-0.1015, dtype=torch.float64)), (2875, tensor(-0.1014, dtype=torch.float64)), (1414, tensor(-0.1014, dtype=torch.float64)), (21, tensor(-0.1013, dtype=torch.float64)), (1684, tensor(-0.1013, dtype=torch.float64)), (1610, tensor(-0.1013, dtype=torch.float64)), (1388, tensor(-0.1012, dtype=torch.float64)), (893, tensor(-0.1012, dtype=torch.float64)), (3060, tensor(-0.1012, dtype=torch.float64)), (1568, tensor(-0.1011, dtype=torch.float64)), (2142, tensor(-0.1011, dtype=torch.float64)), (2432, tensor(-0.1011, dtype=torch.float64)), (3213, tensor(-0.1010, dtype=torch.float64)), (2196, tensor(-0.1009, dtype=torch.float64)), (2707, tensor(-0.1008, dtype=torch.float64)), (1484, tensor(-0.1007, dtype=torch.float64)), (2144, tensor(-0.1006, dtype=torch.float64)), (1404, tensor(-0.1006, dtype=torch.float64)), (1878, tensor(-0.1006, dtype=torch.float64)), (970, tensor(-0.1001, dtype=torch.float64)), (510, tensor(-0.1000, dtype=torch.float64)), (927, tensor(-0.1000, dtype=torch.float64)), (2145, tensor(-0.1000, dtype=torch.float64)), (1480, tensor(-0.0999, dtype=torch.float64)), (2992, tensor(-0.0999, dtype=torch.float64)), (2884, tensor(-0.0999, dtype=torch.float64)), (1997, tensor(-0.0999, dtype=torch.float64)), (456, tensor(-0.0997, dtype=torch.float64)), (3188, tensor(-0.0997, dtype=torch.float64)), (2579, tensor(-0.0996, dtype=torch.float64)), (3152, tensor(-0.0995, dtype=torch.float64)), (2310, tensor(-0.0995, dtype=torch.float64)), (248, tensor(-0.0995, dtype=torch.float64)), (656, tensor(-0.0994, dtype=torch.float64)), (625, tensor(-0.0993, dtype=torch.float64)), (3053, tensor(-0.0993, dtype=torch.float64)), (1043, tensor(-0.0993, dtype=torch.float64)), (145, tensor(-0.0992, dtype=torch.float64)), (2690, tensor(-0.0991, dtype=torch.float64)), (509, tensor(-0.0990, dtype=torch.float64)), (1666, tensor(-0.0989, dtype=torch.float64)), (776, tensor(-0.0989, dtype=torch.float64)), (1968, tensor(-0.0989, dtype=torch.float64)), (1735, tensor(-0.0989, dtype=torch.float64)), (2365, tensor(-0.0988, dtype=torch.float64)), (833, tensor(-0.0988, dtype=torch.float64)), (1472, tensor(-0.0987, dtype=torch.float64)), (862, tensor(-0.0986, dtype=torch.float64)), (2126, tensor(-0.0985, dtype=torch.float64)), (111, tensor(-0.0984, dtype=torch.float64)), (2741, tensor(-0.0981, dtype=torch.float64)), (610, tensor(-0.0980, dtype=torch.float64)), (1106, tensor(-0.0979, dtype=torch.float64)), (356, tensor(-0.0979, dtype=torch.float64)), (2617, tensor(-0.0978, dtype=torch.float64)), (1851, tensor(-0.0978, dtype=torch.float64)), (2287, tensor(-0.0976, dtype=torch.float64)), (3204, tensor(-0.0975, dtype=torch.float64)), (807, tensor(-0.0975, dtype=torch.float64)), (1459, tensor(-0.0974, dtype=torch.float64)), (1174, tensor(-0.0973, dtype=torch.float64)), (1035, tensor(-0.0972, dtype=torch.float64)), (1260, tensor(-0.0972, dtype=torch.float64)), (879, tensor(-0.0971, dtype=torch.float64)), (991, tensor(-0.0971, dtype=torch.float64)), (368, tensor(-0.0970, dtype=torch.float64)), (1445, tensor(-0.0969, dtype=torch.float64)), (2901, tensor(-0.0969, dtype=torch.float64)), (987, tensor(-0.0968, dtype=torch.float64)), (1160, tensor(-0.0968, dtype=torch.float64)), (457, tensor(-0.0967, dtype=torch.float64)), (1809, tensor(-0.0967, dtype=torch.float64)), (2413, tensor(-0.0967, dtype=torch.float64)), (1491, tensor(-0.0966, dtype=torch.float64)), (1421, tensor(-0.0966, dtype=torch.float64)), (954, tensor(-0.0965, dtype=torch.float64)), (1346, tensor(-0.0960, dtype=torch.float64)), (851, tensor(-0.0960, dtype=torch.float64)), (2935, tensor(-0.0959, dtype=torch.float64)), (1137, tensor(-0.0959, dtype=torch.float64)), (747, tensor(-0.0958, dtype=torch.float64)), (1208, tensor(-0.0957, dtype=torch.float64)), (3295, tensor(-0.0957, dtype=torch.float64)), (1766, tensor(-0.0957, dtype=torch.float64)), (1590, tensor(-0.0956, dtype=torch.float64)), (1354, tensor(-0.0954, dtype=torch.float64)), (1198, tensor(-0.0954, dtype=torch.float64)), (117, tensor(-0.0954, dtype=torch.float64)), (1207, tensor(-0.0953, dtype=torch.float64)), (1958, tensor(-0.0952, dtype=torch.float64)), (2587, tensor(-0.0950, dtype=torch.float64)), (2974, tensor(-0.0949, dtype=torch.float64)), (3146, tensor(-0.0949, dtype=torch.float64)), (1813, tensor(-0.0948, dtype=torch.float64)), (2392, tensor(-0.0948, dtype=torch.float64)), (64, tensor(-0.0947, dtype=torch.float64)), (503, tensor(-0.0947, dtype=torch.float64)), (778, tensor(-0.0947, dtype=torch.float64)), (1323, tensor(-0.0946, dtype=torch.float64)), (3104, tensor(-0.0946, dtype=torch.float64)), (915, tensor(-0.0945, dtype=torch.float64)), (2621, tensor(-0.0944, dtype=torch.float64)), (1416, tensor(-0.0944, dtype=torch.float64)), (841, tensor(-0.0944, dtype=torch.float64)), (3099, tensor(-0.0942, dtype=torch.float64)), (524, tensor(-0.0942, dtype=torch.float64)), (2997, tensor(-0.0942, dtype=torch.float64)), (726, tensor(-0.0941, dtype=torch.float64)), (830, tensor(-0.0941, dtype=torch.float64)), (1973, tensor(-0.0940, dtype=torch.float64)), (3280, tensor(-0.0939, dtype=torch.float64)), (203, tensor(-0.0939, dtype=torch.float64)), (969, tensor(-0.0939, dtype=torch.float64)), (2849, tensor(-0.0938, dtype=torch.float64)), (380, tensor(-0.0937, dtype=torch.float64)), (301, tensor(-0.0936, dtype=torch.float64)), (410, tensor(-0.0935, dtype=torch.float64)), (1720, tensor(-0.0935, dtype=torch.float64)), (1520, tensor(-0.0935, dtype=torch.float64)), (1715, tensor(-0.0934, dtype=torch.float64)), (2526, tensor(-0.0933, dtype=torch.float64)), (593, tensor(-0.0933, dtype=torch.float64)), (1603, tensor(-0.0933, dtype=torch.float64)), (649, tensor(-0.0933, dtype=torch.float64)), (2710, tensor(-0.0931, dtype=torch.float64)), (1551, tensor(-0.0931, dtype=torch.float64)), (1188, tensor(-0.0929, dtype=torch.float64)), (1808, tensor(-0.0929, dtype=torch.float64)), (1621, tensor(-0.0928, dtype=torch.float64)), (204, tensor(-0.0928, dtype=torch.float64)), (1814, tensor(-0.0926, dtype=torch.float64)), (3180, tensor(-0.0926, dtype=torch.float64)), (906, tensor(-0.0925, dtype=torch.float64)), (3264, tensor(-0.0925, dtype=torch.float64)), (2969, tensor(-0.0925, dtype=torch.float64)), (191, tensor(-0.0925, dtype=torch.float64)), (2740, tensor(-0.0925, dtype=torch.float64)), (1293, tensor(-0.0924, dtype=torch.float64)), (2334, tensor(-0.0924, dtype=torch.float64)), (1926, tensor(-0.0923, dtype=torch.float64)), (2201, tensor(-0.0923, dtype=torch.float64)), (2822, tensor(-0.0923, dtype=torch.float64)), (22, tensor(-0.0923, dtype=torch.float64)), (2016, tensor(-0.0921, dtype=torch.float64)), (992, tensor(-0.0919, dtype=torch.float64)), (1064, tensor(-0.0919, dtype=torch.float64)), (53, tensor(-0.0919, dtype=torch.float64)), (1803, tensor(-0.0918, dtype=torch.float64)), (2867, tensor(-0.0916, dtype=torch.float64)), (2806, tensor(-0.0916, dtype=torch.float64)), (1046, tensor(-0.0916, dtype=torch.float64)), (2972, tensor(-0.0915, dtype=torch.float64)), (2611, tensor(-0.0915, dtype=torch.float64)), (1067, tensor(-0.0915, dtype=torch.float64)), (171, tensor(-0.0914, dtype=torch.float64)), (684, tensor(-0.0914, dtype=torch.float64)), (1375, tensor(-0.0914, dtype=torch.float64)), (2099, tensor(-0.0914, dtype=torch.float64)), (519, tensor(-0.0913, dtype=torch.float64)), (405, tensor(-0.0912, dtype=torch.float64)), (1708, tensor(-0.0911, dtype=torch.float64)), (985, tensor(-0.0911, dtype=torch.float64)), (1415, tensor(-0.0911, dtype=torch.float64)), (454, tensor(-0.0911, dtype=torch.float64)), (3107, tensor(-0.0910, dtype=torch.float64)), (17, tensor(-0.0909, dtype=torch.float64)), (1282, tensor(-0.0909, dtype=torch.float64)), (1033, tensor(-0.0909, dtype=torch.float64)), (1309, tensor(-0.0908, dtype=torch.float64)), (1844, tensor(-0.0907, dtype=torch.float64)), (1183, tensor(-0.0906, dtype=torch.float64)), (3306, tensor(-0.0906, dtype=torch.float64)), (3090, tensor(-0.0906, dtype=torch.float64)), (2074, tensor(-0.0904, dtype=torch.float64)), (2206, tensor(-0.0904, dtype=torch.float64)), (635, tensor(-0.0904, dtype=torch.float64)), (36, tensor(-0.0903, dtype=torch.float64)), (1229, tensor(-0.0903, dtype=torch.float64)), (2735, tensor(-0.0903, dtype=torch.float64)), (2157, tensor(-0.0901, dtype=torch.float64)), (928, tensor(-0.0901, dtype=torch.float64)), (2243, tensor(-0.0900, dtype=torch.float64)), (100, tensor(-0.0899, dtype=torch.float64)), (388, tensor(-0.0899, dtype=torch.float64)), (3010, tensor(-0.0898, dtype=torch.float64)), (2481, tensor(-0.0898, dtype=torch.float64)), (2774, tensor(-0.0897, dtype=torch.float64)), (1446, tensor(-0.0896, dtype=torch.float64)), (1637, tensor(-0.0896, dtype=torch.float64)), (1746, tensor(-0.0896, dtype=torch.float64)), (1072, tensor(-0.0895, dtype=torch.float64)), (238, tensor(-0.0895, dtype=torch.float64)), (327, tensor(-0.0894, dtype=torch.float64)), (1370, tensor(-0.0894, dtype=torch.float64)), (1852, tensor(-0.0894, dtype=torch.float64)), (2784, tensor(-0.0894, dtype=torch.float64)), (484, tensor(-0.0893, dtype=torch.float64)), (1165, tensor(-0.0893, dtype=torch.float64)), (113, tensor(-0.0893, dtype=torch.float64)), (1047, tensor(-0.0892, dtype=torch.float64)), (3043, tensor(-0.0892, dtype=torch.float64)), (350, tensor(-0.0891, dtype=torch.float64)), (930, tensor(-0.0891, dtype=torch.float64)), (2744, tensor(-0.0891, dtype=torch.float64)), (2327, tensor(-0.0889, dtype=torch.float64)), (995, tensor(-0.0889, dtype=torch.float64)), (2694, tensor(-0.0888, dtype=torch.float64)), (2133, tensor(-0.0888, dtype=torch.float64)), (993, tensor(-0.0887, dtype=torch.float64)), (2226, tensor(-0.0886, dtype=torch.float64)), (1683, tensor(-0.0886, dtype=torch.float64)), (3299, tensor(-0.0886, dtype=torch.float64)), (2080, tensor(-0.0885, dtype=torch.float64)), (873, tensor(-0.0885, dtype=torch.float64)), (1711, tensor(-0.0884, dtype=torch.float64)), (781, tensor(-0.0883, dtype=torch.float64)), (582, tensor(-0.0883, dtype=torch.float64)), (2603, tensor(-0.0883, dtype=torch.float64)), (3035, tensor(-0.0883, dtype=torch.float64)), (1848, tensor(-0.0881, dtype=torch.float64)), (2798, tensor(-0.0878, dtype=torch.float64)), (3005, tensor(-0.0877, dtype=torch.float64)), (1757, tensor(-0.0876, dtype=torch.float64)), (2923, tensor(-0.0876, dtype=torch.float64)), (996, tensor(-0.0876, dtype=torch.float64)), (1213, tensor(-0.0876, dtype=torch.float64)), (1132, tensor(-0.0875, dtype=torch.float64)), (629, tensor(-0.0875, dtype=torch.float64)), (1901, tensor(-0.0875, dtype=torch.float64)), (1548, tensor(-0.0874, dtype=torch.float64)), (3041, tensor(-0.0874, dtype=torch.float64)), (2856, tensor(-0.0873, dtype=torch.float64)), (383, tensor(-0.0873, dtype=torch.float64)), (2695, tensor(-0.0873, dtype=torch.float64)), (2756, tensor(-0.0873, dtype=torch.float64)), (2758, tensor(-0.0872, dtype=torch.float64)), (745, tensor(-0.0871, dtype=torch.float64)), (2178, tensor(-0.0871, dtype=torch.float64)), (2841, tensor(-0.0871, dtype=torch.float64)), (3346, tensor(-0.0871, dtype=torch.float64)), (974, tensor(-0.0870, dtype=torch.float64)), (175, tensor(-0.0870, dtype=torch.float64)), (2154, tensor(-0.0870, dtype=torch.float64)), (1372, tensor(-0.0870, dtype=torch.float64)), (1995, tensor(-0.0870, dtype=torch.float64)), (1863, tensor(-0.0870, dtype=torch.float64)), (244, tensor(-0.0869, dtype=torch.float64)), (3137, tensor(-0.0869, dtype=torch.float64)), (584, tensor(-0.0868, dtype=torch.float64)), (2842, tensor(-0.0867, dtype=torch.float64)), (502, tensor(-0.0867, dtype=torch.float64)), (2389, tensor(-0.0867, dtype=torch.float64)), (3190, tensor(-0.0867, dtype=torch.float64)), (1976, tensor(-0.0867, dtype=torch.float64)), (2637, tensor(-0.0866, dtype=torch.float64)), (445, tensor(-0.0866, dtype=torch.float64)), (375, tensor(-0.0866, dtype=torch.float64)), (2241, tensor(-0.0865, dtype=torch.float64)), (2210, tensor(-0.0864, dtype=torch.float64)), (2180, tensor(-0.0863, dtype=torch.float64)), (1193, tensor(-0.0863, dtype=torch.float64)), (2848, tensor(-0.0862, dtype=torch.float64)), (1915, tensor(-0.0862, dtype=torch.float64)), (2446, tensor(-0.0862, dtype=torch.float64)), (2525, tensor(-0.0862, dtype=torch.float64)), (1831, tensor(-0.0862, dtype=torch.float64)), (1226, tensor(-0.0862, dtype=torch.float64)), (1101, tensor(-0.0861, dtype=torch.float64)), (1255, tensor(-0.0861, dtype=torch.float64)), (967, tensor(-0.0860, dtype=torch.float64)), (990, tensor(-0.0860, dtype=torch.float64)), (926, tensor(-0.0860, dtype=torch.float64)), (344, tensor(-0.0859, dtype=torch.float64)), (1924, tensor(-0.0858, dtype=torch.float64)), (11, tensor(-0.0857, dtype=torch.float64)), (1802, tensor(-0.0855, dtype=torch.float64)), (1496, tensor(-0.0852, dtype=torch.float64)), (1897, tensor(-0.0852, dtype=torch.float64)), (2223, tensor(-0.0852, dtype=torch.float64)), (2088, tensor(-0.0851, dtype=torch.float64)), (3159, tensor(-0.0850, dtype=torch.float64)), (119, tensor(-0.0850, dtype=torch.float64)), (386, tensor(-0.0849, dtype=torch.float64)), (720, tensor(-0.0849, dtype=torch.float64)), (2965, tensor(-0.0849, dtype=torch.float64)), (1805, tensor(-0.0849, dtype=torch.float64)), (1203, tensor(-0.0849, dtype=torch.float64)), (2429, tensor(-0.0848, dtype=torch.float64)), (1807, tensor(-0.0847, dtype=torch.float64)), (1347, tensor(-0.0847, dtype=torch.float64)), (818, tensor(-0.0847, dtype=torch.float64)), (2794, tensor(-0.0847, dtype=torch.float64)), (2475, tensor(-0.0846, dtype=torch.float64)), (988, tensor(-0.0845, dtype=torch.float64)), (2780, tensor(-0.0845, dtype=torch.float64)), (2782, tensor(-0.0845, dtype=torch.float64)), (663, tensor(-0.0844, dtype=torch.float64)), (2736, tensor(-0.0844, dtype=torch.float64)), (1192, tensor(-0.0843, dtype=torch.float64)), (1086, tensor(-0.0843, dtype=torch.float64)), (2660, tensor(-0.0843, dtype=torch.float64)), (2176, tensor(-0.0842, dtype=torch.float64)), (1329, tensor(-0.0842, dtype=torch.float64)), (2729, tensor(-0.0841, dtype=torch.float64)), (1577, tensor(-0.0841, dtype=torch.float64)), (346, tensor(-0.0841, dtype=torch.float64)), (2103, tensor(-0.0840, dtype=torch.float64)), (28, tensor(-0.0839, dtype=torch.float64)), (108, tensor(-0.0839, dtype=torch.float64)), (150, tensor(-0.0839, dtype=torch.float64)), (2941, tensor(-0.0839, dtype=torch.float64)), (1635, tensor(-0.0839, dtype=torch.float64)), (197, tensor(-0.0838, dtype=torch.float64)), (834, tensor(-0.0835, dtype=torch.float64)), (2010, tensor(-0.0835, dtype=torch.float64)), (1263, tensor(-0.0835, dtype=torch.float64)), (55, tensor(-0.0834, dtype=torch.float64)), (1758, tensor(-0.0834, dtype=torch.float64)), (2061, tensor(-0.0834, dtype=torch.float64)), (79, tensor(-0.0834, dtype=torch.float64)), (2647, tensor(-0.0833, dtype=torch.float64)), (1579, tensor(-0.0833, dtype=torch.float64)), (1485, tensor(-0.0833, dtype=torch.float64)), (1410, tensor(-0.0831, dtype=torch.float64)), (1759, tensor(-0.0830, dtype=torch.float64)), (909, tensor(-0.0830, dtype=torch.float64)), (1178, tensor(-0.0829, dtype=torch.float64)), (2768, tensor(-0.0829, dtype=torch.float64)), (890, tensor(-0.0829, dtype=torch.float64)), (1138, tensor(-0.0828, dtype=torch.float64)), (1578, tensor(-0.0828, dtype=torch.float64)), (751, tensor(-0.0828, dtype=torch.float64)), (2838, tensor(-0.0827, dtype=torch.float64)), (2632, tensor(-0.0826, dtype=torch.float64)), (303, tensor(-0.0826, dtype=torch.float64)), (989, tensor(-0.0825, dtype=torch.float64)), (3215, tensor(-0.0824, dtype=torch.float64)), (2811, tensor(-0.0824, dtype=torch.float64)), (3212, tensor(-0.0824, dtype=torch.float64)), (849, tensor(-0.0823, dtype=torch.float64)), (2951, tensor(-0.0823, dtype=torch.float64)), (802, tensor(-0.0823, dtype=torch.float64)), (1343, tensor(-0.0823, dtype=torch.float64)), (1984, tensor(-0.0822, dtype=torch.float64)), (1966, tensor(-0.0821, dtype=torch.float64)), (92, tensor(-0.0820, dtype=torch.float64)), (768, tensor(-0.0819, dtype=torch.float64)), (304, tensor(-0.0819, dtype=torch.float64)), (115, tensor(-0.0818, dtype=torch.float64)), (2625, tensor(-0.0818, dtype=torch.float64)), (3325, tensor(-0.0818, dtype=torch.float64)), (2564, tensor(-0.0818, dtype=torch.float64)), (1930, tensor(-0.0818, dtype=torch.float64)), (3169, tensor(-0.0816, dtype=torch.float64)), (2393, tensor(-0.0816, dtype=torch.float64)), (683, tensor(-0.0816, dtype=torch.float64)), (1244, tensor(-0.0816, dtype=torch.float64)), (3139, tensor(-0.0815, dtype=torch.float64)), (1392, tensor(-0.0814, dtype=torch.float64)), (3091, tensor(-0.0814, dtype=torch.float64)), (3038, tensor(-0.0813, dtype=torch.float64)), (1560, tensor(-0.0812, dtype=torch.float64)), (2483, tensor(-0.0811, dtype=torch.float64)), (1206, tensor(-0.0811, dtype=torch.float64)), (1970, tensor(-0.0811, dtype=torch.float64)), (599, tensor(-0.0811, dtype=torch.float64)), (2543, tensor(-0.0810, dtype=torch.float64)), (1609, tensor(-0.0809, dtype=torch.float64)), (2278, tensor(-0.0808, dtype=torch.float64)), (3294, tensor(-0.0808, dtype=torch.float64)), (1894, tensor(-0.0807, dtype=torch.float64)), (3234, tensor(-0.0807, dtype=torch.float64)), (2102, tensor(-0.0807, dtype=torch.float64)), (2028, tensor(-0.0806, dtype=torch.float64)), (2395, tensor(-0.0806, dtype=torch.float64)), (1564, tensor(-0.0804, dtype=torch.float64)), (1574, tensor(-0.0804, dtype=torch.float64)), (161, tensor(-0.0804, dtype=torch.float64)), (3191, tensor(-0.0804, dtype=torch.float64)), (314, tensor(-0.0804, dtype=torch.float64)), (2501, tensor(-0.0803, dtype=torch.float64)), (1387, tensor(-0.0803, dtype=torch.float64)), (2659, tensor(-0.0802, dtype=torch.float64)), (2616, tensor(-0.0802, dtype=torch.float64)), (2613, tensor(-0.0802, dtype=torch.float64)), (1103, tensor(-0.0802, dtype=torch.float64)), (2346, tensor(-0.0802, dtype=torch.float64)), (1631, tensor(-0.0802, dtype=torch.float64)), (2220, tensor(-0.0802, dtype=torch.float64)), (2060, tensor(-0.0801, dtype=torch.float64)), (407, tensor(-0.0800, dtype=torch.float64)), (291, tensor(-0.0800, dtype=torch.float64)), (2557, tensor(-0.0799, dtype=torch.float64)), (257, tensor(-0.0799, dtype=torch.float64)), (239, tensor(-0.0798, dtype=torch.float64)), (880, tensor(-0.0797, dtype=torch.float64)), (951, tensor(-0.0797, dtype=torch.float64)), (1461, tensor(-0.0797, dtype=torch.float64)), (2531, tensor(-0.0797, dtype=torch.float64)), (1775, tensor(-0.0797, dtype=torch.float64)), (2100, tensor(-0.0797, dtype=torch.float64)), (1674, tensor(-0.0797, dtype=torch.float64)), (1430, tensor(-0.0796, dtype=torch.float64)), (741, tensor(-0.0794, dtype=torch.float64)), (929, tensor(-0.0794, dtype=torch.float64)), (1755, tensor(-0.0794, dtype=torch.float64)), (2369, tensor(-0.0793, dtype=torch.float64)), (1955, tensor(-0.0793, dtype=torch.float64)), (2548, tensor(-0.0792, dtype=torch.float64)), (438, tensor(-0.0792, dtype=torch.float64)), (1895, tensor(-0.0792, dtype=torch.float64)), (3238, tensor(-0.0792, dtype=torch.float64)), (1211, tensor(-0.0792, dtype=torch.float64)), (1682, tensor(-0.0791, dtype=torch.float64)), (693, tensor(-0.0791, dtype=torch.float64)), (2993, tensor(-0.0790, dtype=torch.float64)), (1563, tensor(-0.0789, dtype=torch.float64)), (3056, tensor(-0.0789, dtype=torch.float64)), (2742, tensor(-0.0789, dtype=torch.float64)), (2257, tensor(-0.0789, dtype=torch.float64)), (2350, tensor(-0.0788, dtype=torch.float64)), (3136, tensor(-0.0786, dtype=torch.float64)), (168, tensor(-0.0786, dtype=torch.float64)), (1705, tensor(-0.0786, dtype=torch.float64)), (1243, tensor(-0.0785, dtype=torch.float64)), (1649, tensor(-0.0785, dtype=torch.float64)), (2980, tensor(-0.0785, dtype=torch.float64)), (130, tensor(-0.0784, dtype=torch.float64)), (698, tensor(-0.0784, dtype=torch.float64)), (2448, tensor(-0.0783, dtype=torch.float64)), (2662, tensor(-0.0783, dtype=torch.float64)), (2529, tensor(-0.0783, dtype=torch.float64)), (887, tensor(-0.0782, dtype=torch.float64)), (3317, tensor(-0.0781, dtype=torch.float64)), (1902, tensor(-0.0781, dtype=torch.float64)), (2338, tensor(-0.0781, dtype=torch.float64)), (3132, tensor(-0.0780, dtype=torch.float64)), (2793, tensor(-0.0780, dtype=torch.float64)), (1403, tensor(-0.0780, dtype=torch.float64)), (2903, tensor(-0.0779, dtype=torch.float64)), (2792, tensor(-0.0778, dtype=torch.float64)), (1509, tensor(-0.0778, dtype=torch.float64)), (2750, tensor(-0.0778, dtype=torch.float64)), (1029, tensor(-0.0777, dtype=torch.float64)), (1447, tensor(-0.0777, dtype=torch.float64)), (513, tensor(-0.0777, dtype=torch.float64)), (948, tensor(-0.0776, dtype=torch.float64)), (2583, tensor(-0.0776, dtype=torch.float64)), (2771, tensor(-0.0774, dtype=torch.float64)), (707, tensor(-0.0773, dtype=torch.float64)), (858, tensor(-0.0773, dtype=torch.float64)), (9, tensor(-0.0772, dtype=torch.float64)), (1629, tensor(-0.0772, dtype=torch.float64)), (1013, tensor(-0.0772, dtype=torch.float64)), (1678, tensor(-0.0772, dtype=torch.float64)), (2846, tensor(-0.0771, dtype=torch.float64)), (3124, tensor(-0.0771, dtype=torch.float64)), (2644, tensor(-0.0770, dtype=torch.float64)), (640, tensor(-0.0770, dtype=torch.float64)), (1239, tensor(-0.0768, dtype=torch.float64)), (2269, tensor(-0.0768, dtype=torch.float64)), (3196, tensor(-0.0767, dtype=torch.float64)), (2943, tensor(-0.0767, dtype=torch.float64)), (1875, tensor(-0.0767, dtype=torch.float64)), (1638, tensor(-0.0766, dtype=torch.float64)), (2149, tensor(-0.0766, dtype=torch.float64)), (2920, tensor(-0.0765, dtype=torch.float64)), (1465, tensor(-0.0764, dtype=torch.float64)), (423, tensor(-0.0763, dtype=torch.float64)), (1104, tensor(-0.0762, dtype=torch.float64)), (2342, tensor(-0.0762, dtype=torch.float64)), (3293, tensor(-0.0762, dtype=torch.float64)), (1488, tensor(-0.0761, dtype=torch.float64)), (1668, tensor(-0.0761, dtype=torch.float64)), (1606, tensor(-0.0761, dtype=torch.float64)), (2147, tensor(-0.0761, dtype=torch.float64)), (2550, tensor(-0.0760, dtype=torch.float64)), (945, tensor(-0.0760, dtype=torch.float64)), (1854, tensor(-0.0759, dtype=torch.float64)), (1977, tensor(-0.0759, dtype=torch.float64)), (3006, tensor(-0.0759, dtype=torch.float64)), (2030, tensor(-0.0758, dtype=torch.float64)), (1199, tensor(-0.0757, dtype=torch.float64)), (1920, tensor(-0.0757, dtype=torch.float64)), (2702, tensor(-0.0757, dtype=torch.float64)), (937, tensor(-0.0756, dtype=torch.float64)), (3233, tensor(-0.0756, dtype=torch.float64)), (1389, tensor(-0.0756, dtype=torch.float64)), (176, tensor(-0.0755, dtype=torch.float64)), (104, tensor(-0.0755, dtype=torch.float64)), (1987, tensor(-0.0754, dtype=torch.float64)), (2043, tensor(-0.0754, dtype=torch.float64)), (564, tensor(-0.0753, dtype=torch.float64)), (1079, tensor(-0.0752, dtype=torch.float64)), (391, tensor(-0.0752, dtype=torch.float64)), (2282, tensor(-0.0751, dtype=torch.float64)), (107, tensor(-0.0751, dtype=torch.float64)), (1123, tensor(-0.0751, dtype=torch.float64)), (2799, tensor(-0.0750, dtype=torch.float64)), (822, tensor(-0.0750, dtype=torch.float64)), (2580, tensor(-0.0750, dtype=torch.float64)), (1245, tensor(-0.0750, dtype=torch.float64)), (2600, tensor(-0.0750, dtype=torch.float64)), (2970, tensor(-0.0750, dtype=torch.float64)), (1793, tensor(-0.0749, dtype=torch.float64)), (2462, tensor(-0.0749, dtype=torch.float64)), (162, tensor(-0.0749, dtype=torch.float64)), (811, tensor(-0.0748, dtype=torch.float64)), (1949, tensor(-0.0748, dtype=torch.float64)), (533, tensor(-0.0748, dtype=torch.float64)), (596, tensor(-0.0748, dtype=torch.float64)), (1748, tensor(-0.0747, dtype=torch.float64)), (42, tensor(-0.0746, dtype=torch.float64)), (2885, tensor(-0.0746, dtype=torch.float64)), (914, tensor(-0.0744, dtype=torch.float64)), (3172, tensor(-0.0744, dtype=torch.float64)), (555, tensor(-0.0744, dtype=torch.float64)), (264, tensor(-0.0741, dtype=torch.float64)), (662, tensor(-0.0741, dtype=torch.float64)), (1041, tensor(-0.0741, dtype=torch.float64)), (128, tensor(-0.0740, dtype=torch.float64)), (1717, tensor(-0.0740, dtype=torch.float64)), (1874, tensor(-0.0740, dtype=torch.float64)), (1787, tensor(-0.0738, dtype=torch.float64)), (2132, tensor(-0.0738, dtype=torch.float64)), (77, tensor(-0.0738, dtype=torch.float64)), (3158, tensor(-0.0737, dtype=torch.float64)), (800, tensor(-0.0737, dtype=torch.float64)), (2017, tensor(-0.0737, dtype=torch.float64)), (955, tensor(-0.0735, dtype=torch.float64)), (112, tensor(-0.0735, dtype=torch.float64)), (1883, tensor(-0.0735, dtype=torch.float64)), (2045, tensor(-0.0735, dtype=torch.float64)), (1656, tensor(-0.0734, dtype=torch.float64)), (837, tensor(-0.0734, dtype=torch.float64)), (1518, tensor(-0.0734, dtype=torch.float64)), (677, tensor(-0.0732, dtype=torch.float64)), (2922, tensor(-0.0731, dtype=torch.float64)), (1871, tensor(-0.0731, dtype=torch.float64)), (2084, tensor(-0.0731, dtype=torch.float64)), (1840, tensor(-0.0731, dtype=torch.float64)), (1148, tensor(-0.0730, dtype=torch.float64)), (1246, tensor(-0.0730, dtype=torch.float64)), (1004, tensor(-0.0729, dtype=torch.float64)), (1009, tensor(-0.0729, dtype=torch.float64)), (402, tensor(-0.0728, dtype=torch.float64)), (2444, tensor(-0.0728, dtype=torch.float64)), (918, tensor(-0.0728, dtype=torch.float64)), (544, tensor(-0.0728, dtype=torch.float64)), (1276, tensor(-0.0727, dtype=torch.float64)), (3142, tensor(-0.0727, dtype=torch.float64)), (1458, tensor(-0.0727, dtype=torch.float64)), (1298, tensor(-0.0727, dtype=torch.float64)), (2697, tensor(-0.0727, dtype=torch.float64)), (1655, tensor(-0.0727, dtype=torch.float64)), (1812, tensor(-0.0727, dtype=torch.float64)), (3087, tensor(-0.0727, dtype=torch.float64)), (363, tensor(-0.0726, dtype=torch.float64)), (2566, tensor(-0.0726, dtype=torch.float64)), (2041, tensor(-0.0726, dtype=torch.float64)), (340, tensor(-0.0725, dtype=torch.float64)), (2091, tensor(-0.0725, dtype=torch.float64)), (397, tensor(-0.0725, dtype=torch.float64)), (548, tensor(-0.0723, dtype=torch.float64)), (2087, tensor(-0.0723, dtype=torch.float64)), (2340, tensor(-0.0722, dtype=torch.float64)), (242, tensor(-0.0721, dtype=torch.float64)), (1235, tensor(-0.0721, dtype=torch.float64)), (3036, tensor(-0.0721, dtype=torch.float64)), (1914, tensor(-0.0721, dtype=torch.float64)), (2596, tensor(-0.0720, dtype=torch.float64)), (1944, tensor(-0.0720, dtype=torch.float64)), (2316, tensor(-0.0720, dtype=torch.float64)), (651, tensor(-0.0720, dtype=torch.float64)), (485, tensor(-0.0720, dtype=torch.float64)), (2584, tensor(-0.0720, dtype=torch.float64)), (1439, tensor(-0.0719, dtype=torch.float64)), (1420, tensor(-0.0719, dtype=torch.float64)), (1986, tensor(-0.0719, dtype=torch.float64)), (2236, tensor(-0.0719, dtype=torch.float64)), (846, tensor(-0.0719, dtype=torch.float64)), (276, tensor(-0.0718, dtype=torch.float64)), (2546, tensor(-0.0718, dtype=torch.float64)), (812, tensor(-0.0718, dtype=torch.float64)), (1159, tensor(-0.0717, dtype=torch.float64)), (1575, tensor(-0.0716, dtype=torch.float64)), (499, tensor(-0.0716, dtype=torch.float64)), (3049, tensor(-0.0715, dtype=torch.float64)), (1948, tensor(-0.0712, dtype=torch.float64)), (1147, tensor(-0.0712, dtype=torch.float64)), (2975, tensor(-0.0711, dtype=torch.float64)), (2535, tensor(-0.0710, dtype=torch.float64)), (1176, tensor(-0.0710, dtype=torch.float64)), (2645, tensor(-0.0709, dtype=torch.float64)), (2519, tensor(-0.0708, dtype=torch.float64)), (2713, tensor(-0.0708, dtype=torch.float64)), (2139, tensor(-0.0707, dtype=torch.float64)), (924, tensor(-0.0707, dtype=torch.float64)), (910, tensor(-0.0707, dtype=torch.float64)), (3312, tensor(-0.0707, dtype=torch.float64)), (121, tensor(-0.0706, dtype=torch.float64)), (641, tensor(-0.0706, dtype=torch.float64)), (1155, tensor(-0.0706, dtype=torch.float64)), (1344, tensor(-0.0706, dtype=torch.float64)), (1782, tensor(-0.0704, dtype=torch.float64)), (1136, tensor(-0.0704, dtype=torch.float64)), (1400, tensor(-0.0704, dtype=torch.float64)), (3318, tensor(-0.0703, dtype=torch.float64)), (1673, tensor(-0.0703, dtype=torch.float64)), (504, tensor(-0.0703, dtype=torch.float64)), (3059, tensor(-0.0702, dtype=torch.float64)), (1855, tensor(-0.0702, dtype=torch.float64)), (2466, tensor(-0.0702, dtype=torch.float64)), (3181, tensor(-0.0702, dtype=torch.float64)), (2265, tensor(-0.0701, dtype=torch.float64)), (525, tensor(-0.0700, dtype=torch.float64)), (2171, tensor(-0.0700, dtype=torch.float64)), (1228, tensor(-0.0700, dtype=torch.float64)), (3351, tensor(-0.0699, dtype=torch.float64)), (373, tensor(-0.0699, dtype=torch.float64)), (141, tensor(-0.0698, dtype=torch.float64)), (3268, tensor(-0.0697, dtype=torch.float64)), (2213, tensor(-0.0697, dtype=torch.float64)), (674, tensor(-0.0697, dtype=torch.float64)), (2347, tensor(-0.0696, dtype=torch.float64)), (687, tensor(-0.0696, dtype=torch.float64)), (24, tensor(-0.0695, dtype=torch.float64)), (859, tensor(-0.0695, dtype=torch.float64)), (3364, tensor(-0.0695, dtype=torch.float64)), (2211, tensor(-0.0694, dtype=torch.float64)), (360, tensor(-0.0694, dtype=torch.float64)), (294, tensor(-0.0694, dtype=torch.float64)), (2053, tensor(-0.0693, dtype=torch.float64)), (2345, tensor(-0.0693, dtype=torch.float64)), (2301, tensor(-0.0693, dtype=torch.float64)), (281, tensor(-0.0692, dtype=torch.float64)), (2777, tensor(-0.0692, dtype=torch.float64)), (2761, tensor(-0.0691, dtype=torch.float64)), (414, tensor(-0.0691, dtype=torch.float64)), (1643, tensor(-0.0691, dtype=torch.float64)), (624, tensor(-0.0690, dtype=torch.float64)), (253, tensor(-0.0689, dtype=torch.float64)), (2033, tensor(-0.0689, dtype=torch.float64)), (26, tensor(-0.0689, dtype=torch.float64)), (377, tensor(-0.0689, dtype=torch.float64)), (1505, tensor(-0.0689, dtype=torch.float64)), (2396, tensor(-0.0689, dtype=torch.float64)), (2294, tensor(-0.0689, dtype=torch.float64)), (506, tensor(-0.0688, dtype=torch.float64)), (1470, tensor(-0.0688, dtype=torch.float64)), (672, tensor(-0.0688, dtype=torch.float64)), (864, tensor(-0.0687, dtype=torch.float64)), (1001, tensor(-0.0686, dtype=torch.float64)), (2732, tensor(-0.0686, dtype=torch.float64)), (1114, tensor(-0.0685, dtype=torch.float64)), (2055, tensor(-0.0685, dtype=torch.float64)), (1827, tensor(-0.0685, dtype=torch.float64)), (848, tensor(-0.0684, dtype=torch.float64)), (480, tensor(-0.0683, dtype=torch.float64)), (1242, tensor(-0.0683, dtype=torch.float64)), (3290, tensor(-0.0683, dtype=torch.float64)), (2460, tensor(-0.0683, dtype=torch.float64)), (282, tensor(-0.0683, dtype=torch.float64)), (106, tensor(-0.0682, dtype=torch.float64)), (2581, tensor(-0.0682, dtype=torch.float64)), (2138, tensor(-0.0682, dtype=torch.float64)), (2999, tensor(-0.0682, dtype=torch.float64)), (923, tensor(-0.0681, dtype=torch.float64)), (2248, tensor(-0.0681, dtype=torch.float64)), (1084, tensor(-0.0681, dtype=torch.float64)), (2547, tensor(-0.0680, dtype=torch.float64)), (534, tensor(-0.0680, dtype=torch.float64)), (571, tensor(-0.0679, dtype=torch.float64)), (169, tensor(-0.0679, dtype=torch.float64)), (828, tensor(-0.0678, dtype=torch.float64)), (1743, tensor(-0.0678, dtype=torch.float64)), (1457, tensor(-0.0678, dtype=torch.float64)), (1962, tensor(-0.0678, dtype=torch.float64)), (1497, tensor(-0.0678, dtype=torch.float64)), (1576, tensor(-0.0677, dtype=torch.float64)), (1992, tensor(-0.0677, dtype=torch.float64)), (2874, tensor(-0.0677, dtype=torch.float64)), (1661, tensor(-0.0677, dtype=torch.float64)), (2198, tensor(-0.0676, dtype=torch.float64)), (1772, tensor(-0.0675, dtype=torch.float64)), (75, tensor(-0.0675, dtype=torch.float64)), (441, tensor(-0.0675, dtype=torch.float64)), (1218, tensor(-0.0675, dtype=torch.float64)), (1953, tensor(-0.0675, dtype=torch.float64)), (2456, tensor(-0.0675, dtype=torch.float64)), (1538, tensor(-0.0674, dtype=torch.float64)), (1338, tensor(-0.0673, dtype=torch.float64)), (2249, tensor(-0.0673, dtype=torch.float64)), (1201, tensor(-0.0671, dtype=torch.float64)), (467, tensor(-0.0670, dtype=torch.float64)), (2934, tensor(-0.0669, dtype=torch.float64)), (1325, tensor(-0.0669, dtype=torch.float64)), (436, tensor(-0.0669, dtype=torch.float64)), (1959, tensor(-0.0668, dtype=torch.float64)), (1592, tensor(-0.0668, dtype=torch.float64)), (1718, tensor(-0.0668, dtype=torch.float64)), (2668, tensor(-0.0668, dtype=torch.float64)), (940, tensor(-0.0668, dtype=torch.float64)), (676, tensor(-0.0668, dtype=torch.float64)), (3047, tensor(-0.0668, dtype=torch.float64)), (1377, tensor(-0.0667, dtype=torch.float64)), (755, tensor(-0.0667, dtype=torch.float64)), (256, tensor(-0.0667, dtype=torch.float64)), (1798, tensor(-0.0667, dtype=torch.float64)), (1407, tensor(-0.0666, dtype=torch.float64)), (3116, tensor(-0.0666, dtype=torch.float64)), (2151, tensor(-0.0666, dtype=torch.float64)), (1825, tensor(-0.0665, dtype=torch.float64)), (459, tensor(-0.0665, dtype=torch.float64)), (2260, tensor(-0.0665, dtype=torch.float64)), (275, tensor(-0.0665, dtype=torch.float64)), (2359, tensor(-0.0665, dtype=torch.float64)), (1070, tensor(-0.0665, dtype=torch.float64)), (3227, tensor(-0.0665, dtype=torch.float64)), (1299, tensor(-0.0664, dtype=torch.float64)), (1324, tensor(-0.0664, dtype=torch.float64)), (1330, tensor(-0.0664, dtype=torch.float64)), (788, tensor(-0.0664, dtype=torch.float64)), (345, tensor(-0.0664, dtype=torch.float64)), (3253, tensor(-0.0663, dtype=torch.float64)), (430, tensor(-0.0663, dtype=torch.float64)), (675, tensor(-0.0663, dtype=torch.float64)), (1583, tensor(-0.0663, dtype=torch.float64)), (540, tensor(-0.0662, dtype=torch.float64)), (1753, tensor(-0.0662, dtype=torch.float64)), (1499, tensor(-0.0659, dtype=torch.float64)), (1074, tensor(-0.0659, dtype=torch.float64)), (2928, tensor(-0.0658, dtype=torch.float64)), (448, tensor(-0.0658, dtype=torch.float64)), (1109, tensor(-0.0658, dtype=torch.float64)), (1411, tensor(-0.0657, dtype=torch.float64)), (1102, tensor(-0.0657, dtype=torch.float64)), (2727, tensor(-0.0657, dtype=torch.float64)), (2329, tensor(-0.0656, dtype=torch.float64)), (1647, tensor(-0.0655, dtype=torch.float64)), (3300, tensor(-0.0654, dtype=torch.float64)), (1105, tensor(-0.0654, dtype=torch.float64)), (1468, tensor(-0.0652, dtype=torch.float64)), (1273, tensor(-0.0652, dtype=torch.float64)), (1053, tensor(-0.0652, dtype=torch.float64)), (953, tensor(-0.0652, dtype=torch.float64)), (3347, tensor(-0.0651, dtype=torch.float64)), (2554, tensor(-0.0651, dtype=torch.float64)), (1034, tensor(-0.0651, dtype=torch.float64)), (1865, tensor(-0.0651, dtype=torch.float64)), (138, tensor(-0.0650, dtype=torch.float64)), (1737, tensor(-0.0650, dtype=torch.float64)), (2478, tensor(-0.0649, dtype=torch.float64)), (556, tensor(-0.0649, dtype=torch.float64)), (2130, tensor(-0.0649, dtype=torch.float64)), (2805, tensor(-0.0648, dtype=torch.float64)), (2251, tensor(-0.0648, dtype=torch.float64)), (3344, tensor(-0.0648, dtype=torch.float64)), (1786, tensor(-0.0647, dtype=torch.float64)), (3287, tensor(-0.0646, dtype=torch.float64)), (1858, tensor(-0.0646, dtype=torch.float64)), (2998, tensor(-0.0645, dtype=torch.float64)), (1177, tensor(-0.0645, dtype=torch.float64)), (3065, tensor(-0.0645, dtype=torch.float64)), (1729, tensor(-0.0645, dtype=torch.float64)), (904, tensor(-0.0644, dtype=torch.float64)), (2125, tensor(-0.0644, dtype=torch.float64)), (1704, tensor(-0.0644, dtype=torch.float64)), (156, tensor(-0.0643, dtype=torch.float64)), (72, tensor(-0.0643, dtype=torch.float64)), (1384, tensor(-0.0642, dtype=torch.float64)), (1026, tensor(-0.0641, dtype=torch.float64)), (3301, tensor(-0.0641, dtype=torch.float64)), (1611, tensor(-0.0641, dtype=torch.float64)), (1369, tensor(-0.0640, dtype=torch.float64)), (3030, tensor(-0.0640, dtype=torch.float64)), (2899, tensor(-0.0640, dtype=torch.float64)), (60, tensor(-0.0640, dtype=torch.float64)), (626, tensor(-0.0640, dtype=torch.float64)), (2773, tensor(-0.0639, dtype=torch.float64)), (3205, tensor(-0.0639, dtype=torch.float64)), (2683, tensor(-0.0638, dtype=torch.float64)), (3355, tensor(-0.0638, dtype=torch.float64)), (1946, tensor(-0.0638, dtype=torch.float64)), (2234, tensor(-0.0637, dtype=torch.float64)), (1665, tensor(-0.0636, dtype=torch.float64)), (1088, tensor(-0.0635, dtype=torch.float64)), (289, tensor(-0.0634, dtype=torch.float64)), (0, tensor(-0.0634, dtype=torch.float64)), (941, tensor(-0.0633, dtype=torch.float64)), (1534, tensor(-0.0632, dtype=torch.float64)), (2996, tensor(-0.0632, dtype=torch.float64)), (2570, tensor(-0.0630, dtype=torch.float64)), (1978, tensor(-0.0630, dtype=torch.float64)), (3135, tensor(-0.0630, dtype=torch.float64)), (753, tensor(-0.0629, dtype=torch.float64)), (194, tensor(-0.0629, dtype=torch.float64)), (578, tensor(-0.0628, dtype=torch.float64)), (265, tensor(-0.0628, dtype=torch.float64)), (2721, tensor(-0.0628, dtype=torch.float64)), (283, tensor(-0.0626, dtype=torch.float64)), (1981, tensor(-0.0625, dtype=torch.float64)), (2827, tensor(-0.0624, dtype=torch.float64)), (390, tensor(-0.0624, dtype=torch.float64)), (479, tensor(-0.0624, dtype=torch.float64)), (1931, tensor(-0.0623, dtype=torch.float64)), (934, tensor(-0.0622, dtype=torch.float64)), (2300, tensor(-0.0620, dtype=torch.float64)), (901, tensor(-0.0620, dtype=torch.float64)), (1626, tensor(-0.0620, dtype=torch.float64)), (105, tensor(-0.0620, dtype=torch.float64)), (644, tensor(-0.0619, dtype=torch.float64)), (3340, tensor(-0.0618, dtype=torch.float64)), (2066, tensor(-0.0618, dtype=torch.float64)), (3044, tensor(-0.0618, dtype=torch.float64)), (2344, tensor(-0.0618, dtype=torch.float64)), (604, tensor(-0.0618, dtype=torch.float64)), (1090, tensor(-0.0617, dtype=torch.float64)), (3106, tensor(-0.0617, dtype=torch.float64)), (845, tensor(-0.0617, dtype=torch.float64)), (1163, tensor(-0.0617, dtype=torch.float64)), (2019, tensor(-0.0616, dtype=torch.float64)), (2560, tensor(-0.0616, dtype=torch.float64)), (3113, tensor(-0.0616, dtype=torch.float64)), (2172, tensor(-0.0615, dtype=torch.float64)), (3084, tensor(-0.0614, dtype=torch.float64)), (1912, tensor(-0.0614, dtype=torch.float64)), (2434, tensor(-0.0613, dtype=torch.float64)), (577, tensor(-0.0613, dtype=torch.float64)), (573, tensor(-0.0613, dtype=torch.float64)), (2652, tensor(-0.0613, dtype=torch.float64)), (854, tensor(-0.0612, dtype=torch.float64)), (3291, tensor(-0.0612, dtype=torch.float64)), (185, tensor(-0.0612, dtype=torch.float64)), (1069, tensor(-0.0611, dtype=torch.float64)), (2134, tensor(-0.0611, dtype=torch.float64)), (1834, tensor(-0.0610, dtype=torch.float64)), (3063, tensor(-0.0610, dtype=torch.float64)), (1690, tensor(-0.0609, dtype=torch.float64)), (1623, tensor(-0.0609, dtype=torch.float64)), (1289, tensor(-0.0609, dtype=torch.float64)), (1670, tensor(-0.0609, dtype=torch.float64)), (3170, tensor(-0.0609, dtype=torch.float64)), (952, tensor(-0.0609, dtype=torch.float64)), (713, tensor(-0.0609, dtype=torch.float64)), (1417, tensor(-0.0609, dtype=torch.float64)), (143, tensor(-0.0609, dtype=torch.float64)), (819, tensor(-0.0608, dtype=torch.float64)), (3189, tensor(-0.0608, dtype=torch.float64)), (1253, tensor(-0.0608, dtype=torch.float64)), (2657, tensor(-0.0607, dtype=torch.float64)), (2212, tensor(-0.0607, dtype=torch.float64)), (1703, tensor(-0.0606, dtype=torch.float64)), (3349, tensor(-0.0606, dtype=torch.float64)), (902, tensor(-0.0606, dtype=torch.float64)), (463, tensor(-0.0605, dtype=torch.float64)), (515, tensor(-0.0605, dtype=torch.float64)), (2224, tensor(-0.0605, dtype=torch.float64)), (1134, tensor(-0.0604, dtype=torch.float64)), (1162, tensor(-0.0604, dtype=torch.float64)), (2599, tensor(-0.0604, dtype=torch.float64)), (109, tensor(-0.0604, dtype=torch.float64)), (2675, tensor(-0.0603, dtype=torch.float64)), (1247, tensor(-0.0602, dtype=torch.float64)), (234, tensor(-0.0602, dtype=torch.float64)), (1870, tensor(-0.0601, dtype=torch.float64)), (1057, tensor(-0.0601, dtype=torch.float64)), (124, tensor(-0.0601, dtype=torch.float64)), (595, tensor(-0.0600, dtype=torch.float64)), (2745, tensor(-0.0600, dtype=torch.float64)), (2293, tensor(-0.0600, dtype=torch.float64)), (3228, tensor(-0.0600, dtype=torch.float64)), (476, tensor(-0.0599, dtype=torch.float64)), (331, tensor(-0.0599, dtype=torch.float64)), (2897, tensor(-0.0599, dtype=torch.float64)), (2743, tensor(-0.0599, dtype=torch.float64)), (1038, tensor(-0.0598, dtype=torch.float64)), (1887, tensor(-0.0598, dtype=torch.float64)), (3131, tensor(-0.0598, dtype=torch.float64)), (1556, tensor(-0.0598, dtype=torch.float64)), (243, tensor(-0.0598, dtype=torch.float64)), (1481, tensor(-0.0598, dtype=torch.float64)), (1295, tensor(-0.0597, dtype=torch.float64)), (199, tensor(-0.0597, dtype=torch.float64)), (1233, tensor(-0.0596, dtype=torch.float64)), (1934, tensor(-0.0596, dtype=torch.float64)), (3336, tensor(-0.0595, dtype=torch.float64)), (2177, tensor(-0.0595, dtype=torch.float64)), (2011, tensor(-0.0595, dtype=torch.float64)), (2065, tensor(-0.0595, dtype=torch.float64)), (103, tensor(-0.0595, dtype=torch.float64)), (1014, tensor(-0.0594, dtype=torch.float64)), (91, tensor(-0.0594, dtype=torch.float64)), (163, tensor(-0.0594, dtype=torch.float64)), (1832, tensor(-0.0593, dtype=torch.float64)), (3128, tensor(-0.0591, dtype=torch.float64)), (1382, tensor(-0.0591, dtype=torch.float64)), (1770, tensor(-0.0591, dtype=torch.float64)), (603, tensor(-0.0591, dtype=torch.float64)), (2790, tensor(-0.0591, dtype=torch.float64)), (1313, tensor(-0.0591, dtype=torch.float64)), (3167, tensor(-0.0590, dtype=torch.float64)), (180, tensor(-0.0590, dtype=torch.float64)), (3034, tensor(-0.0590, dtype=torch.float64)), (1913, tensor(-0.0590, dtype=torch.float64)), (636, tensor(-0.0590, dtype=torch.float64)), (2506, tensor(-0.0590, dtype=torch.float64)), (2059, tensor(-0.0589, dtype=torch.float64)), (611, tensor(-0.0589, dtype=torch.float64)), (1219, tensor(-0.0589, dtype=torch.float64)), (2136, tensor(-0.0589, dtype=torch.float64)), (804, tensor(-0.0588, dtype=torch.float64)), (2025, tensor(-0.0587, dtype=torch.float64)), (1060, tensor(-0.0587, dtype=torch.float64)), (288, tensor(-0.0587, dtype=torch.float64)), (2323, tensor(-0.0587, dtype=torch.float64)), (536, tensor(-0.0586, dtype=torch.float64)), (2669, tensor(-0.0586, dtype=torch.float64)), (2684, tensor(-0.0586, dtype=torch.float64)), (2893, tensor(-0.0585, dtype=torch.float64)), (83, tensor(-0.0585, dtype=torch.float64)), (643, tensor(-0.0584, dtype=torch.float64)), (2653, tensor(-0.0584, dtype=torch.float64)), (3032, tensor(-0.0584, dtype=torch.float64)), (2295, tensor(-0.0584, dtype=torch.float64)), (216, tensor(-0.0584, dtype=torch.float64)), (2390, tensor(-0.0583, dtype=torch.float64)), (382, tensor(-0.0583, dtype=torch.float64)), (1680, tensor(-0.0583, dtype=torch.float64)), (461, tensor(-0.0582, dtype=torch.float64)), (2588, tensor(-0.0581, dtype=torch.float64)), (1409, tensor(-0.0581, dtype=torch.float64)), (2555, tensor(-0.0581, dtype=torch.float64)), (777, tensor(-0.0581, dtype=torch.float64)), (1648, tensor(-0.0580, dtype=torch.float64)), (2796, tensor(-0.0580, dtype=torch.float64)), (1599, tensor(-0.0580, dtype=torch.float64)), (326, tensor(-0.0580, dtype=torch.float64)), (285, tensor(-0.0579, dtype=torch.float64)), (1498, tensor(-0.0579, dtype=torch.float64)), (1843, tensor(-0.0579, dtype=torch.float64)), (2276, tensor(-0.0578, dtype=torch.float64)), (3254, tensor(-0.0578, dtype=torch.float64)), (394, tensor(-0.0578, dtype=torch.float64)), (300, tensor(-0.0578, dtype=torch.float64)), (1695, tensor(-0.0577, dtype=torch.float64)), (348, tensor(-0.0577, dtype=torch.float64)), (2678, tensor(-0.0576, dtype=torch.float64)), (196, tensor(-0.0576, dtype=torch.float64)), (739, tensor(-0.0576, dtype=torch.float64)), (3125, tensor(-0.0574, dtype=torch.float64)), (2610, tensor(-0.0574, dtype=torch.float64)), (1699, tensor(-0.0574, dtype=torch.float64)), (1725, tensor(-0.0573, dtype=torch.float64)), (246, tensor(-0.0572, dtype=torch.float64)), (984, tensor(-0.0572, dtype=torch.float64)), (1212, tensor(-0.0572, dtype=torch.float64)), (1108, tensor(-0.0572, dtype=torch.float64)), (2264, tensor(-0.0572, dtype=torch.float64)), (938, tensor(-0.0571, dtype=torch.float64)), (692, tensor(-0.0571, dtype=torch.float64)), (2082, tensor(-0.0570, dtype=torch.float64)), (665, tensor(-0.0570, dtype=torch.float64)), (2388, tensor(-0.0570, dtype=torch.float64)), (2242, tensor(-0.0570, dtype=torch.float64)), (1526, tensor(-0.0570, dtype=torch.float64)), (433, tensor(-0.0570, dtype=torch.float64)), (1769, tensor(-0.0570, dtype=torch.float64)), (3029, tensor(-0.0570, dtype=torch.float64)), (1000, tensor(-0.0569, dtype=torch.float64)), (2960, tensor(-0.0569, dtype=torch.float64)), (820, tensor(-0.0569, dtype=torch.float64)), (179, tensor(-0.0568, dtype=torch.float64)), (2916, tensor(-0.0568, dtype=torch.float64)), (1139, tensor(-0.0567, dtype=torch.float64)), (3050, tensor(-0.0566, dtype=torch.float64)), (1867, tensor(-0.0564, dtype=torch.float64)), (1932, tensor(-0.0564, dtype=torch.float64)), (1768, tensor(-0.0564, dtype=torch.float64)), (29, tensor(-0.0564, dtype=torch.float64)), (1331, tensor(-0.0564, dtype=torch.float64)), (1788, tensor(-0.0562, dtype=torch.float64)), (2387, tensor(-0.0562, dtype=torch.float64)), (1006, tensor(-0.0562, dtype=torch.float64)), (58, tensor(-0.0562, dtype=torch.float64)), (549, tensor(-0.0562, dtype=torch.float64)), (2926, tensor(-0.0561, dtype=torch.float64)), (863, tensor(-0.0561, dtype=torch.float64)), (3304, tensor(-0.0560, dtype=torch.float64)), (2513, tensor(-0.0560, dtype=torch.float64)), (617, tensor(-0.0560, dtype=torch.float64)), (1272, tensor(-0.0560, dtype=torch.float64)), (1662, tensor(-0.0559, dtype=torch.float64)), (2167, tensor(-0.0558, dtype=torch.float64)), (215, tensor(-0.0558, dtype=torch.float64)), (1052, tensor(-0.0557, dtype=torch.float64)), (1952, tensor(-0.0557, dtype=torch.float64)), (2378, tensor(-0.0556, dtype=torch.float64)), (1352, tensor(-0.0556, dtype=torch.float64)), (2618, tensor(-0.0556, dtype=torch.float64)), (2909, tensor(-0.0556, dtype=torch.float64)), (2518, tensor(-0.0555, dtype=torch.float64)), (2582, tensor(-0.0555, dtype=torch.float64)), (2313, tensor(-0.0554, dtype=torch.float64)), (192, tensor(-0.0554, dtype=torch.float64)), (362, tensor(-0.0554, dtype=torch.float64)), (2871, tensor(-0.0553, dtype=torch.float64)), (2203, tensor(-0.0553, dtype=torch.float64)), (642, tensor(-0.0553, dtype=torch.float64)), (1402, tensor(-0.0552, dtype=torch.float64)), (2232, tensor(-0.0552, dtype=torch.float64)), (2549, tensor(-0.0552, dtype=torch.float64)), (1554, tensor(-0.0552, dtype=torch.float64)), (1519, tensor(-0.0551, dtype=torch.float64)), (946, tensor(-0.0550, dtype=torch.float64)), (2819, tensor(-0.0550, dtype=torch.float64)), (358, tensor(-0.0550, dtype=torch.float64)), (1473, tensor(-0.0549, dtype=torch.float64)), (2663, tensor(-0.0549, dtype=torch.float64)), (3051, tensor(-0.0549, dtype=torch.float64)), (1294, tensor(-0.0549, dtype=torch.float64)), (2317, tensor(-0.0548, dtype=torch.float64)), (2898, tensor(-0.0548, dtype=torch.float64)), (2075, tensor(-0.0548, dtype=torch.float64)), (725, tensor(-0.0547, dtype=torch.float64)), (418, tensor(-0.0547, dtype=torch.float64)), (601, tensor(-0.0546, dtype=torch.float64)), (2382, tensor(-0.0546, dtype=torch.float64)), (3080, tensor(-0.0546, dtype=torch.float64)), (1321, tensor(-0.0545, dtype=torch.float64)), (1514, tensor(-0.0545, dtype=torch.float64)), (615, tensor(-0.0545, dtype=torch.float64)), (2221, tensor(-0.0545, dtype=torch.float64)), (691, tensor(-0.0545, dtype=torch.float64)), (2643, tensor(-0.0545, dtype=torch.float64)), (2405, tensor(-0.0544, dtype=torch.float64)), (680, tensor(-0.0544, dtype=torch.float64)), (2785, tensor(-0.0544, dtype=torch.float64)), (3016, tensor(-0.0543, dtype=torch.float64)), (760, tensor(-0.0543, dtype=torch.float64)), (474, tensor(-0.0543, dtype=torch.float64)), (408, tensor(-0.0543, dtype=torch.float64)), (704, tensor(-0.0543, dtype=torch.float64)), (576, tensor(-0.0542, dtype=torch.float64)), (1359, tensor(-0.0542, dtype=torch.float64)), (3012, tensor(-0.0542, dtype=torch.float64)), (3096, tensor(-0.0542, dtype=torch.float64)), (3068, tensor(-0.0542, dtype=torch.float64)), (507, tensor(-0.0542, dtype=torch.float64)), (2894, tensor(-0.0541, dtype=torch.float64)), (920, tensor(-0.0541, dtype=torch.float64)), (1628, tensor(-0.0541, dtype=torch.float64)), (608, tensor(-0.0541, dtype=torch.float64)), (315, tensor(-0.0541, dtype=torch.float64)), (86, tensor(-0.0541, dtype=torch.float64)), (2957, tensor(-0.0540, dtype=torch.float64)), (829, tensor(-0.0540, dtype=torch.float64)), (2015, tensor(-0.0539, dtype=torch.float64)), (1167, tensor(-0.0539, dtype=torch.float64)), (1182, tensor(-0.0539, dtype=torch.float64)), (3094, tensor(-0.0538, dtype=torch.float64)), (2409, tensor(-0.0537, dtype=torch.float64)), (2270, tensor(-0.0536, dtype=torch.float64)), (701, tensor(-0.0536, dtype=torch.float64)), (494, tensor(-0.0536, dtype=torch.float64)), (3256, tensor(-0.0536, dtype=torch.float64)), (518, tensor(-0.0535, dtype=torch.float64)), (413, tensor(-0.0535, dtype=torch.float64)), (2833, tensor(-0.0534, dtype=torch.float64)), (2810, tensor(-0.0534, dtype=torch.float64)), (1450, tensor(-0.0534, dtype=torch.float64)), (1425, tensor(-0.0534, dtype=torch.float64)), (1080, tensor(-0.0534, dtype=torch.float64)), (2701, tensor(-0.0533, dtype=torch.float64)), (1571, tensor(-0.0533, dtype=torch.float64)), (1561, tensor(-0.0532, dtype=torch.float64)), (1713, tensor(-0.0532, dtype=torch.float64)), (1378, tensor(-0.0532, dtype=torch.float64)), (2161, tensor(-0.0532, dtype=torch.float64)), (30, tensor(-0.0532, dtype=torch.float64)), (393, tensor(-0.0531, dtype=torch.float64)), (2597, tensor(-0.0531, dtype=torch.float64)), (1435, tensor(-0.0531, dtype=torch.float64)), (1847, tensor(-0.0531, dtype=torch.float64)), (895, tensor(-0.0531, dtype=torch.float64)), (3288, tensor(-0.0530, dtype=torch.float64)), (2306, tensor(-0.0529, dtype=torch.float64)), (1412, tensor(-0.0529, dtype=torch.float64)), (1566, tensor(-0.0528, dtype=torch.float64)), (2944, tensor(-0.0528, dtype=torch.float64)), (1158, tensor(-0.0527, dtype=torch.float64)), (3247, tensor(-0.0527, dtype=torch.float64)), (1784, tensor(-0.0527, dtype=torch.float64)), (2377, tensor(-0.0526, dtype=torch.float64)), (2197, tensor(-0.0526, dtype=torch.float64)), (762, tensor(-0.0526, dtype=torch.float64)), (3153, tensor(-0.0526, dtype=torch.float64)), (41, tensor(-0.0526, dtype=torch.float64)), (2815, tensor(-0.0526, dtype=torch.float64)), (1838, tensor(-0.0525, dtype=torch.float64)), (2591, tensor(-0.0525, dtype=torch.float64)), (3110, tensor(-0.0525, dtype=torch.float64)), (731, tensor(-0.0525, dtype=torch.float64)), (2877, tensor(-0.0525, dtype=torch.float64)), (2671, tensor(-0.0524, dtype=torch.float64)), (3187, tensor(-0.0523, dtype=torch.float64)), (419, tensor(-0.0522, dtype=torch.float64)), (2477, tensor(-0.0522, dtype=torch.float64)), (2290, tensor(-0.0521, dtype=torch.float64)), (1303, tensor(-0.0521, dtype=torch.float64)), (1071, tensor(-0.0521, dtype=torch.float64)), (2417, tensor(-0.0521, dtype=torch.float64)), (613, tensor(-0.0521, dtype=torch.float64)), (2315, tensor(-0.0521, dtype=torch.float64)), (2968, tensor(-0.0520, dtype=torch.float64)), (2453, tensor(-0.0519, dtype=torch.float64)), (2569, tensor(-0.0519, dtype=torch.float64)), (1164, tensor(-0.0519, dtype=torch.float64)), (2128, tensor(-0.0519, dtype=torch.float64)), (2187, tensor(-0.0519, dtype=torch.float64)), (2029, tensor(-0.0519, dtype=torch.float64)), (2984, tensor(-0.0518, dtype=torch.float64)), (3186, tensor(-0.0518, dtype=torch.float64)), (659, tensor(-0.0518, dtype=torch.float64)), (3201, tensor(-0.0517, dtype=torch.float64)), (3272, tensor(-0.0517, dtype=torch.float64)), (2349, tensor(-0.0517, dtype=torch.float64)), (2026, tensor(-0.0517, dtype=torch.float64)), (779, tensor(-0.0517, dtype=torch.float64)), (1315, tensor(-0.0516, dtype=torch.float64)), (44, tensor(-0.0516, dtype=torch.float64)), (1225, tensor(-0.0516, dtype=torch.float64)), (1268, tensor(-0.0516, dtype=torch.float64)), (609, tensor(-0.0516, dtype=torch.float64)), (2844, tensor(-0.0516, dtype=torch.float64)), (2820, tensor(-0.0516, dtype=torch.float64)), (1712, tensor(-0.0515, dtype=torch.float64)), (250, tensor(-0.0515, dtype=torch.float64)), (2420, tensor(-0.0515, dtype=torch.float64)), (2817, tensor(-0.0515, dtype=torch.float64)), (146, tensor(-0.0515, dtype=torch.float64)), (1896, tensor(-0.0515, dtype=torch.float64)), (3117, tensor(-0.0514, dtype=torch.float64)), (1979, tensor(-0.0514, dtype=torch.float64)), (2595, tensor(-0.0514, dtype=torch.float64)), (2830, tensor(-0.0513, dtype=torch.float64)), (13, tensor(-0.0513, dtype=torch.float64)), (1368, tensor(-0.0513, dtype=torch.float64)), (2520, tensor(-0.0513, dtype=torch.float64)), (2778, tensor(-0.0512, dtype=torch.float64)), (1005, tensor(-0.0512, dtype=torch.float64)), (977, tensor(-0.0511, dtype=torch.float64)), (1660, tensor(-0.0511, dtype=torch.float64)), (2362, tensor(-0.0511, dtype=torch.float64)), (500, tensor(-0.0510, dtype=torch.float64)), (1017, tensor(-0.0510, dtype=torch.float64)), (2952, tensor(-0.0510, dtype=torch.float64)), (1880, tensor(-0.0509, dtype=torch.float64)), (2375, tensor(-0.0509, dtype=torch.float64)), (1039, tensor(-0.0509, dtype=torch.float64)), (732, tensor(-0.0509, dtype=torch.float64)), (2726, tensor(-0.0508, dtype=torch.float64)), (3329, tensor(-0.0508, dtype=torch.float64)), (2484, tensor(-0.0508, dtype=torch.float64)), (912, tensor(-0.0507, dtype=torch.float64)), (2866, tensor(-0.0506, dtype=torch.float64)), (1283, tensor(-0.0506, dtype=torch.float64)), (1533, tensor(-0.0505, dtype=torch.float64)), (840, tensor(-0.0505, dtype=torch.float64)), (552, tensor(-0.0505, dtype=torch.float64)), (832, tensor(-0.0505, dtype=torch.float64)), (1907, tensor(-0.0504, dtype=torch.float64)), (3302, tensor(-0.0504, dtype=torch.float64)), (554, tensor(-0.0504, dtype=torch.float64)), (3072, tensor(-0.0504, dtype=torch.float64)), (2479, tensor(-0.0503, dtype=torch.float64)), (860, tensor(-0.0503, dtype=torch.float64)), (539, tensor(-0.0502, dtype=torch.float64)), (2958, tensor(-0.0502, dtype=torch.float64)), (3248, tensor(-0.0502, dtype=torch.float64)), (2259, tensor(-0.0502, dtype=torch.float64)), (120, tensor(-0.0500, dtype=torch.float64)), (1133, tensor(-0.0500, dtype=torch.float64)), (527, tensor(-0.0500, dtype=torch.float64)), (3237, tensor(-0.0500, dtype=torch.float64)), (2976, tensor(-0.0500, dtype=torch.float64)), (2686, tensor(-0.0500, dtype=torch.float64)), (2398, tensor(-0.0500, dtype=torch.float64)), (511, tensor(-0.0499, dtype=torch.float64)), (84, tensor(-0.0497, dtype=torch.float64)), (2332, tensor(-0.0497, dtype=torch.float64)), (1479, tensor(-0.0497, dtype=torch.float64)), (164, tensor(-0.0497, dtype=torch.float64)), (2166, tensor(-0.0497, dtype=torch.float64)), (1998, tensor(-0.0497, dtype=torch.float64)), (2932, tensor(-0.0497, dtype=torch.float64)), (916, tensor(-0.0497, dtype=torch.float64)), (316, tensor(-0.0496, dtype=torch.float64)), (3026, tensor(-0.0496, dtype=torch.float64)), (2391, tensor(-0.0495, dtype=torch.float64)), (2839, tensor(-0.0494, dtype=torch.float64)), (193, tensor(-0.0494, dtype=torch.float64)), (262, tensor(-0.0494, dtype=torch.float64)), (1248, tensor(-0.0494, dtype=torch.float64)), (1675, tensor(-0.0493, dtype=torch.float64)), (585, tensor(-0.0493, dtype=torch.float64)), (1723, tensor(-0.0493, dtype=torch.float64)), (1664, tensor(-0.0492, dtype=torch.float64)), (2988, tensor(-0.0492, dtype=torch.float64)), (1040, tensor(-0.0492, dtype=torch.float64)), (2491, tensor(-0.0491, dtype=torch.float64)), (492, tensor(-0.0490, dtype=torch.float64)), (1340, tensor(-0.0490, dtype=torch.float64)), (2283, tensor(-0.0489, dtype=torch.float64)), (2495, tensor(-0.0489, dtype=torch.float64)), (1905, tensor(-0.0489, dtype=torch.float64)), (614, tensor(-0.0489, dtype=torch.float64)), (1586, tensor(-0.0489, dtype=torch.float64)), (1963, tensor(-0.0488, dtype=torch.float64)), (1795, tensor(-0.0488, dtype=torch.float64)), (1432, tensor(-0.0488, dtype=torch.float64)), (783, tensor(-0.0488, dtype=torch.float64)), (1593, tensor(-0.0487, dtype=torch.float64)), (944, tensor(-0.0487, dtype=torch.float64)), (3118, tensor(-0.0487, dtype=torch.float64)), (1961, tensor(-0.0487, dtype=torch.float64)), (2633, tensor(-0.0487, dtype=torch.float64)), (3273, tensor(-0.0487, dtype=torch.float64)), (3226, tensor(-0.0485, dtype=torch.float64)), (416, tensor(-0.0485, dtype=torch.float64)), (797, tensor(-0.0484, dtype=torch.float64)), (403, tensor(-0.0484, dtype=torch.float64)), (2829, tensor(-0.0483, dtype=torch.float64)), (3178, tensor(-0.0483, dtype=torch.float64)), (2847, tensor(-0.0483, dtype=torch.float64)), (2465, tensor(-0.0483, dtype=torch.float64)), (1671, tensor(-0.0482, dtype=torch.float64)), (2247, tensor(-0.0482, dtype=torch.float64)), (81, tensor(-0.0482, dtype=torch.float64)), (353, tensor(-0.0482, dtype=torch.float64)), (1512, tensor(-0.0481, dtype=torch.float64)), (2821, tensor(-0.0481, dtype=torch.float64)), (979, tensor(-0.0481, dtype=torch.float64)), (1115, tensor(-0.0480, dtype=torch.float64)), (2578, tensor(-0.0480, dtype=torch.float64)), (2896, tensor(-0.0480, dtype=torch.float64)), (2312, tensor(-0.0480, dtype=torch.float64)), (3166, tensor(-0.0480, dtype=torch.float64)), (2013, tensor(-0.0479, dtype=torch.float64)), (3209, tensor(-0.0479, dtype=torch.float64)), (3067, tensor(-0.0479, dtype=torch.float64)), (1483, tensor(-0.0479, dtype=torch.float64)), (1689, tensor(-0.0479, dtype=torch.float64)), (3305, tensor(-0.0479, dtype=torch.float64)), (2930, tensor(-0.0478, dtype=torch.float64)), (399, tensor(-0.0476, dtype=torch.float64)), (2408, tensor(-0.0476, dtype=torch.float64)), (2034, tensor(-0.0475, dtype=torch.float64)), (1730, tensor(-0.0475, dtype=torch.float64)), (514, tensor(-0.0475, dtype=torch.float64)), (1824, tensor(-0.0475, dtype=torch.float64)), (1960, tensor(-0.0475, dtype=torch.float64)), (668, tensor(-0.0474, dtype=torch.float64)), (2860, tensor(-0.0473, dtype=torch.float64)), (95, tensor(-0.0472, dtype=torch.float64)), (597, tensor(-0.0472, dtype=torch.float64)), (1696, tensor(-0.0472, dtype=torch.float64)), (372, tensor(-0.0471, dtype=torch.float64)), (1604, tensor(-0.0470, dtype=torch.float64)), (3353, tensor(-0.0470, dtype=torch.float64)), (1941, tensor(-0.0470, dtype=torch.float64)), (1785, tensor(-0.0470, dtype=torch.float64)), (1031, tensor(-0.0470, dtype=torch.float64)), (3358, tensor(-0.0469, dtype=torch.float64)), (1601, tensor(-0.0469, dtype=torch.float64)), (1251, tensor(-0.0469, dtype=torch.float64)), (2904, tensor(-0.0469, dtype=torch.float64)), (1607, tensor(-0.0469, dtype=torch.float64)), (2235, tensor(-0.0468, dtype=torch.float64)), (2747, tensor(-0.0468, dtype=torch.float64)), (3009, tensor(-0.0468, dtype=torch.float64)), (1154, tensor(-0.0467, dtype=torch.float64)), (2967, tensor(-0.0466, dtype=torch.float64)), (3259, tensor(-0.0466, dtype=torch.float64)), (1144, tensor(-0.0466, dtype=torch.float64)), (1771, tensor(-0.0466, dtype=torch.float64)), (497, tensor(-0.0465, dtype=torch.float64)), (1781, tensor(-0.0465, dtype=torch.float64)), (3203, tensor(-0.0465, dtype=torch.float64)), (1719, tensor(-0.0464, dtype=torch.float64)), (3185, tensor(-0.0464, dtype=torch.float64)), (545, tensor(-0.0464, dtype=torch.float64)), (1170, tensor(-0.0463, dtype=torch.float64)), (2689, tensor(-0.0463, dtype=torch.float64)), (1380, tensor(-0.0463, dtype=torch.float64)), (1726, tensor(-0.0462, dtype=torch.float64)), (237, tensor(-0.0462, dtype=torch.float64)), (2488, tensor(-0.0462, dtype=torch.float64)), (1486, tensor(-0.0462, dtype=torch.float64)), (2304, tensor(-0.0462, dtype=torch.float64)), (371, tensor(-0.0462, dtype=torch.float64)), (2872, tensor(-0.0461, dtype=torch.float64)), (532, tensor(-0.0461, dtype=torch.float64)), (1279, tensor(-0.0461, dtype=torch.float64)), (1971, tensor(-0.0461, dtype=torch.float64)), (1492, tensor(-0.0460, dtype=torch.float64)), (266, tensor(-0.0460, dtype=torch.float64)), (2834, tensor(-0.0460, dtype=torch.float64)), (592, tensor(-0.0460, dtype=torch.float64)), (733, tensor(-0.0460, dtype=torch.float64)), (2764, tensor(-0.0460, dtype=torch.float64)), (379, tensor(-0.0459, dtype=torch.float64)), (875, tensor(-0.0459, dtype=torch.float64)), (1504, tensor(-0.0459, dtype=torch.float64)), (696, tensor(-0.0458, dtype=torch.float64)), (2746, tensor(-0.0458, dtype=torch.float64)), (1774, tensor(-0.0458, dtype=torch.float64)), (2824, tensor(-0.0458, dtype=torch.float64)), (764, tensor(-0.0458, dtype=torch.float64)), (1872, tensor(-0.0457, dtype=torch.float64)), (3345, tensor(-0.0457, dtype=torch.float64)), (1524, tensor(-0.0456, dtype=torch.float64)), (2767, tensor(-0.0455, dtype=torch.float64)), (3331, tensor(-0.0454, dtype=torch.float64)), (3289, tensor(-0.0454, dtype=torch.float64)), (439, tensor(-0.0454, dtype=torch.float64)), (3028, tensor(-0.0454, dtype=torch.float64)), (3297, tensor(-0.0453, dtype=torch.float64)), (790, tensor(-0.0453, dtype=torch.float64)), (2763, tensor(-0.0453, dtype=torch.float64)), (308, tensor(-0.0453, dtype=torch.float64)), (3168, tensor(-0.0452, dtype=torch.float64)), (2512, tensor(-0.0452, dtype=torch.float64)), (23, tensor(-0.0452, dtype=torch.float64)), (1477, tensor(-0.0451, dtype=torch.float64)), (1032, tensor(-0.0451, dtype=torch.float64)), (678, tensor(-0.0451, dtype=torch.float64)), (727, tensor(-0.0450, dtype=torch.float64)), (172, tensor(-0.0450, dtype=torch.float64)), (464, tensor(-0.0450, dtype=torch.float64)), (2956, tensor(-0.0450, dtype=torch.float64)), (2858, tensor(-0.0450, dtype=torch.float64)), (838, tensor(-0.0449, dtype=torch.float64)), (2978, tensor(-0.0449, dtype=torch.float64)), (1721, tensor(-0.0449, dtype=torch.float64)), (896, tensor(-0.0449, dtype=torch.float64)), (333, tensor(-0.0449, dtype=torch.float64)), (2421, tensor(-0.0449, dtype=torch.float64)), (933, tensor(-0.0449, dtype=torch.float64)), (1676, tensor(-0.0449, dtype=torch.float64)), (2635, tensor(-0.0449, dtype=torch.float64)), (1835, tensor(-0.0448, dtype=torch.float64)), (1118, tensor(-0.0448, dtype=torch.float64)), (2724, tensor(-0.0448, dtype=torch.float64)), (278, tensor(-0.0448, dtype=torch.float64)), (3002, tensor(-0.0448, dtype=torch.float64)), (736, tensor(-0.0447, dtype=torch.float64)), (2115, tensor(-0.0447, dtype=torch.float64)), (359, tensor(-0.0447, dtype=torch.float64)), (217, tensor(-0.0447, dtype=torch.float64)), (1565, tensor(-0.0446, dtype=torch.float64)), (600, tensor(-0.0446, dtype=torch.float64)), (2636, tensor(-0.0446, dtype=torch.float64)), (809, tensor(-0.0445, dtype=torch.float64)), (771, tensor(-0.0445, dtype=torch.float64)), (1617, tensor(-0.0445, dtype=torch.float64)), (2656, tensor(-0.0445, dtype=torch.float64)), (1951, tensor(-0.0445, dtype=torch.float64)), (2106, tensor(-0.0444, dtype=torch.float64)), (2670, tensor(-0.0443, dtype=torch.float64)), (598, tensor(-0.0443, dtype=torch.float64)), (366, tensor(-0.0443, dtype=torch.float64)), (1129, tensor(-0.0443, dtype=torch.float64)), (3155, tensor(-0.0441, dtype=torch.float64)), (1751, tensor(-0.0441, dtype=torch.float64)), (2989, tensor(-0.0440, dtype=torch.float64)), (349, tensor(-0.0440, dtype=torch.float64)), (2590, tensor(-0.0439, dtype=torch.float64)), (2837, tensor(-0.0438, dtype=torch.float64)), (341, tensor(-0.0438, dtype=torch.float64)), (2348, tensor(-0.0438, dtype=torch.float64)), (1885, tensor(-0.0438, dtype=torch.float64)), (207, tensor(-0.0438, dtype=torch.float64)), (2188, tensor(-0.0438, dtype=torch.float64)), (3244, tensor(-0.0437, dtype=torch.float64)), (342, tensor(-0.0437, dtype=torch.float64)), (1257, tensor(-0.0437, dtype=torch.float64)), (2459, tensor(-0.0437, dtype=torch.float64)), (12, tensor(-0.0437, dtype=torch.float64)), (3140, tensor(-0.0437, dtype=torch.float64)), (2267, tensor(-0.0436, dtype=torch.float64)), (1706, tensor(-0.0436, dtype=torch.float64)), (2271, tensor(-0.0436, dtype=torch.float64)), (3359, tensor(-0.0436, dtype=torch.float64)), (3242, tensor(-0.0435, dtype=torch.float64)), (761, tensor(-0.0435, dtype=torch.float64)), (853, tensor(-0.0435, dtype=torch.float64)), (2383, tensor(-0.0434, dtype=torch.float64)), (1142, tensor(-0.0434, dtype=torch.float64)), (2517, tensor(-0.0434, dtype=torch.float64)), (652, tensor(-0.0434, dtype=torch.float64)), (2807, tensor(-0.0433, dtype=torch.float64)), (1111, tensor(-0.0433, dtype=torch.float64)), (3127, tensor(-0.0433, dtype=torch.float64)), (2114, tensor(-0.0433, dtype=torch.float64)), (1360, tensor(-0.0433, dtype=torch.float64)), (34, tensor(-0.0433, dtype=torch.float64)), (2418, tensor(-0.0433, dtype=torch.float64)), (917, tensor(-0.0432, dtype=torch.float64)), (1383, tensor(-0.0431, dtype=torch.float64)), (293, tensor(-0.0431, dtype=torch.float64)), (328, tensor(-0.0431, dtype=torch.float64)), (2939, tensor(-0.0430, dtype=torch.float64)), (2337, tensor(-0.0430, dtype=torch.float64)), (1373, tensor(-0.0430, dtype=torch.float64)), (2160, tensor(-0.0429, dtype=torch.float64)), (3145, tensor(-0.0428, dtype=torch.float64)), (2562, tensor(-0.0428, dtype=torch.float64)), (2072, tensor(-0.0428, dtype=torch.float64)), (357, tensor(-0.0428, dtype=torch.float64)), (376, tensor(-0.0428, dtype=torch.float64)), (517, tensor(-0.0427, dtype=torch.float64)), (488, tensor(-0.0427, dtype=torch.float64)), (384, tensor(-0.0426, dtype=torch.float64)), (2808, tensor(-0.0426, dtype=torch.float64)), (159, tensor(-0.0426, dtype=torch.float64)), (389, tensor(-0.0426, dtype=torch.float64)), (786, tensor(-0.0425, dtype=torch.float64)), (792, tensor(-0.0425, dtype=torch.float64)), (334, tensor(-0.0425, dtype=torch.float64)), (1810, tensor(-0.0424, dtype=torch.float64)), (1449, tensor(-0.0424, dtype=torch.float64)), (978, tensor(-0.0424, dtype=torch.float64)), (1957, tensor(-0.0424, dtype=torch.float64)), (2191, tensor(-0.0424, dtype=torch.float64)), (425, tensor(-0.0424, dtype=torch.float64)), (1641, tensor(-0.0424, dtype=torch.float64)), (907, tensor(-0.0423, dtype=torch.float64)), (1061, tensor(-0.0423, dtype=torch.float64)), (1597, tensor(-0.0423, dtype=torch.float64)), (2214, tensor(-0.0421, dtype=torch.float64)), (2995, tensor(-0.0420, dtype=torch.float64)), (813, tensor(-0.0420, dtype=torch.float64)), (3232, tensor(-0.0420, dtype=torch.float64)), (2414, tensor(-0.0420, dtype=torch.float64)), (2474, tensor(-0.0420, dtype=torch.float64)), (789, tensor(-0.0420, dtype=torch.float64)), (2665, tensor(-0.0420, dtype=torch.float64)), (2981, tensor(-0.0420, dtype=torch.float64)), (2285, tensor(-0.0419, dtype=torch.float64)), (752, tensor(-0.0419, dtype=torch.float64)), (964, tensor(-0.0419, dtype=torch.float64)), (1397, tensor(-0.0417, dtype=torch.float64)), (878, tensor(-0.0417, dtype=torch.float64)), (980, tensor(-0.0417, dtype=torch.float64)), (2110, tensor(-0.0417, dtype=torch.float64)), (487, tensor(-0.0417, dtype=torch.float64)), (2533, tensor(-0.0417, dtype=torch.float64)), (1634, tensor(-0.0417, dtype=torch.float64)), (1936, tensor(-0.0416, dtype=torch.float64)), (766, tensor(-0.0416, dtype=torch.float64)), (2169, tensor(-0.0416, dtype=torch.float64)), (2307, tensor(-0.0416, dtype=torch.float64)), (3069, tensor(-0.0416, dtype=torch.float64)), (3257, tensor(-0.0415, dtype=torch.float64)), (2959, tensor(-0.0415, dtype=torch.float64)), (446, tensor(-0.0415, dtype=torch.float64)), (261, tensor(-0.0415, dtype=torch.float64)), (648, tensor(-0.0415, dtype=torch.float64)), (1464, tensor(-0.0414, dtype=torch.float64)), (3134, tensor(-0.0414, dtype=torch.float64)), (2516, tensor(-0.0414, dtype=torch.float64)), (756, tensor(-0.0414, dtype=torch.float64)), (1240, tensor(-0.0413, dtype=torch.float64)), (1367, tensor(-0.0413, dtype=torch.float64)), (2361, tensor(-0.0413, dtype=torch.float64)), (178, tensor(-0.0413, dtype=torch.float64)), (3162, tensor(-0.0413, dtype=torch.float64)), (313, tensor(-0.0412, dtype=torch.float64)), (2449, tensor(-0.0412, dtype=torch.float64)), (1306, tensor(-0.0412, dtype=torch.float64)), (1849, tensor(-0.0412, dtype=torch.float64)), (1082, tensor(-0.0411, dtype=torch.float64)), (3362, tensor(-0.0410, dtype=torch.float64)), (2876, tensor(-0.0410, dtype=torch.float64)), (1910, tensor(-0.0410, dtype=torch.float64)), (3342, tensor(-0.0409, dtype=torch.float64)), (2318, tensor(-0.0408, dtype=torch.float64)), (2335, tensor(-0.0408, dtype=torch.float64)), (2022, tensor(-0.0407, dtype=torch.float64)), (2000, tensor(-0.0407, dtype=torch.float64)), (267, tensor(-0.0407, dtype=torch.float64)), (2718, tensor(-0.0406, dtype=torch.float64)), (255, tensor(-0.0406, dtype=torch.float64)), (147, tensor(-0.0406, dtype=torch.float64)), (3363, tensor(-0.0406, dtype=torch.float64)), (748, tensor(-0.0405, dtype=torch.float64)), (3313, tensor(-0.0405, dtype=torch.float64)), (1876, tensor(-0.0405, dtype=torch.float64)), (3250, tensor(-0.0404, dtype=torch.float64)), (2503, tensor(-0.0403, dtype=torch.float64)), (857, tensor(-0.0403, dtype=torch.float64)), (2394, tensor(-0.0403, dtype=torch.float64)), (3348, tensor(-0.0403, dtype=torch.float64)), (125, tensor(-0.0402, dtype=torch.float64)), (959, tensor(-0.0402, dtype=torch.float64)), (1640, tensor(-0.0402, dtype=torch.float64)), (2927, tensor(-0.0402, dtype=torch.float64)), (2274, tensor(-0.0402, dtype=torch.float64)), (3271, tensor(-0.0401, dtype=torch.float64)), (1546, tensor(-0.0400, dtype=torch.float64)), (798, tensor(-0.0400, dtype=torch.float64)), (784, tensor(-0.0400, dtype=torch.float64)), (606, tensor(-0.0400, dtype=torch.float64)), (1398, tensor(-0.0399, dtype=torch.float64)), (1175, tensor(-0.0399, dtype=torch.float64)), (922, tensor(-0.0399, dtype=torch.float64)), (1630, tensor(-0.0399, dtype=torch.float64)), (709, tensor(-0.0398, dtype=torch.float64)), (1093, tensor(-0.0398, dtype=torch.float64)), (2731, tensor(-0.0397, dtype=torch.float64)), (1947, tensor(-0.0397, dtype=torch.float64)), (2524, tensor(-0.0396, dtype=torch.float64)), (1007, tensor(-0.0396, dtype=torch.float64)), (874, tensor(-0.0396, dtype=torch.float64)), (424, tensor(-0.0396, dtype=torch.float64)), (70, tensor(-0.0395, dtype=torch.float64)), (3175, tensor(-0.0395, dtype=torch.float64)), (3007, tensor(-0.0394, dtype=torch.float64)), (1762, tensor(-0.0392, dtype=torch.float64)), (1980, tensor(-0.0392, dtype=torch.float64)), (908, tensor(-0.0391, dtype=torch.float64)), (3334, tensor(-0.0391, dtype=torch.float64)), (543, tensor(-0.0391, dtype=torch.float64)), (2818, tensor(-0.0391, dtype=torch.float64)), (2056, tensor(-0.0390, dtype=torch.float64)), (2218, tensor(-0.0390, dtype=torch.float64)), (2356, tensor(-0.0390, dtype=torch.float64)), (1547, tensor(-0.0390, dtype=torch.float64)), (1760, tensor(-0.0390, dtype=torch.float64)), (1510, tensor(-0.0390, dtype=torch.float64)), (400, tensor(-0.0390, dtype=torch.float64)), (3243, tensor(-0.0389, dtype=torch.float64)), (2966, tensor(-0.0389, dtype=torch.float64)), (3022, tensor(-0.0389, dtype=torch.float64)), (1890, tensor(-0.0389, dtype=torch.float64)), (1739, tensor(-0.0388, dtype=torch.float64)), (2152, tensor(-0.0388, dtype=torch.float64)), (2949, tensor(-0.0388, dtype=torch.float64)), (2452, tensor(-0.0388, dtype=torch.float64)), (158, tensor(-0.0387, dtype=torch.float64)), (899, tensor(-0.0387, dtype=torch.float64)), (213, tensor(-0.0387, dtype=torch.float64)), (956, tensor(-0.0387, dtype=torch.float64)), (1822, tensor(-0.0386, dtype=torch.float64)), (1267, tensor(-0.0386, dtype=torch.float64)), (1185, tensor(-0.0386, dtype=torch.float64)), (2381, tensor(-0.0386, dtype=torch.float64)), (2666, tensor(-0.0385, dtype=torch.float64)), (670, tensor(-0.0385, dtype=torch.float64)), (1672, tensor(-0.0385, dtype=torch.float64)), (618, tensor(-0.0385, dtype=torch.float64)), (452, tensor(-0.0385, dtype=torch.float64)), (1186, tensor(-0.0385, dtype=torch.float64)), (2158, tensor(-0.0384, dtype=torch.float64)), (3121, tensor(-0.0384, dtype=torch.float64)), (2415, tensor(-0.0383, dtype=torch.float64)), (2734, tensor(-0.0383, dtype=torch.float64)), (894, tensor(-0.0383, dtype=torch.float64)), (411, tensor(-0.0383, dtype=torch.float64)), (1078, tensor(-0.0382, dtype=torch.float64)), (1259, tensor(-0.0382, dtype=torch.float64)), (1003, tensor(-0.0381, dtype=torch.float64)), (1570, tensor(-0.0380, dtype=torch.float64)), (1767, tensor(-0.0380, dtype=torch.float64)), (2994, tensor(-0.0380, dtype=torch.float64)), (263, tensor(-0.0379, dtype=torch.float64)), (460, tensor(-0.0379, dtype=torch.float64)), (1862, tensor(-0.0378, dtype=torch.float64)), (900, tensor(-0.0378, dtype=torch.float64)), (3366, tensor(-0.0378, dtype=torch.float64)), (1083, tensor(-0.0378, dtype=torch.float64)), (2447, tensor(-0.0378, dtype=torch.float64)), (110, tensor(-0.0377, dtype=torch.float64)), (3138, tensor(-0.0377, dtype=torch.float64)), (82, tensor(-0.0377, dtype=torch.float64)), (1296, tensor(-0.0377, dtype=torch.float64)), (1018, tensor(-0.0377, dtype=torch.float64)), (1783, tensor(-0.0377, dtype=torch.float64)), (1815, tensor(-0.0376, dtype=torch.float64)), (2004, tensor(-0.0376, dtype=torch.float64)), (2473, tensor(-0.0376, dtype=torch.float64)), (1507, tensor(-0.0376, dtype=torch.float64)), (1917, tensor(-0.0375, dtype=torch.float64)), (796, tensor(-0.0375, dtype=torch.float64)), (2933, tensor(-0.0374, dtype=torch.float64)), (1877, tensor(-0.0374, dtype=torch.float64)), (3062, tensor(-0.0373, dtype=torch.float64)), (140, tensor(-0.0373, dtype=torch.float64)), (1025, tensor(-0.0372, dtype=torch.float64)), (127, tensor(-0.0372, dtype=torch.float64)), (2606, tensor(-0.0372, dtype=torch.float64)), (542, tensor(-0.0372, dtype=torch.float64)), (2280, tensor(-0.0371, dtype=torch.float64)), (1804, tensor(-0.0371, dtype=torch.float64)), (152, tensor(-0.0370, dtype=torch.float64)), (982, tensor(-0.0370, dtype=torch.float64)), (323, tensor(-0.0370, dtype=torch.float64)), (1903, tensor(-0.0370, dtype=torch.float64)), (3333, tensor(-0.0370, dtype=torch.float64)), (2262, tensor(-0.0369, dtype=torch.float64)), (2423, tensor(-0.0369, dtype=torch.float64)), (2079, tensor(-0.0369, dtype=torch.float64)), (2953, tensor(-0.0369, dtype=torch.float64)), (339, tensor(-0.0369, dtype=torch.float64)), (2333, tensor(-0.0368, dtype=torch.float64)), (1437, tensor(-0.0368, dtype=torch.float64)), (1385, tensor(-0.0367, dtype=torch.float64)), (722, tensor(-0.0367, dtype=torch.float64)), (2649, tensor(-0.0367, dtype=torch.float64)), (2500, tensor(-0.0367, dtype=torch.float64)), (1390, tensor(-0.0367, dtype=torch.float64)), (149, tensor(-0.0366, dtype=torch.float64)), (148, tensor(-0.0366, dtype=torch.float64)), (319, tensor(-0.0366, dtype=torch.float64)), (2851, tensor(-0.0365, dtype=torch.float64)), (3179, tensor(-0.0365, dtype=torch.float64)), (73, tensor(-0.0364, dtype=torch.float64)), (931, tensor(-0.0364, dtype=torch.float64)), (2183, tensor(-0.0364, dtype=torch.float64)), (2757, tensor(-0.0364, dtype=torch.float64)), (381, tensor(-0.0364, dtype=torch.float64)), (3017, tensor(-0.0363, dtype=torch.float64)), (2058, tensor(-0.0363, dtype=torch.float64)), (1972, tensor(-0.0363, dtype=torch.float64)), (2273, tensor(-0.0363, dtype=torch.float64)), (2775, tensor(-0.0363, dtype=torch.float64)), (968, tensor(-0.0362, dtype=torch.float64)), (2648, tensor(-0.0362, dtype=torch.float64)), (52, tensor(-0.0362, dtype=torch.float64)), (2931, tensor(-0.0361, dtype=torch.float64)), (2339, tensor(-0.0361, dtype=torch.float64)), (1055, tensor(-0.0361, dtype=torch.float64)), (2567, tensor(-0.0361, dtype=torch.float64)), (1408, tensor(-0.0360, dtype=torch.float64)), (868, tensor(-0.0359, dtype=torch.float64)), (1741, tensor(-0.0359, dtype=torch.float64)), (3222, tensor(-0.0359, dtype=torch.float64)), (1697, tensor(-0.0358, dtype=torch.float64)), (1476, tensor(-0.0358, dtype=torch.float64)), (2940, tensor(-0.0358, dtype=torch.float64)), (1252, tensor(-0.0358, dtype=torch.float64)), (3122, tensor(-0.0357, dtype=torch.float64)), (903, tensor(-0.0357, dtype=torch.float64)), (1297, tensor(-0.0357, dtype=torch.float64)), (808, tensor(-0.0356, dtype=torch.float64)), (1692, tensor(-0.0355, dtype=torch.float64)), (2092, tensor(-0.0355, dtype=torch.float64)), (2455, tensor(-0.0354, dtype=torch.float64)), (1453, tensor(-0.0354, dtype=torch.float64)), (392, tensor(-0.0354, dtype=torch.float64)), (1923, tensor(-0.0354, dtype=torch.float64)), (1933, tensor(-0.0354, dtype=torch.float64)), (1316, tensor(-0.0354, dtype=torch.float64)), (708, tensor(-0.0353, dtype=torch.float64)), (129, tensor(-0.0352, dtype=torch.float64)), (655, tensor(-0.0352, dtype=torch.float64)), (1503, tensor(-0.0352, dtype=torch.float64)), (2299, tensor(-0.0351, dtype=torch.float64)), (1475, tensor(-0.0351, dtype=torch.float64)), (2762, tensor(-0.0351, dtype=torch.float64)), (2184, tensor(-0.0350, dtype=torch.float64)), (2679, tensor(-0.0350, dtype=torch.float64)), (2800, tensor(-0.0350, dtype=torch.float64)), (1140, tensor(-0.0350, dtype=torch.float64)), (1095, tensor(-0.0350, dtype=torch.float64)), (134, tensor(-0.0350, dtype=torch.float64)), (286, tensor(-0.0349, dtype=torch.float64)), (3025, tensor(-0.0349, dtype=torch.float64)), (628, tensor(-0.0349, dtype=torch.float64)), (2192, tensor(-0.0349, dtype=torch.float64)), (612, tensor(-0.0349, dtype=torch.float64)), (1348, tensor(-0.0349, dtype=torch.float64)), (310, tensor(-0.0349, dtype=torch.float64)), (699, tensor(-0.0348, dtype=torch.float64)), (2469, tensor(-0.0348, dtype=torch.float64)), (2787, tensor(-0.0348, dtype=torch.float64)), (1036, tensor(-0.0347, dtype=torch.float64)), (2021, tensor(-0.0347, dtype=torch.float64)), (102, tensor(-0.0347, dtype=torch.float64)), (450, tensor(-0.0347, dtype=torch.float64)), (965, tensor(-0.0347, dtype=torch.float64)), (2266, tensor(-0.0347, dtype=torch.float64)), (429, tensor(-0.0346, dtype=torch.float64)), (2428, tensor(-0.0346, dtype=torch.float64)), (1794, tensor(-0.0346, dtype=torch.float64)), (2, tensor(-0.0345, dtype=torch.float64)), (428, tensor(-0.0345, dtype=torch.float64)), (782, tensor(-0.0345, dtype=torch.float64)), (587, tensor(-0.0345, dtype=torch.float64)), (1942, tensor(-0.0344, dtype=torch.float64)), (1190, tensor(-0.0344, dtype=torch.float64)), (2422, tensor(-0.0344, dtype=torch.float64)), (639, tensor(-0.0343, dtype=torch.float64)), (1145, tensor(-0.0343, dtype=torch.float64)), (1335, tensor(-0.0343, dtype=torch.float64)), (2314, tensor(-0.0343, dtype=torch.float64)), (2685, tensor(-0.0343, dtype=torch.float64)), (1234, tensor(-0.0343, dtype=torch.float64)), (528, tensor(-0.0343, dtype=torch.float64)), (3092, tensor(-0.0342, dtype=torch.float64)), (2985, tensor(-0.0342, dtype=torch.float64)), (2277, tensor(-0.0342, dtype=torch.float64)), (2687, tensor(-0.0341, dtype=torch.float64)), (3040, tensor(-0.0341, dtype=torch.float64)), (2655, tensor(-0.0341, dtype=torch.float64)), (1362, tensor(-0.0341, dtype=torch.float64)), (1754, tensor(-0.0341, dtype=torch.float64)), (3258, tensor(-0.0341, dtype=torch.float64)), (2913, tensor(-0.0341, dtype=torch.float64)), (1023, tensor(-0.0340, dtype=torch.float64)), (181, tensor(-0.0340, dtype=torch.float64)), (702, tensor(-0.0340, dtype=torch.float64)), (2419, tensor(-0.0339, dtype=torch.float64)), (355, tensor(-0.0339, dtype=torch.float64)), (2003, tensor(-0.0338, dtype=torch.float64)), (229, tensor(-0.0338, dtype=torch.float64)), (723, tensor(-0.0338, dtype=torch.float64)), (2208, tensor(-0.0338, dtype=torch.float64)), (2431, tensor(-0.0337, dtype=torch.float64)), (14, tensor(-0.0337, dtype=torch.float64)), (260, tensor(-0.0337, dtype=torch.float64)), (2825, tensor(-0.0337, dtype=torch.float64)), (1081, tensor(-0.0336, dtype=torch.float64)), (2631, tensor(-0.0336, dtype=torch.float64)), (3240, tensor(-0.0335, dtype=torch.float64)), (1288, tensor(-0.0335, dtype=torch.float64)), (1861, tensor(-0.0335, dtype=torch.float64)), (2496, tensor(-0.0335, dtype=torch.float64)), (2175, tensor(-0.0335, dtype=torch.float64)), (546, tensor(-0.0335, dtype=torch.float64)), (581, tensor(-0.0334, dtype=torch.float64)), (1116, tensor(-0.0334, dtype=torch.float64)), (2772, tensor(-0.0334, dtype=torch.float64)), (482, tensor(-0.0333, dtype=torch.float64)), (2373, tensor(-0.0333, dtype=torch.float64)), (2693, tensor(-0.0333, dtype=torch.float64)), (1107, tensor(-0.0333, dtype=torch.float64)), (1646, tensor(-0.0333, dtype=torch.float64)), (2502, tensor(-0.0333, dtype=torch.float64)), (1353, tensor(-0.0333, dtype=torch.float64)), (2565, tensor(-0.0332, dtype=torch.float64)), (498, tensor(-0.0332, dtype=torch.float64)), (1873, tensor(-0.0332, dtype=torch.float64)), (718, tensor(-0.0332, dtype=torch.float64)), (3292, tensor(-0.0332, dtype=torch.float64)), (1196, tensor(-0.0332, dtype=torch.float64)), (565, tensor(-0.0331, dtype=torch.float64)), (1523, tensor(-0.0331, dtype=torch.float64)), (173, tensor(-0.0330, dtype=torch.float64)), (531, tensor(-0.0329, dtype=torch.float64)), (1122, tensor(-0.0329, dtype=torch.float64)), (2681, tensor(-0.0329, dtype=torch.float64)), (2037, tensor(-0.0329, dtype=torch.float64)), (1202, tensor(-0.0329, dtype=torch.float64)), (177, tensor(-0.0329, dtype=torch.float64)), (1658, tensor(-0.0329, dtype=torch.float64)), (2504, tensor(-0.0328, dtype=torch.float64)), (43, tensor(-0.0328, dtype=torch.float64)), (2200, tensor(-0.0328, dtype=torch.float64)), (123, tensor(-0.0327, dtype=torch.float64)), (2038, tensor(-0.0327, dtype=torch.float64)), (2040, tensor(-0.0327, dtype=torch.float64)), (1089, tensor(-0.0325, dtype=torch.float64)), (465, tensor(-0.0325, dtype=torch.float64)), (1150, tensor(-0.0325, dtype=torch.float64)), (1996, tensor(-0.0325, dtype=torch.float64)), (1394, tensor(-0.0325, dtype=torch.float64)), (551, tensor(-0.0325, dtype=torch.float64)), (2463, tensor(-0.0325, dtype=torch.float64)), (432, tensor(-0.0325, dtype=torch.float64)), (679, tensor(-0.0324, dtype=torch.float64)), (2816, tensor(-0.0324, dtype=torch.float64)), (1853, tensor(-0.0324, dtype=torch.float64)), (1066, tensor(-0.0324, dtype=torch.float64)), (406, tensor(-0.0324, dtype=torch.float64)), (1899, tensor(-0.0323, dtype=torch.float64)), (2159, tensor(-0.0323, dtype=torch.float64)), (2919, tensor(-0.0323, dtype=torch.float64)), (337, tensor(-0.0322, dtype=torch.float64)), (1893, tensor(-0.0322, dtype=torch.float64)), (417, tensor(-0.0321, dtype=torch.float64)), (3263, tensor(-0.0321, dtype=torch.float64)), (309, tensor(-0.0321, dtype=torch.float64)), (2225, tensor(-0.0321, dtype=torch.float64)), (1008, tensor(-0.0321, dtype=torch.float64)), (1141, tensor(-0.0321, dtype=torch.float64)), (2205, tensor(-0.0320, dtype=torch.float64)), (2433, tensor(-0.0320, dtype=torch.float64)), (62, tensor(-0.0320, dtype=torch.float64)), (925, tensor(-0.0320, dtype=torch.float64)), (2748, tensor(-0.0319, dtype=torch.float64)), (1624, tensor(-0.0319, dtype=torch.float64)), (1845, tensor(-0.0319, dtype=torch.float64)), (2509, tensor(-0.0318, dtype=torch.float64)), (3004, tensor(-0.0318, dtype=torch.float64)), (2673, tensor(-0.0318, dtype=torch.float64)), (3102, tensor(-0.0318, dtype=torch.float64)), (85, tensor(-0.0318, dtype=torch.float64)), (2430, tensor(-0.0317, dtype=torch.float64)), (3217, tensor(-0.0317, dtype=torch.float64)), (867, tensor(-0.0316, dtype=torch.float64)), (35, tensor(-0.0316, dtype=torch.float64)), (1328, tensor(-0.0316, dtype=torch.float64)), (1364, tensor(-0.0315, dtype=torch.float64)), (279, tensor(-0.0315, dtype=torch.float64)), (2577, tensor(-0.0314, dtype=torch.float64)), (3320, tensor(-0.0314, dtype=torch.float64)), (824, tensor(-0.0314, dtype=torch.float64)), (2006, tensor(-0.0314, dtype=torch.float64)), (2085, tensor(-0.0314, dtype=torch.float64)), (236, tensor(-0.0313, dtype=torch.float64)), (2589, tensor(-0.0313, dtype=torch.float64)), (1100, tensor(-0.0313, dtype=torch.float64)), (972, tensor(-0.0312, dtype=torch.float64)), (2991, tensor(-0.0312, dtype=torch.float64)), (770, tensor(-0.0312, dtype=torch.float64)), (1806, tensor(-0.0311, dtype=torch.float64)), (2305, tensor(-0.0311, dtype=torch.float64)), (2728, tensor(-0.0311, dtype=torch.float64)), (33, tensor(-0.0310, dtype=torch.float64)), (1045, tensor(-0.0310, dtype=torch.float64)), (3246, tensor(-0.0310, dtype=torch.float64)), (2326, tensor(-0.0309, dtype=torch.float64)), (3000, tensor(-0.0309, dtype=torch.float64)), (919, tensor(-0.0309, dtype=torch.float64)), (2068, tensor(-0.0309, dtype=torch.float64)), (20, tensor(-0.0309, dtype=torch.float64)), (475, tensor(-0.0308, dtype=torch.float64)), (1249, tensor(-0.0308, dtype=torch.float64)), (2910, tensor(-0.0308, dtype=torch.float64)), (1076, tensor(-0.0308, dtype=torch.float64)), (2936, tensor(-0.0308, dtype=torch.float64)), (154, tensor(-0.0307, dtype=torch.float64)), (563, tensor(-0.0307, dtype=torch.float64)), (3195, tensor(-0.0307, dtype=torch.float64)), (440, tensor(-0.0307, dtype=torch.float64)), (2912, tensor(-0.0306, dtype=torch.float64)), (1542, tensor(-0.0306, dtype=torch.float64)), (1935, tensor(-0.0306, dtype=torch.float64)), (806, tensor(-0.0306, dtype=torch.float64)), (541, tensor(-0.0306, dtype=torch.float64)), (3161, tensor(-0.0306, dtype=torch.float64)), (1982, tensor(-0.0306, dtype=torch.float64)), (299, tensor(-0.0305, dtype=torch.float64)), (2233, tensor(-0.0304, dtype=torch.float64)), (1636, tensor(-0.0304, dtype=torch.float64)), (3074, tensor(-0.0304, dtype=torch.float64)), (547, tensor(-0.0304, dtype=torch.float64)), (744, tensor(-0.0304, dtype=torch.float64)), (2325, tensor(-0.0304, dtype=torch.float64)), (637, tensor(-0.0303, dtype=torch.float64)), (2883, tensor(-0.0303, dtype=torch.float64)), (3341, tensor(-0.0303, dtype=torch.float64)), (2008, tensor(-0.0303, dtype=torch.float64)), (3014, tensor(-0.0303, dtype=torch.float64)), (3150, tensor(-0.0303, dtype=torch.float64)), (1714, tensor(-0.0303, dtype=torch.float64)), (1216, tensor(-0.0302, dtype=torch.float64)), (496, tensor(-0.0302, dtype=torch.float64)), (885, tensor(-0.0301, dtype=torch.float64)), (697, tensor(-0.0301, dtype=torch.float64)), (657, tensor(-0.0300, dtype=torch.float64)), (2629, tensor(-0.0300, dtype=torch.float64)), (3261, tensor(-0.0300, dtype=torch.float64)), (3160, tensor(-0.0299, dtype=torch.float64)), (226, tensor(-0.0299, dtype=torch.float64)), (2542, tensor(-0.0298, dtype=torch.float64)), (2494, tensor(-0.0297, dtype=torch.float64)), (719, tensor(-0.0295, dtype=torch.float64)), (1271, tensor(-0.0295, dtype=torch.float64)), (1669, tensor(-0.0295, dtype=torch.float64)), (1374, tensor(-0.0295, dtype=torch.float64)), (1740, tensor(-0.0294, dtype=torch.float64)), (2083, tensor(-0.0294, dtype=torch.float64)), (523, tensor(-0.0293, dtype=torch.float64)), (2288, tensor(-0.0293, dtype=torch.float64)), (2355, tensor(-0.0293, dtype=torch.float64)), (2770, tensor(-0.0293, dtype=torch.float64)), (3079, tensor(-0.0293, dtype=torch.float64)), (2380, tensor(-0.0292, dtype=torch.float64)), (2552, tensor(-0.0292, dtype=torch.float64)), (189, tensor(-0.0292, dtype=torch.float64)), (144, tensor(-0.0292, dtype=torch.float64)), (354, tensor(-0.0291, dtype=torch.float64)), (2703, tensor(-0.0291, dtype=torch.float64)), (2614, tensor(-0.0291, dtype=torch.float64)), (2442, tensor(-0.0290, dtype=torch.float64)), (1339, tensor(-0.0290, dtype=torch.float64)), (2024, tensor(-0.0290, dtype=torch.float64)), (318, tensor(-0.0290, dtype=torch.float64)), (1569, tensor(-0.0290, dtype=torch.float64)), (1227, tensor(-0.0290, dtype=torch.float64)), (1500, tensor(-0.0290, dtype=torch.float64)), (167, tensor(-0.0289, dtype=torch.float64)), (1326, tensor(-0.0289, dtype=torch.float64)), (1037, tensor(-0.0289, dtype=torch.float64)), (2357, tensor(-0.0288, dtype=torch.float64)), (735, tensor(-0.0288, dtype=torch.float64)), (1544, tensor(-0.0288, dtype=torch.float64)), (48, tensor(-0.0288, dtype=torch.float64)), (1536, tensor(-0.0287, dtype=torch.float64)), (740, tensor(-0.0287, dtype=torch.float64)), (1816, tensor(-0.0286, dtype=torch.float64)), (2802, tensor(-0.0286, dtype=torch.float64)), (2476, tensor(-0.0285, dtype=torch.float64)), (1356, tensor(-0.0285, dtype=torch.float64)), (825, tensor(-0.0285, dtype=torch.float64)), (553, tensor(-0.0285, dtype=torch.float64)), (559, tensor(-0.0285, dtype=torch.float64)), (2510, tensor(-0.0285, dtype=torch.float64)), (1904, tensor(-0.0285, dtype=torch.float64)), (861, tensor(-0.0284, dtype=torch.float64)), (2131, tensor(-0.0283, dtype=torch.float64)), (25, tensor(-0.0283, dtype=torch.float64)), (3089, tensor(-0.0283, dtype=torch.float64)), (3081, tensor(-0.0282, dtype=torch.float64)), (3037, tensor(-0.0282, dtype=torch.float64)), (2835, tensor(-0.0281, dtype=torch.float64)), (1161, tensor(-0.0281, dtype=torch.float64)), (434, tensor(-0.0281, dtype=torch.float64)), (94, tensor(-0.0280, dtype=torch.float64)), (939, tensor(-0.0280, dtype=torch.float64)), (2791, tensor(-0.0280, dtype=torch.float64)), (2902, tensor(-0.0280, dtype=torch.float64)), (2482, tensor(-0.0280, dtype=torch.float64)), (1508, tensor(-0.0280, dtype=torch.float64)), (2715, tensor(-0.0279, dtype=torch.float64)), (2914, tensor(-0.0279, dtype=torch.float64)), (2111, tensor(-0.0278, dtype=torch.float64)), (1778, tensor(-0.0278, dtype=torch.float64)), (210, tensor(-0.0278, dtype=torch.float64)), (2704, tensor(-0.0278, dtype=torch.float64)), (2698, tensor(-0.0278, dtype=torch.float64)), (352, tensor(-0.0277, dtype=torch.float64)), (1857, tensor(-0.0277, dtype=torch.float64)), (2765, tensor(-0.0277, dtype=torch.float64)), (1612, tensor(-0.0277, dtype=torch.float64)), (2573, tensor(-0.0277, dtype=torch.float64)), (3281, tensor(-0.0277, dtype=torch.float64)), (2738, tensor(-0.0277, dtype=torch.float64)), (470, tensor(-0.0276, dtype=torch.float64)), (569, tensor(-0.0276, dtype=torch.float64)), (957, tensor(-0.0276, dtype=torch.float64)), (1710, tensor(-0.0276, dtype=torch.float64)), (1312, tensor(-0.0276, dtype=torch.float64)), (2122, tensor(-0.0275, dtype=torch.float64)), (787, tensor(-0.0275, dtype=torch.float64)), (2507, tensor(-0.0275, dtype=torch.float64)), (2979, tensor(-0.0274, dtype=torch.float64)), (3024, tensor(-0.0274, dtype=torch.float64)), (1539, tensor(-0.0274, dtype=torch.float64)), (2309, tensor(-0.0274, dtype=torch.float64)), (1522, tensor(-0.0273, dtype=torch.float64)), (3241, tensor(-0.0273, dtype=torch.float64)), (2532, tensor(-0.0273, dtype=torch.float64)), (254, tensor(-0.0272, dtype=torch.float64)), (2716, tensor(-0.0272, dtype=torch.float64)), (2541, tensor(-0.0271, dtype=torch.float64)), (1898, tensor(-0.0271, dtype=torch.float64)), (2090, tensor(-0.0271, dtype=torch.float64)), (2598, tensor(-0.0270, dtype=torch.float64)), (2536, tensor(-0.0270, dtype=torch.float64)), (2105, tensor(-0.0270, dtype=torch.float64)), (2047, tensor(-0.0270, dtype=torch.float64)), (1927, tensor(-0.0270, dtype=torch.float64)), (814, tensor(-0.0269, dtype=torch.float64)), (1549, tensor(-0.0268, dtype=torch.float64)), (633, tensor(-0.0268, dtype=torch.float64)), (2412, tensor(-0.0267, dtype=torch.float64)), (2174, tensor(-0.0267, dtype=torch.float64)), (2720, tensor(-0.0267, dtype=torch.float64)), (975, tensor(-0.0267, dtype=torch.float64)), (2607, tensor(-0.0266, dtype=torch.float64)), (312, tensor(-0.0265, dtype=torch.float64)), (1727, tensor(-0.0265, dtype=torch.float64)), (2623, tensor(-0.0265, dtype=torch.float64)), (773, tensor(-0.0264, dtype=torch.float64)), (681, tensor(-0.0264, dtype=torch.float64)), (205, tensor(-0.0264, dtype=torch.float64)), (3249, tensor(-0.0264, dtype=torch.float64)), (1580, tensor(-0.0263, dtype=torch.float64)), (2119, tensor(-0.0263, dtype=torch.float64)), (2751, tensor(-0.0263, dtype=torch.float64)), (3327, tensor(-0.0262, dtype=torch.float64)), (3171, tensor(-0.0261, dtype=torch.float64)), (746, tensor(-0.0261, dtype=torch.float64)), (1659, tensor(-0.0261, dtype=torch.float64)), (884, tensor(-0.0261, dtype=torch.float64)), (2551, tensor(-0.0260, dtype=torch.float64)), (3338, tensor(-0.0259, dtype=torch.float64)), (724, tensor(-0.0259, dtype=torch.float64)), (1204, tensor(-0.0259, dtype=torch.float64)), (2189, tensor(-0.0259, dtype=torch.float64)), (2889, tensor(-0.0258, dtype=torch.float64)), (2279, tensor(-0.0258, dtype=torch.float64)), (2258, tensor(-0.0258, dtype=torch.float64)), (1891, tensor(-0.0258, dtype=torch.float64)), (2971, tensor(-0.0257, dtype=torch.float64)), (31, tensor(-0.0257, dtype=torch.float64)), (3282, tensor(-0.0256, dtype=torch.float64)), (1351, tensor(-0.0256, dtype=torch.float64)), (1654, tensor(-0.0256, dtype=torch.float64)), (557, tensor(-0.0256, dtype=torch.float64)), (2441, tensor(-0.0254, dtype=torch.float64)), (2286, tensor(-0.0254, dtype=torch.float64)), (188, tensor(-0.0254, dtype=torch.float64)), (190, tensor(-0.0254, dtype=torch.float64)), (88, tensor(-0.0253, dtype=torch.float64)), (2185, tensor(-0.0253, dtype=torch.float64)), (1460, tensor(-0.0253, dtype=torch.float64)), (2868, tensor(-0.0253, dtype=torch.float64)), (1126, tensor(-0.0252, dtype=torch.float64)), (1258, tensor(-0.0252, dtype=torch.float64)), (1073, tensor(-0.0252, dtype=torch.float64)), (1541, tensor(-0.0251, dtype=torch.float64)), (2676, tensor(-0.0251, dtype=torch.float64)), (1068, tensor(-0.0251, dtype=torch.float64)), (3183, tensor(-0.0250, dtype=torch.float64)), (2781, tensor(-0.0250, dtype=torch.float64)), (1489, tensor(-0.0249, dtype=torch.float64)), (18, tensor(-0.0249, dtype=torch.float64)), (2795, tensor(-0.0248, dtype=torch.float64)), (3143, tensor(-0.0248, dtype=torch.float64)), (1625, tensor(-0.0248, dtype=torch.float64)), (1694, tensor(-0.0248, dtype=torch.float64)), (943, tensor(-0.0247, dtype=torch.float64)), (2879, tensor(-0.0247, dtype=torch.float64)), (769, tensor(-0.0247, dtype=torch.float64)), (568, tensor(-0.0247, dtype=torch.float64)), (2654, tensor(-0.0247, dtype=torch.float64)), (638, tensor(-0.0247, dtype=torch.float64)), (1452, tensor(-0.0247, dtype=torch.float64)), (2023, tensor(-0.0246, dtype=torch.float64)), (2256, tensor(-0.0246, dtype=torch.float64)), (2069, tensor(-0.0246, dtype=torch.float64)), (1311, tensor(-0.0246, dtype=torch.float64)), (2095, tensor(-0.0246, dtype=torch.float64)), (1049, tensor(-0.0246, dtype=torch.float64)), (40, tensor(-0.0245, dtype=torch.float64)), (1157, tensor(-0.0245, dtype=torch.float64)), (2878, tensor(-0.0245, dtype=torch.float64)), (3326, tensor(-0.0245, dtype=torch.float64)), (351, tensor(-0.0245, dtype=torch.float64)), (3144, tensor(-0.0244, dtype=torch.float64)), (2797, tensor(-0.0244, dtype=torch.float64)), (700, tensor(-0.0244, dtype=torch.float64)), (1559, tensor(-0.0244, dtype=torch.float64)), (2031, tensor(-0.0244, dtype=torch.float64)), (1532, tensor(-0.0243, dtype=torch.float64)), (1044, tensor(-0.0243, dtype=torch.float64)), (714, tensor(-0.0242, dtype=torch.float64)), (2371, tensor(-0.0242, dtype=torch.float64)), (2471, tensor(-0.0242, dtype=torch.float64)), (2505, tensor(-0.0242, dtype=torch.float64)), (1286, tensor(-0.0241, dtype=torch.float64)), (2709, tensor(-0.0241, dtype=torch.float64)), (836, tensor(-0.0241, dtype=torch.float64)), (1823, tensor(-0.0240, dtype=torch.float64)), (1153, tensor(-0.0240, dtype=torch.float64)), (1012, tensor(-0.0240, dtype=torch.float64)), (2924, tensor(-0.0240, dtype=torch.float64)), (1266, tensor(-0.0240, dtype=torch.float64)), (892, tensor(-0.0240, dtype=torch.float64)), (1059, tensor(-0.0240, dtype=torch.float64)), (2002, tensor(-0.0239, dtype=torch.float64)), (2366, tensor(-0.0238, dtype=torch.float64)), (365, tensor(-0.0238, dtype=torch.float64)), (3298, tensor(-0.0238, dtype=torch.float64)), (1401, tensor(-0.0237, dtype=torch.float64)), (2081, tensor(-0.0237, dtype=torch.float64)), (483, tensor(-0.0237, dtype=torch.float64)), (526, tensor(-0.0237, dtype=torch.float64)), (1921, tensor(-0.0235, dtype=torch.float64)), (45, tensor(-0.0235, dtype=torch.float64)), (1135, tensor(-0.0234, dtype=torch.float64)), (1424, tensor(-0.0233, dtype=torch.float64)), (3332, tensor(-0.0233, dtype=torch.float64)), (3052, tensor(-0.0233, dtype=torch.float64)), (3251, tensor(-0.0233, dtype=torch.float64)), (2801, tensor(-0.0233, dtype=torch.float64)), (2769, tensor(-0.0232, dtype=torch.float64)), (1427, tensor(-0.0232, dtype=torch.float64)), (3021, tensor(-0.0232, dtype=torch.float64)), (1916, tensor(-0.0231, dtype=torch.float64)), (2400, tensor(-0.0231, dtype=torch.float64)), (2186, tensor(-0.0231, dtype=torch.float64)), (2168, tensor(-0.0230, dtype=torch.float64)), (1341, tensor(-0.0230, dtype=torch.float64)), (2403, tensor(-0.0230, dtype=torch.float64)), (1929, tensor(-0.0229, dtype=torch.float64)), (3147, tensor(-0.0228, dtype=torch.float64)), (3129, tensor(-0.0228, dtype=torch.float64)), (27, tensor(-0.0228, dtype=torch.float64)), (561, tensor(-0.0228, dtype=torch.float64)), (1826, tensor(-0.0226, dtype=torch.float64)), (2755, tensor(-0.0226, dtype=torch.float64)), (3001, tensor(-0.0225, dtype=torch.float64)), (1550, tensor(-0.0224, dtype=torch.float64)), (1371, tensor(-0.0224, dtype=torch.float64)), (3057, tensor(-0.0224, dtype=torch.float64)), (1482, tensor(-0.0223, dtype=torch.float64)), (2493, tensor(-0.0222, dtype=torch.float64)), (2539, tensor(-0.0222, dtype=torch.float64)), (1194, tensor(-0.0220, dtype=torch.float64)), (2961, tensor(-0.0220, dtype=torch.float64)), (1197, tensor(-0.0219, dtype=torch.float64)), (47, tensor(-0.0219, dtype=torch.float64)), (2146, tensor(-0.0219, dtype=torch.float64)), (3235, tensor(-0.0219, dtype=torch.float64)), (973, tensor(-0.0218, dtype=torch.float64)), (1681, tensor(-0.0218, dtype=torch.float64)), (137, tensor(-0.0218, dtype=torch.float64)), (2561, tensor(-0.0218, dtype=torch.float64)), (1796, tensor(-0.0217, dtype=torch.float64)), (2292, tensor(-0.0217, dtype=torch.float64)), (3165, tensor(-0.0216, dtype=torch.float64)), (1422, tensor(-0.0216, dtype=torch.float64)), (2929, tensor(-0.0216, dtype=torch.float64)), (767, tensor(-0.0216, dtype=torch.float64)), (247, tensor(-0.0216, dtype=torch.float64)), (2358, tensor(-0.0214, dtype=torch.float64)), (3095, tensor(-0.0214, dtype=torch.float64)), (2948, tensor(-0.0214, dtype=torch.float64)), (1327, tensor(-0.0214, dtype=torch.float64)), (1149, tensor(-0.0212, dtype=torch.float64)), (558, tensor(-0.0212, dtype=torch.float64)), (1098, tensor(-0.0211, dtype=torch.float64)), (1128, tensor(-0.0211, dtype=torch.float64)), (1302, tensor(-0.0211, dtype=torch.float64)), (3229, tensor(-0.0211, dtype=torch.float64)), (1967, tensor(-0.0211, dtype=torch.float64)), (321, tensor(-0.0211, dtype=torch.float64)), (2182, tensor(-0.0211, dtype=torch.float64)), (1413, tensor(-0.0210, dtype=torch.float64)), (431, tensor(-0.0210, dtype=torch.float64)), (1615, tensor(-0.0210, dtype=torch.float64)), (38, tensor(-0.0210, dtype=torch.float64)), (3109, tensor(-0.0210, dtype=torch.float64)), (491, tensor(-0.0210, dtype=torch.float64)), (3020, tensor(-0.0210, dtype=torch.float64)), (401, tensor(-0.0209, dtype=torch.float64)), (2112, tensor(-0.0208, dtype=torch.float64)), (1653, tensor(-0.0207, dtype=torch.float64)), (2296, tensor(-0.0207, dtype=torch.float64)), (2450, tensor(-0.0206, dtype=torch.float64)), (1591, tensor(-0.0205, dtype=torch.float64)), (223, tensor(-0.0205, dtype=torch.float64)), (3365, tensor(-0.0205, dtype=torch.float64)), (632, tensor(-0.0205, dtype=torch.float64)), (1469, tensor(-0.0204, dtype=torch.float64)), (2850, tensor(-0.0204, dtype=torch.float64)), (2284, tensor(-0.0204, dtype=torch.float64)), (2823, tensor(-0.0204, dtype=torch.float64)), (320, tensor(-0.0204, dtype=torch.float64)), (669, tensor(-0.0203, dtype=torch.float64)), (2351, tensor(-0.0203, dtype=torch.float64)), (3210, tensor(-0.0203, dtype=torch.float64)), (2035, tensor(-0.0202, dtype=torch.float64)), (160, tensor(-0.0202, dtype=torch.float64)), (605, tensor(-0.0201, dtype=torch.float64)), (2498, tensor(-0.0201, dtype=torch.float64)), (1221, tensor(-0.0201, dtype=torch.float64)), (2987, tensor(-0.0200, dtype=torch.float64)), (1305, tensor(-0.0200, dtype=torch.float64)), (1261, tensor(-0.0199, dtype=torch.float64)), (3260, tensor(-0.0199, dtype=torch.float64)), (505, tensor(-0.0199, dtype=torch.float64)), (619, tensor(-0.0198, dtype=torch.float64)), (2832, tensor(-0.0197, dtype=torch.float64)), (1119, tensor(-0.0197, dtype=torch.float64)), (471, tensor(-0.0197, dtype=torch.float64)), (97, tensor(-0.0196, dtype=torch.float64)), (2354, tensor(-0.0196, dtype=torch.float64)), (2207, tensor(-0.0196, dtype=torch.float64)), (2634, tensor(-0.0196, dtype=torch.float64)), (1537, tensor(-0.0195, dtype=torch.float64)), (997, tensor(-0.0195, dtype=torch.float64)), (1644, tensor(-0.0194, dtype=torch.float64)), (607, tensor(-0.0194, dtype=torch.float64)), (2336, tensor(-0.0194, dtype=torch.float64)), (3173, tensor(-0.0194, dtype=torch.float64)), (2627, tensor(-0.0194, dtype=torch.float64)), (3133, tensor(-0.0193, dtype=torch.float64)), (1172, tensor(-0.0193, dtype=torch.float64)), (2162, tensor(-0.0193, dtype=torch.float64)), (2438, tensor(-0.0193, dtype=torch.float64)), (1994, tensor(-0.0193, dtype=torch.float64)), (466, tensor(-0.0193, dtype=torch.float64)), (2789, tensor(-0.0193, dtype=torch.float64)), (2052, tensor(-0.0192, dtype=torch.float64)), (694, tensor(-0.0191, dtype=torch.float64)), (658, tensor(-0.0191, dtype=torch.float64)), (2813, tensor(-0.0190, dtype=torch.float64)), (2572, tensor(-0.0190, dtype=torch.float64)), (39, tensor(-0.0190, dtype=torch.float64)), (1555, tensor(-0.0189, dtype=torch.float64)), (2630, tensor(-0.0189, dtype=torch.float64)), (1224, tensor(-0.0189, dtype=torch.float64)), (2141, tensor(-0.0189, dtype=torch.float64)), (3126, tensor(-0.0189, dtype=torch.float64)), (2410, tensor(-0.0188, dtype=torch.float64)), (1429, tensor(-0.0187, dtype=torch.float64)), (570, tensor(-0.0186, dtype=torch.float64)), (2864, tensor(-0.0185, dtype=torch.float64)), (730, tensor(-0.0184, dtype=torch.float64)), (3267, tensor(-0.0184, dtype=torch.float64)), (3236, tensor(-0.0184, dtype=torch.float64)), (2585, tensor(-0.0184, dtype=torch.float64)), (2291, tensor(-0.0183, dtype=torch.float64)), (673, tensor(-0.0183, dtype=torch.float64)), (187, tensor(-0.0183, dtype=torch.float64)), (404, tensor(-0.0183, dtype=torch.float64)), (2950, tensor(-0.0183, dtype=torch.float64)), (1250, tensor(-0.0183, dtype=torch.float64)), (664, tensor(-0.0182, dtype=torch.float64)), (1925, tensor(-0.0182, dtype=torch.float64)), (2179, tensor(-0.0182, dtype=torch.float64)), (2759, tensor(-0.0182, dtype=torch.float64)), (364, tensor(-0.0182, dtype=torch.float64)), (1817, tensor(-0.0182, dtype=torch.float64)), (3252, tensor(-0.0181, dtype=torch.float64)), (1405, tensor(-0.0181, dtype=torch.float64)), (2155, tensor(-0.0181, dtype=torch.float64)), (1940, tensor(-0.0180, dtype=torch.float64)), (2360, tensor(-0.0180, dtype=torch.float64)), (37, tensor(-0.0180, dtype=torch.float64)), (1602, tensor(-0.0180, dtype=torch.float64)), (1490, tensor(-0.0179, dtype=torch.float64)), (1846, tensor(-0.0179, dtype=torch.float64)), (1274, tensor(-0.0178, dtype=torch.float64)), (1042, tensor(-0.0178, dtype=torch.float64)), (1657, tensor(-0.0178, dtype=torch.float64)), (1860, tensor(-0.0178, dtype=torch.float64)), (2544, tensor(-0.0178, dtype=torch.float64)), (251, tensor(-0.0178, dtype=torch.float64)), (759, tensor(-0.0177, dtype=torch.float64)), (2812, tensor(-0.0177, dtype=torch.float64)), (1096, tensor(-0.0176, dtype=torch.float64)), (871, tensor(-0.0176, dtype=torch.float64)), (3003, tensor(-0.0176, dtype=torch.float64)), (2194, tensor(-0.0176, dtype=torch.float64)), (367, tensor(-0.0174, dtype=torch.float64)), (473, tensor(-0.0174, dtype=torch.float64)), (827, tensor(-0.0174, dtype=torch.float64)), (1237, tensor(-0.0173, dtype=torch.float64)), (2137, tensor(-0.0173, dtype=torch.float64)), (1763, tensor(-0.0173, dtype=torch.float64)), (2135, tensor(-0.0172, dtype=torch.float64)), (2341, tensor(-0.0172, dtype=torch.float64)), (958, tensor(-0.0172, dtype=torch.float64)), (1094, tensor(-0.0171, dtype=torch.float64)), (220, tensor(-0.0170, dtype=torch.float64)), (1645, tensor(-0.0170, dtype=torch.float64)), (1241, tensor(-0.0170, dtype=torch.float64)), (3088, tensor(-0.0170, dtype=torch.float64)), (1322, tensor(-0.0169, dtype=torch.float64)), (3108, tensor(-0.0169, dtype=torch.float64)), (1121, tensor(-0.0168, dtype=torch.float64)), (1254, tensor(-0.0167, dtype=torch.float64)), (645, tensor(-0.0167, dtype=torch.float64)), (1744, tensor(-0.0166, dtype=torch.float64)), (3202, tensor(-0.0166, dtype=torch.float64)), (630, tensor(-0.0166, dtype=torch.float64)), (1900, tensor(-0.0165, dtype=torch.float64)), (2852, tensor(-0.0164, dtype=torch.float64)), (1002, tensor(-0.0164, dtype=torch.float64)), (2906, tensor(-0.0164, dtype=torch.float64)), (1939, tensor(-0.0164, dtype=torch.float64)), (2737, tensor(-0.0162, dtype=torch.float64)), (2515, tensor(-0.0162, dtype=torch.float64)), (1749, tensor(-0.0161, dtype=torch.float64)), (166, tensor(-0.0160, dtype=torch.float64)), (2717, tensor(-0.0160, dtype=torch.float64)), (3013, tensor(-0.0160, dtype=torch.float64)), (1993, tensor(-0.0159, dtype=torch.float64)), (1015, tensor(-0.0159, dtype=torch.float64)), (3120, tensor(-0.0159, dtype=torch.float64)), (2640, tensor(-0.0158, dtype=torch.float64)), (2042, tensor(-0.0158, dtype=torch.float64)), (2401, tensor(-0.0158, dtype=torch.float64)), (1113, tensor(-0.0158, dtype=torch.float64)), (3308, tensor(-0.0156, dtype=torch.float64)), (1801, tensor(-0.0156, dtype=torch.float64)), (472, tensor(-0.0156, dtype=torch.float64)), (2886, tensor(-0.0156, dtype=torch.float64)), (1642, tensor(-0.0155, dtype=torch.float64)), (1527, tensor(-0.0155, dtype=torch.float64)), (2127, tensor(-0.0155, dtype=torch.float64)), (1731, tensor(-0.0155, dtype=torch.float64)), (2215, tensor(-0.0155, dtype=torch.float64)), (2150, tensor(-0.0155, dtype=torch.float64)), (2071, tensor(-0.0155, dtype=torch.float64)), (2753, tensor(-0.0154, dtype=torch.float64)), (435, tensor(-0.0154, dtype=torch.float64)), (1493, tensor(-0.0154, dtype=torch.float64)), (1773, tensor(-0.0153, dtype=torch.float64)), (2009, tensor(-0.0153, dtype=torch.float64)), (866, tensor(-0.0153, dtype=torch.float64)), (1077, tensor(-0.0153, dtype=torch.float64)), (3064, tensor(-0.0153, dtype=torch.float64)), (962, tensor(-0.0153, dtype=torch.float64)), (421, tensor(-0.0152, dtype=torch.float64)), (703, tensor(-0.0152, dtype=torch.float64)), (1337, tensor(-0.0152, dtype=torch.float64)), (2730, tensor(-0.0152, dtype=torch.float64)), (2487, tensor(-0.0151, dtype=torch.float64)), (705, tensor(-0.0151, dtype=torch.float64)), (1608, tensor(-0.0151, dtype=torch.float64)), (2568, tensor(-0.0151, dtype=torch.float64)), (1736, tensor(-0.0151, dtype=torch.float64)), (2925, tensor(-0.0151, dtype=torch.float64)), (682, tensor(-0.0150, dtype=torch.float64)), (588, tensor(-0.0150, dtype=torch.float64)), (1062, tensor(-0.0150, dtype=torch.float64)), (855, tensor(-0.0149, dtype=torch.float64)), (3311, tensor(-0.0148, dtype=torch.float64)), (183, tensor(-0.0148, dtype=torch.float64)), (3111, tensor(-0.0148, dtype=torch.float64)), (2319, tensor(-0.0148, dtype=torch.float64)), (2320, tensor(-0.0147, dtype=torch.float64)), (2619, tensor(-0.0147, dtype=torch.float64)), (3223, tensor(-0.0147, dtype=torch.float64)), (2571, tensor(-0.0147, dtype=torch.float64)), (654, tensor(-0.0147, dtype=torch.float64)), (2411, tensor(-0.0146, dtype=torch.float64)), (1307, tensor(-0.0146, dtype=torch.float64)), (2076, tensor(-0.0146, dtype=torch.float64)), (1866, tensor(-0.0145, dtype=torch.float64)), (3328, tensor(-0.0145, dtype=torch.float64)), (2592, tensor(-0.0145, dtype=torch.float64)), (2046, tensor(-0.0145, dtype=torch.float64)), (870, tensor(-0.0144, dtype=torch.float64)), (1277, tensor(-0.0144, dtype=torch.float64)), (2222, tensor(-0.0143, dtype=torch.float64)), (1818, tensor(-0.0143, dtype=torch.float64)), (1567, tensor(-0.0143, dtype=torch.float64)), (2070, tensor(-0.0143, dtype=torch.float64)), (2828, tensor(-0.0142, dtype=torch.float64)), (1837, tensor(-0.0142, dtype=torch.float64)), (2364, tensor(-0.0142, dtype=torch.float64)), (1092, tensor(-0.0141, dtype=torch.float64)), (1156, tensor(-0.0140, dtype=torch.float64)), (2163, tensor(-0.0139, dtype=torch.float64)), (3042, tensor(-0.0139, dtype=torch.float64)), (3303, tensor(-0.0139, dtype=torch.float64)), (1879, tensor(-0.0139, dtype=torch.float64)), (1436, tensor(-0.0139, dtype=torch.float64)), (3255, tensor(-0.0137, dtype=torch.float64)), (1906, tensor(-0.0137, dtype=torch.float64)), (3054, tensor(-0.0137, dtype=torch.float64)), (2674, tensor(-0.0137, dtype=torch.float64)), (1605, tensor(-0.0137, dtype=torch.float64)), (2672, tensor(-0.0136, dtype=torch.float64)), (1619, tensor(-0.0136, dtype=torch.float64)), (1463, tensor(-0.0136, dtype=torch.float64)), (2917, tensor(-0.0136, dtype=torch.float64)), (1, tensor(-0.0136, dtype=torch.float64)), (477, tensor(-0.0135, dtype=torch.float64)), (449, tensor(-0.0135, dtype=torch.float64)), (426, tensor(-0.0135, dtype=torch.float64)), (2094, tensor(-0.0135, dtype=torch.float64)), (913, tensor(-0.0134, dtype=torch.float64)), (2840, tensor(-0.0134, dtype=torch.float64)), (2977, tensor(-0.0134, dtype=torch.float64)), (2238, tensor(-0.0134, dtype=torch.float64)), (661, tensor(-0.0134, dtype=torch.float64)), (3148, tensor(-0.0133, dtype=torch.float64)), (2521, tensor(-0.0133, dtype=torch.float64)), (583, tensor(-0.0132, dtype=torch.float64)), (46, tensor(-0.0132, dtype=torch.float64)), (2873, tensor(-0.0132, dtype=torch.float64)), (2601, tensor(-0.0131, dtype=torch.float64)), (2439, tensor(-0.0131, dtype=torch.float64)), (1376, tensor(-0.0131, dtype=torch.float64)), (427, tensor(-0.0131, dtype=torch.float64)), (1024, tensor(-0.0130, dtype=torch.float64)), (3199, tensor(-0.0130, dtype=torch.float64)), (61, tensor(-0.0130, dtype=torch.float64)), (2229, tensor(-0.0130, dtype=torch.float64)), (2983, tensor(-0.0130, dtype=torch.float64)), (2803, tensor(-0.0130, dtype=torch.float64)), (99, tensor(-0.0130, dtype=torch.float64)), (1622, tensor(-0.0129, dtype=torch.float64)), (1881, tensor(-0.0129, dtype=torch.float64)), (2725, tensor(-0.0129, dtype=torch.float64)), (1171, tensor(-0.0128, dtype=torch.float64)), (2492, tensor(-0.0128, dtype=torch.float64)), (201, tensor(-0.0128, dtype=torch.float64)), (3055, tensor(-0.0127, dtype=torch.float64)), (711, tensor(-0.0127, dtype=torch.float64)), (165, tensor(-0.0126, dtype=torch.float64)), (2374, tensor(-0.0126, dtype=torch.float64)), (1180, tensor(-0.0125, dtype=torch.float64)), (3315, tensor(-0.0125, dtype=torch.float64)), (1399, tensor(-0.0125, dtype=torch.float64)), (1964, tensor(-0.0125, dtype=torch.float64)), (1200, tensor(-0.0124, dtype=torch.float64)), (562, tensor(-0.0124, dtype=torch.float64)), (93, tensor(-0.0124, dtype=torch.float64)), (1236, tensor(-0.0124, dtype=torch.float64)), (986, tensor(-0.0124, dtype=torch.float64)), (443, tensor(-0.0123, dtype=torch.float64)), (2538, tensor(-0.0122, dtype=torch.float64)), (184, tensor(-0.0122, dtype=torch.float64)), (7, tensor(-0.0121, dtype=torch.float64)), (1333, tensor(-0.0121, dtype=torch.float64)), (2044, tensor(-0.0120, dtype=torch.float64)), (1304, tensor(-0.0119, dtype=torch.float64)), (716, tensor(-0.0119, dtype=torch.float64)), (221, tensor(-0.0119, dtype=torch.float64)), (1222, tensor(-0.0119, dtype=torch.float64)), (686, tensor(-0.0119, dtype=torch.float64)), (249, tensor(-0.0118, dtype=torch.float64)), (2425, tensor(-0.0118, dtype=torch.float64)), (3194, tensor(-0.0117, dtype=torch.float64)), (1265, tensor(-0.0116, dtype=torch.float64)), (2604, tensor(-0.0116, dtype=torch.float64)), (1151, tensor(-0.0116, dtype=torch.float64)), (231, tensor(-0.0115, dtype=torch.float64)), (1830, tensor(-0.0114, dtype=torch.float64)), (2786, tensor(-0.0114, dtype=torch.float64)), (1291, tensor(-0.0114, dtype=torch.float64)), (749, tensor(-0.0114, dtype=torch.float64)), (1988, tensor(-0.0113, dtype=torch.float64)), (1585, tensor(-0.0112, dtype=torch.float64)), (2303, tensor(-0.0111, dtype=torch.float64)), (1434, tensor(-0.0111, dtype=torch.float64)), (3176, tensor(-0.0111, dtype=torch.float64)), (2485, tensor(-0.0111, dtype=torch.float64)), (1841, tensor(-0.0110, dtype=torch.float64)), (1918, tensor(-0.0110, dtype=torch.float64)), (3197, tensor(-0.0110, dtype=torch.float64)), (3221, tensor(-0.0110, dtype=torch.float64)), (1598, tensor(-0.0110, dtype=torch.float64)), (1278, tensor(-0.0109, dtype=torch.float64)), (3082, tensor(-0.0108, dtype=torch.float64)), (3071, tensor(-0.0108, dtype=torch.float64)), (817, tensor(-0.0107, dtype=torch.float64)), (214, tensor(-0.0107, dtype=torch.float64)), (843, tensor(-0.0107, dtype=torch.float64)), (2302, tensor(-0.0107, dtype=torch.float64)), (1709, tensor(-0.0106, dtype=torch.float64)), (3324, tensor(-0.0106, dtype=torch.float64)), (791, tensor(-0.0106, dtype=torch.float64)), (2209, tensor(-0.0106, dtype=torch.float64)), (2370, tensor(-0.0106, dtype=torch.float64)), (3214, tensor(-0.0106, dtype=torch.float64)), (1187, tensor(-0.0106, dtype=torch.float64)), (501, tensor(-0.0105, dtype=torch.float64)), (2063, tensor(-0.0104, dtype=torch.float64)), (2836, tensor(-0.0103, dtype=torch.float64)), (2511, tensor(-0.0103, dtype=torch.float64)), (2880, tensor(-0.0103, dtype=torch.float64)), (1702, tensor(-0.0103, dtype=torch.float64)), (994, tensor(-0.0102, dtype=torch.float64)), (3309, tensor(-0.0102, dtype=torch.float64)), (1342, tensor(-0.0102, dtype=torch.float64)), (51, tensor(-0.0102, dtype=torch.float64)), (671, tensor(-0.0101, dtype=torch.float64)), (2328, tensor(-0.0100, dtype=torch.float64)), (290, tensor(-0.0099, dtype=torch.float64)), (2298, tensor(-0.0099, dtype=torch.float64)), (1448, tensor(-0.0098, dtype=torch.float64)), (2020, tensor(-0.0098, dtype=torch.float64)), (324, tensor(-0.0098, dtype=torch.float64)), (2012, tensor(-0.0098, dtype=torch.float64)), (2268, tensor(-0.0097, dtype=torch.float64)), (2783, tensor(-0.0097, dtype=torch.float64)), (2888, tensor(-0.0096, dtype=torch.float64)), (298, tensor(-0.0096, dtype=torch.float64)), (1747, tensor(-0.0096, dtype=torch.float64)), (3130, tensor(-0.0096, dtype=torch.float64)), (2945, tensor(-0.0095, dtype=torch.float64)), (1595, tensor(-0.0095, dtype=torch.float64)), (302, tensor(-0.0095, dtype=torch.float64)), (2556, tensor(-0.0095, dtype=torch.float64)), (1270, tensor(-0.0095, dtype=torch.float64)), (3154, tensor(-0.0095, dtype=torch.float64)), (211, tensor(-0.0094, dtype=torch.float64)), (1048, tensor(-0.0094, dtype=torch.float64)), (3277, tensor(-0.0094, dtype=torch.float64)), (1869, tensor(-0.0094, dtype=torch.float64)), (3335, tensor(-0.0093, dtype=torch.float64)), (793, tensor(-0.0093, dtype=torch.float64)), (3070, tensor(-0.0093, dtype=torch.float64)), (32, tensor(-0.0093, dtype=torch.float64)), (2054, tensor(-0.0093, dtype=torch.float64)), (2882, tensor(-0.0093, dtype=torch.float64)), (3115, tensor(-0.0093, dtype=torch.float64)), (821, tensor(-0.0093, dtype=torch.float64)), (803, tensor(-0.0092, dtype=torch.float64)), (2642, tensor(-0.0092, dtype=torch.float64)), (1911, tensor(-0.0092, dtype=torch.float64)), (1431, tensor(-0.0092, dtype=torch.float64)), (3224, tensor(-0.0092, dtype=torch.float64)), (2862, tensor(-0.0091, dtype=torch.float64)), (3230, tensor(-0.0090, dtype=torch.float64)), (347, tensor(-0.0090, dtype=torch.float64)), (2116, tensor(-0.0090, dtype=torch.float64)), (1264, tensor(-0.0089, dtype=torch.float64)), (3061, tensor(-0.0088, dtype=torch.float64)), (87, tensor(-0.0088, dtype=torch.float64)), (1557, tensor(-0.0088, dtype=torch.float64)), (3112, tensor(-0.0088, dtype=torch.float64)), (2814, tensor(-0.0088, dtype=torch.float64)), (2714, tensor(-0.0086, dtype=torch.float64)), (911, tensor(-0.0086, dtype=torch.float64)), (122, tensor(-0.0086, dtype=torch.float64)), (3008, tensor(-0.0085, dtype=torch.float64)), (1284, tensor(-0.0085, dtype=torch.float64)), (1318, tensor(-0.0085, dtype=torch.float64)), (1091, tensor(-0.0085, dtype=torch.float64)), (468, tensor(-0.0085, dtype=torch.float64)), (886, tensor(-0.0085, dtype=torch.float64)), (815, tensor(-0.0085, dtype=torch.float64)), (2308, tensor(-0.0085, dtype=torch.float64)), (395, tensor(-0.0085, dtype=torch.float64)), (1821, tensor(-0.0084, dtype=torch.float64)), (3164, tensor(-0.0084, dtype=torch.float64)), (1099, tensor(-0.0084, dtype=torch.float64)), (3266, tensor(-0.0083, dtype=torch.float64)), (3245, tensor(-0.0083, dtype=torch.float64)), (3018, tensor(-0.0082, dtype=torch.float64)), (198, tensor(-0.0082, dtype=torch.float64)), (574, tensor(-0.0082, dtype=torch.float64)), (646, tensor(-0.0081, dtype=torch.float64)), (2624, tensor(-0.0081, dtype=torch.float64)), (422, tensor(-0.0081, dtype=torch.float64)), (3310, tensor(-0.0081, dtype=torch.float64)), (2651, tensor(-0.0081, dtype=torch.float64)), (2027, tensor(-0.0080, dtype=torch.float64)), (1529, tensor(-0.0080, dtype=torch.float64)), (1594, tensor(-0.0080, dtype=torch.float64)), (983, tensor(-0.0080, dtype=torch.float64)), (469, tensor(-0.0079, dtype=torch.float64)), (2986, tensor(-0.0079, dtype=torch.float64)), (80, tensor(-0.0079, dtype=torch.float64)), (935, tensor(-0.0079, dtype=torch.float64)), (666, tensor(-0.0078, dtype=torch.float64)), (981, tensor(-0.0078, dtype=torch.float64)), (200, tensor(-0.0078, dtype=torch.float64)), (2458, tensor(-0.0078, dtype=torch.float64)), (816, tensor(-0.0078, dtype=torch.float64)), (2574, tensor(-0.0077, dtype=torch.float64)), (136, tensor(-0.0077, dtype=torch.float64)), (1908, tensor(-0.0077, dtype=torch.float64)), (268, tensor(-0.0076, dtype=torch.float64)), (2869, tensor(-0.0076, dtype=torch.float64)), (856, tensor(-0.0076, dtype=torch.float64)), (2321, tensor(-0.0076, dtype=torch.float64)), (1765, tensor(-0.0075, dtype=torch.float64)), (1663, tensor(-0.0075, dtype=torch.float64)), (780, tensor(-0.0074, dtype=torch.float64)), (1189, tensor(-0.0074, dtype=torch.float64)), (1143, tensor(-0.0074, dtype=torch.float64)), (2039, tensor(-0.0074, dtype=torch.float64)), (566, tensor(-0.0074, dtype=torch.float64)), (1230, tensor(-0.0073, dtype=torch.float64)), (575, tensor(-0.0073, dtype=torch.float64)), (398, tensor(-0.0073, dtype=torch.float64)), (252, tensor(-0.0072, dtype=torch.float64)), (3076, tensor(-0.0071, dtype=torch.float64)), (621, tensor(-0.0071, dtype=torch.float64)), (2658, tensor(-0.0071, dtype=torch.float64)), (3283, tensor(-0.0071, dtype=torch.float64)), (1540, tensor(-0.0071, dtype=torch.float64)), (1889, tensor(-0.0070, dtype=torch.float64)), (2101, tensor(-0.0070, dtype=torch.float64)), (361, tensor(-0.0070, dtype=torch.float64)), (481, tensor(-0.0070, dtype=torch.float64)), (2121, tensor(-0.0069, dtype=torch.float64)), (296, tensor(-0.0069, dtype=torch.float64)), (2881, tensor(-0.0069, dtype=torch.float64)), (616, tensor(-0.0069, dtype=torch.float64)), (1166, tensor(-0.0068, dtype=torch.float64)), (3330, tensor(-0.0068, dtype=torch.float64)), (3151, tensor(-0.0068, dtype=torch.float64)), (835, tensor(-0.0068, dtype=torch.float64)), (3019, tensor(-0.0068, dtype=torch.float64)), (3269, tensor(-0.0067, dtype=torch.float64)), (2239, tensor(-0.0067, dtype=torch.float64)), (1292, tensor(-0.0067, dtype=torch.float64)), (2696, tensor(-0.0067, dtype=torch.float64)), (1613, tensor(-0.0067, dtype=torch.float64)), (1275, tensor(-0.0067, dtype=torch.float64)), (3323, tensor(-0.0067, dtype=torch.float64)), (219, tensor(-0.0066, dtype=torch.float64)), (2368, tensor(-0.0066, dtype=torch.float64)), (3023, tensor(-0.0066, dtype=torch.float64)), (3073, tensor(-0.0066, dtype=torch.float64)), (1627, tensor(-0.0065, dtype=torch.float64)), (325, tensor(-0.0065, dtype=torch.float64)), (2181, tensor(-0.0065, dtype=torch.float64)), (1393, tensor(-0.0065, dtype=torch.float64)), (1530, tensor(-0.0064, dtype=torch.float64)), (1797, tensor(-0.0064, dtype=torch.float64)), (8, tensor(-0.0064, dtype=torch.float64)), (1842, tensor(-0.0063, dtype=torch.float64)), (1868, tensor(-0.0062, dtype=torch.float64)), (49, tensor(-0.0062, dtype=torch.float64)), (1820, tensor(-0.0061, dtype=torch.float64)), (3319, tensor(-0.0061, dtype=torch.float64)), (3275, tensor(-0.0061, dtype=torch.float64)), (1531, tensor(-0.0061, dtype=torch.float64)), (444, tensor(-0.0059, dtype=torch.float64)), (2472, tensor(-0.0059, dtype=torch.float64)), (2486, tensor(-0.0059, dtype=torch.float64)), (3220, tensor(-0.0058, dtype=torch.float64)), (3218, tensor(-0.0058, dtype=torch.float64)), (2692, tensor(-0.0057, dtype=torch.float64)), (1443, tensor(-0.0057, dtype=torch.float64)), (1495, tensor(-0.0057, dtype=torch.float64)), (2005, tensor(-0.0057, dtype=torch.float64)), (1471, tensor(-0.0057, dtype=torch.float64)), (2426, tensor(-0.0056, dtype=torch.float64)), (2612, tensor(-0.0056, dtype=torch.float64)), (478, tensor(-0.0056, dtype=torch.float64)), (2156, tensor(-0.0056, dtype=torch.float64)), (458, tensor(-0.0056, dtype=torch.float64)), (1882, tensor(-0.0055, dtype=torch.float64)), (3206, tensor(-0.0055, dtype=torch.float64)), (1332, tensor(-0.0055, dtype=torch.float64)), (2719, tensor(-0.0055, dtype=torch.float64)), (133, tensor(-0.0054, dtype=torch.float64)), (2942, tensor(-0.0054, dtype=torch.float64)), (721, tensor(-0.0054, dtype=torch.float64)), (520, tensor(-0.0054, dtype=torch.float64)), (374, tensor(-0.0053, dtype=torch.float64)), (3231, tensor(-0.0053, dtype=torch.float64)), (1733, tensor(-0.0053, dtype=torch.float64)), (3119, tensor(-0.0053, dtype=torch.float64)), (1366, tensor(-0.0052, dtype=torch.float64)), (2705, tensor(-0.0051, dtype=torch.float64)), (1789, tensor(-0.0051, dtype=torch.float64)), (2199, tensor(-0.0050, dtype=torch.float64)), (1639, tensor(-0.0050, dtype=torch.float64)), (1811, tensor(-0.0050, dtype=torch.float64)), (2545, tensor(-0.0050, dtype=torch.float64)), (850, tensor(-0.0050, dtype=torch.float64)), (2870, tensor(-0.0049, dtype=torch.float64)), (1850, tensor(-0.0049, dtype=torch.float64)), (2330, tensor(-0.0049, dtype=torch.float64)), (1419, tensor(-0.0049, dtype=torch.float64)), (1856, tensor(-0.0048, dtype=torch.float64)), (1614, tensor(-0.0048, dtype=torch.float64)), (710, tensor(-0.0048, dtype=torch.float64)), (728, tensor(-0.0048, dtype=torch.float64)), (2534, tensor(-0.0048, dtype=torch.float64)), (3360, tensor(-0.0047, dtype=torch.float64)), (2424, tensor(-0.0047, dtype=torch.float64)), (2032, tensor(-0.0047, dtype=torch.float64)), (335, tensor(-0.0047, dtype=torch.float64)), (950, tensor(-0.0047, dtype=torch.float64)), (3192, tensor(-0.0047, dtype=torch.float64)), (1454, tensor(-0.0047, dtype=torch.float64)), (3322, tensor(-0.0046, dtype=torch.float64)), (1050, tensor(-0.0046, dtype=torch.float64)), (3316, tensor(-0.0046, dtype=torch.float64)), (1679, tensor(-0.0046, dtype=torch.float64)), (1300, tensor(-0.0046, dtype=torch.float64)), (1442, tensor(-0.0046, dtype=torch.float64)), (1381, tensor(-0.0045, dtype=torch.float64)), (317, tensor(-0.0045, dtype=torch.float64)), (2311, tensor(-0.0045, dtype=torch.float64)), (370, tensor(-0.0044, dtype=torch.float64)), (2905, tensor(-0.0044, dtype=torch.float64)), (2443, tensor(-0.0044, dtype=torch.float64)), (3103, tensor(-0.0044, dtype=torch.float64)), (1596, tensor(-0.0044, dtype=torch.float64)), (2900, tensor(-0.0044, dtype=torch.float64)), (627, tensor(-0.0044, dtype=torch.float64)), (336, tensor(-0.0043, dtype=torch.float64)), (2733, tensor(-0.0043, dtype=torch.float64)), (2523, tensor(-0.0043, dtype=torch.float64)), (2237, tensor(-0.0043, dtype=torch.float64)), (2086, tensor(-0.0043, dtype=torch.float64)), (2963, tensor(-0.0043, dtype=torch.float64)), (579, tensor(-0.0042, dtype=torch.float64)), (3219, tensor(-0.0042, dtype=torch.float64)), (2946, tensor(-0.0041, dtype=torch.float64)), (2537, tensor(-0.0041, dtype=torch.float64)), (227, tensor(-0.0040, dtype=torch.float64)), (2620, tensor(-0.0040, dtype=torch.float64)), (153, tensor(-0.0039, dtype=torch.float64)), (1058, tensor(-0.0039, dtype=torch.float64)), (842, tensor(-0.0039, dtype=torch.float64)), (754, tensor(-0.0039, dtype=torch.float64)), (2404, tensor(-0.0038, dtype=torch.float64)), (2639, tensor(-0.0037, dtype=torch.float64)), (2018, tensor(-0.0037, dtype=torch.float64)), (1281, tensor(-0.0036, dtype=torch.float64)), (2602, tensor(-0.0036, dtype=torch.float64)), (3039, tensor(-0.0035, dtype=torch.float64)), (2120, tensor(-0.0035, dtype=torch.float64)), (4, tensor(-0.0034, dtype=torch.float64)), (15, tensor(-0.0034, dtype=torch.float64)), (1722, tensor(-0.0034, dtype=torch.float64)), (1345, tensor(-0.0033, dtype=torch.float64)), (2859, tensor(-0.0033, dtype=torch.float64)), (1686, tensor(-0.0032, dtype=torch.float64)), (2384, tensor(-0.0032, dtype=torch.float64)), (998, tensor(-0.0032, dtype=torch.float64)), (2263, tensor(-0.0031, dtype=torch.float64)), (737, tensor(-0.0031, dtype=torch.float64)), (2558, tensor(-0.0030, dtype=torch.float64)), (1937, tensor(-0.0030, dtype=torch.float64)), (1685, tensor(-0.0029, dtype=torch.float64)), (2230, tensor(-0.0029, dtype=torch.float64)), (1336, tensor(-0.0029, dtype=torch.float64)), (2123, tensor(-0.0029, dtype=torch.float64)), (2559, tensor(-0.0028, dtype=torch.float64)), (2007, tensor(-0.0028, dtype=torch.float64)), (1334, tensor(-0.0027, dtype=torch.float64)), (560, tensor(-0.0026, dtype=torch.float64)), (3, tensor(-0.0025, dtype=torch.float64)), (1974, tensor(-0.0025, dtype=torch.float64)), (2089, tensor(-0.0024, dtype=torch.float64)), (3279, tensor(-0.0023, dtype=torch.float64)), (1131, tensor(-0.0023, dtype=torch.float64)), (1051, tensor(-0.0022, dtype=torch.float64)), (2760, tensor(-0.0021, dtype=torch.float64)), (155, tensor(-0.0021, dtype=torch.float64)), (3093, tensor(-0.0019, dtype=torch.float64)), (1553, tensor(-0.0019, dtype=torch.float64)), (2427, tensor(-0.0018, dtype=torch.float64)), (1130, tensor(-0.0018, dtype=torch.float64)), (69, tensor(-0.0018, dtype=torch.float64)), (1688, tensor(-0.0018, dtype=torch.float64)), (976, tensor(-0.0017, dtype=torch.float64)), (1587, tensor(-0.0016, dtype=torch.float64)), (872, tensor(-0.0015, dtype=torch.float64)), (3100, tensor(-0.0015, dtype=torch.float64)), (126, tensor(-0.0014, dtype=torch.float64)), (738, tensor(-0.0014, dtype=torch.float64)), (805, tensor(-0.0013, dtype=torch.float64)), (297, tensor(-0.0013, dtype=torch.float64)), (1572, tensor(-0.0012, dtype=torch.float64)), (1516, tensor(-0.0011, dtype=torch.float64)), (2322, tensor(-0.0011, dtype=torch.float64)), (2108, tensor(-0.0008, dtype=torch.float64)), (2143, tensor(-0.0006, dtype=torch.float64))]
annotated_samples_num: 345
unannotated_samples_num: 3199
update datapool!
annotated_samples_num: 345
unannotated_samples_num: 3199
iter: 1
annotated_samples_num: 345
unannotated_samples_num: 3199
Epoch [1/10], Batch [1/43], Loss: 3.4789
Epoch [1/10], Batch [2/43], Loss: 2.7987
Epoch [1/10], Batch [3/43], Loss: 2.3849
Epoch [1/10], Batch [4/43], Loss: 1.5908
Epoch [1/10], Batch [5/43], Loss: 1.4527
Epoch [1/10], Batch [6/43], Loss: 1.4716
Epoch [1/10], Batch [7/43], Loss: 0.9613
Epoch [1/10], Batch [8/43], Loss: 1.4341
Epoch [1/10], Batch [9/43], Loss: 1.3528
Epoch [1/10], Batch [10/43], Loss: 0.8776
Epoch [1/10], Batch [11/43], Loss: 0.8801
Epoch [1/10], Batch [12/43], Loss: 0.7526
Epoch [1/10], Batch [13/43], Loss: 0.7395
Epoch [1/10], Batch [14/43], Loss: 0.8104
Epoch [1/10], Batch [15/43], Loss: 0.7113
Epoch [1/10], Batch [16/43], Loss: 0.4600
Epoch [1/10], Batch [17/43], Loss: 0.6108
Epoch [1/10], Batch [18/43], Loss: 0.9474
Epoch [1/10], Batch [19/43], Loss: 0.3627
Epoch [1/10], Batch [20/43], Loss: 0.3386
Epoch [1/10], Batch [21/43], Loss: 0.3626
Epoch [1/10], Batch [22/43], Loss: 0.5103
Epoch [1/10], Batch [23/43], Loss: 0.6611
Epoch [1/10], Batch [24/43], Loss: 0.3322
Epoch [1/10], Batch [25/43], Loss: 0.6373
Epoch [1/10], Batch [26/43], Loss: 0.4203
Epoch [1/10], Batch [27/43], Loss: 0.4958
Epoch [1/10], Batch [28/43], Loss: 0.3236
Epoch [1/10], Batch [29/43], Loss: 0.5046
Epoch [1/10], Batch [30/43], Loss: 0.4048
Epoch [1/10], Batch [31/43], Loss: 0.3959
Epoch [1/10], Batch [32/43], Loss: 0.3346
Epoch [1/10], Batch [33/43], Loss: 0.3604
Epoch [1/10], Batch [34/43], Loss: 0.4154
Epoch [1/10], Batch [35/43], Loss: 0.3227
Epoch [1/10], Batch [36/43], Loss: 0.2126
Epoch [1/10], Batch [37/43], Loss: 0.2222
Epoch [1/10], Batch [38/43], Loss: 0.4527
Epoch [1/10], Batch [39/43], Loss: 0.4612
Epoch [1/10], Batch [40/43], Loss: 0.3673
Epoch [1/10], Batch [41/43], Loss: 0.5087
Epoch [1/10], Batch [42/43], Loss: 0.2281
Epoch [1/10], Batch [43/43], Loss: 0.2659
Epoch [1/10], Average Loss: 0.7818
-----------------------------------------------------------
strategy: BEAM
iter: 1
epoch: 0
Test Loss: 0.3269
F1_overall: 0.4833
F1_AGENT: 0.6277
F1_TARGET: 0.3624
-----------------------------------------------------------
Epoch [2/10], Batch [1/43], Loss: 0.3381
Epoch [2/10], Batch [2/43], Loss: 0.3215
Epoch [2/10], Batch [3/43], Loss: 0.3384
Epoch [2/10], Batch [4/43], Loss: 0.2486
Epoch [2/10], Batch [5/43], Loss: 0.3105
Epoch [2/10], Batch [6/43], Loss: 0.2425
Epoch [2/10], Batch [7/43], Loss: 0.1200
Epoch [2/10], Batch [8/43], Loss: 0.1577
Epoch [2/10], Batch [9/43], Loss: 0.1192
Epoch [2/10], Batch [10/43], Loss: 0.4344
Epoch [2/10], Batch [11/43], Loss: 0.3247
Epoch [2/10], Batch [12/43], Loss: 0.3862
Epoch [2/10], Batch [13/43], Loss: 0.2362
Epoch [2/10], Batch [14/43], Loss: 0.2608
Epoch [2/10], Batch [15/43], Loss: 0.2291
Epoch [2/10], Batch [16/43], Loss: 0.3008
Epoch [2/10], Batch [17/43], Loss: 0.1061
Epoch [2/10], Batch [18/43], Loss: 0.3341
Epoch [2/10], Batch [19/43], Loss: 0.2241
Epoch [2/10], Batch [20/43], Loss: 0.2053
Epoch [2/10], Batch [21/43], Loss: 0.2708
Epoch [2/10], Batch [22/43], Loss: 0.1593
Epoch [2/10], Batch [23/43], Loss: 0.2013
Epoch [2/10], Batch [24/43], Loss: 0.2818
Epoch [2/10], Batch [25/43], Loss: 0.2015
Epoch [2/10], Batch [26/43], Loss: 0.2367
Epoch [2/10], Batch [27/43], Loss: 0.0902
Epoch [2/10], Batch [28/43], Loss: 0.4457
Epoch [2/10], Batch [29/43], Loss: 0.2542
Epoch [2/10], Batch [30/43], Loss: 0.2764
Epoch [2/10], Batch [31/43], Loss: 0.1576
Epoch [2/10], Batch [32/43], Loss: 0.2209
Epoch [2/10], Batch [33/43], Loss: 0.2140
Epoch [2/10], Batch [34/43], Loss: 0.2931
Epoch [2/10], Batch [35/43], Loss: 0.5365
Epoch [2/10], Batch [36/43], Loss: 0.2524
Epoch [2/10], Batch [37/43], Loss: 0.0889
Epoch [2/10], Batch [38/43], Loss: 0.2209
Epoch [2/10], Batch [39/43], Loss: 0.1747
Epoch [2/10], Batch [40/43], Loss: 0.1719
Epoch [2/10], Batch [41/43], Loss: 0.1277
Epoch [2/10], Batch [42/43], Loss: 0.1700
Epoch [2/10], Batch [43/43], Loss: 0.2909
Epoch [2/10], Average Loss: 0.2459
-----------------------------------------------------------
strategy: BEAM
iter: 1
epoch: 1
Test Loss: 0.3482
F1_overall: 0.4894
F1_AGENT: 0.6490
F1_TARGET: 0.2741
-----------------------------------------------------------
Epoch [3/10], Batch [1/43], Loss: 0.2553
Epoch [3/10], Batch [2/43], Loss: 0.2302
Epoch [3/10], Batch [3/43], Loss: 0.3290
Epoch [3/10], Batch [4/43], Loss: 0.1853
Epoch [3/10], Batch [5/43], Loss: 0.0876
Epoch [3/10], Batch [6/43], Loss: 0.2416
Epoch [3/10], Batch [7/43], Loss: 0.0931
Epoch [3/10], Batch [8/43], Loss: 0.3437
Epoch [3/10], Batch [9/43], Loss: 0.1287
Epoch [3/10], Batch [10/43], Loss: 0.1386
Epoch [3/10], Batch [11/43], Loss: 0.1174
Epoch [3/10], Batch [12/43], Loss: 0.2151
Epoch [3/10], Batch [13/43], Loss: 0.1230
Epoch [3/10], Batch [14/43], Loss: 0.0510
Epoch [3/10], Batch [15/43], Loss: 0.0644
Epoch [3/10], Batch [16/43], Loss: 0.4591
Epoch [3/10], Batch [17/43], Loss: 0.2486
Epoch [3/10], Batch [18/43], Loss: 0.0777
Epoch [3/10], Batch [19/43], Loss: 0.1987
Epoch [3/10], Batch [20/43], Loss: 0.2259
Epoch [3/10], Batch [21/43], Loss: 0.2424
Epoch [3/10], Batch [22/43], Loss: 0.1754
Epoch [3/10], Batch [23/43], Loss: 0.1248
Epoch [3/10], Batch [24/43], Loss: 0.1489
Epoch [3/10], Batch [25/43], Loss: 0.1811
Epoch [3/10], Batch [26/43], Loss: 0.1193
Epoch [3/10], Batch [27/43], Loss: 0.1634
Epoch [3/10], Batch [28/43], Loss: 0.0946
Epoch [3/10], Batch [29/43], Loss: 0.2630
Epoch [3/10], Batch [30/43], Loss: 0.2362
Epoch [3/10], Batch [31/43], Loss: 0.2412
Epoch [3/10], Batch [32/43], Loss: 0.0991
Epoch [3/10], Batch [33/43], Loss: 0.1796
Epoch [3/10], Batch [34/43], Loss: 0.1543
Epoch [3/10], Batch [35/43], Loss: 0.0983
Epoch [3/10], Batch [36/43], Loss: 0.1601
Epoch [3/10], Batch [37/43], Loss: 0.1228
Epoch [3/10], Batch [38/43], Loss: 0.0887
Epoch [3/10], Batch [39/43], Loss: 0.1611
Epoch [3/10], Batch [40/43], Loss: 0.1766
Epoch [3/10], Batch [41/43], Loss: 0.1467
Epoch [3/10], Batch [42/43], Loss: 0.1601
Epoch [3/10], Batch [43/43], Loss: 0.1449
Epoch [3/10], Average Loss: 0.1743
-----------------------------------------------------------
strategy: BEAM
iter: 1
epoch: 2
Test Loss: 0.3435
F1_overall: 0.5425
F1_AGENT: 0.7065
F1_TARGET: 0.3643
-----------------------------------------------------------
Epoch [4/10], Batch [1/43], Loss: 0.2005
Epoch [4/10], Batch [2/43], Loss: 0.0605
Epoch [4/10], Batch [3/43], Loss: 0.0713
Epoch [4/10], Batch [4/43], Loss: 0.1220
Epoch [4/10], Batch [5/43], Loss: 0.1316
Epoch [4/10], Batch [6/43], Loss: 0.0618
Epoch [4/10], Batch [7/43], Loss: 0.1424
Epoch [4/10], Batch [8/43], Loss: 0.1557
Epoch [4/10], Batch [9/43], Loss: 0.1469
Epoch [4/10], Batch [10/43], Loss: 0.0655
Epoch [4/10], Batch [11/43], Loss: 0.1287
Epoch [4/10], Batch [12/43], Loss: 0.0922
Epoch [4/10], Batch [13/43], Loss: 0.1156
Epoch [4/10], Batch [14/43], Loss: 0.0857
Epoch [4/10], Batch [15/43], Loss: 0.1556
Epoch [4/10], Batch [16/43], Loss: 0.2052
Epoch [4/10], Batch [17/43], Loss: 0.1076
Epoch [4/10], Batch [18/43], Loss: 0.0920
Epoch [4/10], Batch [19/43], Loss: 0.0859
Epoch [4/10], Batch [20/43], Loss: 0.0821
Epoch [4/10], Batch [21/43], Loss: 0.1045
Epoch [4/10], Batch [22/43], Loss: 0.0853
Epoch [4/10], Batch [23/43], Loss: 0.1085
Epoch [4/10], Batch [24/43], Loss: 0.1055
Epoch [4/10], Batch [25/43], Loss: 0.0733
Epoch [4/10], Batch [26/43], Loss: 0.1030
Epoch [4/10], Batch [27/43], Loss: 0.0354
Epoch [4/10], Batch [28/43], Loss: 0.1170
Epoch [4/10], Batch [29/43], Loss: 0.1447
Epoch [4/10], Batch [30/43], Loss: 0.1342
Epoch [4/10], Batch [31/43], Loss: 0.2133
Epoch [4/10], Batch [32/43], Loss: 0.0726
Epoch [4/10], Batch [33/43], Loss: 0.0643
Epoch [4/10], Batch [34/43], Loss: 0.1200
Epoch [4/10], Batch [35/43], Loss: 0.0504
Epoch [4/10], Batch [36/43], Loss: 0.1462
Epoch [4/10], Batch [37/43], Loss: 0.1215
Epoch [4/10], Batch [38/43], Loss: 0.0819
Epoch [4/10], Batch [39/43], Loss: 0.0736
Epoch [4/10], Batch [40/43], Loss: 0.1490
Epoch [4/10], Batch [41/43], Loss: 0.0682
Epoch [4/10], Batch [42/43], Loss: 0.0726
Epoch [4/10], Batch [43/43], Loss: 0.1301
Epoch [4/10], Average Loss: 0.1089
-----------------------------------------------------------
strategy: BEAM
iter: 1
epoch: 3
Test Loss: 0.4120
F1_overall: 0.5228
F1_AGENT: 0.6869
F1_TARGET: 0.3302
-----------------------------------------------------------
Epoch [5/10], Batch [1/43], Loss: 0.0725
Epoch [5/10], Batch [2/43], Loss: 0.0799
Epoch [5/10], Batch [3/43], Loss: 0.0529
Epoch [5/10], Batch [4/43], Loss: 0.1624
Epoch [5/10], Batch [5/43], Loss: 0.0558
Epoch [5/10], Batch [6/43], Loss: 0.0411
Epoch [5/10], Batch [7/43], Loss: 0.1897
Epoch [5/10], Batch [8/43], Loss: 0.1023
Epoch [5/10], Batch [9/43], Loss: 0.0510
Epoch [5/10], Batch [10/43], Loss: 0.0472
Epoch [5/10], Batch [11/43], Loss: 0.0919
Epoch [5/10], Batch [12/43], Loss: 0.0577
Epoch [5/10], Batch [13/43], Loss: 0.0872
Epoch [5/10], Batch [14/43], Loss: 0.0388
Epoch [5/10], Batch [15/43], Loss: 0.0347
Epoch [5/10], Batch [16/43], Loss: 0.1205
Epoch [5/10], Batch [17/43], Loss: 0.0184
Epoch [5/10], Batch [18/43], Loss: 0.0859
Epoch [5/10], Batch [19/43], Loss: 0.0349
Epoch [5/10], Batch [20/43], Loss: 0.0996
Epoch [5/10], Batch [21/43], Loss: 0.0799
Epoch [5/10], Batch [22/43], Loss: 0.0324
Epoch [5/10], Batch [23/43], Loss: 0.1162
Epoch [5/10], Batch [24/43], Loss: 0.0743
Epoch [5/10], Batch [25/43], Loss: 0.0840
Epoch [5/10], Batch [26/43], Loss: 0.1316
Epoch [5/10], Batch [27/43], Loss: 0.1063
Epoch [5/10], Batch [28/43], Loss: 0.0217
Epoch [5/10], Batch [29/43], Loss: 0.1089
Epoch [5/10], Batch [30/43], Loss: 0.0553
Epoch [5/10], Batch [31/43], Loss: 0.1881
Epoch [5/10], Batch [32/43], Loss: 0.2285
Epoch [5/10], Batch [33/43], Loss: 0.0508
Epoch [5/10], Batch [34/43], Loss: 0.0842
Epoch [5/10], Batch [35/43], Loss: 0.0464
Epoch [5/10], Batch [36/43], Loss: 0.1235
Epoch [5/10], Batch [37/43], Loss: 0.1093
Epoch [5/10], Batch [38/43], Loss: 0.1202
Epoch [5/10], Batch [39/43], Loss: 0.0665
Epoch [5/10], Batch [40/43], Loss: 0.1358
Epoch [5/10], Batch [41/43], Loss: 0.1197
Epoch [5/10], Batch [42/43], Loss: 0.2631
Epoch [5/10], Batch [43/43], Loss: 0.1080
Epoch [5/10], Average Loss: 0.0925
-----------------------------------------------------------
strategy: BEAM
iter: 1
epoch: 4
Test Loss: 0.4117
F1_overall: 0.5118
F1_AGENT: 0.6715
F1_TARGET: 0.3221
-----------------------------------------------------------
Epoch [6/10], Batch [1/43], Loss: 0.0326
Epoch [6/10], Batch [2/43], Loss: 0.0587
Epoch [6/10], Batch [3/43], Loss: 0.0451
Epoch [6/10], Batch [4/43], Loss: 0.0613
Epoch [6/10], Batch [5/43], Loss: 0.0597
Epoch [6/10], Batch [6/43], Loss: 0.0733
Epoch [6/10], Batch [7/43], Loss: 0.0566
Epoch [6/10], Batch [8/43], Loss: 0.0958
Epoch [6/10], Batch [9/43], Loss: 0.1023
Epoch [6/10], Batch [10/43], Loss: 0.0173
Epoch [6/10], Batch [11/43], Loss: 0.0502
Epoch [6/10], Batch [12/43], Loss: 0.0556
Epoch [6/10], Batch [13/43], Loss: 0.1342
Epoch [6/10], Batch [14/43], Loss: 0.0994
Epoch [6/10], Batch [15/43], Loss: 0.0943
Epoch [6/10], Batch [16/43], Loss: 0.0357
Epoch [6/10], Batch [17/43], Loss: 0.1259
Epoch [6/10], Batch [18/43], Loss: 0.0272
Epoch [6/10], Batch [19/43], Loss: 0.0583
Epoch [6/10], Batch [20/43], Loss: 0.0694
Epoch [6/10], Batch [21/43], Loss: 0.0814
Epoch [6/10], Batch [22/43], Loss: 0.0284
Epoch [6/10], Batch [23/43], Loss: 0.0385
Epoch [6/10], Batch [24/43], Loss: 0.0357
Epoch [6/10], Batch [25/43], Loss: 0.0233
Epoch [6/10], Batch [26/43], Loss: 0.0704
Epoch [6/10], Batch [27/43], Loss: 0.0478
Epoch [6/10], Batch [28/43], Loss: 0.0824
Epoch [6/10], Batch [29/43], Loss: 0.0690
Epoch [6/10], Batch [30/43], Loss: 0.0873
Epoch [6/10], Batch [31/43], Loss: 0.0891
Epoch [6/10], Batch [32/43], Loss: 0.0345
Epoch [6/10], Batch [33/43], Loss: 0.0105
Epoch [6/10], Batch [34/43], Loss: 0.0312
Epoch [6/10], Batch [35/43], Loss: 0.1078
Epoch [6/10], Batch [36/43], Loss: 0.1205
Epoch [6/10], Batch [37/43], Loss: 0.1118
Epoch [6/10], Batch [38/43], Loss: 0.0138
Epoch [6/10], Batch [39/43], Loss: 0.1966
Epoch [6/10], Batch [40/43], Loss: 0.1145
Epoch [6/10], Batch [41/43], Loss: 0.0414
Epoch [6/10], Batch [42/43], Loss: 0.0993
Epoch [6/10], Batch [43/43], Loss: 0.2536
Epoch [6/10], Average Loss: 0.0731
-----------------------------------------------------------
strategy: BEAM
iter: 1
epoch: 5
Test Loss: 0.5082
F1_overall: 0.5202
F1_AGENT: 0.6933
F1_TARGET: 0.3748
-----------------------------------------------------------
Epoch [7/10], Batch [1/43], Loss: 0.0767
Epoch [7/10], Batch [2/43], Loss: 0.0884
Epoch [7/10], Batch [3/43], Loss: 0.0594
Epoch [7/10], Batch [4/43], Loss: 0.0458
Epoch [7/10], Batch [5/43], Loss: 0.0174
Epoch [7/10], Batch [6/43], Loss: 0.0418
Epoch [7/10], Batch [7/43], Loss: 0.1200
Epoch [7/10], Batch [8/43], Loss: 0.1261
Epoch [7/10], Batch [9/43], Loss: 0.0259
Epoch [7/10], Batch [10/43], Loss: 0.0238
Epoch [7/10], Batch [11/43], Loss: 0.0635
Epoch [7/10], Batch [12/43], Loss: 0.1475
Epoch [7/10], Batch [13/43], Loss: 0.0515
Epoch [7/10], Batch [14/43], Loss: 0.0643
Epoch [7/10], Batch [15/43], Loss: 0.0834
Epoch [7/10], Batch [16/43], Loss: 0.0496
Epoch [7/10], Batch [17/43], Loss: 0.0363
Epoch [7/10], Batch [18/43], Loss: 0.0498
Epoch [7/10], Batch [19/43], Loss: 0.0294
Epoch [7/10], Batch [20/43], Loss: 0.0088
Epoch [7/10], Batch [21/43], Loss: 0.0529
Epoch [7/10], Batch [22/43], Loss: 0.0706
Epoch [7/10], Batch [23/43], Loss: 0.0281
Epoch [7/10], Batch [24/43], Loss: 0.0342
Epoch [7/10], Batch [25/43], Loss: 0.0516
Epoch [7/10], Batch [26/43], Loss: 0.1836
Epoch [7/10], Batch [27/43], Loss: 0.0979
Epoch [7/10], Batch [28/43], Loss: 0.0327
Epoch [7/10], Batch [29/43], Loss: 0.0379
Epoch [7/10], Batch [30/43], Loss: 0.0210
Epoch [7/10], Batch [31/43], Loss: 0.0539
Epoch [7/10], Batch [32/43], Loss: 0.0793
Epoch [7/10], Batch [33/43], Loss: 0.0020
Epoch [7/10], Batch [34/43], Loss: 0.0274
Epoch [7/10], Batch [35/43], Loss: 0.1162
Epoch [7/10], Batch [36/43], Loss: 0.0259
Epoch [7/10], Batch [37/43], Loss: 0.2001
Epoch [7/10], Batch [38/43], Loss: 0.0137
Epoch [7/10], Batch [39/43], Loss: 0.0250
Epoch [7/10], Batch [40/43], Loss: 0.0314
Epoch [7/10], Batch [41/43], Loss: 0.1274
Epoch [7/10], Batch [42/43], Loss: 0.0972
Epoch [7/10], Batch [43/43], Loss: 0.0357
Epoch [7/10], Average Loss: 0.0617
-----------------------------------------------------------
strategy: BEAM
iter: 1
epoch: 6
Test Loss: 0.4851
F1_overall: 0.5135
F1_AGENT: 0.6653
F1_TARGET: 0.3631
-----------------------------------------------------------
Epoch [8/10], Batch [1/43], Loss: 0.0303
Epoch [8/10], Batch [2/43], Loss: 0.0843
Epoch [8/10], Batch [3/43], Loss: 0.0939
Epoch [8/10], Batch [4/43], Loss: 0.0932
Epoch [8/10], Batch [5/43], Loss: 0.0121
Epoch [8/10], Batch [6/43], Loss: 0.0201
Epoch [8/10], Batch [7/43], Loss: 0.0376
Epoch [8/10], Batch [8/43], Loss: 0.0842
Epoch [8/10], Batch [9/43], Loss: 0.0437
Epoch [8/10], Batch [10/43], Loss: 0.1304
Epoch [8/10], Batch [11/43], Loss: 0.0317
Epoch [8/10], Batch [12/43], Loss: 0.3144
Epoch [8/10], Batch [13/43], Loss: 0.1445
Epoch [8/10], Batch [14/43], Loss: 0.0963
Epoch [8/10], Batch [15/43], Loss: 0.0640
Epoch [8/10], Batch [16/43], Loss: 0.0488
Epoch [8/10], Batch [17/43], Loss: 0.0256
Epoch [8/10], Batch [18/43], Loss: 0.0536
Epoch [8/10], Batch [19/43], Loss: 0.0360
Epoch [8/10], Batch [20/43], Loss: 0.0283
Epoch [8/10], Batch [21/43], Loss: 0.0211
Epoch [8/10], Batch [22/43], Loss: 0.0465
Epoch [8/10], Batch [23/43], Loss: 0.0836
Epoch [8/10], Batch [24/43], Loss: 0.0281
Epoch [8/10], Batch [25/43], Loss: 0.0834
Epoch [8/10], Batch [26/43], Loss: 0.0483
Epoch [8/10], Batch [27/43], Loss: 0.0850
Epoch [8/10], Batch [28/43], Loss: 0.0336
Epoch [8/10], Batch [29/43], Loss: 0.1121
Epoch [8/10], Batch [30/43], Loss: 0.0365
Epoch [8/10], Batch [31/43], Loss: 0.0290
Epoch [8/10], Batch [32/43], Loss: 0.1373
Epoch [8/10], Batch [33/43], Loss: 0.0556
Epoch [8/10], Batch [34/43], Loss: 0.1633
Epoch [8/10], Batch [35/43], Loss: 0.0190
Epoch [8/10], Batch [36/43], Loss: 0.0452
Epoch [8/10], Batch [37/43], Loss: 0.0181
Epoch [8/10], Batch [38/43], Loss: 0.1106
Epoch [8/10], Batch [39/43], Loss: 0.0155
Epoch [8/10], Batch [40/43], Loss: 0.0469
Epoch [8/10], Batch [41/43], Loss: 0.0930
Epoch [8/10], Batch [42/43], Loss: 0.0205
Epoch [8/10], Batch [43/43], Loss: 0.0298
Epoch [8/10], Average Loss: 0.0659
-----------------------------------------------------------
strategy: BEAM
iter: 1
epoch: 7
Test Loss: 0.5159
F1_overall: 0.5034
F1_AGENT: 0.6588
F1_TARGET: 0.3431
-----------------------------------------------------------
Epoch [9/10], Batch [1/43], Loss: 0.0598
Epoch [9/10], Batch [2/43], Loss: 0.0116
Epoch [9/10], Batch [3/43], Loss: 0.0077
Epoch [9/10], Batch [4/43], Loss: 0.0564
Epoch [9/10], Batch [5/43], Loss: 0.0169
Epoch [9/10], Batch [6/43], Loss: 0.0324
Epoch [9/10], Batch [7/43], Loss: 0.1010
Epoch [9/10], Batch [8/43], Loss: 0.0213
Epoch [9/10], Batch [9/43], Loss: 0.0602
Epoch [9/10], Batch [10/43], Loss: 0.0154
Epoch [9/10], Batch [11/43], Loss: 0.0390
Epoch [9/10], Batch [12/43], Loss: 0.1241
Epoch [9/10], Batch [13/43], Loss: 0.0472
Epoch [9/10], Batch [14/43], Loss: 0.0622
Epoch [9/10], Batch [15/43], Loss: 0.0395
Epoch [9/10], Batch [16/43], Loss: 0.1118
Epoch [9/10], Batch [17/43], Loss: 0.0335
Epoch [9/10], Batch [18/43], Loss: 0.0029
Epoch [9/10], Batch [19/43], Loss: 0.0437
Epoch [9/10], Batch [20/43], Loss: 0.1485
Epoch [9/10], Batch [21/43], Loss: 0.0303
Epoch [9/10], Batch [22/43], Loss: 0.0449
Epoch [9/10], Batch [23/43], Loss: 0.0250
Epoch [9/10], Batch [24/43], Loss: 0.0244
Epoch [9/10], Batch [25/43], Loss: 0.0220
Epoch [9/10], Batch [26/43], Loss: 0.0812
Epoch [9/10], Batch [27/43], Loss: 0.0244
Epoch [9/10], Batch [28/43], Loss: 0.0125
Epoch [9/10], Batch [29/43], Loss: 0.0193
Epoch [9/10], Batch [30/43], Loss: 0.0648
Epoch [9/10], Batch [31/43], Loss: 0.1087
Epoch [9/10], Batch [32/43], Loss: 0.0318
Epoch [9/10], Batch [33/43], Loss: 0.0510
Epoch [9/10], Batch [34/43], Loss: 0.2277
Epoch [9/10], Batch [35/43], Loss: 0.0367
Epoch [9/10], Batch [36/43], Loss: 0.0703
Epoch [9/10], Batch [37/43], Loss: 0.0248
Epoch [9/10], Batch [38/43], Loss: 0.0694
Epoch [9/10], Batch [39/43], Loss: 0.0546
Epoch [9/10], Batch [40/43], Loss: 0.1268
Epoch [9/10], Batch [41/43], Loss: 0.0488
Epoch [9/10], Batch [42/43], Loss: 0.0381
Epoch [9/10], Batch [43/43], Loss: 0.0255
Epoch [9/10], Average Loss: 0.0534
-----------------------------------------------------------
strategy: BEAM
iter: 1
epoch: 8
Test Loss: 0.5157
F1_overall: 0.5190
F1_AGENT: 0.6702
F1_TARGET: 0.3553
-----------------------------------------------------------
Epoch [10/10], Batch [1/43], Loss: 0.0451
Epoch [10/10], Batch [2/43], Loss: 0.0320
Epoch [10/10], Batch [3/43], Loss: 0.0115
Epoch [10/10], Batch [4/43], Loss: 0.0362
Epoch [10/10], Batch [5/43], Loss: 0.2577
Epoch [10/10], Batch [6/43], Loss: 0.0062
Epoch [10/10], Batch [7/43], Loss: 0.4147
Epoch [10/10], Batch [8/43], Loss: 0.0135
Epoch [10/10], Batch [9/43], Loss: 0.0210
Epoch [10/10], Batch [10/43], Loss: 0.0202
Epoch [10/10], Batch [11/43], Loss: 0.0152
Epoch [10/10], Batch [12/43], Loss: 0.0268
Epoch [10/10], Batch [13/43], Loss: 0.0586
Epoch [10/10], Batch [14/43], Loss: 0.0352
Epoch [10/10], Batch [15/43], Loss: 0.1144
Epoch [10/10], Batch [16/43], Loss: 0.0402
Epoch [10/10], Batch [17/43], Loss: 0.0104
Epoch [10/10], Batch [18/43], Loss: 0.0402
Epoch [10/10], Batch [19/43], Loss: 0.0336
Epoch [10/10], Batch [20/43], Loss: 0.0104
Epoch [10/10], Batch [21/43], Loss: 0.0214
Epoch [10/10], Batch [22/43], Loss: 0.0326
Epoch [10/10], Batch [23/43], Loss: 0.0647
Epoch [10/10], Batch [24/43], Loss: 0.0209
Epoch [10/10], Batch [25/43], Loss: 0.0350
Epoch [10/10], Batch [26/43], Loss: 0.0491
Epoch [10/10], Batch [27/43], Loss: 0.0094
Epoch [10/10], Batch [28/43], Loss: 0.0856
Epoch [10/10], Batch [29/43], Loss: 0.0367
Epoch [10/10], Batch [30/43], Loss: 0.0664
Epoch [10/10], Batch [31/43], Loss: 0.0141
Epoch [10/10], Batch [32/43], Loss: 0.0119
Epoch [10/10], Batch [33/43], Loss: 0.0376
Epoch [10/10], Batch [34/43], Loss: 0.0191
Epoch [10/10], Batch [35/43], Loss: 0.0407
Epoch [10/10], Batch [36/43], Loss: 0.0101
Epoch [10/10], Batch [37/43], Loss: 0.0575
Epoch [10/10], Batch [38/43], Loss: 0.0272
Epoch [10/10], Batch [39/43], Loss: 0.0314
Epoch [10/10], Batch [40/43], Loss: 0.0345
Epoch [10/10], Batch [41/43], Loss: 0.0936
Epoch [10/10], Batch [42/43], Loss: 0.0433
Epoch [10/10], Batch [43/43], Loss: 0.0094
Epoch [10/10], Average Loss: 0.0487
-----------------------------------------------------------
strategy: BEAM
iter: 1
epoch: 9
Test Loss: 0.5059
F1_overall: 0.5251
F1_AGENT: 0.6850
F1_TARGET: 0.3474
-----------------------------------------------------------
sorted_beam_scores: [(1668, tensor(-0.4557, dtype=torch.float64)), (1450, tensor(-0.3858, dtype=torch.float64)), (2153, tensor(-0.3811, dtype=torch.float64)), (2826, tensor(-0.3557, dtype=torch.float64)), (3132, tensor(-0.3525, dtype=torch.float64)), (2693, tensor(-0.3351, dtype=torch.float64)), (143, tensor(-0.3302, dtype=torch.float64)), (1549, tensor(-0.3295, dtype=torch.float64)), (2127, tensor(-0.3226, dtype=torch.float64)), (704, tensor(-0.3178, dtype=torch.float64)), (1283, tensor(-0.3065, dtype=torch.float64)), (1047, tensor(-0.2922, dtype=torch.float64)), (1664, tensor(-0.2870, dtype=torch.float64)), (2561, tensor(-0.2625, dtype=torch.float64)), (285, tensor(-0.2585, dtype=torch.float64)), (2752, tensor(-0.2572, dtype=torch.float64)), (137, tensor(-0.2562, dtype=torch.float64)), (2472, tensor(-0.2537, dtype=torch.float64)), (1223, tensor(-0.2536, dtype=torch.float64)), (1420, tensor(-0.2517, dtype=torch.float64)), (2687, tensor(-0.2479, dtype=torch.float64)), (2554, tensor(-0.2464, dtype=torch.float64)), (835, tensor(-0.2446, dtype=torch.float64)), (1413, tensor(-0.2441, dtype=torch.float64)), (1903, tensor(-0.2365, dtype=torch.float64)), (3005, tensor(-0.2364, dtype=torch.float64)), (3063, tensor(-0.2352, dtype=torch.float64)), (1873, tensor(-0.2347, dtype=torch.float64)), (2716, tensor(-0.2335, dtype=torch.float64)), (2943, tensor(-0.2330, dtype=torch.float64)), (1182, tensor(-0.2323, dtype=torch.float64)), (5, tensor(-0.2241, dtype=torch.float64)), (2940, tensor(-0.2222, dtype=torch.float64)), (3087, tensor(-0.2214, dtype=torch.float64)), (597, tensor(-0.2199, dtype=torch.float64)), (1816, tensor(-0.2179, dtype=torch.float64)), (1750, tensor(-0.2170, dtype=torch.float64)), (162, tensor(-0.2162, dtype=torch.float64)), (2283, tensor(-0.2071, dtype=torch.float64)), (1179, tensor(-0.2060, dtype=torch.float64)), (15, tensor(-0.2035, dtype=torch.float64)), (948, tensor(-0.2021, dtype=torch.float64)), (1536, tensor(-0.2016, dtype=torch.float64)), (2533, tensor(-0.2015, dtype=torch.float64)), (559, tensor(-0.2012, dtype=torch.float64)), (2658, tensor(-0.2012, dtype=torch.float64)), (1380, tensor(-0.1976, dtype=torch.float64)), (860, tensor(-0.1897, dtype=torch.float64)), (903, tensor(-0.1887, dtype=torch.float64)), (2294, tensor(-0.1851, dtype=torch.float64)), (84, tensor(-0.1846, dtype=torch.float64)), (1554, tensor(-0.1845, dtype=torch.float64)), (1473, tensor(-0.1822, dtype=torch.float64)), (1474, tensor(-0.1821, dtype=torch.float64)), (614, tensor(-0.1820, dtype=torch.float64)), (1578, tensor(-0.1811, dtype=torch.float64)), (834, tensor(-0.1799, dtype=torch.float64)), (1915, tensor(-0.1793, dtype=torch.float64)), (484, tensor(-0.1757, dtype=torch.float64)), (471, tensor(-0.1756, dtype=torch.float64)), (2414, tensor(-0.1743, dtype=torch.float64)), (2315, tensor(-0.1742, dtype=torch.float64)), (1860, tensor(-0.1726, dtype=torch.float64)), (574, tensor(-0.1725, dtype=torch.float64)), (2566, tensor(-0.1717, dtype=torch.float64)), (639, tensor(-0.1701, dtype=torch.float64)), (1425, tensor(-0.1692, dtype=torch.float64)), (1618, tensor(-0.1688, dtype=torch.float64)), (2664, tensor(-0.1678, dtype=torch.float64)), (2572, tensor(-0.1676, dtype=torch.float64)), (1661, tensor(-0.1642, dtype=torch.float64)), (3171, tensor(-0.1628, dtype=torch.float64)), (3164, tensor(-0.1623, dtype=torch.float64)), (2509, tensor(-0.1622, dtype=torch.float64)), (3126, tensor(-0.1612, dtype=torch.float64)), (1114, tensor(-0.1611, dtype=torch.float64)), (2447, tensor(-0.1607, dtype=torch.float64)), (2583, tensor(-0.1607, dtype=torch.float64)), (888, tensor(-0.1604, dtype=torch.float64)), (360, tensor(-0.1584, dtype=torch.float64)), (2821, tensor(-0.1581, dtype=torch.float64)), (3051, tensor(-0.1569, dtype=torch.float64)), (382, tensor(-0.1556, dtype=torch.float64)), (740, tensor(-0.1556, dtype=torch.float64)), (2697, tensor(-0.1547, dtype=torch.float64)), (1776, tensor(-0.1546, dtype=torch.float64)), (2879, tensor(-0.1546, dtype=torch.float64)), (124, tensor(-0.1542, dtype=torch.float64)), (1972, tensor(-0.1528, dtype=torch.float64)), (1008, tensor(-0.1526, dtype=torch.float64)), (341, tensor(-0.1525, dtype=torch.float64)), (2974, tensor(-0.1521, dtype=torch.float64)), (1886, tensor(-0.1518, dtype=torch.float64)), (2996, tensor(-0.1515, dtype=torch.float64)), (1400, tensor(-0.1507, dtype=torch.float64)), (3022, tensor(-0.1504, dtype=torch.float64)), (2114, tensor(-0.1503, dtype=torch.float64)), (466, tensor(-0.1501, dtype=torch.float64)), (2420, tensor(-0.1497, dtype=torch.float64)), (2133, tensor(-0.1493, dtype=torch.float64)), (1411, tensor(-0.1488, dtype=torch.float64)), (2971, tensor(-0.1481, dtype=torch.float64)), (2922, tensor(-0.1478, dtype=torch.float64)), (866, tensor(-0.1478, dtype=torch.float64)), (3177, tensor(-0.1471, dtype=torch.float64)), (1435, tensor(-0.1469, dtype=torch.float64)), (2029, tensor(-0.1462, dtype=torch.float64)), (745, tensor(-0.1459, dtype=torch.float64)), (1951, tensor(-0.1452, dtype=torch.float64)), (3131, tensor(-0.1452, dtype=torch.float64)), (910, tensor(-0.1449, dtype=torch.float64)), (718, tensor(-0.1432, dtype=torch.float64)), (957, tensor(-0.1431, dtype=torch.float64)), (1389, tensor(-0.1430, dtype=torch.float64)), (2388, tensor(-0.1428, dtype=torch.float64)), (901, tensor(-0.1426, dtype=torch.float64)), (2676, tensor(-0.1423, dtype=torch.float64)), (935, tensor(-0.1421, dtype=torch.float64)), (45, tensor(-0.1420, dtype=torch.float64)), (1552, tensor(-0.1418, dtype=torch.float64)), (1051, tensor(-0.1415, dtype=torch.float64)), (1393, tensor(-0.1408, dtype=torch.float64)), (1060, tensor(-0.1405, dtype=torch.float64)), (2142, tensor(-0.1400, dtype=torch.float64)), (483, tensor(-0.1396, dtype=torch.float64)), (2863, tensor(-0.1395, dtype=torch.float64)), (681, tensor(-0.1382, dtype=torch.float64)), (963, tensor(-0.1380, dtype=torch.float64)), (1131, tensor(-0.1380, dtype=torch.float64)), (2101, tensor(-0.1379, dtype=torch.float64)), (1879, tensor(-0.1379, dtype=torch.float64)), (2480, tensor(-0.1376, dtype=torch.float64)), (1384, tensor(-0.1367, dtype=torch.float64)), (316, tensor(-0.1360, dtype=torch.float64)), (1864, tensor(-0.1356, dtype=torch.float64)), (1070, tensor(-0.1348, dtype=torch.float64)), (258, tensor(-0.1348, dtype=torch.float64)), (2151, tensor(-0.1347, dtype=torch.float64)), (334, tensor(-0.1341, dtype=torch.float64)), (1028, tensor(-0.1340, dtype=torch.float64)), (1730, tensor(-0.1335, dtype=torch.float64)), (2640, tensor(-0.1334, dtype=torch.float64)), (787, tensor(-0.1323, dtype=torch.float64)), (3135, tensor(-0.1323, dtype=torch.float64)), (2611, tensor(-0.1323, dtype=torch.float64)), (2903, tensor(-0.1321, dtype=torch.float64)), (852, tensor(-0.1315, dtype=torch.float64)), (1115, tensor(-0.1307, dtype=torch.float64)), (2489, tensor(-0.1306, dtype=torch.float64)), (2334, tensor(-0.1301, dtype=torch.float64)), (525, tensor(-0.1296, dtype=torch.float64)), (1717, tensor(-0.1295, dtype=torch.float64)), (2603, tensor(-0.1288, dtype=torch.float64)), (3036, tensor(-0.1285, dtype=torch.float64)), (2882, tensor(-0.1285, dtype=torch.float64)), (2570, tensor(-0.1281, dtype=torch.float64)), (633, tensor(-0.1273, dtype=torch.float64)), (99, tensor(-0.1273, dtype=torch.float64)), (1773, tensor(-0.1269, dtype=torch.float64)), (2028, tensor(-0.1268, dtype=torch.float64)), (1454, tensor(-0.1267, dtype=torch.float64)), (289, tensor(-0.1267, dtype=torch.float64)), (2731, tensor(-0.1265, dtype=torch.float64)), (2748, tensor(-0.1264, dtype=torch.float64)), (2964, tensor(-0.1264, dtype=torch.float64)), (726, tensor(-0.1261, dtype=torch.float64)), (3162, tensor(-0.1259, dtype=torch.float64)), (1064, tensor(-0.1256, dtype=torch.float64)), (2600, tensor(-0.1255, dtype=torch.float64)), (9, tensor(-0.1252, dtype=torch.float64)), (1534, tensor(-0.1250, dtype=torch.float64)), (2498, tensor(-0.1250, dtype=torch.float64)), (256, tensor(-0.1248, dtype=torch.float64)), (2701, tensor(-0.1243, dtype=torch.float64)), (2161, tensor(-0.1242, dtype=torch.float64)), (3183, tensor(-0.1241, dtype=torch.float64)), (349, tensor(-0.1240, dtype=torch.float64)), (2207, tensor(-0.1235, dtype=torch.float64)), (687, tensor(-0.1231, dtype=torch.float64)), (1809, tensor(-0.1229, dtype=torch.float64)), (497, tensor(-0.1228, dtype=torch.float64)), (943, tensor(-0.1227, dtype=torch.float64)), (2346, tensor(-0.1226, dtype=torch.float64)), (74, tensor(-0.1225, dtype=torch.float64)), (3129, tensor(-0.1222, dtype=torch.float64)), (2089, tensor(-0.1222, dtype=torch.float64)), (2279, tensor(-0.1221, dtype=torch.float64)), (193, tensor(-0.1218, dtype=torch.float64)), (2842, tensor(-0.1216, dtype=torch.float64)), (880, tensor(-0.1207, dtype=torch.float64)), (1188, tensor(-0.1205, dtype=torch.float64)), (1336, tensor(-0.1204, dtype=torch.float64)), (2275, tensor(-0.1202, dtype=torch.float64)), (182, tensor(-0.1199, dtype=torch.float64)), (2931, tensor(-0.1199, dtype=torch.float64)), (1587, tensor(-0.1195, dtype=torch.float64)), (2464, tensor(-0.1188, dtype=torch.float64)), (540, tensor(-0.1187, dtype=torch.float64)), (890, tensor(-0.1184, dtype=torch.float64)), (169, tensor(-0.1182, dtype=torch.float64)), (1386, tensor(-0.1181, dtype=torch.float64)), (588, tensor(-0.1179, dtype=torch.float64)), (3109, tensor(-0.1172, dtype=torch.float64)), (1685, tensor(-0.1170, dtype=torch.float64)), (3069, tensor(-0.1169, dtype=torch.float64)), (2293, tensor(-0.1168, dtype=torch.float64)), (1621, tensor(-0.1162, dtype=torch.float64)), (732, tensor(-0.1161, dtype=torch.float64)), (1854, tensor(-0.1160, dtype=torch.float64)), (1391, tensor(-0.1157, dtype=torch.float64)), (1320, tensor(-0.1155, dtype=torch.float64)), (1337, tensor(-0.1153, dtype=torch.float64)), (49, tensor(-0.1151, dtype=torch.float64)), (1883, tensor(-0.1149, dtype=torch.float64)), (1434, tensor(-0.1148, dtype=torch.float64)), (1156, tensor(-0.1147, dtype=torch.float64)), (2815, tensor(-0.1146, dtype=torch.float64)), (3167, tensor(-0.1145, dtype=torch.float64)), (1669, tensor(-0.1137, dtype=torch.float64)), (2757, tensor(-0.1136, dtype=torch.float64)), (2954, tensor(-0.1134, dtype=torch.float64)), (2118, tensor(-0.1132, dtype=torch.float64)), (2393, tensor(-0.1125, dtype=torch.float64)), (2977, tensor(-0.1122, dtype=torch.float64)), (1614, tensor(-0.1122, dtype=torch.float64)), (1817, tensor(-0.1121, dtype=torch.float64)), (529, tensor(-0.1119, dtype=torch.float64)), (492, tensor(-0.1117, dtype=torch.float64)), (2134, tensor(-0.1117, dtype=torch.float64)), (1748, tensor(-0.1115, dtype=torch.float64)), (2209, tensor(-0.1115, dtype=torch.float64)), (974, tensor(-0.1112, dtype=torch.float64)), (2430, tensor(-0.1111, dtype=torch.float64)), (120, tensor(-0.1110, dtype=torch.float64)), (1740, tensor(-0.1110, dtype=torch.float64)), (2000, tensor(-0.1108, dtype=torch.float64)), (1647, tensor(-0.1107, dtype=torch.float64)), (913, tensor(-0.1106, dtype=torch.float64)), (3004, tensor(-0.1105, dtype=torch.float64)), (2682, tensor(-0.1105, dtype=torch.float64)), (3108, tensor(-0.1103, dtype=torch.float64)), (2121, tensor(-0.1103, dtype=torch.float64)), (2159, tensor(-0.1102, dtype=torch.float64)), (2502, tensor(-0.1100, dtype=torch.float64)), (979, tensor(-0.1099, dtype=torch.float64)), (2453, tensor(-0.1098, dtype=torch.float64)), (65, tensor(-0.1095, dtype=torch.float64)), (2576, tensor(-0.1095, dtype=torch.float64)), (2436, tensor(-0.1093, dtype=torch.float64)), (1656, tensor(-0.1092, dtype=torch.float64)), (936, tensor(-0.1091, dtype=torch.float64)), (3182, tensor(-0.1089, dtype=torch.float64)), (694, tensor(-0.1086, dtype=torch.float64)), (1848, tensor(-0.1084, dtype=torch.float64)), (337, tensor(-0.1082, dtype=torch.float64)), (1170, tensor(-0.1080, dtype=torch.float64)), (2895, tensor(-0.1079, dtype=torch.float64)), (2834, tensor(-0.1078, dtype=torch.float64)), (2499, tensor(-0.1076, dtype=torch.float64)), (391, tensor(-0.1076, dtype=torch.float64)), (261, tensor(-0.1073, dtype=torch.float64)), (401, tensor(-0.1072, dtype=torch.float64)), (159, tensor(-0.1069, dtype=torch.float64)), (635, tensor(-0.1065, dtype=torch.float64)), (1010, tensor(-0.1063, dtype=torch.float64)), (2337, tensor(-0.1060, dtype=torch.float64)), (147, tensor(-0.1060, dtype=torch.float64)), (1176, tensor(-0.1060, dtype=torch.float64)), (3190, tensor(-0.1059, dtype=torch.float64)), (2966, tensor(-0.1058, dtype=torch.float64)), (2053, tensor(-0.1058, dtype=torch.float64)), (91, tensor(-0.1056, dtype=torch.float64)), (722, tensor(-0.1055, dtype=torch.float64)), (1796, tensor(-0.1053, dtype=torch.float64)), (286, tensor(-0.1052, dtype=torch.float64)), (897, tensor(-0.1052, dtype=torch.float64)), (1377, tensor(-0.1051, dtype=torch.float64)), (205, tensor(-0.1047, dtype=torch.float64)), (29, tensor(-0.1044, dtype=torch.float64)), (1707, tensor(-0.1044, dtype=torch.float64)), (2227, tensor(-0.1042, dtype=torch.float64)), (2013, tensor(-0.1041, dtype=torch.float64)), (1791, tensor(-0.1040, dtype=torch.float64)), (2041, tensor(-0.1039, dtype=torch.float64)), (248, tensor(-0.1038, dtype=torch.float64)), (3074, tensor(-0.1037, dtype=torch.float64)), (173, tensor(-0.1034, dtype=torch.float64)), (1639, tensor(-0.1033, dtype=torch.float64)), (2119, tensor(-0.1033, dtype=torch.float64)), (2226, tensor(-0.1032, dtype=torch.float64)), (2070, tensor(-0.1031, dtype=torch.float64)), (2010, tensor(-0.1031, dtype=torch.float64)), (569, tensor(-0.1030, dtype=torch.float64)), (589, tensor(-0.1027, dtype=torch.float64)), (1406, tensor(-0.1027, dtype=torch.float64)), (2806, tensor(-0.1026, dtype=torch.float64)), (2333, tensor(-0.1025, dtype=torch.float64)), (275, tensor(-0.1024, dtype=torch.float64)), (1430, tensor(-0.1022, dtype=torch.float64)), (2474, tensor(-0.1020, dtype=torch.float64)), (430, tensor(-0.1020, dtype=torch.float64)), (2091, tensor(-0.1019, dtype=torch.float64)), (2137, tensor(-0.1018, dtype=torch.float64)), (1958, tensor(-0.1018, dtype=torch.float64)), (2385, tensor(-0.1017, dtype=torch.float64)), (2880, tensor(-0.1017, dtype=torch.float64)), (1121, tensor(-0.1016, dtype=torch.float64)), (586, tensor(-0.1015, dtype=torch.float64)), (2805, tensor(-0.1014, dtype=torch.float64)), (1304, tensor(-0.1013, dtype=torch.float64)), (2204, tensor(-0.1012, dtype=torch.float64)), (1235, tensor(-0.1012, dtype=torch.float64)), (2465, tensor(-0.1012, dtype=torch.float64)), (1445, tensor(-0.1011, dtype=torch.float64)), (522, tensor(-0.1010, dtype=torch.float64)), (1307, tensor(-0.1008, dtype=torch.float64)), (231, tensor(-0.1008, dtype=torch.float64)), (509, tensor(-0.1007, dtype=torch.float64)), (2042, tensor(-0.1005, dtype=torch.float64)), (2286, tensor(-0.1002, dtype=torch.float64)), (2730, tensor(-0.0999, dtype=torch.float64)), (1729, tensor(-0.0997, dtype=torch.float64)), (2154, tensor(-0.0997, dtype=torch.float64)), (315, tensor(-0.0994, dtype=torch.float64)), (902, tensor(-0.0991, dtype=torch.float64)), (1005, tensor(-0.0991, dtype=torch.float64)), (2774, tensor(-0.0990, dtype=torch.float64)), (3103, tensor(-0.0990, dtype=torch.float64)), (2366, tensor(-0.0989, dtype=torch.float64)), (71, tensor(-0.0988, dtype=torch.float64)), (1457, tensor(-0.0988, dtype=torch.float64)), (338, tensor(-0.0983, dtype=torch.float64)), (1491, tensor(-0.0981, dtype=torch.float64)), (2703, tensor(-0.0981, dtype=torch.float64)), (2702, tensor(-0.0981, dtype=torch.float64)), (2654, tensor(-0.0977, dtype=torch.float64)), (2999, tensor(-0.0977, dtype=torch.float64)), (3027, tensor(-0.0975, dtype=torch.float64)), (1568, tensor(-0.0972, dtype=torch.float64)), (2280, tensor(-0.0971, dtype=torch.float64)), (1194, tensor(-0.0968, dtype=torch.float64)), (387, tensor(-0.0967, dtype=torch.float64)), (816, tensor(-0.0967, dtype=torch.float64)), (1498, tensor(-0.0967, dtype=torch.float64)), (2330, tensor(-0.0967, dtype=torch.float64)), (769, tensor(-0.0965, dtype=torch.float64)), (2669, tensor(-0.0965, dtype=torch.float64)), (625, tensor(-0.0962, dtype=torch.float64)), (318, tensor(-0.0960, dtype=torch.float64)), (176, tensor(-0.0960, dtype=torch.float64)), (21, tensor(-0.0958, dtype=torch.float64)), (2098, tensor(-0.0957, dtype=torch.float64)), (2915, tensor(-0.0957, dtype=torch.float64)), (2160, tensor(-0.0956, dtype=torch.float64)), (1640, tensor(-0.0956, dtype=torch.float64)), (3053, tensor(-0.0955, dtype=torch.float64)), (2031, tensor(-0.0955, dtype=torch.float64)), (2282, tensor(-0.0953, dtype=torch.float64)), (215, tensor(-0.0952, dtype=torch.float64)), (1177, tensor(-0.0952, dtype=torch.float64)), (1880, tensor(-0.0951, dtype=torch.float64)), (1373, tensor(-0.0950, dtype=torch.float64)), (2476, tensor(-0.0950, dtype=torch.float64)), (2734, tensor(-0.0949, dtype=torch.float64)), (1154, tensor(-0.0946, dtype=torch.float64)), (1096, tensor(-0.0946, dtype=torch.float64)), (567, tensor(-0.0946, dtype=torch.float64)), (917, tensor(-0.0944, dtype=torch.float64)), (2553, tensor(-0.0942, dtype=torch.float64)), (1592, tensor(-0.0941, dtype=torch.float64)), (364, tensor(-0.0938, dtype=torch.float64)), (1206, tensor(-0.0937, dtype=torch.float64)), (2802, tensor(-0.0936, dtype=torch.float64)), (784, tensor(-0.0936, dtype=torch.float64)), (578, tensor(-0.0935, dtype=torch.float64)), (2037, tensor(-0.0934, dtype=torch.float64)), (1667, tensor(-0.0934, dtype=torch.float64)), (547, tensor(-0.0933, dtype=torch.float64)), (437, tensor(-0.0933, dtype=torch.float64)), (225, tensor(-0.0932, dtype=torch.float64)), (480, tensor(-0.0929, dtype=torch.float64)), (801, tensor(-0.0928, dtype=torch.float64)), (493, tensor(-0.0926, dtype=torch.float64)), (2839, tensor(-0.0926, dtype=torch.float64)), (1521, tensor(-0.0925, dtype=torch.float64)), (643, tensor(-0.0924, dtype=torch.float64)), (2870, tensor(-0.0924, dtype=torch.float64)), (2948, tensor(-0.0924, dtype=torch.float64)), (1516, tensor(-0.0923, dtype=torch.float64)), (340, tensor(-0.0923, dtype=torch.float64)), (1742, tensor(-0.0922, dtype=torch.float64)), (3058, tensor(-0.0921, dtype=torch.float64)), (683, tensor(-0.0920, dtype=torch.float64)), (3118, tensor(-0.0917, dtype=torch.float64)), (2455, tensor(-0.0917, dtype=torch.float64)), (1084, tensor(-0.0916, dtype=torch.float64)), (255, tensor(-0.0914, dtype=torch.float64)), (1797, tensor(-0.0913, dtype=torch.float64)), (2026, tensor(-0.0913, dtype=torch.float64)), (1378, tensor(-0.0910, dtype=torch.float64)), (311, tensor(-0.0910, dtype=torch.float64)), (1738, tensor(-0.0909, dtype=torch.float64)), (1075, tensor(-0.0909, dtype=torch.float64)), (723, tensor(-0.0908, dtype=torch.float64)), (920, tensor(-0.0908, dtype=torch.float64)), (2642, tensor(-0.0908, dtype=torch.float64)), (389, tensor(-0.0906, dtype=torch.float64)), (1583, tensor(-0.0905, dtype=torch.float64)), (1892, tensor(-0.0904, dtype=torch.float64)), (1319, tensor(-0.0900, dtype=torch.float64)), (2742, tensor(-0.0899, dtype=torch.float64)), (607, tensor(-0.0898, dtype=torch.float64)), (2349, tensor(-0.0897, dtype=torch.float64)), (1132, tensor(-0.0895, dtype=torch.float64)), (1110, tensor(-0.0894, dtype=torch.float64)), (1767, tensor(-0.0894, dtype=torch.float64)), (2194, tensor(-0.0891, dtype=torch.float64)), (753, tensor(-0.0890, dtype=torch.float64)), (699, tensor(-0.0890, dtype=torch.float64)), (621, tensor(-0.0889, dtype=torch.float64)), (1603, tensor(-0.0888, dtype=torch.float64)), (1692, tensor(-0.0888, dtype=torch.float64)), (2459, tensor(-0.0888, dtype=torch.float64)), (1994, tensor(-0.0888, dtype=torch.float64)), (792, tensor(-0.0887, dtype=torch.float64)), (2788, tensor(-0.0886, dtype=torch.float64)), (379, tensor(-0.0886, dtype=torch.float64)), (1644, tensor(-0.0886, dtype=torch.float64)), (322, tensor(-0.0884, dtype=torch.float64)), (2156, tensor(-0.0884, dtype=torch.float64)), (1953, tensor(-0.0883, dtype=torch.float64)), (1955, tensor(-0.0883, dtype=torch.float64)), (2560, tensor(-0.0882, dtype=torch.float64)), (2958, tensor(-0.0882, dtype=torch.float64)), (1937, tensor(-0.0881, dtype=torch.float64)), (67, tensor(-0.0881, dtype=torch.float64)), (869, tensor(-0.0880, dtype=torch.float64)), (1482, tensor(-0.0878, dtype=torch.float64)), (2353, tensor(-0.0878, dtype=torch.float64)), (1822, tensor(-0.0877, dtype=torch.float64)), (2241, tensor(-0.0877, dtype=torch.float64)), (1078, tensor(-0.0874, dtype=torch.float64)), (2675, tensor(-0.0874, dtype=torch.float64)), (926, tensor(-0.0873, dtype=torch.float64)), (2466, tensor(-0.0871, dtype=torch.float64)), (438, tensor(-0.0870, dtype=torch.float64)), (2793, tensor(-0.0868, dtype=torch.float64)), (2747, tensor(-0.0868, dtype=torch.float64)), (695, tensor(-0.0867, dtype=torch.float64)), (1895, tensor(-0.0867, dtype=torch.float64)), (2969, tensor(-0.0866, dtype=torch.float64)), (1755, tensor(-0.0864, dtype=torch.float64)), (1292, tensor(-0.0864, dtype=torch.float64)), (111, tensor(-0.0864, dtype=torch.float64)), (1894, tensor(-0.0861, dtype=torch.float64)), (2077, tensor(-0.0861, dtype=torch.float64)), (2146, tensor(-0.0861, dtype=torch.float64)), (1376, tensor(-0.0860, dtype=torch.float64)), (2419, tensor(-0.0860, dtype=torch.float64)), (1660, tensor(-0.0860, dtype=torch.float64)), (1756, tensor(-0.0860, dtype=torch.float64)), (1040, tensor(-0.0858, dtype=torch.float64)), (3030, tensor(-0.0858, dtype=torch.float64)), (3174, tensor(-0.0858, dtype=torch.float64)), (1652, tensor(-0.0858, dtype=torch.float64)), (300, tensor(-0.0858, dtype=torch.float64)), (1801, tensor(-0.0858, dtype=torch.float64)), (720, tensor(-0.0858, dtype=torch.float64)), (1808, tensor(-0.0857, dtype=torch.float64)), (33, tensor(-0.0856, dtype=torch.float64)), (1590, tensor(-0.0855, dtype=torch.float64)), (1866, tensor(-0.0855, dtype=torch.float64)), (69, tensor(-0.0854, dtype=torch.float64)), (402, tensor(-0.0852, dtype=torch.float64)), (344, tensor(-0.0852, dtype=torch.float64)), (238, tensor(-0.0852, dtype=torch.float64)), (2537, tensor(-0.0850, dtype=torch.float64)), (1867, tensor(-0.0850, dtype=torch.float64)), (2819, tensor(-0.0849, dtype=torch.float64)), (1395, tensor(-0.0849, dtype=torch.float64)), (2490, tensor(-0.0848, dtype=torch.float64)), (109, tensor(-0.0848, dtype=torch.float64)), (2458, tensor(-0.0848, dtype=torch.float64)), (2018, tensor(-0.0847, dtype=torch.float64)), (1422, tensor(-0.0845, dtype=torch.float64)), (393, tensor(-0.0844, dtype=torch.float64)), (1993, tensor(-0.0844, dtype=torch.float64)), (197, tensor(-0.0844, dtype=torch.float64)), (2751, tensor(-0.0843, dtype=torch.float64)), (1921, tensor(-0.0842, dtype=torch.float64)), (412, tensor(-0.0841, dtype=torch.float64)), (755, tensor(-0.0841, dtype=torch.float64)), (386, tensor(-0.0841, dtype=torch.float64)), (2517, tensor(-0.0840, dtype=torch.float64)), (329, tensor(-0.0839, dtype=torch.float64)), (2585, tensor(-0.0838, dtype=torch.float64)), (1835, tensor(-0.0837, dtype=torch.float64)), (1311, tensor(-0.0837, dtype=torch.float64)), (2671, tensor(-0.0837, dtype=torch.float64)), (1405, tensor(-0.0837, dtype=torch.float64)), (2920, tensor(-0.0833, dtype=torch.float64)), (3140, tensor(-0.0832, dtype=torch.float64)), (1720, tensor(-0.0832, dtype=torch.float64)), (262, tensor(-0.0830, dtype=torch.float64)), (1677, tensor(-0.0830, dtype=torch.float64)), (2078, tensor(-0.0829, dtype=torch.float64)), (1322, tensor(-0.0829, dtype=torch.float64)), (172, tensor(-0.0829, dtype=torch.float64)), (1232, tensor(-0.0829, dtype=torch.float64)), (1619, tensor(-0.0829, dtype=torch.float64)), (1939, tensor(-0.0829, dtype=torch.float64)), (2851, tensor(-0.0828, dtype=torch.float64)), (976, tensor(-0.0827, dtype=torch.float64)), (272, tensor(-0.0826, dtype=torch.float64)), (2438, tensor(-0.0825, dtype=torch.float64)), (2686, tensor(-0.0823, dtype=torch.float64)), (2192, tensor(-0.0822, dtype=torch.float64)), (365, tensor(-0.0822, dtype=torch.float64)), (3040, tensor(-0.0821, dtype=torch.float64)), (1036, tensor(-0.0820, dtype=torch.float64)), (973, tensor(-0.0820, dtype=torch.float64)), (3064, tensor(-0.0819, dtype=torch.float64)), (737, tensor(-0.0819, dtype=torch.float64)), (23, tensor(-0.0819, dtype=torch.float64)), (2123, tensor(-0.0818, dtype=torch.float64)), (2378, tensor(-0.0817, dtype=torch.float64)), (2403, tensor(-0.0817, dtype=torch.float64)), (1637, tensor(-0.0816, dtype=torch.float64)), (1195, tensor(-0.0815, dtype=torch.float64)), (2973, tensor(-0.0814, dtype=torch.float64)), (1369, tensor(-0.0814, dtype=torch.float64)), (2677, tensor(-0.0812, dtype=torch.float64)), (2470, tensor(-0.0812, dtype=torch.float64)), (2645, tensor(-0.0812, dtype=torch.float64)), (934, tensor(-0.0810, dtype=torch.float64)), (2093, tensor(-0.0809, dtype=torch.float64)), (3166, tensor(-0.0808, dtype=torch.float64)), (1315, tensor(-0.0806, dtype=torch.float64)), (2841, tensor(-0.0806, dtype=torch.float64)), (985, tensor(-0.0805, dtype=torch.float64)), (1100, tensor(-0.0805, dtype=torch.float64)), (875, tensor(-0.0803, dtype=torch.float64)), (2177, tensor(-0.0802, dtype=torch.float64)), (1004, tensor(-0.0799, dtype=torch.float64)), (794, tensor(-0.0798, dtype=torch.float64)), (3013, tensor(-0.0797, dtype=torch.float64)), (3029, tensor(-0.0797, dtype=torch.float64)), (1198, tensor(-0.0796, dtype=torch.float64)), (265, tensor(-0.0796, dtype=torch.float64)), (219, tensor(-0.0795, dtype=torch.float64)), (754, tensor(-0.0795, dtype=torch.float64)), (955, tensor(-0.0795, dtype=torch.float64)), (247, tensor(-0.0795, dtype=torch.float64)), (2885, tensor(-0.0794, dtype=torch.float64)), (1287, tensor(-0.0794, dtype=torch.float64)), (843, tensor(-0.0794, dtype=torch.float64)), (1139, tensor(-0.0793, dtype=torch.float64)), (2289, tensor(-0.0792, dtype=torch.float64)), (269, tensor(-0.0790, dtype=torch.float64)), (2104, tensor(-0.0789, dtype=torch.float64)), (450, tensor(-0.0788, dtype=torch.float64)), (686, tensor(-0.0788, dtype=torch.float64)), (1361, tensor(-0.0788, dtype=torch.float64)), (1444, tensor(-0.0787, dtype=torch.float64)), (859, tensor(-0.0786, dtype=torch.float64)), (470, tensor(-0.0786, dtype=torch.float64)), (1143, tensor(-0.0786, dtype=torch.float64)), (237, tensor(-0.0785, dtype=torch.float64)), (1673, tensor(-0.0785, dtype=torch.float64)), (3043, tensor(-0.0785, dtype=torch.float64)), (2096, tensor(-0.0785, dtype=torch.float64)), (26, tensor(-0.0780, dtype=torch.float64)), (164, tensor(-0.0779, dtype=torch.float64)), (2454, tensor(-0.0778, dtype=torch.float64)), (850, tensor(-0.0778, dtype=torch.float64)), (2469, tensor(-0.0776, dtype=torch.float64)), (1512, tensor(-0.0774, dtype=torch.float64)), (3189, tensor(-0.0774, dtype=torch.float64)), (1358, tensor(-0.0772, dtype=torch.float64)), (2363, tensor(-0.0771, dtype=torch.float64)), (2442, tensor(-0.0771, dtype=torch.float64)), (2011, tensor(-0.0770, dtype=torch.float64)), (1479, tensor(-0.0768, dtype=torch.float64)), (2910, tensor(-0.0767, dtype=torch.float64)), (395, tensor(-0.0767, dtype=torch.float64)), (1778, tensor(-0.0767, dtype=torch.float64)), (217, tensor(-0.0766, dtype=torch.float64)), (512, tensor(-0.0765, dtype=torch.float64)), (1427, tensor(-0.0765, dtype=torch.float64)), (78, tensor(-0.0765, dtype=torch.float64)), (1218, tensor(-0.0765, dtype=torch.float64)), (1651, tensor(-0.0763, dtype=torch.float64)), (2162, tensor(-0.0762, dtype=torch.float64)), (163, tensor(-0.0761, dtype=torch.float64)), (921, tensor(-0.0761, dtype=torch.float64)), (541, tensor(-0.0761, dtype=torch.float64)), (2006, tensor(-0.0760, dtype=torch.float64)), (2394, tensor(-0.0759, dtype=torch.float64)), (500, tensor(-0.0759, dtype=torch.float64)), (2136, tensor(-0.0759, dtype=torch.float64)), (274, tensor(-0.0758, dtype=torch.float64)), (1624, tensor(-0.0758, dtype=torch.float64)), (2360, tensor(-0.0757, dtype=torch.float64)), (1780, tensor(-0.0756, dtype=torch.float64)), (1093, tensor(-0.0756, dtype=torch.float64)), (1543, tensor(-0.0756, dtype=torch.float64)), (167, tensor(-0.0756, dtype=torch.float64)), (2351, tensor(-0.0755, dtype=torch.float64)), (1148, tensor(-0.0755, dtype=torch.float64)), (351, tensor(-0.0754, dtype=torch.float64)), (1708, tensor(-0.0753, dtype=torch.float64)), (2650, tensor(-0.0752, dtype=torch.float64)), (1055, tensor(-0.0752, dtype=torch.float64)), (1625, tensor(-0.0752, dtype=torch.float64)), (817, tensor(-0.0752, dtype=torch.float64)), (1237, tensor(-0.0751, dtype=torch.float64)), (1633, tensor(-0.0751, dtype=torch.float64)), (876, tensor(-0.0751, dtype=torch.float64)), (2244, tensor(-0.0751, dtype=torch.float64)), (177, tensor(-0.0751, dtype=torch.float64)), (2562, tensor(-0.0750, dtype=torch.float64)), (2180, tensor(-0.0750, dtype=torch.float64)), (2746, tensor(-0.0750, dtype=torch.float64)), (2878, tensor(-0.0749, dtype=torch.float64)), (2550, tensor(-0.0749, dtype=torch.float64)), (1242, tensor(-0.0749, dtype=torch.float64)), (3090, tensor(-0.0748, dtype=torch.float64)), (2816, tensor(-0.0748, dtype=torch.float64)), (2456, tensor(-0.0748, dtype=torch.float64)), (617, tensor(-0.0748, dtype=torch.float64)), (1630, tensor(-0.0747, dtype=torch.float64)), (385, tensor(-0.0747, dtype=torch.float64)), (771, tensor(-0.0745, dtype=torch.float64)), (999, tensor(-0.0744, dtype=torch.float64)), (2211, tensor(-0.0744, dtype=torch.float64)), (2036, tensor(-0.0744, dtype=torch.float64)), (2852, tensor(-0.0742, dtype=torch.float64)), (1576, tensor(-0.0742, dtype=torch.float64)), (2218, tensor(-0.0741, dtype=torch.float64)), (800, tensor(-0.0741, dtype=torch.float64)), (3160, tensor(-0.0741, dtype=torch.float64)), (1919, tensor(-0.0739, dtype=torch.float64)), (1000, tensor(-0.0737, dtype=torch.float64)), (1460, tensor(-0.0737, dtype=torch.float64)), (3001, tensor(-0.0737, dtype=torch.float64)), (2449, tensor(-0.0736, dtype=torch.float64)), (501, tensor(-0.0734, dtype=torch.float64)), (1417, tensor(-0.0733, dtype=torch.float64)), (2084, tensor(-0.0733, dtype=torch.float64)), (1766, tensor(-0.0733, dtype=torch.float64)), (367, tensor(-0.0731, dtype=torch.float64)), (2993, tensor(-0.0731, dtype=torch.float64)), (1686, tensor(-0.0731, dtype=torch.float64)), (1546, tensor(-0.0730, dtype=torch.float64)), (2399, tensor(-0.0730, dtype=torch.float64)), (896, tensor(-0.0730, dtype=torch.float64)), (1024, tensor(-0.0729, dtype=torch.float64)), (2022, tensor(-0.0729, dtype=torch.float64)), (3093, tensor(-0.0729, dtype=torch.float64)), (31, tensor(-0.0729, dtype=torch.float64)), (2451, tensor(-0.0728, dtype=torch.float64)), (1210, tensor(-0.0727, dtype=torch.float64)), (2157, tensor(-0.0727, dtype=torch.float64)), (736, tensor(-0.0727, dtype=torch.float64)), (1446, tensor(-0.0726, dtype=torch.float64)), (1288, tensor(-0.0726, dtype=torch.float64)), (1825, tensor(-0.0724, dtype=torch.float64)), (2634, tensor(-0.0723, dtype=torch.float64)), (1447, tensor(-0.0723, dtype=torch.float64)), (2081, tensor(-0.0722, dtype=torch.float64)), (767, tensor(-0.0721, dtype=torch.float64)), (2529, tensor(-0.0720, dtype=torch.float64)), (335, tensor(-0.0720, dtype=torch.float64)), (1088, tensor(-0.0720, dtype=torch.float64)), (1703, tensor(-0.0720, dtype=torch.float64)), (2344, tensor(-0.0720, dtype=torch.float64)), (2618, tensor(-0.0720, dtype=torch.float64)), (1520, tensor(-0.0719, dtype=torch.float64)), (1340, tensor(-0.0719, dtype=torch.float64)), (1940, tensor(-0.0719, dtype=torch.float64)), (1041, tensor(-0.0719, dtype=torch.float64)), (2982, tensor(-0.0719, dtype=torch.float64)), (3011, tensor(-0.0718, dtype=torch.float64)), (734, tensor(-0.0718, dtype=torch.float64)), (89, tensor(-0.0718, dtype=torch.float64)), (2389, tensor(-0.0718, dtype=torch.float64)), (1202, tensor(-0.0717, dtype=torch.float64)), (3017, tensor(-0.0716, dtype=torch.float64)), (1962, tensor(-0.0716, dtype=torch.float64)), (2405, tensor(-0.0715, dtype=torch.float64)), (375, tensor(-0.0715, dtype=torch.float64)), (1058, tensor(-0.0715, dtype=torch.float64)), (1289, tensor(-0.0714, dtype=torch.float64)), (829, tensor(-0.0714, dtype=torch.float64)), (202, tensor(-0.0714, dtype=torch.float64)), (2858, tensor(-0.0714, dtype=torch.float64)), (977, tensor(-0.0713, dtype=torch.float64)), (22, tensor(-0.0712, dtype=torch.float64)), (1472, tensor(-0.0711, dtype=torch.float64)), (2212, tensor(-0.0709, dtype=torch.float64)), (2290, tensor(-0.0708, dtype=torch.float64)), (1258, tensor(-0.0708, dtype=torch.float64)), (873, tensor(-0.0706, dtype=torch.float64)), (2753, tensor(-0.0706, dtype=torch.float64)), (410, tensor(-0.0706, dtype=torch.float64)), (1597, tensor(-0.0705, dtype=torch.float64)), (1293, tensor(-0.0705, dtype=torch.float64)), (1483, tensor(-0.0705, dtype=torch.float64)), (724, tensor(-0.0705, dtype=torch.float64)), (2088, tensor(-0.0705, dtype=torch.float64)), (239, tensor(-0.0704, dtype=torch.float64)), (428, tensor(-0.0704, dtype=torch.float64)), (1459, tensor(-0.0704, dtype=torch.float64)), (770, tensor(-0.0704, dtype=torch.float64)), (1749, tensor(-0.0703, dtype=torch.float64)), (2002, tensor(-0.0702, dtype=torch.float64)), (235, tensor(-0.0702, dtype=torch.float64)), (1409, tensor(-0.0702, dtype=torch.float64)), (27, tensor(-0.0702, dtype=torch.float64)), (1528, tensor(-0.0702, dtype=torch.float64)), (966, tensor(-0.0701, dtype=torch.float64)), (1610, tensor(-0.0700, dtype=torch.float64)), (2248, tensor(-0.0700, dtype=torch.float64)), (669, tensor(-0.0700, dtype=torch.float64)), (2242, tensor(-0.0700, dtype=torch.float64)), (3089, tensor(-0.0699, dtype=torch.float64)), (3154, tensor(-0.0699, dtype=torch.float64)), (2667, tensor(-0.0699, dtype=torch.float64)), (446, tensor(-0.0699, dtype=torch.float64)), (932, tensor(-0.0699, dtype=torch.float64)), (1476, tensor(-0.0698, dtype=torch.float64)), (423, tensor(-0.0698, dtype=torch.float64)), (2531, tensor(-0.0698, dtype=torch.float64)), (2791, tensor(-0.0697, dtype=torch.float64)), (2377, tensor(-0.0697, dtype=torch.float64)), (1878, tensor(-0.0696, dtype=torch.float64)), (3026, tensor(-0.0695, dtype=torch.float64)), (791, tensor(-0.0695, dtype=torch.float64)), (2262, tensor(-0.0694, dtype=torch.float64)), (885, tensor(-0.0694, dtype=torch.float64)), (2217, tensor(-0.0694, dtype=torch.float64)), (434, tensor(-0.0694, dtype=torch.float64)), (3143, tensor(-0.0693, dtype=torch.float64)), (1856, tensor(-0.0693, dtype=torch.float64)), (112, tensor(-0.0693, dtype=torch.float64)), (2199, tensor(-0.0693, dtype=torch.float64)), (806, tensor(-0.0692, dtype=torch.float64)), (1855, tensor(-0.0692, dtype=torch.float64)), (571, tensor(-0.0692, dtype=torch.float64)), (2797, tensor(-0.0692, dtype=torch.float64)), (323, tensor(-0.0691, dtype=torch.float64)), (2595, tensor(-0.0691, dtype=torch.float64)), (2524, tensor(-0.0690, dtype=torch.float64)), (1567, tensor(-0.0690, dtype=torch.float64)), (2183, tensor(-0.0690, dtype=torch.float64)), (584, tensor(-0.0690, dtype=torch.float64)), (2648, tensor(-0.0689, dtype=torch.float64)), (1828, tensor(-0.0689, dtype=torch.float64)), (847, tensor(-0.0689, dtype=torch.float64)), (1670, tensor(-0.0689, dtype=torch.float64)), (363, tensor(-0.0687, dtype=torch.float64)), (2781, tensor(-0.0686, dtype=torch.float64)), (1151, tensor(-0.0685, dtype=torch.float64)), (426, tensor(-0.0684, dtype=torch.float64)), (2185, tensor(-0.0683, dtype=torch.float64)), (304, tensor(-0.0683, dtype=torch.float64)), (2845, tensor(-0.0682, dtype=torch.float64)), (591, tensor(-0.0682, dtype=torch.float64)), (2809, tensor(-0.0681, dtype=torch.float64)), (3049, tensor(-0.0680, dtype=torch.float64)), (892, tensor(-0.0680, dtype=torch.float64)), (1426, tensor(-0.0680, dtype=torch.float64)), (1944, tensor(-0.0679, dtype=torch.float64)), (565, tensor(-0.0679, dtype=torch.float64)), (1896, tensor(-0.0678, dtype=torch.float64)), (2267, tensor(-0.0678, dtype=torch.float64)), (2418, tensor(-0.0678, dtype=torch.float64)), (2765, tensor(-0.0678, dtype=torch.float64)), (739, tensor(-0.0677, dtype=torch.float64)), (776, tensor(-0.0677, dtype=torch.float64)), (2375, tensor(-0.0676, dtype=torch.float64)), (489, tensor(-0.0676, dtype=torch.float64)), (662, tensor(-0.0676, dtype=torch.float64)), (2271, tensor(-0.0674, dtype=torch.float64)), (2782, tensor(-0.0674, dtype=torch.float64)), (125, tensor(-0.0674, dtype=torch.float64)), (1665, tensor(-0.0674, dtype=torch.float64)), (713, tensor(-0.0673, dtype=torch.float64)), (1032, tensor(-0.0672, dtype=torch.float64)), (1318, tensor(-0.0672, dtype=torch.float64)), (1504, tensor(-0.0672, dtype=torch.float64)), (50, tensor(-0.0671, dtype=torch.float64)), (531, tensor(-0.0671, dtype=torch.float64)), (2877, tensor(-0.0670, dtype=torch.float64)), (659, tensor(-0.0668, dtype=torch.float64)), (2614, tensor(-0.0668, dtype=torch.float64)), (1265, tensor(-0.0668, dtype=torch.float64)), (1786, tensor(-0.0668, dtype=torch.float64)), (2532, tensor(-0.0668, dtype=torch.float64)), (502, tensor(-0.0667, dtype=torch.float64)), (1818, tensor(-0.0667, dtype=torch.float64)), (407, tensor(-0.0667, dtype=torch.float64)), (1264, tensor(-0.0667, dtype=torch.float64)), (2548, tensor(-0.0666, dtype=torch.float64)), (68, tensor(-0.0665, dtype=torch.float64)), (3070, tensor(-0.0665, dtype=torch.float64)), (781, tensor(-0.0665, dtype=torch.float64)), (264, tensor(-0.0664, dtype=torch.float64)), (2312, tensor(-0.0664, dtype=torch.float64)), (1792, tensor(-0.0664, dtype=torch.float64)), (1053, tensor(-0.0663, dtype=torch.float64)), (1178, tensor(-0.0662, dtype=torch.float64)), (409, tensor(-0.0661, dtype=torch.float64)), (2322, tensor(-0.0660, dtype=torch.float64)), (3133, tensor(-0.0660, dtype=torch.float64)), (1079, tensor(-0.0660, dtype=torch.float64)), (3161, tensor(-0.0658, dtype=torch.float64)), (2912, tensor(-0.0658, dtype=torch.float64)), (1622, tensor(-0.0658, dtype=torch.float64)), (2310, tensor(-0.0657, dtype=torch.float64)), (171, tensor(-0.0657, dtype=torch.float64)), (914, tensor(-0.0656, dtype=torch.float64)), (2095, tensor(-0.0656, dtype=torch.float64)), (978, tensor(-0.0656, dtype=torch.float64)), (1783, tensor(-0.0655, dtype=torch.float64)), (831, tensor(-0.0654, dtype=torch.float64)), (2295, tensor(-0.0654, dtype=torch.float64)), (1484, tensor(-0.0653, dtype=torch.float64)), (1526, tensor(-0.0653, dtype=torch.float64)), (280, tensor(-0.0651, dtype=torch.float64)), (2027, tensor(-0.0651, dtype=torch.float64)), (2361, tensor(-0.0651, dtype=torch.float64)), (2728, tensor(-0.0651, dtype=torch.float64)), (2717, tensor(-0.0650, dtype=torch.float64)), (66, tensor(-0.0649, dtype=torch.float64)), (2652, tensor(-0.0649, dtype=torch.float64)), (2711, tensor(-0.0649, dtype=torch.float64)), (629, tensor(-0.0648, dtype=torch.float64)), (773, tensor(-0.0647, dtype=torch.float64)), (2929, tensor(-0.0647, dtype=torch.float64)), (1120, tensor(-0.0647, dtype=torch.float64)), (1352, tensor(-0.0646, dtype=torch.float64)), (2911, tensor(-0.0645, dtype=torch.float64)), (2626, tensor(-0.0643, dtype=torch.float64)), (2615, tensor(-0.0643, dtype=torch.float64)), (2409, tensor(-0.0643, dtype=torch.float64)), (2082, tensor(-0.0642, dtype=torch.float64)), (3012, tensor(-0.0641, dtype=torch.float64)), (422, tensor(-0.0640, dtype=torch.float64)), (1898, tensor(-0.0639, dtype=torch.float64)), (616, tensor(-0.0639, dtype=torch.float64)), (41, tensor(-0.0638, dtype=torch.float64)), (1714, tensor(-0.0638, dtype=torch.float64)), (780, tensor(-0.0637, dtype=torch.float64)), (2777, tensor(-0.0636, dtype=torch.float64)), (2331, tensor(-0.0636, dtype=torch.float64)), (627, tensor(-0.0636, dtype=torch.float64)), (2577, tensor(-0.0636, dtype=torch.float64)), (1759, tensor(-0.0636, dtype=torch.float64)), (3075, tensor(-0.0636, dtype=torch.float64)), (1980, tensor(-0.0636, dtype=torch.float64)), (1763, tensor(-0.0635, dtype=torch.float64)), (2659, tensor(-0.0635, dtype=torch.float64)), (2723, tensor(-0.0634, dtype=torch.float64)), (2628, tensor(-0.0633, dtype=torch.float64)), (254, tensor(-0.0631, dtype=torch.float64)), (2066, tensor(-0.0630, dtype=torch.float64)), (336, tensor(-0.0630, dtype=torch.float64)), (2300, tensor(-0.0630, dtype=torch.float64)), (1863, tensor(-0.0628, dtype=torch.float64)), (2050, tensor(-0.0628, dtype=torch.float64)), (326, tensor(-0.0627, dtype=torch.float64)), (2556, tensor(-0.0627, dtype=torch.float64)), (3113, tensor(-0.0627, dtype=torch.float64)), (1035, tensor(-0.0626, dtype=torch.float64)), (1494, tensor(-0.0626, dtype=torch.float64)), (1147, tensor(-0.0625, dtype=torch.float64)), (2048, tensor(-0.0624, dtype=torch.float64)), (1157, tensor(-0.0624, dtype=torch.float64)), (396, tensor(-0.0624, dtype=torch.float64)), (2874, tensor(-0.0624, dtype=torch.float64)), (1351, tensor(-0.0623, dtype=torch.float64)), (1165, tensor(-0.0622, dtype=torch.float64)), (1695, tensor(-0.0622, dtype=torch.float64)), (1006, tensor(-0.0621, dtype=torch.float64)), (1280, tensor(-0.0620, dtype=torch.float64)), (2875, tensor(-0.0620, dtype=torch.float64)), (2233, tensor(-0.0619, dtype=torch.float64)), (3095, tensor(-0.0619, dtype=torch.float64)), (1589, tensor(-0.0619, dtype=torch.float64)), (735, tensor(-0.0618, dtype=torch.float64)), (717, tensor(-0.0618, dtype=torch.float64)), (1357, tensor(-0.0617, dtype=torch.float64)), (461, tensor(-0.0617, dtype=torch.float64)), (620, tensor(-0.0616, dtype=torch.float64)), (2803, tensor(-0.0616, dtype=torch.float64)), (332, tensor(-0.0615, dtype=torch.float64)), (729, tensor(-0.0614, dtype=torch.float64)), (2103, tensor(-0.0614, dtype=torch.float64)), (1105, tensor(-0.0614, dtype=torch.float64)), (435, tensor(-0.0613, dtype=torch.float64)), (1323, tensor(-0.0613, dtype=torch.float64)), (1328, tensor(-0.0612, dtype=torch.float64)), (1144, tensor(-0.0611, dtype=torch.float64)), (2368, tensor(-0.0610, dtype=torch.float64)), (361, tensor(-0.0610, dtype=torch.float64)), (3107, tensor(-0.0610, dtype=torch.float64)), (3139, tensor(-0.0610, dtype=torch.float64)), (2171, tensor(-0.0609, dtype=torch.float64)), (1089, tensor(-0.0609, dtype=torch.float64)), (1297, tensor(-0.0609, dtype=torch.float64)), (2853, tensor(-0.0608, dtype=torch.float64)), (2501, tensor(-0.0608, dtype=torch.float64)), (348, tensor(-0.0608, dtype=torch.float64)), (2766, tensor(-0.0608, dtype=torch.float64)), (1022, tensor(-0.0608, dtype=torch.float64)), (2512, tensor(-0.0608, dtype=torch.float64)), (2132, tensor(-0.0608, dtype=torch.float64)), (649, tensor(-0.0607, dtype=torch.float64)), (3009, tensor(-0.0607, dtype=torch.float64)), (783, tensor(-0.0607, dtype=torch.float64)), (1777, tensor(-0.0606, dtype=torch.float64)), (1329, tensor(-0.0605, dtype=torch.float64)), (1963, tensor(-0.0605, dtype=torch.float64)), (1019, tensor(-0.0605, dtype=torch.float64)), (2357, tensor(-0.0604, dtype=torch.float64)), (1045, tensor(-0.0604, dtype=torch.float64)), (706, tensor(-0.0604, dtype=torch.float64)), (494, tensor(-0.0604, dtype=torch.float64)), (2660, tensor(-0.0604, dtype=torch.float64)), (964, tensor(-0.0603, dtype=torch.float64)), (1192, tensor(-0.0602, dtype=torch.float64)), (2908, tensor(-0.0602, dtype=torch.float64)), (2332, tensor(-0.0601, dtype=torch.float64)), (2034, tensor(-0.0601, dtype=torch.float64)), (1342, tensor(-0.0601, dtype=torch.float64)), (2695, tensor(-0.0600, dtype=torch.float64)), (1118, tensor(-0.0599, dtype=torch.float64)), (2923, tensor(-0.0599, dtype=torch.float64)), (1404, tensor(-0.0599, dtype=torch.float64)), (2143, tensor(-0.0599, dtype=torch.float64)), (1090, tensor(-0.0598, dtype=torch.float64)), (1214, tensor(-0.0598, dtype=torch.float64)), (702, tensor(-0.0598, dtype=torch.float64)), (2033, tensor(-0.0597, dtype=torch.float64)), (710, tensor(-0.0596, dtype=torch.float64)), (2522, tensor(-0.0595, dtype=torch.float64)), (127, tensor(-0.0594, dtype=torch.float64)), (1967, tensor(-0.0593, dtype=torch.float64)), (1215, tensor(-0.0592, dtype=torch.float64)), (1874, tensor(-0.0592, dtype=torch.float64)), (1321, tensor(-0.0592, dtype=torch.float64)), (1300, tensor(-0.0592, dtype=torch.float64)), (1150, tensor(-0.0591, dtype=torch.float64)), (855, tensor(-0.0591, dtype=torch.float64)), (2997, tensor(-0.0591, dtype=torch.float64)), (321, tensor(-0.0590, dtype=torch.float64)), (79, tensor(-0.0590, dtype=torch.float64)), (1034, tensor(-0.0590, dtype=torch.float64)), (1317, tensor(-0.0589, dtype=torch.float64)), (138, tensor(-0.0587, dtype=torch.float64)), (2811, tensor(-0.0587, dtype=torch.float64)), (1973, tensor(-0.0587, dtype=torch.float64)), (675, tensor(-0.0587, dtype=torch.float64)), (1103, tensor(-0.0585, dtype=torch.float64)), (622, tensor(-0.0585, dtype=torch.float64)), (1141, tensor(-0.0585, dtype=torch.float64)), (1443, tensor(-0.0584, dtype=torch.float64)), (1128, tensor(-0.0584, dtype=torch.float64)), (3019, tensor(-0.0584, dtype=torch.float64)), (2500, tensor(-0.0584, dtype=torch.float64)), (487, tensor(-0.0583, dtype=torch.float64)), (1609, tensor(-0.0583, dtype=torch.float64)), (506, tensor(-0.0582, dtype=torch.float64)), (2907, tensor(-0.0581, dtype=torch.float64)), (854, tensor(-0.0581, dtype=torch.float64)), (2219, tensor(-0.0580, dtype=torch.float64)), (581, tensor(-0.0580, dtype=torch.float64)), (946, tensor(-0.0580, dtype=torch.float64)), (2129, tensor(-0.0580, dtype=torch.float64)), (2596, tensor(-0.0579, dtype=torch.float64)), (2890, tensor(-0.0579, dtype=torch.float64)), (2995, tensor(-0.0577, dtype=torch.float64)), (1530, tensor(-0.0577, dtype=torch.float64)), (2610, tensor(-0.0577, dtype=torch.float64)), (131, tensor(-0.0576, dtype=torch.float64)), (142, tensor(-0.0576, dtype=torch.float64)), (2941, tensor(-0.0576, dtype=torch.float64)), (2422, tensor(-0.0575, dtype=torch.float64)), (100, tensor(-0.0575, dtype=torch.float64)), (968, tensor(-0.0574, dtype=torch.float64)), (1153, tensor(-0.0573, dtype=torch.float64)), (1238, tensor(-0.0573, dtype=torch.float64)), (2152, tensor(-0.0572, dtype=torch.float64)), (1076, tensor(-0.0570, dtype=torch.float64)), (2202, tensor(-0.0570, dtype=torch.float64)), (472, tensor(-0.0570, dtype=torch.float64)), (2200, tensor(-0.0568, dtype=torch.float64)), (2644, tensor(-0.0568, dtype=torch.float64)), (924, tensor(-0.0567, dtype=torch.float64)), (2144, tensor(-0.0567, dtype=torch.float64)), (1562, tensor(-0.0567, dtype=torch.float64)), (2709, tensor(-0.0567, dtype=torch.float64)), (1057, tensor(-0.0567, dtype=torch.float64)), (757, tensor(-0.0566, dtype=torch.float64)), (1555, tensor(-0.0566, dtype=torch.float64)), (857, tensor(-0.0565, dtype=torch.float64)), (2729, tensor(-0.0565, dtype=torch.float64)), (1540, tensor(-0.0565, dtype=torch.float64)), (933, tensor(-0.0564, dtype=torch.float64)), (2593, tensor(-0.0564, dtype=torch.float64)), (548, tensor(-0.0564, dtype=torch.float64)), (2584, tensor(-0.0564, dtype=torch.float64)), (1080, tensor(-0.0563, dtype=torch.float64)), (3195, tensor(-0.0562, dtype=torch.float64)), (2638, tensor(-0.0561, dtype=torch.float64)), (1836, tensor(-0.0561, dtype=torch.float64)), (1487, tensor(-0.0561, dtype=torch.float64)), (1423, tensor(-0.0561, dtype=torch.float64)), (479, tensor(-0.0560, dtype=torch.float64)), (1497, tensor(-0.0560, dtype=torch.float64)), (223, tensor(-0.0560, dtype=torch.float64)), (3067, tensor(-0.0559, dtype=torch.float64)), (2745, tensor(-0.0559, dtype=torch.float64)), (2928, tensor(-0.0559, dtype=torch.float64)), (62, tensor(-0.0558, dtype=torch.float64)), (3094, tensor(-0.0558, dtype=torch.float64)), (2395, tensor(-0.0558, dtype=torch.float64)), (3136, tensor(-0.0558, dtype=torch.float64)), (2230, tensor(-0.0557, dtype=torch.float64)), (1260, tensor(-0.0557, dtype=torch.float64)), (2613, tensor(-0.0557, dtype=torch.float64)), (350, tensor(-0.0557, dtype=torch.float64)), (2506, tensor(-0.0557, dtype=torch.float64)), (2808, tensor(-0.0556, dtype=torch.float64)), (2779, tensor(-0.0556, dtype=torch.float64)), (862, tensor(-0.0556, dtype=torch.float64)), (793, tensor(-0.0555, dtype=torch.float64)), (2307, tensor(-0.0555, dtype=torch.float64)), (2718, tensor(-0.0554, dtype=torch.float64)), (2767, tensor(-0.0554, dtype=torch.float64)), (2362, tensor(-0.0553, dtype=torch.float64)), (2384, tensor(-0.0553, dtype=torch.float64)), (953, tensor(-0.0553, dtype=torch.float64)), (417, tensor(-0.0553, dtype=torch.float64)), (1790, tensor(-0.0552, dtype=torch.float64)), (671, tensor(-0.0552, dtype=torch.float64)), (1945, tensor(-0.0552, dtype=torch.float64)), (1861, tensor(-0.0552, dtype=torch.float64)), (1845, tensor(-0.0552, dtype=torch.float64)), (1734, tensor(-0.0552, dtype=torch.float64)), (3122, tensor(-0.0552, dtype=torch.float64)), (1187, tensor(-0.0551, dtype=torch.float64)), (2003, tensor(-0.0550, dtype=torch.float64)), (1310, tensor(-0.0550, dtype=torch.float64)), (465, tensor(-0.0550, dtype=torch.float64)), (929, tensor(-0.0549, dtype=torch.float64)), (1221, tensor(-0.0547, dtype=torch.float64)), (2932, tensor(-0.0545, dtype=torch.float64)), (3110, tensor(-0.0545, dtype=torch.float64)), (1918, tensor(-0.0545, dtype=torch.float64)), (1181, tensor(-0.0544, dtype=torch.float64)), (1162, tensor(-0.0544, dtype=torch.float64)), (1847, tensor(-0.0543, dtype=torch.float64)), (28, tensor(-0.0543, dtype=torch.float64)), (301, tensor(-0.0543, dtype=torch.float64)), (1183, tensor(-0.0543, dtype=torch.float64)), (3151, tensor(-0.0542, dtype=torch.float64)), (1904, tensor(-0.0542, dtype=torch.float64)), (82, tensor(-0.0542, dtype=torch.float64)), (2358, tensor(-0.0542, dtype=torch.float64)), (2704, tensor(-0.0541, dtype=torch.float64)), (1171, tensor(-0.0541, dtype=torch.float64)), (75, tensor(-0.0541, dtype=torch.float64)), (2594, tensor(-0.0541, dtype=torch.float64)), (121, tensor(-0.0541, dtype=torch.float64)), (498, tensor(-0.0540, dtype=torch.float64)), (359, tensor(-0.0539, dtype=torch.float64)), (1643, tensor(-0.0538, dtype=torch.float64)), (1970, tensor(-0.0537, dtype=torch.float64)), (2950, tensor(-0.0537, dtype=torch.float64)), (2824, tensor(-0.0537, dtype=torch.float64)), (1718, tensor(-0.0537, dtype=torch.float64)), (1146, tensor(-0.0536, dtype=torch.float64)), (2546, tensor(-0.0536, dtype=torch.float64)), (1579, tensor(-0.0535, dtype=torch.float64)), (1959, tensor(-0.0535, dtype=torch.float64)), (1885, tensor(-0.0534, dtype=torch.float64)), (1907, tensor(-0.0534, dtype=torch.float64)), (227, tensor(-0.0533, dtype=torch.float64)), (1470, tensor(-0.0533, dtype=torch.float64)), (1650, tensor(-0.0532, dtype=torch.float64)), (2277, tensor(-0.0531, dtype=torch.float64)), (940, tensor(-0.0531, dtype=torch.float64)), (961, tensor(-0.0531, dtype=torch.float64)), (2059, tensor(-0.0531, dtype=torch.float64)), (260, tensor(-0.0530, dtype=torch.float64)), (1345, tensor(-0.0529, dtype=torch.float64)), (1676, tensor(-0.0529, dtype=torch.float64)), (1253, tensor(-0.0529, dtype=torch.float64)), (676, tensor(-0.0529, dtype=torch.float64)), (1007, tensor(-0.0528, dtype=torch.float64)), (1348, tensor(-0.0528, dtype=torch.float64)), (2866, tensor(-0.0528, dtype=torch.float64)), (1272, tensor(-0.0528, dtype=torch.float64)), (840, tensor(-0.0527, dtype=torch.float64)), (381, tensor(-0.0527, dtype=torch.float64)), (1798, tensor(-0.0527, dtype=torch.float64)), (916, tensor(-0.0527, dtype=torch.float64)), (1212, tensor(-0.0527, dtype=torch.float64)), (2125, tensor(-0.0526, dtype=torch.float64)), (185, tensor(-0.0526, dtype=torch.float64)), (2919, tensor(-0.0525, dtype=torch.float64)), (518, tensor(-0.0525, dtype=torch.float64)), (298, tensor(-0.0524, dtype=torch.float64)), (2829, tensor(-0.0524, dtype=torch.float64)), (456, tensor(-0.0524, dtype=torch.float64)), (1690, tensor(-0.0524, dtype=torch.float64)), (2235, tensor(-0.0523, dtype=torch.float64)), (1745, tensor(-0.0523, dtype=torch.float64)), (1524, tensor(-0.0523, dtype=torch.float64)), (1988, tensor(-0.0523, dtype=torch.float64)), (3038, tensor(-0.0522, dtype=torch.float64)), (1575, tensor(-0.0522, dtype=torch.float64)), (3006, tensor(-0.0522, dtype=torch.float64)), (11, tensor(-0.0522, dtype=torch.float64)), (3046, tensor(-0.0522, dtype=torch.float64)), (1145, tensor(-0.0521, dtype=torch.float64)), (1844, tensor(-0.0520, dtype=torch.float64)), (2569, tensor(-0.0520, dtype=torch.float64)), (2817, tensor(-0.0519, dtype=torch.float64)), (165, tensor(-0.0519, dtype=torch.float64)), (1158, tensor(-0.0517, dtype=torch.float64)), (2528, tensor(-0.0517, dtype=torch.float64)), (550, tensor(-0.0516, dtype=torch.float64)), (3002, tensor(-0.0516, dtype=torch.float64)), (2090, tensor(-0.0516, dtype=torch.float64)), (2462, tensor(-0.0515, dtype=torch.float64)), (3033, tensor(-0.0515, dtype=torch.float64)), (1263, tensor(-0.0514, dtype=torch.float64)), (2376, tensor(-0.0514, dtype=torch.float64)), (1298, tensor(-0.0514, dtype=torch.float64)), (824, tensor(-0.0514, dtype=torch.float64)), (595, tensor(-0.0514, dtype=torch.float64)), (844, tensor(-0.0514, dtype=torch.float64)), (1688, tensor(-0.0513, dtype=torch.float64)), (2179, tensor(-0.0512, dtype=torch.float64)), (1503, tensor(-0.0511, dtype=torch.float64)), (3115, tensor(-0.0511, dtype=torch.float64)), (1912, tensor(-0.0510, dtype=torch.float64)), (3120, tensor(-0.0510, dtype=torch.float64)), (828, tensor(-0.0508, dtype=torch.float64)), (253, tensor(-0.0508, dtype=torch.float64)), (408, tensor(-0.0507, dtype=torch.float64)), (774, tensor(-0.0506, dtype=torch.float64)), (2934, tensor(-0.0505, dtype=torch.float64)), (822, tensor(-0.0505, dtype=torch.float64)), (2263, tensor(-0.0505, dtype=torch.float64)), (2740, tensor(-0.0505, dtype=torch.float64)), (2452, tensor(-0.0504, dtype=torch.float64)), (457, tensor(-0.0504, dtype=torch.float64)), (2872, tensor(-0.0503, dtype=torch.float64)), (1220, tensor(-0.0503, dtype=torch.float64)), (1977, tensor(-0.0503, dtype=torch.float64)), (2075, tensor(-0.0503, dtype=torch.float64)), (2552, tensor(-0.0502, dtype=torch.float64)), (1248, tensor(-0.0502, dtype=torch.float64)), (1135, tensor(-0.0502, dtype=torch.float64)), (2608, tensor(-0.0500, dtype=torch.float64)), (1448, tensor(-0.0499, dtype=torch.float64)), (331, tensor(-0.0499, dtype=torch.float64)), (2463, tensor(-0.0499, dtype=torch.float64)), (878, tensor(-0.0499, dtype=torch.float64)), (3035, tensor(-0.0499, dtype=torch.float64)), (77, tensor(-0.0498, dtype=torch.float64)), (685, tensor(-0.0498, dtype=torch.float64)), (1356, tensor(-0.0498, dtype=torch.float64)), (812, tensor(-0.0498, dtype=torch.float64)), (2592, tensor(-0.0498, dtype=torch.float64)), (13, tensor(-0.0498, dtype=torch.float64)), (2043, tensor(-0.0498, dtype=torch.float64)), (2135, tensor(-0.0498, dtype=torch.float64)), (2473, tensor(-0.0497, dtype=torch.float64)), (1510, tensor(-0.0497, dtype=torch.float64)), (230, tensor(-0.0497, dtype=torch.float64)), (130, tensor(-0.0497, dtype=torch.float64)), (2835, tensor(-0.0497, dtype=torch.float64)), (708, tensor(-0.0497, dtype=torch.float64)), (2542, tensor(-0.0497, dtype=torch.float64)), (838, tensor(-0.0496, dtype=torch.float64)), (200, tensor(-0.0495, dtype=torch.float64)), (668, tensor(-0.0495, dtype=torch.float64)), (1571, tensor(-0.0495, dtype=torch.float64)), (303, tensor(-0.0493, dtype=torch.float64)), (508, tensor(-0.0492, dtype=torch.float64)), (2198, tensor(-0.0491, dtype=torch.float64)), (1501, tensor(-0.0491, dtype=torch.float64)), (1679, tensor(-0.0491, dtype=torch.float64)), (1495, tensor(-0.0491, dtype=torch.float64)), (134, tensor(-0.0490, dtype=torch.float64)), (611, tensor(-0.0490, dtype=torch.float64)), (2807, tensor(-0.0490, dtype=torch.float64)), (2190, tensor(-0.0489, dtype=torch.float64)), (181, tensor(-0.0489, dtype=torch.float64)), (250, tensor(-0.0489, dtype=torch.float64)), (2818, tensor(-0.0488, dtype=torch.float64)), (637, tensor(-0.0488, dtype=torch.float64)), (140, tensor(-0.0487, dtype=torch.float64)), (1891, tensor(-0.0487, dtype=torch.float64)), (2223, tensor(-0.0485, dtype=torch.float64)), (1125, tensor(-0.0485, dtype=torch.float64)), (282, tensor(-0.0485, dtype=torch.float64)), (2972, tensor(-0.0485, dtype=torch.float64)), (1196, tensor(-0.0484, dtype=torch.float64)), (3192, tensor(-0.0483, dtype=torch.float64)), (3021, tensor(-0.0483, dtype=torch.float64)), (1906, tensor(-0.0482, dtype=torch.float64)), (3153, tensor(-0.0482, dtype=torch.float64)), (32, tensor(-0.0482, dtype=torch.float64)), (2761, tensor(-0.0482, dtype=torch.float64)), (1704, tensor(-0.0482, dtype=torch.float64)), (1851, tensor(-0.0481, dtype=torch.float64)), (2260, tensor(-0.0480, dtype=torch.float64)), (1947, tensor(-0.0480, dtype=torch.float64)), (555, tensor(-0.0479, dtype=torch.float64)), (2106, tensor(-0.0479, dtype=torch.float64)), (2630, tensor(-0.0478, dtype=torch.float64)), (2736, tensor(-0.0478, dtype=torch.float64)), (2956, tensor(-0.0477, dtype=torch.float64)), (1166, tensor(-0.0477, dtype=torch.float64)), (1682, tensor(-0.0476, dtype=torch.float64)), (356, tensor(-0.0476, dtype=torch.float64)), (1539, tensor(-0.0475, dtype=torch.float64)), (263, tensor(-0.0475, dtype=torch.float64)), (3016, tensor(-0.0475, dtype=torch.float64)), (2237, tensor(-0.0474, dtype=torch.float64)), (3100, tensor(-0.0474, dtype=torch.float64)), (1111, tensor(-0.0474, dtype=torch.float64)), (2496, tensor(-0.0474, dtype=torch.float64)), (1525, tensor(-0.0474, dtype=torch.float64)), (369, tensor(-0.0474, dtype=torch.float64)), (154, tensor(-0.0474, dtype=torch.float64)), (151, tensor(-0.0473, dtype=torch.float64)), (1002, tensor(-0.0473, dtype=torch.float64)), (764, tensor(-0.0473, dtype=torch.float64)), (2071, tensor(-0.0473, dtype=torch.float64)), (1653, tensor(-0.0473, dtype=torch.float64)), (2646, tensor(-0.0473, dtype=torch.float64)), (790, tensor(-0.0472, dtype=torch.float64)), (2988, tensor(-0.0472, dtype=torch.float64)), (346, tensor(-0.0472, dtype=torch.float64)), (2581, tensor(-0.0472, dtype=torch.float64)), (3000, tensor(-0.0471, dtype=torch.float64)), (2460, tensor(-0.0471, dtype=torch.float64)), (1346, tensor(-0.0471, dtype=torch.float64)), (2086, tensor(-0.0471, dtype=torch.float64)), (1256, tensor(-0.0470, dtype=torch.float64)), (1826, tensor(-0.0470, dtype=torch.float64)), (2354, tensor(-0.0470, dtype=torch.float64)), (772, tensor(-0.0470, dtype=torch.float64)), (2410, tensor(-0.0470, dtype=torch.float64)), (2689, tensor(-0.0470, dtype=torch.float64)), (2065, tensor(-0.0469, dtype=torch.float64)), (2149, tensor(-0.0469, dtype=torch.float64)), (652, tensor(-0.0469, dtype=torch.float64)), (2935, tensor(-0.0469, dtype=torch.float64)), (1641, tensor(-0.0469, dtype=torch.float64)), (221, tensor(-0.0469, dtype=torch.float64)), (43, tensor(-0.0468, dtype=torch.float64)), (427, tensor(-0.0468, dtype=torch.float64)), (3065, tensor(-0.0467, dtype=torch.float64)), (1230, tensor(-0.0467, dtype=torch.float64)), (105, tensor(-0.0467, dtype=torch.float64)), (2215, tensor(-0.0467, dtype=torch.float64)), (1709, tensor(-0.0466, dtype=torch.float64)), (2492, tensor(-0.0466, dtype=torch.float64)), (3080, tensor(-0.0466, dtype=torch.float64)), (1456, tensor(-0.0466, dtype=torch.float64)), (3179, tensor(-0.0465, dtype=torch.float64)), (507, tensor(-0.0465, dtype=torch.float64)), (1841, tensor(-0.0465, dtype=torch.float64)), (1123, tensor(-0.0464, dtype=torch.float64)), (2057, tensor(-0.0463, dtype=torch.float64)), (879, tensor(-0.0463, dtype=torch.float64)), (2847, tensor(-0.0463, dtype=torch.float64)), (1852, tensor(-0.0463, dtype=torch.float64)), (1071, tensor(-0.0462, dtype=torch.float64)), (312, tensor(-0.0462, dtype=torch.float64)), (2475, tensor(-0.0461, dtype=torch.float64)), (2597, tensor(-0.0461, dtype=torch.float64)), (1942, tensor(-0.0461, dtype=torch.float64)), (965, tensor(-0.0460, dtype=torch.float64)), (1305, tensor(-0.0460, dtype=torch.float64)), (1048, tensor(-0.0459, dtype=torch.float64)), (1168, tensor(-0.0457, dtype=torch.float64)), (1553, tensor(-0.0457, dtype=torch.float64)), (2433, tensor(-0.0456, dtype=torch.float64)), (2893, tensor(-0.0456, dtype=torch.float64)), (1130, tensor(-0.0455, dtype=torch.float64)), (748, tensor(-0.0455, dtype=torch.float64)), (3048, tensor(-0.0455, dtype=torch.float64)), (677, tensor(-0.0455, dtype=torch.float64)), (2975, tensor(-0.0455, dtype=torch.float64)), (605, tensor(-0.0454, dtype=torch.float64)), (2232, tensor(-0.0453, dtype=torch.float64)), (224, tensor(-0.0452, dtype=torch.float64)), (788, tensor(-0.0452, dtype=torch.float64)), (1824, tensor(-0.0451, dtype=torch.float64)), (1529, tensor(-0.0451, dtype=torch.float64)), (1085, tensor(-0.0451, dtype=torch.float64)), (2276, tensor(-0.0450, dtype=torch.float64)), (1979, tensor(-0.0450, dtype=torch.float64)), (2543, tensor(-0.0450, dtype=torch.float64)), (624, tensor(-0.0450, dtype=torch.float64)), (1067, tensor(-0.0450, dtype=torch.float64)), (1033, tensor(-0.0450, dtype=torch.float64)), (1877, tensor(-0.0449, dtype=torch.float64)), (545, tensor(-0.0449, dtype=torch.float64)), (1810, tensor(-0.0449, dtype=torch.float64)), (599, tensor(-0.0449, dtype=torch.float64)), (1012, tensor(-0.0449, dtype=torch.float64)), (2899, tensor(-0.0448, dtype=torch.float64)), (195, tensor(-0.0447, dtype=torch.float64)), (295, tensor(-0.0447, dtype=torch.float64)), (845, tensor(-0.0447, dtype=torch.float64)), (2116, tensor(-0.0446, dtype=torch.float64)), (1751, tensor(-0.0446, dtype=torch.float64)), (299, tensor(-0.0446, dtype=torch.float64)), (1184, tensor(-0.0445, dtype=torch.float64)), (1691, tensor(-0.0445, dtype=torch.float64)), (2772, tensor(-0.0445, dtype=torch.float64)), (2763, tensor(-0.0445, dtype=torch.float64)), (2684, tensor(-0.0445, dtype=torch.float64)), (2983, tensor(-0.0444, dtype=torch.float64)), (1724, tensor(-0.0444, dtype=torch.float64)), (2706, tensor(-0.0443, dtype=torch.float64)), (2836, tensor(-0.0443, dtype=torch.float64)), (2510, tensor(-0.0442, dtype=torch.float64)), (3088, tensor(-0.0442, dtype=torch.float64)), (871, tensor(-0.0442, dtype=torch.float64)), (1620, tensor(-0.0441, dtype=torch.float64)), (2014, tensor(-0.0441, dtype=torch.float64)), (1108, tensor(-0.0441, dtype=torch.float64)), (535, tensor(-0.0441, dtype=torch.float64)), (2477, tensor(-0.0441, dtype=torch.float64)), (2140, tensor(-0.0441, dtype=torch.float64)), (882, tensor(-0.0440, dtype=torch.float64)), (267, tensor(-0.0440, dtype=torch.float64)), (2424, tensor(-0.0439, dtype=torch.float64)), (87, tensor(-0.0439, dtype=torch.float64)), (2396, tensor(-0.0439, dtype=torch.float64)), (2913, tensor(-0.0438, dtype=torch.float64)), (2785, tensor(-0.0438, dtype=torch.float64)), (2833, tensor(-0.0437, dtype=torch.float64)), (1017, tensor(-0.0436, dtype=torch.float64)), (2825, tensor(-0.0436, dtype=torch.float64)), (183, tensor(-0.0436, dtype=torch.float64)), (1091, tensor(-0.0435, dtype=torch.float64)), (1514, tensor(-0.0435, dtype=torch.float64)), (2755, tensor(-0.0435, dtype=torch.float64)), (2649, tensor(-0.0435, dtype=torch.float64)), (2804, tensor(-0.0434, dtype=torch.float64)), (532, tensor(-0.0434, dtype=torch.float64)), (1737, tensor(-0.0433, dtype=torch.float64)), (2208, tensor(-0.0433, dtype=torch.float64)), (1698, tensor(-0.0433, dtype=torch.float64)), (1421, tensor(-0.0432, dtype=torch.float64)), (158, tensor(-0.0432, dtype=torch.float64)), (2167, tensor(-0.0432, dtype=torch.float64)), (1882, tensor(-0.0432, dtype=torch.float64)), (58, tensor(-0.0432, dtype=torch.float64)), (1191, tensor(-0.0431, dtype=torch.float64)), (1632, tensor(-0.0431, dtype=torch.float64)), (1775, tensor(-0.0431, dtype=torch.float64)), (1335, tensor(-0.0430, dtype=torch.float64)), (1830, tensor(-0.0430, dtype=torch.float64)), (327, tensor(-0.0430, dtype=torch.float64)), (1313, tensor(-0.0430, dtype=torch.float64)), (2487, tensor(-0.0430, dtype=torch.float64)), (1648, tensor(-0.0430, dtype=torch.float64)), (2278, tensor(-0.0429, dtype=torch.float64)), (83, tensor(-0.0429, dtype=torch.float64)), (1353, tensor(-0.0429, dtype=torch.float64)), (697, tensor(-0.0429, dtype=torch.float64)), (249, tensor(-0.0429, dtype=torch.float64)), (2545, tensor(-0.0428, dtype=torch.float64)), (2688, tensor(-0.0428, dtype=torch.float64)), (655, tensor(-0.0428, dtype=torch.float64)), (568, tensor(-0.0427, dtype=torch.float64)), (815, tensor(-0.0427, dtype=torch.float64)), (1683, tensor(-0.0427, dtype=torch.float64)), (990, tensor(-0.0427, dtype=torch.float64)), (1015, tensor(-0.0426, dtype=torch.float64)), (2249, tensor(-0.0426, dtype=torch.float64)), (126, tensor(-0.0425, dtype=torch.float64)), (927, tensor(-0.0425, dtype=torch.float64)), (1119, tensor(-0.0425, dtype=torch.float64)), (2957, tensor(-0.0424, dtype=torch.float64)), (39, tensor(-0.0423, dtype=torch.float64)), (2338, tensor(-0.0423, dtype=torch.float64)), (2054, tensor(-0.0423, dtype=torch.float64)), (2023, tensor(-0.0422, dtype=torch.float64)), (88, tensor(-0.0422, dtype=torch.float64)), (2186, tensor(-0.0422, dtype=torch.float64)), (2274, tensor(-0.0422, dtype=torch.float64)), (1999, tensor(-0.0421, dtype=torch.float64)), (1038, tensor(-0.0421, dtype=torch.float64)), (1207, tensor(-0.0421, dtype=torch.float64)), (10, tensor(-0.0421, dtype=torch.float64)), (998, tensor(-0.0421, dtype=torch.float64)), (1771, tensor(-0.0419, dtype=torch.float64)), (537, tensor(-0.0419, dtype=torch.float64)), (2371, tensor(-0.0419, dtype=torch.float64)), (2306, tensor(-0.0419, dtype=torch.float64)), (3169, tensor(-0.0419, dtype=torch.float64)), (324, tensor(-0.0419, dtype=torch.float64)), (2195, tensor(-0.0419, dtype=torch.float64)), (980, tensor(-0.0419, dtype=torch.float64)), (1627, tensor(-0.0417, dtype=torch.float64)), (1249, tensor(-0.0417, dtype=torch.float64)), (30, tensor(-0.0416, dtype=torch.float64)), (1981, tensor(-0.0415, dtype=torch.float64)), (157, tensor(-0.0414, dtype=torch.float64)), (1593, tensor(-0.0414, dtype=torch.float64)), (1572, tensor(-0.0414, dtype=torch.float64)), (766, tensor(-0.0414, dtype=torch.float64)), (24, tensor(-0.0413, dtype=torch.float64)), (1333, tensor(-0.0413, dtype=torch.float64)), (602, tensor(-0.0413, dtype=torch.float64)), (1343, tensor(-0.0412, dtype=torch.float64)), (3062, tensor(-0.0412, dtype=torch.float64)), (2421, tensor(-0.0412, dtype=torch.float64)), (760, tensor(-0.0412, dtype=torch.float64)), (2234, tensor(-0.0411, dtype=torch.float64)), (1741, tensor(-0.0411, dtype=torch.float64)), (1018, tensor(-0.0410, dtype=torch.float64)), (2102, tensor(-0.0410, dtype=torch.float64)), (2939, tensor(-0.0409, dtype=torch.float64)), (2457, tensor(-0.0409, dtype=torch.float64)), (592, tensor(-0.0409, dtype=torch.float64)), (1727, tensor(-0.0409, dtype=torch.float64)), (1853, tensor(-0.0407, dtype=torch.float64)), (102, tensor(-0.0407, dtype=torch.float64)), (1432, tensor(-0.0406, dtype=torch.float64)), (2105, tensor(-0.0406, dtype=torch.float64)), (59, tensor(-0.0406, dtype=torch.float64)), (0, tensor(-0.0406, dtype=torch.float64)), (575, tensor(-0.0406, dtype=torch.float64)), (1544, tensor(-0.0405, dtype=torch.float64)), (2985, tensor(-0.0405, dtype=torch.float64)), (1399, tensor(-0.0405, dtype=torch.float64)), (3037, tensor(-0.0405, dtype=torch.float64)), (2727, tensor(-0.0404, dtype=torch.float64)), (846, tensor(-0.0404, dtype=torch.float64)), (2963, tensor(-0.0404, dtype=torch.float64)), (208, tensor(-0.0404, dtype=torch.float64)), (1278, tensor(-0.0403, dtype=torch.float64)), (141, tensor(-0.0403, dtype=torch.float64)), (380, tensor(-0.0402, dtype=torch.float64)), (1560, tensor(-0.0402, dtype=torch.float64)), (719, tensor(-0.0402, dtype=torch.float64)), (2738, tensor(-0.0402, dtype=torch.float64)), (661, tensor(-0.0402, dtype=torch.float64)), (146, tensor(-0.0401, dtype=torch.float64)), (432, tensor(-0.0401, dtype=torch.float64)), (144, tensor(-0.0401, dtype=torch.float64)), (1678, tensor(-0.0401, dtype=torch.float64)), (2933, tensor(-0.0401, dtype=torch.float64)), (778, tensor(-0.0401, dtype=torch.float64)), (728, tensor(-0.0401, dtype=torch.float64)), (650, tensor(-0.0400, dtype=torch.float64)), (1522, tensor(-0.0400, dtype=torch.float64)), (2030, tensor(-0.0400, dtype=torch.float64)), (117, tensor(-0.0399, dtype=torch.float64)), (579, tensor(-0.0399, dtype=torch.float64)), (950, tensor(-0.0398, dtype=torch.float64)), (789, tensor(-0.0398, dtype=torch.float64)), (436, tensor(-0.0398, dtype=torch.float64)), (3025, tensor(-0.0396, dtype=torch.float64)), (660, tensor(-0.0396, dtype=torch.float64)), (1189, tensor(-0.0396, dtype=torch.float64)), (354, tensor(-0.0396, dtype=torch.float64)), (2485, tensor(-0.0395, dtype=torch.float64)), (213, tensor(-0.0395, dtype=torch.float64)), (2589, tensor(-0.0395, dtype=torch.float64)), (1274, tensor(-0.0394, dtype=torch.float64)), (889, tensor(-0.0394, dtype=torch.float64)), (1914, tensor(-0.0394, dtype=torch.float64)), (284, tensor(-0.0393, dtype=torch.float64)), (1731, tensor(-0.0393, dtype=torch.float64)), (2598, tensor(-0.0393, dtype=torch.float64)), (2639, tensor(-0.0393, dtype=torch.float64)), (2298, tensor(-0.0392, dtype=torch.float64)), (2097, tensor(-0.0392, dtype=torch.float64)), (2987, tensor(-0.0392, dtype=torch.float64)), (1615, tensor(-0.0392, dtype=torch.float64)), (1513, tensor(-0.0391, dtype=torch.float64)), (758, tensor(-0.0391, dtype=torch.float64)), (600, tensor(-0.0390, dtype=torch.float64)), (1440, tensor(-0.0390, dtype=torch.float64)), (1600, tensor(-0.0390, dtype=torch.float64)), (453, tensor(-0.0390, dtype=torch.float64)), (352, tensor(-0.0390, dtype=torch.float64)), (2607, tensor(-0.0388, dtype=torch.float64)), (2526, tensor(-0.0388, dtype=torch.float64)), (937, tensor(-0.0388, dtype=torch.float64)), (145, tensor(-0.0388, dtype=torch.float64)), (281, tensor(-0.0388, dtype=torch.float64)), (1049, tensor(-0.0387, dtype=torch.float64)), (2308, tensor(-0.0386, dtype=torch.float64)), (400, tensor(-0.0386, dtype=torch.float64)), (2072, tensor(-0.0386, dtype=torch.float64)), (1606, tensor(-0.0386, dtype=torch.float64)), (2482, tensor(-0.0386, dtype=torch.float64)), (2970, tensor(-0.0385, dtype=torch.float64)), (2651, tensor(-0.0385, dtype=torch.float64)), (759, tensor(-0.0384, dtype=torch.float64)), (2637, tensor(-0.0384, dtype=torch.float64)), (2266, tensor(-0.0384, dtype=torch.float64)), (36, tensor(-0.0384, dtype=torch.float64)), (3105, tensor(-0.0384, dtype=torch.float64)), (2255, tensor(-0.0384, dtype=torch.float64)), (1069, tensor(-0.0384, dtype=torch.float64)), (2108, tensor(-0.0383, dtype=torch.float64)), (1050, tensor(-0.0383, dtype=torch.float64)), (1095, tensor(-0.0383, dtype=torch.float64)), (711, tensor(-0.0383, dtype=torch.float64)), (218, tensor(-0.0383, dtype=torch.float64)), (553, tensor(-0.0383, dtype=torch.float64)), (320, tensor(-0.0383, dtype=torch.float64)), (2471, tensor(-0.0382, dtype=torch.float64)), (1020, tensor(-0.0382, dtype=torch.float64)), (1538, tensor(-0.0382, dtype=torch.float64)), (2047, tensor(-0.0382, dtype=torch.float64)), (2924, tensor(-0.0382, dtype=torch.float64)), (1795, tensor(-0.0381, dtype=torch.float64)), (3096, tensor(-0.0381, dtype=torch.float64)), (1804, tensor(-0.0380, dtype=torch.float64)), (2735, tensor(-0.0380, dtype=torch.float64)), (333, tensor(-0.0380, dtype=torch.float64)), (459, tensor(-0.0379, dtype=torch.float64)), (1396, tensor(-0.0378, dtype=torch.float64)), (2886, tensor(-0.0378, dtype=torch.float64)), (3020, tensor(-0.0376, dtype=torch.float64)), (2857, tensor(-0.0376, dtype=torch.float64)), (2690, tensor(-0.0376, dtype=torch.float64)), (194, tensor(-0.0376, dtype=torch.float64)), (1732, tensor(-0.0376, dtype=torch.float64)), (2633, tensor(-0.0376, dtype=torch.float64)), (2837, tensor(-0.0376, dtype=torch.float64)), (2636, tensor(-0.0375, dtype=torch.float64)), (1757, tensor(-0.0374, dtype=torch.float64)), (3018, tensor(-0.0374, dtype=torch.float64)), (1596, tensor(-0.0374, dtype=torch.float64)), (1805, tensor(-0.0373, dtype=torch.float64)), (150, tensor(-0.0373, dtype=torch.float64)), (1104, tensor(-0.0373, dtype=torch.float64)), (54, tensor(-0.0373, dtype=torch.float64)), (1173, tensor(-0.0373, dtype=torch.float64)), (1645, tensor(-0.0372, dtype=torch.float64)), (1243, tensor(-0.0372, dtype=torch.float64)), (1061, tensor(-0.0372, dtype=torch.float64)), (3059, tensor(-0.0371, dtype=torch.float64)), (44, tensor(-0.0370, dtype=torch.float64)), (2285, tensor(-0.0369, dtype=torch.float64)), (1190, tensor(-0.0369, dtype=torch.float64)), (2927, tensor(-0.0369, dtype=torch.float64)), (623, tensor(-0.0369, dtype=torch.float64)), (3197, tensor(-0.0369, dtype=torch.float64)), (1021, tensor(-0.0368, dtype=torch.float64)), (270, tensor(-0.0368, dtype=torch.float64)), (1613, tensor(-0.0368, dtype=torch.float64)), (1585, tensor(-0.0367, dtype=torch.float64)), (2775, tensor(-0.0367, dtype=torch.float64)), (1875, tensor(-0.0366, dtype=torch.float64)), (424, tensor(-0.0366, dtype=torch.float64)), (2523, tensor(-0.0366, dtype=torch.float64)), (2884, tensor(-0.0366, dtype=torch.float64)), (1026, tensor(-0.0365, dtype=torch.float64)), (57, tensor(-0.0365, dtype=torch.float64)), (2040, tensor(-0.0364, dtype=torch.float64)), (1638, tensor(-0.0364, dtype=torch.float64)), (25, tensor(-0.0364, dtype=torch.float64)), (2776, tensor(-0.0364, dtype=torch.float64)), (1217, tensor(-0.0363, dtype=torch.float64)), (1814, tensor(-0.0363, dtype=torch.float64)), (98, tensor(-0.0363, dtype=torch.float64)), (867, tensor(-0.0362, dtype=torch.float64)), (38, tensor(-0.0362, dtype=torch.float64)), (1416, tensor(-0.0362, dtype=torch.float64)), (557, tensor(-0.0361, dtype=torch.float64)), (1646, tensor(-0.0361, dtype=torch.float64)), (1338, tensor(-0.0361, dtype=torch.float64)), (495, tensor(-0.0361, dtype=torch.float64)), (1870, tensor(-0.0361, dtype=torch.float64)), (132, tensor(-0.0361, dtype=torch.float64)), (3185, tensor(-0.0361, dtype=torch.float64)), (2265, tensor(-0.0360, dtype=torch.float64)), (2662, tensor(-0.0360, dtype=torch.float64)), (919, tensor(-0.0360, dtype=torch.float64)), (2205, tensor(-0.0360, dtype=torch.float64)), (1339, tensor(-0.0359, dtype=torch.float64)), (1820, tensor(-0.0359, dtype=torch.float64)), (2799, tensor(-0.0359, dtype=torch.float64)), (358, tensor(-0.0358, dtype=torch.float64)), (1582, tensor(-0.0358, dtype=torch.float64)), (1523, tensor(-0.0358, dtype=torch.float64)), (967, tensor(-0.0358, dtype=torch.float64)), (1998, tensor(-0.0358, dtype=torch.float64)), (448, tensor(-0.0357, dtype=torch.float64)), (2538, tensor(-0.0357, dtype=torch.float64)), (1905, tensor(-0.0355, dtype=torch.float64)), (339, tensor(-0.0355, dtype=torch.float64)), (2685, tensor(-0.0355, dtype=torch.float64)), (891, tensor(-0.0354, dtype=torch.float64)), (2051, tensor(-0.0354, dtype=torch.float64)), (2823, tensor(-0.0354, dtype=torch.float64)), (1140, tensor(-0.0354, dtype=torch.float64)), (2165, tensor(-0.0354, dtype=torch.float64)), (954, tensor(-0.0354, dtype=torch.float64)), (2339, tensor(-0.0353, dtype=torch.float64)), (1149, tensor(-0.0353, dtype=torch.float64)), (1922, tensor(-0.0353, dtype=torch.float64)), (1594, tensor(-0.0353, dtype=torch.float64)), (2383, tensor(-0.0352, dtype=torch.float64)), (96, tensor(-0.0352, dtype=torch.float64)), (2568, tensor(-0.0352, dtype=torch.float64)), (1608, tensor(-0.0352, dtype=torch.float64)), (268, tensor(-0.0351, dtype=torch.float64)), (2860, tensor(-0.0351, dtype=torch.float64)), (2087, tensor(-0.0351, dtype=torch.float64)), (1888, tensor(-0.0350, dtype=torch.float64)), (1929, tensor(-0.0350, dtype=torch.float64)), (1899, tensor(-0.0349, dtype=torch.float64)), (2891, tensor(-0.0349, dtype=torch.float64)), (1681, tensor(-0.0349, dtype=torch.float64)), (455, tensor(-0.0349, dtype=torch.float64)), (1341, tensor(-0.0348, dtype=torch.float64)), (3168, tensor(-0.0347, dtype=torch.float64)), (1599, tensor(-0.0347, dtype=torch.float64)), (2398, tensor(-0.0347, dtype=torch.float64)), (692, tensor(-0.0346, dtype=torch.float64)), (252, tensor(-0.0345, dtype=torch.float64)), (70, tensor(-0.0345, dtype=torch.float64)), (6, tensor(-0.0345, dtype=torch.float64)), (1842, tensor(-0.0345, dtype=torch.float64)), (1113, tensor(-0.0345, dtype=torch.float64)), (1803, tensor(-0.0344, dtype=torch.float64)), (744, tensor(-0.0343, dtype=torch.float64)), (864, tensor(-0.0343, dtype=torch.float64)), (2942, tensor(-0.0341, dtype=torch.float64)), (2844, tensor(-0.0341, dtype=torch.float64)), (2341, tensor(-0.0340, dtype=torch.float64)), (944, tensor(-0.0340, dtype=torch.float64)), (2713, tensor(-0.0340, dtype=torch.float64)), (305, tensor(-0.0340, dtype=torch.float64)), (2868, tensor(-0.0340, dtype=torch.float64)), (2678, tensor(-0.0339, dtype=torch.float64)), (2741, tensor(-0.0339, dtype=torch.float64)), (374, tensor(-0.0339, dtype=torch.float64)), (2843, tensor(-0.0339, dtype=torch.float64)), (2760, tensor(-0.0339, dtype=torch.float64)), (201, tensor(-0.0338, dtype=torch.float64)), (2708, tensor(-0.0338, dtype=torch.float64)), (2021, tensor(-0.0338, dtype=torch.float64)), (2141, tensor(-0.0338, dtype=torch.float64)), (3083, tensor(-0.0337, dtype=torch.float64)), (1902, tensor(-0.0337, dtype=torch.float64)), (1314, tensor(-0.0337, dtype=torch.float64)), (1437, tensor(-0.0337, dtype=torch.float64)), (1586, tensor(-0.0336, dtype=torch.float64)), (1199, tensor(-0.0336, dtype=torch.float64)), (2015, tensor(-0.0336, dtype=torch.float64)), (2921, tensor(-0.0336, dtype=torch.float64)), (1635, tensor(-0.0335, dtype=torch.float64)), (2478, tensor(-0.0335, dtype=torch.float64)), (2401, tensor(-0.0335, dtype=torch.float64)), (452, tensor(-0.0334, dtype=torch.float64)), (2516, tensor(-0.0333, dtype=torch.float64)), (2990, tensor(-0.0333, dtype=torch.float64)), (3188, tensor(-0.0333, dtype=torch.float64)), (308, tensor(-0.0333, dtype=torch.float64)), (738, tensor(-0.0333, dtype=torch.float64)), (101, tensor(-0.0332, dtype=torch.float64)), (2719, tensor(-0.0332, dtype=torch.float64)), (1081, tensor(-0.0332, dtype=torch.float64)), (1926, tensor(-0.0332, dtype=torch.float64)), (2720, tensor(-0.0332, dtype=torch.float64)), (1806, tensor(-0.0331, dtype=torch.float64)), (347, tensor(-0.0330, dtype=torch.float64)), (1634, tensor(-0.0330, dtype=torch.float64)), (2946, tensor(-0.0330, dtype=torch.float64)), (415, tensor(-0.0330, dtype=torch.float64)), (161, tensor(-0.0330, dtype=torch.float64)), (2060, tensor(-0.0329, dtype=torch.float64)), (1044, tensor(-0.0329, dtype=torch.float64)), (1837, tensor(-0.0329, dtype=torch.float64)), (730, tensor(-0.0329, dtype=torch.float64)), (1467, tensor(-0.0329, dtype=torch.float64)), (1398, tensor(-0.0329, dtype=torch.float64)), (2170, tensor(-0.0328, dtype=torch.float64)), (1363, tensor(-0.0327, dtype=torch.float64)), (899, tensor(-0.0327, dtype=torch.float64)), (1122, tensor(-0.0327, dtype=torch.float64)), (2527, tensor(-0.0326, dtype=torch.float64)), (1793, tensor(-0.0326, dtype=torch.float64)), (1160, tensor(-0.0325, dtype=torch.float64)), (1068, tensor(-0.0325, dtype=torch.float64)), (3180, tensor(-0.0325, dtype=torch.float64)), (590, tensor(-0.0325, dtype=torch.float64)), (1109, tensor(-0.0324, dtype=torch.float64)), (2382, tensor(-0.0323, dtype=torch.float64)), (1711, tensor(-0.0323, dtype=torch.float64)), (3054, tensor(-0.0323, dtype=torch.float64)), (931, tensor(-0.0322, dtype=torch.float64)), (2497, tensor(-0.0322, dtype=torch.float64)), (2046, tensor(-0.0322, dtype=torch.float64)), (1496, tensor(-0.0322, dtype=torch.float64)), (12, tensor(-0.0321, dtype=torch.float64)), (1408, tensor(-0.0321, dtype=torch.float64)), (594, tensor(-0.0321, dtype=torch.float64)), (2849, tensor(-0.0321, dtype=torch.float64)), (2229, tensor(-0.0320, dtype=torch.float64)), (2408, tensor(-0.0320, dtype=torch.float64)), (1431, tensor(-0.0320, dtype=torch.float64)), (1657, tensor(-0.0320, dtype=torch.float64)), (558, tensor(-0.0320, dtype=torch.float64)), (1269, tensor(-0.0319, dtype=torch.float64)), (1039, tensor(-0.0319, dtype=torch.float64)), (2513, tensor(-0.0318, dtype=torch.float64)), (3170, tensor(-0.0318, dtype=torch.float64)), (442, tensor(-0.0318, dtype=torch.float64)), (2897, tensor(-0.0318, dtype=torch.float64)), (1477, tensor(-0.0317, dtype=torch.float64)), (330, tensor(-0.0317, dtype=torch.float64)), (1273, tensor(-0.0317, dtype=torch.float64)), (1011, tensor(-0.0317, dtype=torch.float64)), (186, tensor(-0.0316, dtype=torch.float64)), (2631, tensor(-0.0315, dtype=torch.float64)), (2311, tensor(-0.0315, dtype=torch.float64)), (17, tensor(-0.0314, dtype=torch.float64)), (1213, tensor(-0.0313, dtype=torch.float64)), (2415, tensor(-0.0313, dtype=torch.float64)), (2407, tensor(-0.0313, dtype=torch.float64)), (2936, tensor(-0.0313, dtype=torch.float64)), (2062, tensor(-0.0313, dtype=torch.float64)), (549, tensor(-0.0313, dtype=torch.float64)), (2122, tensor(-0.0312, dtype=torch.float64)), (1735, tensor(-0.0312, dtype=torch.float64)), (1099, tensor(-0.0312, dtype=torch.float64)), (403, tensor(-0.0311, dtype=torch.float64)), (1561, tensor(-0.0311, dtype=torch.float64)), (2657, tensor(-0.0311, dtype=torch.float64)), (2937, tensor(-0.0311, dtype=torch.float64)), (2443, tensor(-0.0310, dtype=torch.float64)), (294, tensor(-0.0310, dtype=torch.float64)), (3003, tensor(-0.0310, dtype=torch.float64)), (1127, tensor(-0.0310, dtype=torch.float64)), (259, tensor(-0.0309, dtype=torch.float64)), (2980, tensor(-0.0309, dtype=torch.float64)), (2925, tensor(-0.0309, dtype=torch.float64)), (1920, tensor(-0.0309, dtype=torch.float64)), (849, tensor(-0.0308, dtype=torch.float64)), (2080, tensor(-0.0308, dtype=torch.float64)), (1663, tensor(-0.0308, dtype=torch.float64)), (1286, tensor(-0.0308, dtype=torch.float64)), (2754, tensor(-0.0308, dtype=torch.float64)), (476, tensor(-0.0307, dtype=torch.float64)), (37, tensor(-0.0307, dtype=torch.float64)), (2243, tensor(-0.0307, dtype=torch.float64)), (1733, tensor(-0.0307, dtype=torch.float64)), (563, tensor(-0.0306, dtype=torch.float64)), (925, tensor(-0.0306, dtype=torch.float64)), (542, tensor(-0.0306, dtype=torch.float64)), (293, tensor(-0.0306, dtype=torch.float64)), (1302, tensor(-0.0306, dtype=torch.float64)), (328, tensor(-0.0306, dtype=torch.float64)), (2252, tensor(-0.0305, dtype=torch.float64)), (572, tensor(-0.0305, dtype=torch.float64)), (85, tensor(-0.0305, dtype=torch.float64)), (1706, tensor(-0.0304, dtype=torch.float64)), (2539, tensor(-0.0304, dtype=torch.float64)), (1769, tensor(-0.0304, dtype=torch.float64)), (1489, tensor(-0.0304, dtype=torch.float64)), (2324, tensor(-0.0303, dtype=torch.float64)), (2380, tensor(-0.0303, dtype=torch.float64)), (1699, tensor(-0.0303, dtype=torch.float64)), (2365, tensor(-0.0303, dtype=torch.float64)), (634, tensor(-0.0302, dtype=torch.float64)), (1924, tensor(-0.0302, dtype=torch.float64)), (658, tensor(-0.0302, dtype=torch.float64)), (482, tensor(-0.0301, dtype=torch.float64)), (560, tensor(-0.0301, dtype=torch.float64)), (296, tensor(-0.0301, dtype=torch.float64)), (2176, tensor(-0.0301, dtype=torch.float64)), (821, tensor(-0.0301, dtype=torch.float64)), (405, tensor(-0.0301, dtype=torch.float64)), (1306, tensor(-0.0300, dtype=torch.float64)), (2007, tensor(-0.0300, dtype=torch.float64)), (2813, tensor(-0.0300, dtype=torch.float64)), (807, tensor(-0.0300, dtype=torch.float64)), (1236, tensor(-0.0299, dtype=torch.float64)), (178, tensor(-0.0299, dtype=torch.float64)), (1415, tensor(-0.0299, dtype=torch.float64)), (1296, tensor(-0.0299, dtype=torch.float64)), (1009, tensor(-0.0299, dtype=torch.float64)), (1266, tensor(-0.0299, dtype=torch.float64)), (1013, tensor(-0.0298, dtype=torch.float64)), (987, tensor(-0.0298, dtype=torch.float64)), (583, tensor(-0.0298, dtype=torch.float64)), (856, tensor(-0.0298, dtype=torch.float64)), (1889, tensor(-0.0298, dtype=torch.float64)), (1982, tensor(-0.0297, dtype=torch.float64)), (2196, tensor(-0.0297, dtype=torch.float64)), (2158, tensor(-0.0297, dtype=torch.float64)), (468, tensor(-0.0297, dtype=torch.float64)), (122, tensor(-0.0297, dtype=torch.float64)), (2008, tensor(-0.0297, dtype=torch.float64)), (2715, tensor(-0.0297, dtype=torch.float64)), (2770, tensor(-0.0296, dtype=torch.float64)), (1508, tensor(-0.0295, dtype=torch.float64)), (288, tensor(-0.0295, dtype=torch.float64)), (3060, tensor(-0.0295, dtype=torch.float64)), (444, tensor(-0.0295, dtype=torch.float64)), (1464, tensor(-0.0294, dtype=torch.float64)), (210, tensor(-0.0294, dtype=torch.float64)), (1387, tensor(-0.0294, dtype=torch.float64)), (2992, tensor(-0.0294, dtype=torch.float64)), (1909, tensor(-0.0294, dtype=torch.float64)), (782, tensor(-0.0294, dtype=torch.float64)), (2359, tensor(-0.0294, dtype=torch.float64)), (1367, tensor(-0.0294, dtype=torch.float64)), (2744, tensor(-0.0294, dtype=torch.float64)), (148, tensor(-0.0293, dtype=torch.float64)), (603, tensor(-0.0293, dtype=torch.float64)), (1631, tensor(-0.0293, dtype=torch.float64)), (1092, tensor(-0.0293, dtype=torch.float64)), (2314, tensor(-0.0292, dtype=torch.float64)), (1659, tensor(-0.0292, dtype=torch.float64)), (64, tensor(-0.0292, dtype=torch.float64)), (1995, tensor(-0.0292, dtype=torch.float64)), (1990, tensor(-0.0291, dtype=torch.float64)), (2251, tensor(-0.0291, dtype=torch.float64)), (2491, tensor(-0.0291, dtype=torch.float64)), (2181, tensor(-0.0291, dtype=torch.float64)), (1728, tensor(-0.0291, dtype=torch.float64)), (2328, tensor(-0.0291, dtype=torch.float64)), (777, tensor(-0.0290, dtype=torch.float64)), (440, tensor(-0.0290, dtype=torch.float64)), (1390, tensor(-0.0290, dtype=torch.float64)), (2428, tensor(-0.0289, dtype=torch.float64)), (1611, tensor(-0.0289, dtype=torch.float64)), (2591, tensor(-0.0289, dtype=torch.float64)), (366, tensor(-0.0289, dtype=torch.float64)), (2984, tensor(-0.0289, dtype=torch.float64)), (1925, tensor(-0.0289, dtype=torch.float64)), (119, tensor(-0.0288, dtype=torch.float64)), (1250, tensor(-0.0288, dtype=torch.float64)), (1675, tensor(-0.0288, dtype=torch.float64)), (2446, tensor(-0.0288, dtype=torch.float64)), (3023, tensor(-0.0288, dtype=torch.float64)), (1968, tensor(-0.0288, dtype=torch.float64)), (2507, tensor(-0.0287, dtype=torch.float64)), (2892, tensor(-0.0287, dtype=torch.float64)), (1655, tensor(-0.0287, dtype=torch.float64)), (1106, tensor(-0.0286, dtype=torch.float64)), (3010, tensor(-0.0286, dtype=torch.float64)), (2083, tensor(-0.0286, dtype=torch.float64)), (939, tensor(-0.0285, dtype=torch.float64)), (2710, tensor(-0.0285, dtype=torch.float64)), (2370, tensor(-0.0285, dtype=torch.float64)), (1371, tensor(-0.0285, dtype=torch.float64)), (2976, tensor(-0.0285, dtype=torch.float64)), (115, tensor(-0.0284, dtype=torch.float64)), (2169, tensor(-0.0284, dtype=torch.float64)), (2575, tensor(-0.0284, dtype=torch.float64)), (2668, tensor(-0.0283, dtype=torch.float64)), (1722, tensor(-0.0283, dtype=torch.float64)), (478, tensor(-0.0283, dtype=torch.float64)), (228, tensor(-0.0283, dtype=torch.float64)), (2606, tensor(-0.0283, dtype=torch.float64)), (47, tensor(-0.0283, dtype=torch.float64)), (1138, tensor(-0.0283, dtype=torch.float64)), (2437, tensor(-0.0283, dtype=torch.float64)), (640, tensor(-0.0283, dtype=torch.float64)), (2005, tensor(-0.0283, dtype=torch.float64)), (2400, tensor(-0.0282, dtype=torch.float64)), (3198, tensor(-0.0282, dtype=torch.float64)), (56, tensor(-0.0282, dtype=torch.float64)), (805, tensor(-0.0282, dtype=torch.float64)), (2699, tensor(-0.0282, dtype=torch.float64)), (803, tensor(-0.0281, dtype=torch.float64)), (2530, tensor(-0.0281, dtype=torch.float64)), (1374, tensor(-0.0280, dtype=torch.float64)), (636, tensor(-0.0280, dtype=torch.float64)), (276, tensor(-0.0280, dtype=torch.float64)), (1429, tensor(-0.0279, dtype=torch.float64)), (515, tensor(-0.0279, dtype=torch.float64)), (1383, tensor(-0.0279, dtype=torch.float64)), (2663, tensor(-0.0279, dtype=torch.float64)), (3104, tensor(-0.0279, dtype=torch.float64)), (1490, tensor(-0.0279, dtype=torch.float64)), (214, tensor(-0.0278, dtype=torch.float64)), (1372, tensor(-0.0278, dtype=torch.float64)), (2064, tensor(-0.0278, dtype=torch.float64)), (2926, tensor(-0.0278, dtype=torch.float64)), (2172, tensor(-0.0277, dtype=torch.float64)), (2873, tensor(-0.0277, dtype=torch.float64)), (2604, tensor(-0.0277, dtype=torch.float64)), (3152, tensor(-0.0276, dtype=torch.float64)), (2, tensor(-0.0276, dtype=torch.float64)), (1789, tensor(-0.0276, dtype=torch.float64)), (2551, tensor(-0.0276, dtype=torch.float64)), (1626, tensor(-0.0276, dtype=torch.float64)), (646, tensor(-0.0275, dtype=torch.float64)), (1672, tensor(-0.0275, dtype=torch.float64)), (1765, tensor(-0.0275, dtype=torch.float64)), (2508, tensor(-0.0275, dtype=torch.float64)), (2379, tensor(-0.0275, dtype=torch.float64)), (858, tensor(-0.0275, dtype=torch.float64)), (785, tensor(-0.0274, dtype=torch.float64)), (373, tensor(-0.0274, dtype=torch.float64)), (1240, tensor(-0.0274, dtype=torch.float64)), (2448, tensor(-0.0274, dtype=torch.float64)), (2450, tensor(-0.0274, dtype=torch.float64)), (2402, tensor(-0.0273, dtype=torch.float64)), (34, tensor(-0.0273, dtype=torch.float64)), (715, tensor(-0.0272, dtype=torch.float64)), (2514, tensor(-0.0272, dtype=torch.float64)), (2163, tensor(-0.0271, dtype=torch.float64)), (1254, tensor(-0.0271, dtype=torch.float64)), (3031, tensor(-0.0271, dtype=torch.float64)), (593, tensor(-0.0271, dtype=torch.float64)), (1197, tensor(-0.0271, dtype=torch.float64)), (3187, tensor(-0.0270, dtype=torch.float64)), (2128, tensor(-0.0270, dtype=torch.float64)), (613, tensor(-0.0270, dtype=torch.float64)), (1117, tensor(-0.0270, dtype=torch.float64)), (1654, tensor(-0.0270, dtype=torch.float64)), (898, tensor(-0.0269, dtype=torch.float64)), (2692, tensor(-0.0269, dtype=torch.float64)), (180, tensor(-0.0269, dtype=torch.float64)), (1031, tensor(-0.0268, dtype=torch.float64)), (2124, tensor(-0.0268, dtype=torch.float64)), (2147, tensor(-0.0268, dtype=torch.float64)), (290, tensor(-0.0268, dtype=torch.float64)), (2222, tensor(-0.0268, dtype=torch.float64)), (1821, tensor(-0.0267, dtype=torch.float64)), (390, tensor(-0.0267, dtype=torch.float64)), (2737, tensor(-0.0266, dtype=torch.float64)), (716, tensor(-0.0266, dtype=torch.float64)), (1159, tensor(-0.0266, dtype=torch.float64)), (796, tensor(-0.0265, dtype=torch.float64)), (884, tensor(-0.0265, dtype=torch.float64)), (2441, tensor(-0.0265, dtype=torch.float64)), (2904, tensor(-0.0265, dtype=torch.float64)), (136, tensor(-0.0264, dtype=torch.float64)), (2304, tensor(-0.0264, dtype=torch.float64)), (1016, tensor(-0.0264, dtype=torch.float64)), (2712, tensor(-0.0263, dtype=torch.float64)), (825, tensor(-0.0263, dtype=torch.float64)), (3142, tensor(-0.0262, dtype=torch.float64)), (1282, tensor(-0.0262, dtype=torch.float64)), (900, tensor(-0.0262, dtype=torch.float64)), (2417, tensor(-0.0262, dtype=torch.float64)), (2536, tensor(-0.0261, dtype=torch.float64)), (2725, tensor(-0.0261, dtype=torch.float64)), (2515, tensor(-0.0261, dtype=torch.float64)), (1800, tensor(-0.0261, dtype=torch.float64)), (841, tensor(-0.0261, dtype=torch.float64)), (952, tensor(-0.0260, dtype=torch.float64)), (1764, tensor(-0.0260, dtype=torch.float64)), (1074, tensor(-0.0260, dtype=torch.float64)), (1059, tensor(-0.0260, dtype=torch.float64)), (870, tensor(-0.0260, dtype=torch.float64)), (779, tensor(-0.0260, dtype=torch.float64)), (752, tensor(-0.0260, dtype=torch.float64)), (2372, tensor(-0.0260, dtype=torch.float64)), (103, tensor(-0.0260, dtype=torch.float64)), (513, tensor(-0.0259, dtype=torch.float64)), (1083, tensor(-0.0259, dtype=torch.float64)), (242, tensor(-0.0258, dtype=torch.float64)), (1299, tensor(-0.0258, dtype=torch.float64)), (1857, tensor(-0.0258, dtype=torch.float64)), (345, tensor(-0.0258, dtype=torch.float64)), (2861, tensor(-0.0258, dtype=torch.float64)), (1558, tensor(-0.0258, dtype=torch.float64)), (1884, tensor(-0.0257, dtype=torch.float64)), (153, tensor(-0.0257, dtype=torch.float64)), (2387, tensor(-0.0257, dtype=torch.float64)), (2656, tensor(-0.0257, dtype=torch.float64)), (1407, tensor(-0.0257, dtype=torch.float64)), (2786, tensor(-0.0257, dtype=torch.float64)), (1547, tensor(-0.0257, dtype=torch.float64)), (654, tensor(-0.0257, dtype=torch.float64)), (2221, tensor(-0.0256, dtype=torch.float64)), (2269, tensor(-0.0256, dtype=torch.float64)), (19, tensor(-0.0255, dtype=torch.float64)), (209, tensor(-0.0255, dtype=torch.float64)), (1492, tensor(-0.0255, dtype=torch.float64)), (877, tensor(-0.0254, dtype=torch.float64)), (1927, tensor(-0.0254, dtype=torch.float64)), (524, tensor(-0.0254, dtype=torch.float64)), (1360, tensor(-0.0254, dtype=torch.float64)), (97, tensor(-0.0254, dtype=torch.float64)), (562, tensor(-0.0253, dtype=torch.float64)), (2655, tensor(-0.0252, dtype=torch.float64)), (2055, tensor(-0.0252, dtype=torch.float64)), (52, tensor(-0.0251, dtype=torch.float64)), (460, tensor(-0.0251, dtype=torch.float64)), (1985, tensor(-0.0251, dtype=torch.float64)), (2783, tensor(-0.0251, dtype=torch.float64)), (1782, tensor(-0.0250, dtype=torch.float64)), (2579, tensor(-0.0250, dtype=torch.float64)), (3079, tensor(-0.0249, dtype=torch.float64)), (2168, tensor(-0.0249, dtype=torch.float64)), (2288, tensor(-0.0249, dtype=torch.float64)), (2364, tensor(-0.0249, dtype=torch.float64)), (1077, tensor(-0.0248, dtype=torch.float64)), (2481, tensor(-0.0248, dtype=torch.float64)), (2609, tensor(-0.0248, dtype=torch.float64)), (1056, tensor(-0.0247, dtype=torch.float64)), (1997, tensor(-0.0247, dtype=torch.float64)), (1827, tensor(-0.0246, dtype=torch.float64)), (2404, tensor(-0.0245, dtype=torch.float64)), (573, tensor(-0.0245, dtype=torch.float64)), (2004, tensor(-0.0245, dtype=torch.float64)), (1565, tensor(-0.0244, dtype=torch.float64)), (2714, tensor(-0.0244, dtype=torch.float64)), (1344, tensor(-0.0244, dtype=torch.float64)), (2827, tensor(-0.0244, dtype=torch.float64)), (2889, tensor(-0.0244, dtype=torch.float64)), (2309, tensor(-0.0244, dtype=torch.float64)), (644, tensor(-0.0243, dtype=torch.float64)), (187, tensor(-0.0243, dtype=torch.float64)), (1569, tensor(-0.0243, dtype=torch.float64)), (1155, tensor(-0.0242, dtype=torch.float64)), (1537, tensor(-0.0242, dtype=torch.float64)), (1086, tensor(-0.0242, dtype=torch.float64)), (761, tensor(-0.0242, dtype=torch.float64)), (820, tensor(-0.0242, dtype=torch.float64)), (2175, tensor(-0.0241, dtype=torch.float64)), (3068, tensor(-0.0241, dtype=torch.float64)), (2587, tensor(-0.0241, dtype=torch.float64)), (2789, tensor(-0.0241, dtype=torch.float64)), (2679, tensor(-0.0241, dtype=torch.float64)), (2812, tensor(-0.0240, dtype=torch.float64)), (823, tensor(-0.0240, dtype=torch.float64)), (1721, tensor(-0.0240, dtype=torch.float64)), (1865, tensor(-0.0239, dtype=torch.float64)), (1027, tensor(-0.0239, dtype=torch.float64)), (1227, tensor(-0.0239, dtype=torch.float64)), (2374, tensor(-0.0239, dtype=torch.float64)), (674, tensor(-0.0238, dtype=torch.float64)), (632, tensor(-0.0238, dtype=torch.float64)), (2705, tensor(-0.0238, dtype=torch.float64)), (1255, tensor(-0.0238, dtype=torch.float64)), (1246, tensor(-0.0237, dtype=torch.float64)), (1065, tensor(-0.0237, dtype=torch.float64)), (413, tensor(-0.0236, dtype=torch.float64)), (371, tensor(-0.0236, dtype=torch.float64)), (464, tensor(-0.0236, dtype=torch.float64)), (2245, tensor(-0.0236, dtype=torch.float64)), (556, tensor(-0.0235, dtype=torch.float64)), (3024, tensor(-0.0235, dtype=torch.float64)), (872, tensor(-0.0235, dtype=torch.float64)), (1201, tensor(-0.0235, dtype=torch.float64)), (775, tensor(-0.0235, dtype=torch.float64)), (198, tensor(-0.0235, dtype=torch.float64)), (451, tensor(-0.0234, dtype=torch.float64)), (2238, tensor(-0.0234, dtype=torch.float64)), (2666, tensor(-0.0234, dtype=torch.float64)), (241, tensor(-0.0234, dtype=torch.float64)), (2305, tensor(-0.0234, dtype=torch.float64)), (419, tensor(-0.0234, dtype=torch.float64)), (485, tensor(-0.0232, dtype=torch.float64)), (1216, tensor(-0.0232, dtype=torch.float64)), (1960, tensor(-0.0232, dtype=torch.float64)), (1666, tensor(-0.0232, dtype=torch.float64)), (798, tensor(-0.0232, dtype=torch.float64)), (2612, tensor(-0.0231, dtype=torch.float64)), (930, tensor(-0.0231, dtype=torch.float64)), (2284, tensor(-0.0231, dtype=torch.float64)), (2959, tensor(-0.0231, dtype=torch.float64)), (1662, tensor(-0.0231, dtype=torch.float64)), (580, tensor(-0.0231, dtype=torch.float64)), (1705, tensor(-0.0231, dtype=torch.float64)), (3128, tensor(-0.0230, dtype=torch.float64)), (1493, tensor(-0.0230, dtype=torch.float64)), (1595, tensor(-0.0230, dtype=torch.float64)), (2032, tensor(-0.0230, dtype=torch.float64)), (376, tensor(-0.0230, dtype=torch.float64)), (546, tensor(-0.0229, dtype=torch.float64)), (245, tensor(-0.0229, dtype=torch.float64)), (1617, tensor(-0.0229, dtype=torch.float64)), (2565, tensor(-0.0229, dtype=torch.float64)), (3097, tensor(-0.0229, dtype=torch.float64)), (196, tensor(-0.0229, dtype=torch.float64)), (648, tensor(-0.0229, dtype=torch.float64)), (2299, tensor(-0.0229, dtype=torch.float64)), (1949, tensor(-0.0229, dtype=torch.float64)), (2292, tensor(-0.0228, dtype=torch.float64)), (3116, tensor(-0.0227, dtype=torch.float64)), (2110, tensor(-0.0227, dtype=torch.float64)), (1326, tensor(-0.0227, dtype=torch.float64)), (1481, tensor(-0.0226, dtype=torch.float64)), (473, tensor(-0.0226, dtype=torch.float64)), (94, tensor(-0.0226, dtype=torch.float64)), (887, tensor(-0.0226, dtype=torch.float64)), (399, tensor(-0.0226, dtype=torch.float64)), (538, tensor(-0.0225, dtype=torch.float64)), (2302, tensor(-0.0225, dtype=torch.float64)), (1770, tensor(-0.0225, dtype=torch.float64)), (60, tensor(-0.0225, dtype=torch.float64)), (1294, tensor(-0.0225, dtype=torch.float64)), (2326, tensor(-0.0224, dtype=torch.float64)), (993, tensor(-0.0224, dtype=torch.float64)), (1850, tensor(-0.0224, dtype=torch.float64)), (1233, tensor(-0.0224, dtype=torch.float64)), (1030, tensor(-0.0223, dtype=torch.float64)), (2790, tensor(-0.0223, dtype=torch.float64)), (3163, tensor(-0.0223, dtype=torch.float64)), (1029, tensor(-0.0222, dtype=torch.float64)), (184, tensor(-0.0222, dtype=torch.float64)), (809, tensor(-0.0222, dtype=torch.float64)), (2798, tensor(-0.0222, dtype=torch.float64)), (1893, tensor(-0.0221, dtype=torch.float64)), (2484, tensor(-0.0221, dtype=torch.float64)), (425, tensor(-0.0220, dtype=torch.float64)), (1612, tensor(-0.0220, dtype=torch.float64)), (712, tensor(-0.0220, dtype=torch.float64)), (2444, tensor(-0.0220, dtype=torch.float64)), (1900, tensor(-0.0219, dtype=torch.float64)), (1952, tensor(-0.0219, dtype=torch.float64)), (1710, tensor(-0.0219, dtype=torch.float64)), (1023, tensor(-0.0219, dtype=torch.float64)), (2544, tensor(-0.0218, dtype=torch.float64)), (1551, tensor(-0.0218, dtype=torch.float64)), (48, tensor(-0.0218, dtype=torch.float64)), (1485, tensor(-0.0218, dtype=torch.float64)), (938, tensor(-0.0217, dtype=torch.float64)), (1359, tensor(-0.0217, dtype=torch.float64)), (1164, tensor(-0.0217, dtype=torch.float64)), (853, tensor(-0.0217, dtype=torch.float64)), (2756, tensor(-0.0217, dtype=torch.float64)), (907, tensor(-0.0217, dtype=torch.float64)), (93, tensor(-0.0217, dtype=torch.float64)), (1833, tensor(-0.0216, dtype=torch.float64)), (743, tensor(-0.0216, dtype=torch.float64)), (113, tensor(-0.0216, dtype=torch.float64)), (2619, tensor(-0.0216, dtype=torch.float64)), (2256, tensor(-0.0216, dtype=torch.float64)), (116, tensor(-0.0216, dtype=torch.float64)), (1563, tensor(-0.0216, dtype=torch.float64)), (3078, tensor(-0.0216, dtype=torch.float64)), (8, tensor(-0.0216, dtype=torch.float64)), (1046, tensor(-0.0215, dtype=torch.float64)), (1580, tensor(-0.0215, dtype=torch.float64)), (1332, tensor(-0.0214, dtype=torch.float64)), (220, tensor(-0.0214, dtype=torch.float64)), (1480, tensor(-0.0214, dtype=torch.float64)), (2503, tensor(-0.0214, dtype=torch.float64)), (1693, tensor(-0.0214, dtype=torch.float64)), (527, tensor(-0.0214, dtype=torch.float64)), (528, tensor(-0.0214, dtype=torch.float64)), (2764, tensor(-0.0214, dtype=torch.float64)), (1228, tensor(-0.0214, dtype=torch.float64)), (244, tensor(-0.0213, dtype=torch.float64)), (3092, tensor(-0.0213, dtype=torch.float64)), (1736, tensor(-0.0213, dtype=torch.float64)), (3159, tensor(-0.0212, dtype=torch.float64)), (486, tensor(-0.0212, dtype=torch.float64)), (3114, tensor(-0.0212, dtype=torch.float64)), (1, tensor(-0.0211, dtype=torch.float64)), (504, tensor(-0.0211, dtype=torch.float64)), (1180, tensor(-0.0210, dtype=torch.float64)), (2792, tensor(-0.0210, dtype=torch.float64)), (1747, tensor(-0.0210, dtype=torch.float64)), (1687, tensor(-0.0209, dtype=torch.float64)), (325, tensor(-0.0209, dtype=torch.float64)), (2120, tensor(-0.0209, dtype=torch.float64)), (35, tensor(-0.0208, dtype=torch.float64)), (166, tensor(-0.0208, dtype=torch.float64)), (1142, tensor(-0.0208, dtype=torch.float64)), (756, tensor(-0.0208, dtype=torch.float64)), (2580, tensor(-0.0207, dtype=torch.float64)), (836, tensor(-0.0207, dtype=torch.float64)), (1811, tensor(-0.0207, dtype=torch.float64)), (2039, tensor(-0.0207, dtype=torch.float64)), (168, tensor(-0.0206, dtype=torch.float64)), (314, tensor(-0.0206, dtype=torch.float64)), (1832, tensor(-0.0206, dtype=torch.float64)), (765, tensor(-0.0206, dtype=torch.float64)), (475, tensor(-0.0205, dtype=torch.float64)), (1385, tensor(-0.0205, dtype=torch.float64)), (2236, tensor(-0.0204, dtype=torch.float64)), (3007, tensor(-0.0204, dtype=torch.float64)), (2427, tensor(-0.0204, dtype=torch.float64)), (1441, tensor(-0.0203, dtype=torch.float64)), (1545, tensor(-0.0203, dtype=torch.float64)), (343, tensor(-0.0203, dtype=torch.float64)), (1787, tensor(-0.0203, dtype=torch.float64)), (2511, tensor(-0.0203, dtype=torch.float64)), (1506, tensor(-0.0203, dtype=torch.float64)), (680, tensor(-0.0203, dtype=torch.float64)), (1815, tensor(-0.0202, dtype=torch.float64)), (1252, tensor(-0.0201, dtype=torch.float64)), (2348, tensor(-0.0201, dtype=torch.float64)), (1840, tensor(-0.0200, dtype=torch.float64)), (2483, tensor(-0.0200, dtype=torch.float64)), (429, tensor(-0.0200, dtype=torch.float64)), (1169, tensor(-0.0200, dtype=torch.float64)), (3101, tensor(-0.0200, dtype=torch.float64)), (1869, tensor(-0.0200, dtype=torch.float64)), (947, tensor(-0.0200, dtype=torch.float64)), (378, tensor(-0.0199, dtype=torch.float64)), (2117, tensor(-0.0199, dtype=torch.float64)), (2864, tensor(-0.0199, dtype=torch.float64)), (2317, tensor(-0.0199, dtype=torch.float64)), (1193, tensor(-0.0198, dtype=torch.float64)), (1541, tensor(-0.0198, dtype=torch.float64)), (2733, tensor(-0.0198, dtype=torch.float64)), (945, tensor(-0.0198, dtype=torch.float64)), (133, tensor(-0.0198, dtype=torch.float64)), (1911, tensor(-0.0198, dtype=torch.float64)), (848, tensor(-0.0198, dtype=torch.float64)), (1471, tensor(-0.0197, dtype=torch.float64)), (1066, tensor(-0.0197, dtype=torch.float64)), (596, tensor(-0.0197, dtype=torch.float64)), (688, tensor(-0.0196, dtype=torch.float64)), (1901, tensor(-0.0196, dtype=torch.float64)), (2246, tensor(-0.0196, dtype=torch.float64)), (2073, tensor(-0.0196, dtype=torch.float64)), (768, tensor(-0.0196, dtype=torch.float64)), (1605, tensor(-0.0195, dtype=torch.float64)), (2602, tensor(-0.0195, dtype=torch.float64)), (1989, tensor(-0.0194, dtype=torch.float64)), (2840, tensor(-0.0194, dtype=torch.float64)), (1649, tensor(-0.0193, dtype=torch.float64)), (972, tensor(-0.0193, dtype=torch.float64)), (2313, tensor(-0.0193, dtype=torch.float64)), (1466, tensor(-0.0193, dtype=torch.float64)), (1697, tensor(-0.0193, dtype=torch.float64)), (1961, tensor(-0.0192, dtype=torch.float64)), (2994, tensor(-0.0192, dtype=torch.float64)), (1570, tensor(-0.0192, dtype=torch.float64)), (2416, tensor(-0.0192, dtype=torch.float64)), (2876, tensor(-0.0192, dtype=torch.float64)), (2794, tensor(-0.0191, dtype=torch.float64)), (1584, tensor(-0.0190, dtype=torch.float64)), (996, tensor(-0.0190, dtype=torch.float64)), (664, tensor(-0.0190, dtype=torch.float64)), (1616, tensor(-0.0189, dtype=torch.float64)), (2555, tensor(-0.0189, dtype=torch.float64)), (139, tensor(-0.0189, dtype=torch.float64)), (2001, tensor(-0.0189, dtype=torch.float64)), (2320, tensor(-0.0188, dtype=torch.float64)), (587, tensor(-0.0188, dtype=torch.float64)), (1112, tensor(-0.0188, dtype=torch.float64)), (1573, tensor(-0.0188, dtype=torch.float64)), (1394, tensor(-0.0187, dtype=torch.float64)), (670, tensor(-0.0187, dtype=torch.float64)), (746, tensor(-0.0187, dtype=torch.float64)), (2488, tensor(-0.0187, dtype=torch.float64)), (1515, tensor(-0.0187, dtype=torch.float64)), (534, tensor(-0.0187, dtype=torch.float64)), (2700, tensor(-0.0187, dtype=torch.float64)), (1327, tensor(-0.0187, dtype=torch.float64)), (1402, tensor(-0.0187, dtype=torch.float64)), (1772, tensor(-0.0187, dtype=torch.float64)), (3015, tensor(-0.0187, dtype=torch.float64)), (1403, tensor(-0.0186, dtype=torch.float64)), (2439, tensor(-0.0184, dtype=torch.float64)), (1629, tensor(-0.0184, dtype=torch.float64)), (1548, tensor(-0.0184, dtype=torch.float64)), (1859, tensor(-0.0184, dtype=torch.float64)), (2035, tensor(-0.0184, dtype=torch.float64)), (995, tensor(-0.0184, dtype=torch.float64)), (310, tensor(-0.0183, dtype=torch.float64)), (1983, tensor(-0.0183, dtype=torch.float64)), (2961, tensor(-0.0183, dtype=torch.float64)), (2917, tensor(-0.0183, dtype=torch.float64)), (3098, tensor(-0.0183, dtype=torch.float64)), (1334, tensor(-0.0183, dtype=torch.float64)), (2856, tensor(-0.0182, dtype=torch.float64)), (1277, tensor(-0.0182, dtype=torch.float64)), (2623, tensor(-0.0182, dtype=torch.float64)), (297, tensor(-0.0182, dtype=torch.float64)), (703, tensor(-0.0182, dtype=torch.float64)), (1725, tensor(-0.0182, dtype=torch.float64)), (2340, tensor(-0.0182, dtype=torch.float64)), (2896, tensor(-0.0182, dtype=torch.float64)), (2150, tensor(-0.0182, dtype=torch.float64)), (55, tensor(-0.0181, dtype=torch.float64)), (1062, tensor(-0.0181, dtype=torch.float64)), (1452, tensor(-0.0180, dtype=torch.float64)), (18, tensor(-0.0180, dtype=torch.float64)), (2019, tensor(-0.0180, dtype=torch.float64)), (2624, tensor(-0.0180, dtype=torch.float64)), (951, tensor(-0.0180, dtype=torch.float64)), (1913, tensor(-0.0180, dtype=torch.float64)), (667, tensor(-0.0180, dtype=torch.float64)), (449, tensor(-0.0180, dtype=torch.float64)), (530, tensor(-0.0179, dtype=torch.float64)), (199, tensor(-0.0179, dtype=torch.float64)), (2016, tensor(-0.0179, dtype=torch.float64)), (881, tensor(-0.0179, dtype=torch.float64)), (1696, tensor(-0.0179, dtype=torch.float64)), (175, tensor(-0.0179, dtype=torch.float64)), (3081, tensor(-0.0178, dtype=torch.float64)), (1468, tensor(-0.0178, dtype=torch.float64)), (233, tensor(-0.0178, dtype=torch.float64)), (988, tensor(-0.0178, dtype=torch.float64)), (2468, tensor(-0.0177, dtype=torch.float64)), (279, tensor(-0.0177, dtype=torch.float64)), (2674, tensor(-0.0176, dtype=torch.float64)), (510, tensor(-0.0176, dtype=torch.float64)), (2883, tensor(-0.0175, dtype=torch.float64)), (3165, tensor(-0.0175, dtype=torch.float64)), (2801, tensor(-0.0175, dtype=torch.float64)), (2335, tensor(-0.0175, dtype=torch.float64)), (811, tensor(-0.0175, dtype=torch.float64)), (2672, tensor(-0.0174, dtype=torch.float64)), (92, tensor(-0.0174, dtype=torch.float64)), (2074, tensor(-0.0174, dtype=torch.float64)), (566, tensor(-0.0174, dtype=torch.float64)), (192, tensor(-0.0174, dtype=torch.float64)), (2413, tensor(-0.0174, dtype=torch.float64)), (1781, tensor(-0.0174, dtype=torch.float64)), (2461, tensor(-0.0173, dtype=torch.float64)), (2264, tensor(-0.0173, dtype=torch.float64)), (906, tensor(-0.0173, dtype=torch.float64)), (1519, tensor(-0.0173, dtype=torch.float64)), (2871, tensor(-0.0173, dtype=torch.float64)), (830, tensor(-0.0173, dtype=torch.float64)), (962, tensor(-0.0172, dtype=torch.float64)), (2632, tensor(-0.0172, dtype=torch.float64)), (523, tensor(-0.0172, dtype=torch.float64)), (1739, tensor(-0.0172, dtype=torch.float64)), (2681, tensor(-0.0172, dtype=torch.float64)), (362, tensor(-0.0172, dtype=torch.float64)), (865, tensor(-0.0172, dtype=torch.float64)), (2540, tensor(-0.0171, dtype=torch.float64)), (909, tensor(-0.0171, dtype=torch.float64)), (516, tensor(-0.0171, dtype=torch.float64)), (905, tensor(-0.0170, dtype=torch.float64)), (1934, tensor(-0.0170, dtype=torch.float64)), (179, tensor(-0.0170, dtype=torch.float64)), (514, tensor(-0.0170, dtype=torch.float64)), (612, tensor(-0.0170, dtype=torch.float64)), (1209, tensor(-0.0170, dtype=torch.float64)), (698, tensor(-0.0170, dtype=torch.float64)), (3091, tensor(-0.0170, dtype=torch.float64)), (2869, tensor(-0.0169, dtype=torch.float64)), (818, tensor(-0.0169, dtype=torch.float64)), (1414, tensor(-0.0169, dtype=torch.float64)), (656, tensor(-0.0169, dtype=torch.float64)), (2617, tensor(-0.0168, dtype=torch.float64)), (462, tensor(-0.0168, dtype=torch.float64)), (915, tensor(-0.0168, dtype=torch.float64)), (2049, tensor(-0.0168, dtype=torch.float64)), (384, tensor(-0.0167, dtype=torch.float64)), (2541, tensor(-0.0167, dtype=torch.float64)), (1043, tensor(-0.0167, dtype=torch.float64)), (1978, tensor(-0.0167, dtype=torch.float64)), (733, tensor(-0.0167, dtype=torch.float64)), (989, tensor(-0.0167, dtype=torch.float64)), (1290, tensor(-0.0167, dtype=torch.float64)), (1591, tensor(-0.0167, dtype=torch.float64)), (3186, tensor(-0.0166, dtype=torch.float64)), (2206, tensor(-0.0166, dtype=torch.float64)), (2784, tensor(-0.0166, dtype=torch.float64)), (2563, tensor(-0.0165, dtype=torch.float64)), (3145, tensor(-0.0165, dtype=torch.float64)), (2979, tensor(-0.0165, dtype=torch.float64)), (174, tensor(-0.0165, dtype=torch.float64)), (1355, tensor(-0.0165, dtype=torch.float64)), (155, tensor(-0.0165, dtype=torch.float64)), (982, tensor(-0.0165, dtype=torch.float64)), (3193, tensor(-0.0164, dtype=torch.float64)), (2250, tensor(-0.0164, dtype=torch.float64)), (1397, tensor(-0.0163, dtype=torch.float64)), (1966, tensor(-0.0163, dtype=torch.float64)), (3172, tensor(-0.0163, dtype=torch.float64)), (95, tensor(-0.0163, dtype=torch.float64)), (2846, tensor(-0.0163, dtype=torch.float64)), (638, tensor(-0.0163, dtype=torch.float64)), (3147, tensor(-0.0163, dtype=torch.float64)), (1247, tensor(-0.0163, dtype=torch.float64)), (1774, tensor(-0.0163, dtype=torch.float64)), (1174, tensor(-0.0162, dtype=torch.float64)), (1752, tensor(-0.0162, dtype=torch.float64)), (1581, tensor(-0.0161, dtype=torch.float64)), (1234, tensor(-0.0161, dtype=torch.float64)), (2968, tensor(-0.0160, dtype=torch.float64)), (908, tensor(-0.0160, dtype=torch.float64)), (128, tensor(-0.0160, dtype=torch.float64)), (1957, tensor(-0.0160, dtype=torch.float64)), (53, tensor(-0.0160, dtype=torch.float64)), (2698, tensor(-0.0160, dtype=torch.float64)), (1241, tensor(-0.0159, dtype=torch.float64)), (2220, tensor(-0.0159, dtype=torch.float64)), (3099, tensor(-0.0159, dtype=torch.float64)), (1829, tensor(-0.0159, dtype=torch.float64)), (463, tensor(-0.0159, dtype=torch.float64)), (610, tensor(-0.0159, dtype=torch.float64)), (3150, tensor(-0.0158, dtype=torch.float64)), (2107, tensor(-0.0158, dtype=torch.float64)), (1301, tensor(-0.0158, dtype=torch.float64)), (651, tensor(-0.0158, dtype=torch.float64)), (2549, tensor(-0.0158, dtype=torch.float64)), (2025, tensor(-0.0157, dtype=torch.float64)), (725, tensor(-0.0157, dtype=torch.float64)), (1285, tensor(-0.0156, dtype=torch.float64)), (2273, tensor(-0.0155, dtype=torch.float64)), (642, tensor(-0.0155, dtype=torch.float64)), (585, tensor(-0.0155, dtype=torch.float64)), (1712, tensor(-0.0155, dtype=torch.float64)), (2257, tensor(-0.0154, dtype=torch.float64)), (1073, tensor(-0.0154, dtype=torch.float64)), (1505, tensor(-0.0154, dtype=torch.float64)), (2625, tensor(-0.0154, dtype=torch.float64)), (433, tensor(-0.0154, dtype=torch.float64)), (2239, tensor(-0.0154, dtype=torch.float64)), (1014, tensor(-0.0154, dtype=torch.float64)), (1858, tensor(-0.0154, dtype=torch.float64)), (2038, tensor(-0.0153, dtype=torch.float64)), (3158, tensor(-0.0153, dtype=torch.float64)), (630, tensor(-0.0153, dtype=torch.float64)), (1137, tensor(-0.0153, dtype=torch.float64)), (2916, tensor(-0.0153, dtype=torch.float64)), (971, tensor(-0.0152, dtype=torch.float64)), (1500, tensor(-0.0152, dtype=torch.float64)), (2126, tensor(-0.0152, dtype=torch.float64)), (1794, tensor(-0.0152, dtype=torch.float64)), (2253, tensor(-0.0152, dtype=torch.float64)), (1996, tensor(-0.0152, dtype=torch.float64)), (1760, tensor(-0.0151, dtype=torch.float64)), (1424, tensor(-0.0151, dtype=torch.float64)), (377, tensor(-0.0151, dtype=torch.float64)), (731, tensor(-0.0151, dtype=torch.float64)), (2732, tensor(-0.0151, dtype=torch.float64)), (1279, tensor(-0.0151, dtype=torch.float64)), (1719, tensor(-0.0151, dtype=torch.float64)), (2707, tensor(-0.0150, dtype=torch.float64)), (2281, tensor(-0.0150, dtype=torch.float64)), (802, tensor(-0.0150, dtype=torch.float64)), (1598, tensor(-0.0150, dtype=torch.float64)), (2951, tensor(-0.0149, dtype=torch.float64)), (2148, tensor(-0.0148, dtype=torch.float64)), (2599, tensor(-0.0148, dtype=torch.float64)), (2352, tensor(-0.0148, dtype=torch.float64)), (271, tensor(-0.0147, dtype=torch.float64)), (2696, tensor(-0.0147, dtype=torch.float64)), (1971, tensor(-0.0147, dtype=torch.float64)), (2547, tensor(-0.0147, dtype=torch.float64)), (1226, tensor(-0.0147, dtype=torch.float64)), (3146, tensor(-0.0147, dtype=torch.float64)), (2316, tensor(-0.0147, dtype=torch.float64)), (1628, tensor(-0.0146, dtype=torch.float64)), (490, tensor(-0.0146, dtype=torch.float64)), (474, tensor(-0.0146, dtype=torch.float64)), (2518, tensor(-0.0146, dtype=torch.float64)), (3144, tensor(-0.0145, dtype=torch.float64)), (1316, tensor(-0.0145, dtype=torch.float64)), (2017, tensor(-0.0145, dtype=torch.float64)), (2182, tensor(-0.0144, dtype=torch.float64)), (1694, tensor(-0.0144, dtype=torch.float64)), (2721, tensor(-0.0144, dtype=torch.float64)), (1991, tensor(-0.0144, dtype=torch.float64)), (1185, tensor(-0.0144, dtype=torch.float64)), (491, tensor(-0.0144, dtype=torch.float64)), (431, tensor(-0.0143, dtype=torch.float64)), (1823, tensor(-0.0142, dtype=torch.float64)), (42, tensor(-0.0142, dtype=torch.float64)), (1928, tensor(-0.0142, dtype=torch.float64)), (970, tensor(-0.0142, dtype=torch.float64)), (1175, tensor(-0.0142, dtype=torch.float64)), (1932, tensor(-0.0141, dtype=torch.float64)), (1849, tensor(-0.0141, dtype=torch.float64)), (266, tensor(-0.0141, dtype=torch.float64)), (2900, tensor(-0.0140, dtype=torch.float64)), (2327, tensor(-0.0140, dtype=torch.float64)), (1680, tensor(-0.0140, dtype=torch.float64)), (1887, tensor(-0.0140, dtype=torch.float64)), (2355, tensor(-0.0140, dtype=torch.float64)), (2012, tensor(-0.0139, dtype=torch.float64)), (606, tensor(-0.0139, dtype=torch.float64)), (1674, tensor(-0.0139, dtype=torch.float64)), (3041, tensor(-0.0138, dtype=torch.float64)), (355, tensor(-0.0138, dtype=torch.float64)), (273, tensor(-0.0138, dtype=torch.float64)), (543, tensor(-0.0138, dtype=torch.float64)), (2297, tensor(-0.0138, dtype=torch.float64)), (445, tensor(-0.0137, dtype=torch.float64)), (1623, tensor(-0.0137, dtype=torch.float64)), (1025, tensor(-0.0137, dtype=torch.float64)), (188, tensor(-0.0137, dtype=torch.float64)), (2998, tensor(-0.0137, dtype=torch.float64)), (2881, tensor(-0.0136, dtype=torch.float64)), (2113, tensor(-0.0136, dtype=torch.float64)), (191, tensor(-0.0136, dtype=torch.float64)), (211, tensor(-0.0135, dtype=torch.float64)), (51, tensor(-0.0135, dtype=torch.float64)), (206, tensor(-0.0135, dtype=torch.float64)), (2412, tensor(-0.0134, dtype=torch.float64)), (292, tensor(-0.0134, dtype=torch.float64)), (582, tensor(-0.0134, dtype=torch.float64)), (2343, tensor(-0.0134, dtype=torch.float64)), (1758, tensor(-0.0133, dtype=torch.float64)), (983, tensor(-0.0133, dtype=torch.float64)), (1564, tensor(-0.0133, dtype=torch.float64)), (727, tensor(-0.0133, dtype=torch.float64)), (2800, tensor(-0.0133, dtype=torch.float64)), (1453, tensor(-0.0133, dtype=torch.float64)), (2099, tensor(-0.0133, dtype=torch.float64)), (1324, tensor(-0.0133, dtype=torch.float64)), (2620, tensor(-0.0133, dtype=torch.float64)), (1768, tensor(-0.0133, dtype=torch.float64)), (969, tensor(-0.0133, dtype=torch.float64)), (1163, tensor(-0.0132, dtype=torch.float64)), (2440, tensor(-0.0132, dtype=torch.float64)), (2174, tensor(-0.0132, dtype=torch.float64)), (2201, tensor(-0.0132, dtype=torch.float64)), (243, tensor(-0.0132, dtype=torch.float64)), (1987, tensor(-0.0132, dtype=torch.float64)), (1602, tensor(-0.0131, dtype=torch.float64)), (2830, tensor(-0.0131, dtype=torch.float64)), (3137, tensor(-0.0130, dtype=torch.float64)), (7, tensor(-0.0130, dtype=torch.float64)), (2588, tensor(-0.0130, dtype=torch.float64)), (626, tensor(-0.0130, dtype=torch.float64)), (1087, tensor(-0.0129, dtype=torch.float64)), (986, tensor(-0.0129, dtype=torch.float64)), (554, tensor(-0.0128, dtype=torch.float64)), (1410, tensor(-0.0128, dtype=torch.float64)), (3034, tensor(-0.0128, dtype=torch.float64)), (1098, tensor(-0.0128, dtype=torch.float64)), (2189, tensor(-0.0127, dtype=torch.float64)), (1784, tensor(-0.0127, dtype=torch.float64)), (1309, tensor(-0.0127, dtype=torch.float64)), (804, tensor(-0.0126, dtype=torch.float64)), (1746, tensor(-0.0126, dtype=torch.float64)), (108, tensor(-0.0126, dtype=torch.float64)), (2605, tensor(-0.0126, dtype=torch.float64)), (2590, tensor(-0.0126, dtype=torch.float64)), (2832, tensor(-0.0126, dtype=torch.float64)), (813, tensor(-0.0126, dtype=torch.float64)), (2505, tensor(-0.0126, dtype=torch.float64)), (76, tensor(-0.0126, dtype=torch.float64)), (533, tensor(-0.0126, dtype=torch.float64)), (1701, tensor(-0.0126, dtype=torch.float64)), (1200, tensor(-0.0125, dtype=torch.float64)), (1375, tensor(-0.0124, dtype=torch.float64)), (827, tensor(-0.0124, dtype=torch.float64)), (1917, tensor(-0.0124, dtype=torch.float64)), (1607, tensor(-0.0123, dtype=torch.float64)), (2258, tensor(-0.0123, dtype=torch.float64)), (826, tensor(-0.0123, dtype=torch.float64)), (1843, tensor(-0.0123, dtype=torch.float64)), (2952, tensor(-0.0123, dtype=torch.float64)), (3119, tensor(-0.0123, dtype=torch.float64)), (1347, tensor(-0.0122, dtype=torch.float64)), (1107, tensor(-0.0122, dtype=torch.float64)), (1082, tensor(-0.0122, dtype=torch.float64)), (2862, tensor(-0.0122, dtype=torch.float64)), (3123, tensor(-0.0122, dtype=torch.float64)), (1052, tensor(-0.0122, dtype=torch.float64)), (604, tensor(-0.0121, dtype=torch.float64)), (2216, tensor(-0.0121, dtype=torch.float64)), (3112, tensor(-0.0121, dtype=torch.float64)), (1511, tensor(-0.0121, dtype=torch.float64)), (86, tensor(-0.0121, dtype=torch.float64)), (1418, tensor(-0.0121, dtype=torch.float64)), (2100, tensor(-0.0120, dtype=torch.float64)), (114, tensor(-0.0120, dtype=torch.float64)), (665, tensor(-0.0120, dtype=torch.float64)), (2068, tensor(-0.0119, dtype=torch.float64)), (2691, tensor(-0.0119, dtype=torch.float64)), (2323, tensor(-0.0119, dtype=torch.float64)), (454, tensor(-0.0119, dtype=torch.float64)), (1281, tensor(-0.0119, dtype=torch.float64)), (1559, tensor(-0.0119, dtype=torch.float64)), (2854, tensor(-0.0118, dtype=torch.float64)), (837, tensor(-0.0118, dtype=torch.float64)), (1839, tensor(-0.0118, dtype=torch.float64)), (1550, tensor(-0.0117, dtype=torch.float64)), (2069, tensor(-0.0117, dtype=torch.float64)), (1700, tensor(-0.0117, dtype=torch.float64)), (353, tensor(-0.0116, dtype=torch.float64)), (863, tensor(-0.0116, dtype=torch.float64)), (949, tensor(-0.0116, dtype=torch.float64)), (1881, tensor(-0.0116, dtype=torch.float64)), (149, tensor(-0.0116, dtype=torch.float64)), (2945, tensor(-0.0116, dtype=torch.float64)), (2130, tensor(-0.0116, dtype=torch.float64)), (2254, tensor(-0.0116, dtype=torch.float64)), (1486, tensor(-0.0116, dtype=torch.float64)), (2769, tensor(-0.0115, dtype=torch.float64)), (691, tensor(-0.0114, dtype=torch.float64)), (2058, tensor(-0.0114, dtype=torch.float64)), (2112, tensor(-0.0114, dtype=torch.float64)), (421, tensor(-0.0114, dtype=torch.float64)), (2173, tensor(-0.0114, dtype=torch.float64)), (1101, tensor(-0.0113, dtype=torch.float64)), (2647, tensor(-0.0113, dtype=torch.float64)), (1872, tensor(-0.0113, dtype=torch.float64)), (2138, tensor(-0.0113, dtype=torch.float64)), (2771, tensor(-0.0113, dtype=torch.float64)), (1116, tensor(-0.0113, dtype=torch.float64)), (2795, tensor(-0.0113, dtype=torch.float64)), (1134, tensor(-0.0112, dtype=torch.float64)), (3084, tensor(-0.0112, dtype=torch.float64)), (2535, tensor(-0.0112, dtype=torch.float64)), (3181, tensor(-0.0112, dtype=torch.float64)), (2559, tensor(-0.0112, dtype=torch.float64)), (2758, tensor(-0.0112, dtype=torch.float64)), (1291, tensor(-0.0111, dtype=torch.float64)), (2641, tensor(-0.0111, dtype=torch.float64)), (2187, tensor(-0.0111, dtype=torch.float64)), (1527, tensor(-0.0110, dtype=torch.float64)), (3076, tensor(-0.0110, dtype=torch.float64)), (1935, tensor(-0.0110, dtype=torch.float64)), (1535, tensor(-0.0110, dtype=torch.float64)), (469, tensor(-0.0110, dtype=torch.float64)), (2325, tensor(-0.0109, dtype=torch.float64)), (991, tensor(-0.0109, dtype=torch.float64)), (291, tensor(-0.0109, dtype=torch.float64)), (1172, tensor(-0.0109, dtype=torch.float64)), (647, tensor(-0.0109, dtype=torch.float64)), (1938, tensor(-0.0108, dtype=torch.float64)), (1455, tensor(-0.0108, dtype=torch.float64)), (2887, tensor(-0.0108, dtype=torch.float64)), (118, tensor(-0.0108, dtype=torch.float64)), (619, tensor(-0.0108, dtype=torch.float64)), (551, tensor(-0.0108, dtype=torch.float64)), (277, tensor(-0.0108, dtype=torch.float64)), (2214, tensor(-0.0107, dtype=torch.float64)), (2519, tensor(-0.0106, dtype=torch.float64)), (229, tensor(-0.0106, dtype=torch.float64)), (693, tensor(-0.0106, dtype=torch.float64)), (2085, tensor(-0.0106, dtype=torch.float64)), (2296, tensor(-0.0105, dtype=torch.float64)), (1381, tensor(-0.0105, dtype=torch.float64)), (1295, tensor(-0.0105, dtype=torch.float64)), (1231, tensor(-0.0105, dtype=torch.float64)), (2981, tensor(-0.0105, dtype=torch.float64)), (232, tensor(-0.0105, dtype=torch.float64)), (832, tensor(-0.0105, dtype=torch.float64)), (458, tensor(-0.0105, dtype=torch.float64)), (2225, tensor(-0.0105, dtype=torch.float64)), (2373, tensor(-0.0105, dtype=torch.float64)), (3055, tensor(-0.0104, dtype=torch.float64)), (1350, tensor(-0.0104, dtype=torch.float64)), (129, tensor(-0.0104, dtype=torch.float64)), (1451, tensor(-0.0103, dtype=torch.float64)), (1556, tensor(-0.0103, dtype=torch.float64)), (2240, tensor(-0.0103, dtype=torch.float64)), (2435, tensor(-0.0103, dtype=torch.float64)), (975, tensor(-0.0103, dtype=torch.float64)), (663, tensor(-0.0103, dtype=torch.float64)), (956, tensor(-0.0103, dtype=torch.float64)), (1566, tensor(-0.0103, dtype=torch.float64)), (1754, tensor(-0.0103, dtype=torch.float64)), (2762, tensor(-0.0102, dtype=torch.float64)), (1388, tensor(-0.0102, dtype=torch.float64)), (2392, tensor(-0.0102, dtype=torch.float64)), (2052, tensor(-0.0102, dtype=torch.float64)), (960, tensor(-0.0101, dtype=torch.float64)), (207, tensor(-0.0101, dtype=torch.float64)), (1259, tensor(-0.0101, dtype=torch.float64)), (2203, tensor(-0.0101, dtype=torch.float64)), (226, tensor(-0.0101, dtype=torch.float64)), (2787, tensor(-0.0100, dtype=torch.float64)), (2193, tensor(-0.0100, dtype=torch.float64)), (2350, tensor(-0.0100, dtype=torch.float64)), (839, tensor(-0.0100, dtype=torch.float64)), (1366, tensor(-0.0099, dtype=torch.float64)), (2321, tensor(-0.0099, dtype=torch.float64)), (2261, tensor(-0.0099, dtype=torch.float64)), (1975, tensor(-0.0099, dtype=torch.float64)), (2063, tensor(-0.0099, dtype=torch.float64)), (2045, tensor(-0.0099, dtype=torch.float64)), (246, tensor(-0.0098, dtype=torch.float64)), (2079, tensor(-0.0098, dtype=torch.float64)), (526, tensor(-0.0098, dtype=torch.float64)), (601, tensor(-0.0097, dtype=torch.float64)), (2347, tensor(-0.0097, dtype=torch.float64)), (1211, tensor(-0.0097, dtype=torch.float64)), (1152, tensor(-0.0097, dtype=torch.float64)), (577, tensor(-0.0096, dtype=torch.float64)), (1271, tensor(-0.0096, dtype=torch.float64)), (851, tensor(-0.0096, dtype=torch.float64)), (2155, tensor(-0.0096, dtype=torch.float64)), (1984, tensor(-0.0096, dtype=torch.float64)), (2534, tensor(-0.0095, dtype=torch.float64)), (928, tensor(-0.0095, dtype=torch.float64)), (893, tensor(-0.0095, dtype=torch.float64)), (1268, tensor(-0.0095, dtype=torch.float64)), (2178, tensor(-0.0095, dtype=torch.float64)), (388, tensor(-0.0095, dtype=torch.float64)), (1897, tensor(-0.0095, dtype=torch.float64)), (2411, tensor(-0.0095, dtype=torch.float64)), (1948, tensor(-0.0094, dtype=torch.float64)), (751, tensor(-0.0094, dtype=torch.float64)), (3056, tensor(-0.0094, dtype=torch.float64)), (1636, tensor(-0.0094, dtype=torch.float64)), (394, tensor(-0.0094, dtype=torch.float64)), (709, tensor(-0.0094, dtype=torch.float64)), (1831, tensor(-0.0094, dtype=torch.float64)), (20, tensor(-0.0093, dtype=torch.float64)), (1542, tensor(-0.0093, dtype=torch.float64)), (2213, tensor(-0.0093, dtype=torch.float64)), (672, tensor(-0.0093, dtype=torch.float64)), (2092, tensor(-0.0093, dtype=torch.float64)), (2944, tensor(-0.0093, dtype=torch.float64)), (3155, tensor(-0.0093, dtype=torch.float64)), (1941, tensor(-0.0092, dtype=torch.float64)), (2586, tensor(-0.0091, dtype=torch.float64)), (1325, tensor(-0.0091, dtype=torch.float64)), (1956, tensor(-0.0091, dtype=torch.float64)), (1462, tensor(-0.0091, dtype=torch.float64)), (810, tensor(-0.0091, dtype=torch.float64)), (2495, tensor(-0.0091, dtype=torch.float64)), (1365, tensor(-0.0091, dtype=torch.float64)), (2486, tensor(-0.0091, dtype=torch.float64)), (439, tensor(-0.0091, dtype=torch.float64)), (1267, tensor(-0.0091, dtype=torch.float64)), (1126, tensor(-0.0091, dtype=torch.float64)), (2661, tensor(-0.0090, dtype=torch.float64)), (2145, tensor(-0.0090, dtype=torch.float64)), (1713, tensor(-0.0090, dtype=torch.float64)), (234, tensor(-0.0090, dtype=torch.float64)), (721, tensor(-0.0090, dtype=torch.float64)), (1936, tensor(-0.0089, dtype=torch.float64)), (521, tensor(-0.0089, dtype=torch.float64)), (1442, tensor(-0.0089, dtype=torch.float64)), (2432, tensor(-0.0089, dtype=torch.float64)), (517, tensor(-0.0089, dtype=torch.float64)), (2743, tensor(-0.0088, dtype=torch.float64)), (918, tensor(-0.0088, dtype=torch.float64)), (372, tensor(-0.0088, dtype=torch.float64)), (3134, tensor(-0.0087, dtype=torch.float64)), (496, tensor(-0.0087, dtype=torch.float64)), (222, tensor(-0.0087, dtype=torch.float64)), (2188, tensor(-0.0087, dtype=torch.float64)), (1167, tensor(-0.0086, dtype=torch.float64)), (1779, tensor(-0.0086, dtype=torch.float64)), (189, tensor(-0.0086, dtype=torch.float64)), (3086, tensor(-0.0086, dtype=torch.float64)), (2901, tensor(-0.0086, dtype=torch.float64)), (1950, tensor(-0.0085, dtype=torch.float64)), (3028, tensor(-0.0085, dtype=torch.float64)), (519, tensor(-0.0085, dtype=torch.float64)), (418, tensor(-0.0084, dtype=torch.float64)), (598, tensor(-0.0083, dtype=torch.float64)), (1862, tensor(-0.0083, dtype=torch.float64)), (895, tensor(-0.0083, dtype=torch.float64)), (3085, tensor(-0.0083, dtype=torch.float64)), (1392, tensor(-0.0083, dtype=torch.float64)), (2616, tensor(-0.0083, dtype=torch.float64)), (505, tensor(-0.0083, dtype=torch.float64)), (443, tensor(-0.0083, dtype=torch.float64)), (1465, tensor(-0.0083, dtype=torch.float64)), (1819, tensor(-0.0082, dtype=torch.float64)), (1331, tensor(-0.0082, dtype=torch.float64)), (488, tensor(-0.0082, dtype=torch.float64)), (257, tensor(-0.0081, dtype=torch.float64)), (392, tensor(-0.0081, dtype=torch.float64)), (46, tensor(-0.0081, dtype=torch.float64)), (2848, tensor(-0.0081, dtype=torch.float64)), (2947, tensor(-0.0081, dtype=torch.float64)), (1577, tensor(-0.0081, dtype=torch.float64)), (2724, tensor(-0.0080, dtype=torch.float64)), (2749, tensor(-0.0080, dtype=torch.float64)), (763, tensor(-0.0080, dtype=torch.float64)), (2978, tensor(-0.0080, dtype=torch.float64)), (1923, tensor(-0.0080, dtype=torch.float64)), (1312, tensor(-0.0080, dtype=torch.float64)), (1186, tensor(-0.0080, dtype=torch.float64)), (357, tensor(-0.0080, dtype=torch.float64)), (1463, tensor(-0.0080, dtype=torch.float64)), (2231, tensor(-0.0080, dtype=torch.float64)), (1419, tensor(-0.0080, dtype=torch.float64)), (1270, tensor(-0.0080, dtype=torch.float64)), (684, tensor(-0.0079, dtype=torch.float64)), (3184, tensor(-0.0079, dtype=torch.float64)), (904, tensor(-0.0079, dtype=torch.float64)), (216, tensor(-0.0078, dtype=torch.float64)), (441, tensor(-0.0078, dtype=torch.float64)), (797, tensor(-0.0078, dtype=torch.float64)), (705, tensor(-0.0078, dtype=torch.float64)), (2673, tensor(-0.0077, dtype=torch.float64)), (1715, tensor(-0.0077, dtype=torch.float64)), (204, tensor(-0.0077, dtype=torch.float64)), (1439, tensor(-0.0077, dtype=torch.float64)), (689, tensor(-0.0077, dtype=torch.float64)), (1037, tensor(-0.0077, dtype=torch.float64)), (2894, tensor(-0.0076, dtype=torch.float64)), (1224, tensor(-0.0076, dtype=torch.float64)), (2627, tensor(-0.0076, dtype=torch.float64)), (3141, tensor(-0.0076, dtype=torch.float64)), (2726, tensor(-0.0076, dtype=torch.float64)), (750, tensor(-0.0075, dtype=torch.float64)), (679, tensor(-0.0075, dtype=torch.float64)), (2622, tensor(-0.0075, dtype=torch.float64)), (2962, tensor(-0.0075, dtype=torch.float64)), (1807, tensor(-0.0074, dtype=torch.float64)), (1368, tensor(-0.0074, dtype=torch.float64)), (2680, tensor(-0.0074, dtype=torch.float64)), (2406, tensor(-0.0074, dtype=torch.float64)), (3194, tensor(-0.0074, dtype=torch.float64)), (1930, tensor(-0.0074, dtype=torch.float64)), (61, tensor(-0.0073, dtype=torch.float64)), (107, tensor(-0.0073, dtype=torch.float64)), (3042, tensor(-0.0073, dtype=torch.float64)), (1461, tensor(-0.0072, dtype=torch.float64)), (2291, tensor(-0.0072, dtype=torch.float64)), (135, tensor(-0.0071, dtype=torch.float64)), (2986, tensor(-0.0071, dtype=torch.float64)), (1799, tensor(-0.0071, dtype=torch.float64)), (2131, tensor(-0.0071, dtype=torch.float64)), (2197, tensor(-0.0071, dtype=torch.float64)), (2967, tensor(-0.0070, dtype=torch.float64)), (2838, tensor(-0.0070, dtype=torch.float64)), (1684, tensor(-0.0070, dtype=torch.float64)), (2822, tensor(-0.0070, dtype=torch.float64)), (3191, tensor(-0.0070, dtype=torch.float64)), (2571, tensor(-0.0070, dtype=torch.float64)), (2426, tensor(-0.0069, dtype=torch.float64)), (1762, tensor(-0.0069, dtype=torch.float64)), (306, tensor(-0.0069, dtype=torch.float64)), (2191, tensor(-0.0069, dtype=torch.float64)), (2369, tensor(-0.0068, dtype=torch.float64)), (2557, tensor(-0.0068, dtype=torch.float64)), (1354, tensor(-0.0068, dtype=torch.float64)), (152, tensor(-0.0068, dtype=torch.float64)), (2573, tensor(-0.0068, dtype=torch.float64)), (370, tensor(-0.0068, dtype=torch.float64)), (1702, tensor(-0.0068, dtype=torch.float64)), (814, tensor(-0.0068, dtype=torch.float64)), (1097, tensor(-0.0068, dtype=torch.float64)), (404, tensor(-0.0067, dtype=torch.float64)), (1478, tensor(-0.0067, dtype=torch.float64)), (2865, tensor(-0.0067, dtype=torch.float64)), (2020, tensor(-0.0067, dtype=torch.float64)), (1658, tensor(-0.0067, dtype=torch.float64)), (160, tensor(-0.0066, dtype=torch.float64)), (3008, tensor(-0.0066, dtype=torch.float64)), (2888, tensor(-0.0066, dtype=torch.float64)), (2621, tensor(-0.0066, dtype=torch.float64)), (3082, tensor(-0.0066, dtype=torch.float64)), (1761, tensor(-0.0065, dtype=torch.float64)), (1204, tensor(-0.0065, dtype=torch.float64)), (2960, tensor(-0.0065, dtype=torch.float64)), (795, tensor(-0.0065, dtype=torch.float64)), (1868, tensor(-0.0065, dtype=torch.float64)), (414, tensor(-0.0065, dtype=torch.float64)), (2722, tensor(-0.0065, dtype=torch.float64)), (1931, tensor(-0.0065, dtype=torch.float64)), (2164, tensor(-0.0065, dtype=torch.float64)), (106, tensor(-0.0065, dtype=torch.float64)), (1203, tensor(-0.0065, dtype=torch.float64)), (3047, tensor(-0.0065, dtype=torch.float64)), (2780, tensor(-0.0065, dtype=torch.float64)), (1986, tensor(-0.0064, dtype=torch.float64)), (1303, tensor(-0.0064, dtype=torch.float64)), (1976, tensor(-0.0064, dtype=torch.float64)), (3077, tensor(-0.0064, dtype=torch.float64)), (3071, tensor(-0.0064, dtype=torch.float64)), (2319, tensor(-0.0064, dtype=torch.float64)), (3178, tensor(-0.0064, dtype=torch.float64)), (1908, tensor(-0.0064, dtype=torch.float64)), (2139, tensor(-0.0064, dtype=torch.float64)), (786, tensor(-0.0063, dtype=torch.float64)), (2953, tensor(-0.0063, dtype=torch.float64)), (536, tensor(-0.0063, dtype=torch.float64)), (503, tensor(-0.0063, dtype=torch.float64)), (3102, tensor(-0.0063, dtype=torch.float64)), (1349, tensor(-0.0062, dtype=torch.float64)), (958, tensor(-0.0062, dtype=torch.float64)), (742, tensor(-0.0062, dtype=torch.float64)), (2272, tensor(-0.0062, dtype=torch.float64)), (1910, tensor(-0.0062, dtype=torch.float64)), (1003, tensor(-0.0062, dtype=torch.float64)), (842, tensor(-0.0062, dtype=torch.float64)), (1133, tensor(-0.0062, dtype=torch.float64)), (2820, tensor(-0.0062, dtype=torch.float64)), (1969, tensor(-0.0061, dtype=torch.float64)), (2930, tensor(-0.0061, dtype=torch.float64)), (1788, tensor(-0.0061, dtype=torch.float64)), (1054, tensor(-0.0060, dtype=torch.float64)), (1916, tensor(-0.0060, dtype=torch.float64)), (1954, tensor(-0.0059, dtype=torch.float64)), (2914, tensor(-0.0059, dtype=torch.float64)), (1946, tensor(-0.0058, dtype=torch.float64)), (701, tensor(-0.0058, dtype=torch.float64)), (2210, tensor(-0.0058, dtype=torch.float64)), (90, tensor(-0.0058, dtype=torch.float64)), (156, tensor(-0.0058, dtype=torch.float64)), (511, tensor(-0.0058, dtype=torch.float64)), (682, tensor(-0.0058, dtype=torch.float64)), (2184, tensor(-0.0058, dtype=torch.float64)), (3111, tensor(-0.0057, dtype=torch.float64)), (3014, tensor(-0.0057, dtype=torch.float64)), (383, tensor(-0.0057, dtype=torch.float64)), (1943, tensor(-0.0057, dtype=torch.float64)), (2111, tensor(-0.0057, dtype=torch.float64)), (747, tensor(-0.0056, dtype=torch.float64)), (397, tensor(-0.0056, dtype=torch.float64)), (3044, tensor(-0.0056, dtype=torch.float64)), (190, tensor(-0.0056, dtype=torch.float64)), (481, tensor(-0.0056, dtype=torch.float64)), (2902, tensor(-0.0056, dtype=torch.float64)), (2329, tensor(-0.0056, dtype=torch.float64)), (2044, tensor(-0.0056, dtype=torch.float64)), (749, tensor(-0.0056, dtype=torch.float64)), (2850, tensor(-0.0056, dtype=torch.float64)), (2859, tensor(-0.0055, dtype=torch.float64)), (420, tensor(-0.0055, dtype=torch.float64)), (2287, tensor(-0.0055, dtype=torch.float64)), (3175, tensor(-0.0055, dtype=torch.float64)), (1308, tensor(-0.0055, dtype=torch.float64)), (1382, tensor(-0.0054, dtype=torch.float64)), (2955, tensor(-0.0054, dtype=torch.float64)), (2381, tensor(-0.0054, dtype=torch.float64)), (3061, tensor(-0.0053, dtype=torch.float64)), (3125, tensor(-0.0053, dtype=torch.float64)), (2224, tensor(-0.0053, dtype=torch.float64)), (2259, tensor(-0.0053, dtype=torch.float64)), (894, tensor(-0.0053, dtype=torch.float64)), (615, tensor(-0.0053, dtype=torch.float64)), (992, tensor(-0.0053, dtype=torch.float64)), (2855, tensor(-0.0052, dtype=torch.float64)), (833, tensor(-0.0052, dtype=torch.float64)), (868, tensor(-0.0052, dtype=torch.float64)), (416, tensor(-0.0052, dtype=torch.float64)), (3157, tensor(-0.0052, dtype=torch.float64)), (1974, tensor(-0.0052, dtype=torch.float64)), (278, tensor(-0.0052, dtype=torch.float64)), (2918, tensor(-0.0052, dtype=torch.float64)), (609, tensor(-0.0051, dtype=torch.float64)), (1601, tensor(-0.0051, dtype=torch.float64)), (2434, tensor(-0.0051, dtype=torch.float64)), (2665, tensor(-0.0051, dtype=torch.float64)), (283, tensor(-0.0051, dtype=torch.float64)), (1222, tensor(-0.0051, dtype=torch.float64)), (2989, tensor(-0.0051, dtype=torch.float64)), (3148, tensor(-0.0050, dtype=torch.float64)), (3050, tensor(-0.0050, dtype=torch.float64)), (2356, tensor(-0.0050, dtype=torch.float64)), (2778, tensor(-0.0050, dtype=torch.float64)), (3124, tensor(-0.0050, dtype=torch.float64)), (3117, tensor(-0.0050, dtype=torch.float64)), (666, tensor(-0.0050, dtype=torch.float64)), (544, tensor(-0.0050, dtype=torch.float64)), (981, tensor(-0.0050, dtype=torch.float64)), (922, tensor(-0.0050, dtype=torch.float64)), (80, tensor(-0.0049, dtype=torch.float64)), (2521, tensor(-0.0049, dtype=torch.float64)), (2906, tensor(-0.0049, dtype=torch.float64)), (307, tensor(-0.0049, dtype=torch.float64)), (1042, tensor(-0.0049, dtype=torch.float64)), (1499, tensor(-0.0049, dtype=torch.float64)), (2558, tensor(-0.0048, dtype=torch.float64)), (1225, tensor(-0.0048, dtype=torch.float64)), (2067, tensor(-0.0048, dtype=torch.float64)), (690, tensor(-0.0048, dtype=torch.float64)), (2991, tensor(-0.0048, dtype=torch.float64)), (1876, tensor(-0.0048, dtype=torch.float64)), (2504, tensor(-0.0047, dtype=torch.float64)), (2601, tensor(-0.0047, dtype=torch.float64)), (2301, tensor(-0.0047, dtype=torch.float64)), (641, tensor(-0.0047, dtype=torch.float64)), (1871, tensor(-0.0047, dtype=torch.float64)), (2390, tensor(-0.0046, dtype=torch.float64)), (1507, tensor(-0.0046, dtype=torch.float64)), (2056, tensor(-0.0046, dtype=torch.float64)), (564, tensor(-0.0046, dtype=torch.float64)), (2670, tensor(-0.0046, dtype=torch.float64)), (406, tensor(-0.0046, dtype=torch.float64)), (1557, tensor(-0.0046, dtype=torch.float64)), (3066, tensor(-0.0045, dtype=torch.float64)), (3149, tensor(-0.0045, dtype=torch.float64)), (1726, tensor(-0.0045, dtype=torch.float64)), (212, tensor(-0.0045, dtype=torch.float64)), (1838, tensor(-0.0044, dtype=torch.float64)), (2574, tensor(-0.0044, dtype=torch.float64)), (1362, tensor(-0.0044, dtype=torch.float64)), (941, tensor(-0.0044, dtype=torch.float64)), (467, tensor(-0.0044, dtype=torch.float64)), (3052, tensor(-0.0044, dtype=torch.float64)), (653, tensor(-0.0044, dtype=torch.float64)), (1509, tensor(-0.0044, dtype=torch.float64)), (16, tensor(-0.0044, dtype=torch.float64)), (1604, tensor(-0.0044, dtype=torch.float64)), (1262, tensor(-0.0043, dtype=torch.float64)), (1063, tensor(-0.0043, dtype=torch.float64)), (1890, tensor(-0.0043, dtype=torch.float64)), (309, tensor(-0.0042, dtype=torch.float64)), (1458, tensor(-0.0042, dtype=torch.float64)), (411, tensor(-0.0042, dtype=torch.float64)), (2635, tensor(-0.0042, dtype=torch.float64)), (240, tensor(-0.0042, dtype=torch.float64)), (1723, tensor(-0.0042, dtype=torch.float64)), (3173, tensor(-0.0042, dtype=torch.float64)), (2653, tensor(-0.0041, dtype=torch.float64)), (1124, tensor(-0.0041, dtype=torch.float64)), (2525, tensor(-0.0041, dtype=torch.float64)), (1219, tensor(-0.0041, dtype=torch.float64)), (3045, tensor(-0.0040, dtype=torch.float64)), (2467, tensor(-0.0040, dtype=torch.float64)), (342, tensor(-0.0040, dtype=torch.float64)), (2810, tensor(-0.0040, dtype=torch.float64)), (2345, tensor(-0.0040, dtype=torch.float64)), (1136, tensor(-0.0040, dtype=torch.float64)), (1964, tensor(-0.0040, dtype=torch.float64)), (631, tensor(-0.0039, dtype=torch.float64)), (657, tensor(-0.0039, dtype=torch.float64)), (1753, tensor(-0.0039, dtype=torch.float64)), (1276, tensor(-0.0039, dtype=torch.float64)), (2494, tensor(-0.0039, dtype=torch.float64)), (1475, tensor(-0.0039, dtype=torch.float64)), (2683, tensor(-0.0039, dtype=torch.float64)), (997, tensor(-0.0039, dtype=torch.float64)), (1239, tensor(-0.0039, dtype=torch.float64)), (1412, tensor(-0.0039, dtype=torch.float64)), (1428, tensor(-0.0039, dtype=torch.float64)), (1813, tensor(-0.0039, dtype=torch.float64)), (319, tensor(-0.0039, dtype=torch.float64)), (1533, tensor(-0.0038, dtype=torch.float64)), (477, tensor(-0.0038, dtype=torch.float64)), (994, tensor(-0.0038, dtype=torch.float64)), (2773, tensor(-0.0038, dtype=torch.float64)), (3130, tensor(-0.0038, dtype=torch.float64)), (1161, tensor(-0.0038, dtype=torch.float64)), (2831, tensor(-0.0038, dtype=torch.float64)), (1438, tensor(-0.0037, dtype=torch.float64)), (2367, tensor(-0.0037, dtype=torch.float64)), (2768, tensor(-0.0037, dtype=torch.float64)), (170, tensor(-0.0037, dtype=torch.float64)), (2342, tensor(-0.0037, dtype=torch.float64)), (2938, tensor(-0.0037, dtype=torch.float64)), (942, tensor(-0.0036, dtype=torch.float64)), (1671, tensor(-0.0036, dtype=torch.float64)), (2109, tensor(-0.0036, dtype=torch.float64)), (576, tensor(-0.0036, dtype=torch.float64)), (3121, tensor(-0.0036, dtype=torch.float64)), (2479, tensor(-0.0036, dtype=torch.float64)), (883, tensor(-0.0036, dtype=torch.float64)), (678, tensor(-0.0036, dtype=torch.float64)), (1449, tensor(-0.0036, dtype=torch.float64)), (2425, tensor(-0.0036, dtype=torch.float64)), (3176, tensor(-0.0035, dtype=torch.float64)), (3072, tensor(-0.0035, dtype=torch.float64)), (3106, tensor(-0.0035, dtype=torch.float64)), (808, tensor(-0.0035, dtype=torch.float64)), (1001, tensor(-0.0034, dtype=torch.float64)), (1275, tensor(-0.0034, dtype=torch.float64)), (911, tensor(-0.0034, dtype=torch.float64)), (110, tensor(-0.0034, dtype=torch.float64)), (2009, tensor(-0.0034, dtype=torch.float64)), (1743, tensor(-0.0034, dtype=torch.float64)), (2796, tensor(-0.0034, dtype=torch.float64)), (923, tensor(-0.0034, dtype=torch.float64)), (1689, tensor(-0.0034, dtype=torch.float64)), (1401, tensor(-0.0033, dtype=torch.float64)), (1802, tensor(-0.0033, dtype=torch.float64)), (2431, tensor(-0.0033, dtype=torch.float64)), (1846, tensor(-0.0033, dtype=torch.float64)), (1532, tensor(-0.0033, dtype=torch.float64)), (552, tensor(-0.0033, dtype=torch.float64)), (2867, tensor(-0.0032, dtype=torch.float64)), (3, tensor(-0.0032, dtype=torch.float64)), (2909, tensor(-0.0032, dtype=torch.float64)), (608, tensor(-0.0032, dtype=torch.float64)), (1244, tensor(-0.0032, dtype=torch.float64)), (2828, tensor(-0.0032, dtype=torch.float64)), (2024, tensor(-0.0031, dtype=torch.float64)), (570, tensor(-0.0031, dtype=torch.float64)), (1812, tensor(-0.0031, dtype=torch.float64)), (1965, tensor(-0.0031, dtype=torch.float64)), (398, tensor(-0.0031, dtype=torch.float64)), (819, tensor(-0.0031, dtype=torch.float64)), (1251, tensor(-0.0031, dtype=torch.float64)), (2578, tensor(-0.0030, dtype=torch.float64)), (4, tensor(-0.0030, dtype=torch.float64)), (1518, tensor(-0.0030, dtype=torch.float64)), (287, tensor(-0.0030, dtype=torch.float64)), (700, tensor(-0.0030, dtype=torch.float64)), (1094, tensor(-0.0030, dtype=torch.float64)), (1469, tensor(-0.0029, dtype=torch.float64)), (1370, tensor(-0.0029, dtype=torch.float64)), (2629, tensor(-0.0029, dtype=torch.float64)), (3196, tensor(-0.0029, dtype=torch.float64)), (317, tensor(-0.0029, dtype=torch.float64)), (707, tensor(-0.0028, dtype=torch.float64)), (2582, tensor(-0.0028, dtype=torch.float64)), (2094, tensor(-0.0028, dtype=torch.float64)), (63, tensor(-0.0028, dtype=torch.float64)), (2429, tensor(-0.0027, dtype=torch.float64)), (714, tensor(-0.0027, dtype=torch.float64)), (2318, tensor(-0.0026, dtype=torch.float64)), (2228, tensor(-0.0026, dtype=torch.float64)), (1284, tensor(-0.0026, dtype=torch.float64)), (1502, tensor(-0.0026, dtype=torch.float64)), (447, tensor(-0.0026, dtype=torch.float64)), (2336, tensor(-0.0026, dtype=torch.float64)), (2898, tensor(-0.0025, dtype=torch.float64)), (2166, tensor(-0.0025, dtype=torch.float64)), (2247, tensor(-0.0025, dtype=torch.float64)), (2694, tensor(-0.0024, dtype=torch.float64)), (1785, tensor(-0.0024, dtype=torch.float64)), (1257, tensor(-0.0023, dtype=torch.float64)), (2445, tensor(-0.0023, dtype=torch.float64)), (645, tensor(-0.0023, dtype=torch.float64)), (1364, tensor(-0.0023, dtype=torch.float64)), (618, tensor(-0.0023, dtype=torch.float64)), (368, tensor(-0.0022, dtype=torch.float64)), (1588, tensor(-0.0022, dtype=torch.float64)), (251, tensor(-0.0022, dtype=torch.float64)), (1642, tensor(-0.0022, dtype=torch.float64)), (3127, tensor(-0.0022, dtype=torch.float64)), (1531, tensor(-0.0022, dtype=torch.float64)), (1245, tensor(-0.0021, dtype=torch.float64)), (2076, tensor(-0.0021, dtype=torch.float64)), (2423, tensor(-0.0021, dtype=torch.float64)), (499, tensor(-0.0020, dtype=torch.float64)), (741, tensor(-0.0020, dtype=torch.float64)), (1517, tensor(-0.0020, dtype=torch.float64)), (861, tensor(-0.0020, dtype=torch.float64)), (2391, tensor(-0.0020, dtype=torch.float64)), (104, tensor(-0.0020, dtype=torch.float64)), (1205, tensor(-0.0020, dtype=torch.float64)), (2739, tensor(-0.0020, dtype=torch.float64)), (874, tensor(-0.0019, dtype=torch.float64)), (1716, tensor(-0.0019, dtype=torch.float64)), (203, tensor(-0.0019, dtype=torch.float64)), (1433, tensor(-0.0019, dtype=torch.float64)), (2814, tensor(-0.0019, dtype=torch.float64)), (1488, tensor(-0.0019, dtype=torch.float64)), (1933, tensor(-0.0019, dtype=torch.float64)), (2386, tensor(-0.0018, dtype=torch.float64)), (1992, tensor(-0.0018, dtype=torch.float64)), (1261, tensor(-0.0018, dtype=torch.float64)), (2061, tensor(-0.0018, dtype=torch.float64)), (628, tensor(-0.0017, dtype=torch.float64)), (1330, tensor(-0.0017, dtype=torch.float64)), (2750, tensor(-0.0017, dtype=torch.float64)), (14, tensor(-0.0017, dtype=torch.float64)), (2397, tensor(-0.0017, dtype=torch.float64)), (1072, tensor(-0.0017, dtype=torch.float64)), (799, tensor(-0.0017, dtype=torch.float64)), (912, tensor(-0.0017, dtype=torch.float64)), (73, tensor(-0.0016, dtype=torch.float64)), (2520, tensor(-0.0016, dtype=torch.float64)), (1102, tensor(-0.0016, dtype=torch.float64)), (2268, tensor(-0.0016, dtype=torch.float64)), (3039, tensor(-0.0016, dtype=torch.float64)), (2905, tensor(-0.0016, dtype=torch.float64)), (959, tensor(-0.0015, dtype=torch.float64)), (886, tensor(-0.0015, dtype=torch.float64)), (1574, tensor(-0.0015, dtype=torch.float64)), (984, tensor(-0.0015, dtype=torch.float64)), (539, tensor(-0.0015, dtype=torch.float64)), (3032, tensor(-0.0015, dtype=torch.float64)), (1744, tensor(-0.0014, dtype=torch.float64)), (3138, tensor(-0.0014, dtype=torch.float64)), (1229, tensor(-0.0014, dtype=torch.float64)), (313, tensor(-0.0014, dtype=torch.float64)), (673, tensor(-0.0014, dtype=torch.float64)), (762, tensor(-0.0014, dtype=torch.float64)), (561, tensor(-0.0014, dtype=torch.float64)), (3073, tensor(-0.0013, dtype=torch.float64)), (2965, tensor(-0.0013, dtype=torch.float64)), (3057, tensor(-0.0012, dtype=torch.float64)), (123, tensor(-0.0012, dtype=torch.float64)), (2643, tensor(-0.0011, dtype=torch.float64)), (2949, tensor(-0.0011, dtype=torch.float64)), (696, tensor(-0.0010, dtype=torch.float64)), (1379, tensor(-0.0010, dtype=torch.float64)), (1436, tensor(-0.0010, dtype=torch.float64)), (2564, tensor(-0.0010, dtype=torch.float64)), (1834, tensor(-0.0010, dtype=torch.float64)), (2567, tensor(-0.0010, dtype=torch.float64)), (302, tensor(-0.0010, dtype=torch.float64)), (1129, tensor(-0.0010, dtype=torch.float64)), (81, tensor(-0.0009, dtype=torch.float64)), (2303, tensor(-0.0009, dtype=torch.float64)), (3156, tensor(-0.0008, dtype=torch.float64)), (520, tensor(-0.0008, dtype=torch.float64)), (236, tensor(-0.0008, dtype=torch.float64)), (2270, tensor(-0.0008, dtype=torch.float64)), (40, tensor(-0.0008, dtype=torch.float64)), (72, tensor(-0.0007, dtype=torch.float64)), (1208, tensor(-0.0007, dtype=torch.float64)), (2759, tensor(-0.0007, dtype=torch.float64)), (2115, tensor(-0.0006, dtype=torch.float64)), (2493, tensor(-0.0003, dtype=torch.float64))]
annotated_samples_num: 504
unannotated_samples_num: 3040
update datapool!
annotated_samples_num: 504
unannotated_samples_num: 3040
iter: 2
annotated_samples_num: 504
unannotated_samples_num: 3040
Epoch [1/10], Batch [1/63], Loss: 5.2184
Epoch [1/10], Batch [2/63], Loss: 3.8259
Epoch [1/10], Batch [3/63], Loss: 3.3891
Epoch [1/10], Batch [4/63], Loss: 2.3682
Epoch [1/10], Batch [5/63], Loss: 2.0331
Epoch [1/10], Batch [6/63], Loss: 1.4560
Epoch [1/10], Batch [7/63], Loss: 1.4399
Epoch [1/10], Batch [8/63], Loss: 1.1221
Epoch [1/10], Batch [9/63], Loss: 1.1818
Epoch [1/10], Batch [10/63], Loss: 0.7367
Epoch [1/10], Batch [11/63], Loss: 0.9108
Epoch [1/10], Batch [12/63], Loss: 0.6844
Epoch [1/10], Batch [13/63], Loss: 0.4097
Epoch [1/10], Batch [14/63], Loss: 0.6700
Epoch [1/10], Batch [15/63], Loss: 0.7808
Epoch [1/10], Batch [16/63], Loss: 0.5225
Epoch [1/10], Batch [17/63], Loss: 0.2729
Epoch [1/10], Batch [18/63], Loss: 0.8602
Epoch [1/10], Batch [19/63], Loss: 0.6513
Epoch [1/10], Batch [20/63], Loss: 0.3720
Epoch [1/10], Batch [21/63], Loss: 0.7767
Epoch [1/10], Batch [22/63], Loss: 0.6343
Epoch [1/10], Batch [23/63], Loss: 0.3799
Epoch [1/10], Batch [24/63], Loss: 0.3566
Epoch [1/10], Batch [25/63], Loss: 0.4255
Epoch [1/10], Batch [26/63], Loss: 0.5050
Epoch [1/10], Batch [27/63], Loss: 0.3418
Epoch [1/10], Batch [28/63], Loss: 0.4374
Epoch [1/10], Batch [29/63], Loss: 0.2810
Epoch [1/10], Batch [30/63], Loss: 0.4984
Epoch [1/10], Batch [31/63], Loss: 0.3985
Epoch [1/10], Batch [32/63], Loss: 0.5662
Epoch [1/10], Batch [33/63], Loss: 0.5289
Epoch [1/10], Batch [34/63], Loss: 0.3187
Epoch [1/10], Batch [35/63], Loss: 0.6005
Epoch [1/10], Batch [36/63], Loss: 0.5022
Epoch [1/10], Batch [37/63], Loss: 0.3035
Epoch [1/10], Batch [38/63], Loss: 0.2466
Epoch [1/10], Batch [39/63], Loss: 0.3322
Epoch [1/10], Batch [40/63], Loss: 0.4627
Epoch [1/10], Batch [41/63], Loss: 0.6076
Epoch [1/10], Batch [42/63], Loss: 0.6036
Epoch [1/10], Batch [43/63], Loss: 0.3756
Epoch [1/10], Batch [44/63], Loss: 0.2601
Epoch [1/10], Batch [45/63], Loss: 0.2772
Epoch [1/10], Batch [46/63], Loss: 0.5058
Epoch [1/10], Batch [47/63], Loss: 0.6855
Epoch [1/10], Batch [48/63], Loss: 0.2871
Epoch [1/10], Batch [49/63], Loss: 0.3507
Epoch [1/10], Batch [50/63], Loss: 0.4037
Epoch [1/10], Batch [51/63], Loss: 0.5143
Epoch [1/10], Batch [52/63], Loss: 0.4703
Epoch [1/10], Batch [53/63], Loss: 0.2780
Epoch [1/10], Batch [54/63], Loss: 0.3467
Epoch [1/10], Batch [55/63], Loss: 0.4588
Epoch [1/10], Batch [56/63], Loss: 0.3584
Epoch [1/10], Batch [57/63], Loss: 0.4294
Epoch [1/10], Batch [58/63], Loss: 0.4379
Epoch [1/10], Batch [59/63], Loss: 0.3186
Epoch [1/10], Batch [60/63], Loss: 0.2121
Epoch [1/10], Batch [61/63], Loss: 0.3185
Epoch [1/10], Batch [62/63], Loss: 0.2964
Epoch [1/10], Batch [63/63], Loss: 0.4648
Epoch [1/10], Average Loss: 0.7470
-----------------------------------------------------------
strategy: BEAM
iter: 2
epoch: 0
Test Loss: 0.3204
F1_overall: 0.4567
F1_AGENT: 0.6261
F1_TARGET: 0.2710
-----------------------------------------------------------
Epoch [2/10], Batch [1/63], Loss: 0.3308
Epoch [2/10], Batch [2/63], Loss: 0.2673
Epoch [2/10], Batch [3/63], Loss: 0.3530
Epoch [2/10], Batch [4/63], Loss: 0.3899
Epoch [2/10], Batch [5/63], Loss: 0.1829
Epoch [2/10], Batch [6/63], Loss: 0.2858
Epoch [2/10], Batch [7/63], Loss: 0.6231
Epoch [2/10], Batch [8/63], Loss: 0.4062
Epoch [2/10], Batch [9/63], Loss: 0.2873
Epoch [2/10], Batch [10/63], Loss: 0.2082
Epoch [2/10], Batch [11/63], Loss: 0.2270
Epoch [2/10], Batch [12/63], Loss: 0.2006
Epoch [2/10], Batch [13/63], Loss: 0.3044
Epoch [2/10], Batch [14/63], Loss: 0.1473
Epoch [2/10], Batch [15/63], Loss: 0.2481
Epoch [2/10], Batch [16/63], Loss: 0.4646
Epoch [2/10], Batch [17/63], Loss: 0.2776
Epoch [2/10], Batch [18/63], Loss: 0.5616
Epoch [2/10], Batch [19/63], Loss: 0.3390
Epoch [2/10], Batch [20/63], Loss: 0.1700
Epoch [2/10], Batch [21/63], Loss: 0.2188
Epoch [2/10], Batch [22/63], Loss: 0.1166
Epoch [2/10], Batch [23/63], Loss: 0.2828
Epoch [2/10], Batch [24/63], Loss: 0.3546
Epoch [2/10], Batch [25/63], Loss: 0.2109
Epoch [2/10], Batch [26/63], Loss: 0.2132
Epoch [2/10], Batch [27/63], Loss: 0.2166
Epoch [2/10], Batch [28/63], Loss: 0.2150
Epoch [2/10], Batch [29/63], Loss: 0.2115
Epoch [2/10], Batch [30/63], Loss: 0.3821
Epoch [2/10], Batch [31/63], Loss: 0.3219
Epoch [2/10], Batch [32/63], Loss: 0.2866
Epoch [2/10], Batch [33/63], Loss: 0.4074
Epoch [2/10], Batch [34/63], Loss: 0.1551
Epoch [2/10], Batch [35/63], Loss: 0.2300
Epoch [2/10], Batch [36/63], Loss: 0.3407
Epoch [2/10], Batch [37/63], Loss: 0.2711
Epoch [2/10], Batch [38/63], Loss: 0.2709
Epoch [2/10], Batch [39/63], Loss: 0.2119
Epoch [2/10], Batch [40/63], Loss: 0.2081
Epoch [2/10], Batch [41/63], Loss: 0.1691
Epoch [2/10], Batch [42/63], Loss: 0.2157
Epoch [2/10], Batch [43/63], Loss: 0.3039
Epoch [2/10], Batch [44/63], Loss: 0.4494
Epoch [2/10], Batch [45/63], Loss: 0.1155
Epoch [2/10], Batch [46/63], Loss: 0.2979
Epoch [2/10], Batch [47/63], Loss: 0.2099
Epoch [2/10], Batch [48/63], Loss: 0.1483
Epoch [2/10], Batch [49/63], Loss: 0.4088
Epoch [2/10], Batch [50/63], Loss: 0.2811
Epoch [2/10], Batch [51/63], Loss: 0.6054
Epoch [2/10], Batch [52/63], Loss: 0.1553
Epoch [2/10], Batch [53/63], Loss: 0.3786
Epoch [2/10], Batch [54/63], Loss: 0.2718
Epoch [2/10], Batch [55/63], Loss: 0.1996
Epoch [2/10], Batch [56/63], Loss: 0.2129
Epoch [2/10], Batch [57/63], Loss: 0.1899
Epoch [2/10], Batch [58/63], Loss: 0.4569
Epoch [2/10], Batch [59/63], Loss: 0.3916
Epoch [2/10], Batch [60/63], Loss: 0.3514
Epoch [2/10], Batch [61/63], Loss: 0.2172
Epoch [2/10], Batch [62/63], Loss: 0.3286
Epoch [2/10], Batch [63/63], Loss: 0.1871
Epoch [2/10], Average Loss: 0.2849
-----------------------------------------------------------
strategy: BEAM
iter: 2
epoch: 1
Test Loss: 0.3180
F1_overall: 0.4550
F1_AGENT: 0.5570
F1_TARGET: 0.3647
-----------------------------------------------------------
Epoch [3/10], Batch [1/63], Loss: 0.2763
Epoch [3/10], Batch [2/63], Loss: 0.2107
Epoch [3/10], Batch [3/63], Loss: 0.1340
Epoch [3/10], Batch [4/63], Loss: 0.1440
Epoch [3/10], Batch [5/63], Loss: 0.3053
Epoch [3/10], Batch [6/63], Loss: 0.3555
Epoch [3/10], Batch [7/63], Loss: 0.1252
Epoch [3/10], Batch [8/63], Loss: 0.2150
Epoch [3/10], Batch [9/63], Loss: 0.1970
Epoch [3/10], Batch [10/63], Loss: 0.1154
Epoch [3/10], Batch [11/63], Loss: 0.2378
Epoch [3/10], Batch [12/63], Loss: 0.1371
Epoch [3/10], Batch [13/63], Loss: 0.1552
Epoch [3/10], Batch [14/63], Loss: 0.2455
Epoch [3/10], Batch [15/63], Loss: 0.2409
Epoch [3/10], Batch [16/63], Loss: 0.0820
Epoch [3/10], Batch [17/63], Loss: 0.1423
Epoch [3/10], Batch [18/63], Loss: 0.1579
Epoch [3/10], Batch [19/63], Loss: 0.1851
Epoch [3/10], Batch [20/63], Loss: 0.1781
Epoch [3/10], Batch [21/63], Loss: 0.1644
Epoch [3/10], Batch [22/63], Loss: 0.2302
Epoch [3/10], Batch [23/63], Loss: 0.1380
Epoch [3/10], Batch [24/63], Loss: 0.1964
Epoch [3/10], Batch [25/63], Loss: 0.0874
Epoch [3/10], Batch [26/63], Loss: 0.2692
Epoch [3/10], Batch [27/63], Loss: 0.0660
Epoch [3/10], Batch [28/63], Loss: 0.2424
Epoch [3/10], Batch [29/63], Loss: 0.1469
Epoch [3/10], Batch [30/63], Loss: 0.2054
Epoch [3/10], Batch [31/63], Loss: 0.2051
Epoch [3/10], Batch [32/63], Loss: 0.1550
Epoch [3/10], Batch [33/63], Loss: 0.3011
Epoch [3/10], Batch [34/63], Loss: 0.1681
Epoch [3/10], Batch [35/63], Loss: 0.2824
Epoch [3/10], Batch [36/63], Loss: 0.2743
Epoch [3/10], Batch [37/63], Loss: 0.1631
Epoch [3/10], Batch [38/63], Loss: 0.2270
Epoch [3/10], Batch [39/63], Loss: 0.1866
Epoch [3/10], Batch [40/63], Loss: 0.0919
Epoch [3/10], Batch [41/63], Loss: 0.2309
Epoch [3/10], Batch [42/63], Loss: 0.1867
Epoch [3/10], Batch [43/63], Loss: 0.2960
Epoch [3/10], Batch [44/63], Loss: 0.1879
Epoch [3/10], Batch [45/63], Loss: 0.1559
Epoch [3/10], Batch [46/63], Loss: 0.2668
Epoch [3/10], Batch [47/63], Loss: 0.2633
Epoch [3/10], Batch [48/63], Loss: 0.0597
Epoch [3/10], Batch [49/63], Loss: 0.1846
Epoch [3/10], Batch [50/63], Loss: 0.2337
Epoch [3/10], Batch [51/63], Loss: 0.1667
Epoch [3/10], Batch [52/63], Loss: 0.2297
Epoch [3/10], Batch [53/63], Loss: 0.1785
Epoch [3/10], Batch [54/63], Loss: 0.2754
Epoch [3/10], Batch [55/63], Loss: 0.1199
Epoch [3/10], Batch [56/63], Loss: 0.1507
Epoch [3/10], Batch [57/63], Loss: 0.1448
Epoch [3/10], Batch [58/63], Loss: 0.1073
Epoch [3/10], Batch [59/63], Loss: 0.1549
Epoch [3/10], Batch [60/63], Loss: 0.2079
Epoch [3/10], Batch [61/63], Loss: 0.1975
Epoch [3/10], Batch [62/63], Loss: 0.3337
Epoch [3/10], Batch [63/63], Loss: 0.1459
Epoch [3/10], Average Loss: 0.1924
-----------------------------------------------------------
strategy: BEAM
iter: 2
epoch: 2
Test Loss: 0.3412
F1_overall: 0.5107
F1_AGENT: 0.6647
F1_TARGET: 0.3603
-----------------------------------------------------------
Epoch [4/10], Batch [1/63], Loss: 0.2165
Epoch [4/10], Batch [2/63], Loss: 0.1043
Epoch [4/10], Batch [3/63], Loss: 0.1842
Epoch [4/10], Batch [4/63], Loss: 0.0724
Epoch [4/10], Batch [5/63], Loss: 0.1093
Epoch [4/10], Batch [6/63], Loss: 0.2888
Epoch [4/10], Batch [7/63], Loss: 0.0434
Epoch [4/10], Batch [8/63], Loss: 0.0744
Epoch [4/10], Batch [9/63], Loss: 0.2907
Epoch [4/10], Batch [10/63], Loss: 0.4283
Epoch [4/10], Batch [11/63], Loss: 0.1826
Epoch [4/10], Batch [12/63], Loss: 0.1120
Epoch [4/10], Batch [13/63], Loss: 0.2112
Epoch [4/10], Batch [14/63], Loss: 0.1176
Epoch [4/10], Batch [15/63], Loss: 0.0684
Epoch [4/10], Batch [16/63], Loss: 0.1980
Epoch [4/10], Batch [17/63], Loss: 0.0398
Epoch [4/10], Batch [18/63], Loss: 0.0692
Epoch [4/10], Batch [19/63], Loss: 0.0995
Epoch [4/10], Batch [20/63], Loss: 0.1761
Epoch [4/10], Batch [21/63], Loss: 0.0930
Epoch [4/10], Batch [22/63], Loss: 0.1052
Epoch [4/10], Batch [23/63], Loss: 0.2534
Epoch [4/10], Batch [24/63], Loss: 0.2904
Epoch [4/10], Batch [25/63], Loss: 0.0744
Epoch [4/10], Batch [26/63], Loss: 0.1919
Epoch [4/10], Batch [27/63], Loss: 0.0722
Epoch [4/10], Batch [28/63], Loss: 0.1196
Epoch [4/10], Batch [29/63], Loss: 0.1652
Epoch [4/10], Batch [30/63], Loss: 0.1289
Epoch [4/10], Batch [31/63], Loss: 0.1031
Epoch [4/10], Batch [32/63], Loss: 0.1638
Epoch [4/10], Batch [33/63], Loss: 0.2427
Epoch [4/10], Batch [34/63], Loss: 0.1633
Epoch [4/10], Batch [35/63], Loss: 0.0805
Epoch [4/10], Batch [36/63], Loss: 0.1097
Epoch [4/10], Batch [37/63], Loss: 0.0664
Epoch [4/10], Batch [38/63], Loss: 0.2746
Epoch [4/10], Batch [39/63], Loss: 0.2664
Epoch [4/10], Batch [40/63], Loss: 0.0983
Epoch [4/10], Batch [41/63], Loss: 0.1309
Epoch [4/10], Batch [42/63], Loss: 0.1907
Epoch [4/10], Batch [43/63], Loss: 0.0329
Epoch [4/10], Batch [44/63], Loss: 0.0602
Epoch [4/10], Batch [45/63], Loss: 0.0477
Epoch [4/10], Batch [46/63], Loss: 0.1654
Epoch [4/10], Batch [47/63], Loss: 0.1191
Epoch [4/10], Batch [48/63], Loss: 0.1041
Epoch [4/10], Batch [49/63], Loss: 0.1048
Epoch [4/10], Batch [50/63], Loss: 0.2739
Epoch [4/10], Batch [51/63], Loss: 0.0950
Epoch [4/10], Batch [52/63], Loss: 0.2194
Epoch [4/10], Batch [53/63], Loss: 0.1049
Epoch [4/10], Batch [54/63], Loss: 0.1446
Epoch [4/10], Batch [55/63], Loss: 0.2206
Epoch [4/10], Batch [56/63], Loss: 0.0991
Epoch [4/10], Batch [57/63], Loss: 0.0519
Epoch [4/10], Batch [58/63], Loss: 0.0910
Epoch [4/10], Batch [59/63], Loss: 0.1568
Epoch [4/10], Batch [60/63], Loss: 0.1182
Epoch [4/10], Batch [61/63], Loss: 0.1823
Epoch [4/10], Batch [62/63], Loss: 0.1620
Epoch [4/10], Batch [63/63], Loss: 0.1807
Epoch [4/10], Average Loss: 0.1461
-----------------------------------------------------------
strategy: BEAM
iter: 2
epoch: 3
Test Loss: 0.3486
F1_overall: 0.5470
F1_AGENT: 0.7150
F1_TARGET: 0.3792
-----------------------------------------------------------
Epoch [5/10], Batch [1/63], Loss: 0.1062
Epoch [5/10], Batch [2/63], Loss: 0.1699
Epoch [5/10], Batch [3/63], Loss: 0.1167
Epoch [5/10], Batch [4/63], Loss: 0.0450
Epoch [5/10], Batch [5/63], Loss: 0.1687
Epoch [5/10], Batch [6/63], Loss: 0.2900
Epoch [5/10], Batch [7/63], Loss: 0.1822
Epoch [5/10], Batch [8/63], Loss: 0.0784
Epoch [5/10], Batch [9/63], Loss: 0.1023
Epoch [5/10], Batch [10/63], Loss: 0.0814
Epoch [5/10], Batch [11/63], Loss: 0.0646
Epoch [5/10], Batch [12/63], Loss: 0.0520
Epoch [5/10], Batch [13/63], Loss: 0.1209
Epoch [5/10], Batch [14/63], Loss: 0.0555
Epoch [5/10], Batch [15/63], Loss: 0.0658
Epoch [5/10], Batch [16/63], Loss: 0.0394
Epoch [5/10], Batch [17/63], Loss: 0.1046
Epoch [5/10], Batch [18/63], Loss: 0.1452
Epoch [5/10], Batch [19/63], Loss: 0.2763
Epoch [5/10], Batch [20/63], Loss: 0.2548
Epoch [5/10], Batch [21/63], Loss: 0.0689
Epoch [5/10], Batch [22/63], Loss: 0.0511
Epoch [5/10], Batch [23/63], Loss: 0.0824
Epoch [5/10], Batch [24/63], Loss: 0.0606
Epoch [5/10], Batch [25/63], Loss: 0.0371
Epoch [5/10], Batch [26/63], Loss: 0.0778
Epoch [5/10], Batch [27/63], Loss: 0.1012
Epoch [5/10], Batch [28/63], Loss: 0.0795
Epoch [5/10], Batch [29/63], Loss: 0.1977
Epoch [5/10], Batch [30/63], Loss: 0.0793
Epoch [5/10], Batch [31/63], Loss: 0.0557
Epoch [5/10], Batch [32/63], Loss: 0.0801
Epoch [5/10], Batch [33/63], Loss: 0.0466
Epoch [5/10], Batch [34/63], Loss: 0.0638
Epoch [5/10], Batch [35/63], Loss: 0.1394
Epoch [5/10], Batch [36/63], Loss: 0.0902
Epoch [5/10], Batch [37/63], Loss: 0.2014
Epoch [5/10], Batch [38/63], Loss: 0.0750
Epoch [5/10], Batch [39/63], Loss: 0.0811
Epoch [5/10], Batch [40/63], Loss: 0.1604
Epoch [5/10], Batch [41/63], Loss: 0.0815
Epoch [5/10], Batch [42/63], Loss: 0.0739
Epoch [5/10], Batch [43/63], Loss: 0.0569
Epoch [5/10], Batch [44/63], Loss: 0.1686
Epoch [5/10], Batch [45/63], Loss: 0.0531
Epoch [5/10], Batch [46/63], Loss: 0.0429
Epoch [5/10], Batch [47/63], Loss: 0.1504
Epoch [5/10], Batch [48/63], Loss: 0.0826
Epoch [5/10], Batch [49/63], Loss: 0.1795
Epoch [5/10], Batch [50/63], Loss: 0.1223
Epoch [5/10], Batch [51/63], Loss: 0.1408
Epoch [5/10], Batch [52/63], Loss: 0.0457
Epoch [5/10], Batch [53/63], Loss: 0.0843
Epoch [5/10], Batch [54/63], Loss: 0.1411
Epoch [5/10], Batch [55/63], Loss: 0.1175
Epoch [5/10], Batch [56/63], Loss: 0.0988
Epoch [5/10], Batch [57/63], Loss: 0.1023
Epoch [5/10], Batch [58/63], Loss: 0.4939
Epoch [5/10], Batch [59/63], Loss: 0.1212
Epoch [5/10], Batch [60/63], Loss: 0.1309
Epoch [5/10], Batch [61/63], Loss: 0.0403
Epoch [5/10], Batch [62/63], Loss: 0.0915
Epoch [5/10], Batch [63/63], Loss: 0.1299
Epoch [5/10], Average Loss: 0.1127
-----------------------------------------------------------
strategy: BEAM
iter: 2
epoch: 4
Test Loss: 0.3606
F1_overall: 0.5481
F1_AGENT: 0.6894
F1_TARGET: 0.4073
-----------------------------------------------------------
Epoch [6/10], Batch [1/63], Loss: 0.0586
Epoch [6/10], Batch [2/63], Loss: 0.0889
Epoch [6/10], Batch [3/63], Loss: 0.0812
Epoch [6/10], Batch [4/63], Loss: 0.0707
Epoch [6/10], Batch [5/63], Loss: 0.1623
Epoch [6/10], Batch [6/63], Loss: 0.0609
Epoch [6/10], Batch [7/63], Loss: 0.1255
Epoch [6/10], Batch [8/63], Loss: 0.2414
Epoch [6/10], Batch [9/63], Loss: 0.3059
Epoch [6/10], Batch [10/63], Loss: 0.2148
Epoch [6/10], Batch [11/63], Loss: 0.1331
Epoch [6/10], Batch [12/63], Loss: 0.0546
Epoch [6/10], Batch [13/63], Loss: 0.0488
Epoch [6/10], Batch [14/63], Loss: 0.3522
Epoch [6/10], Batch [15/63], Loss: 0.0806
Epoch [6/10], Batch [16/63], Loss: 0.0503
Epoch [6/10], Batch [17/63], Loss: 0.1811
Epoch [6/10], Batch [18/63], Loss: 0.0918
Epoch [6/10], Batch [19/63], Loss: 0.0992
Epoch [6/10], Batch [20/63], Loss: 0.1398
Epoch [6/10], Batch [21/63], Loss: 0.0578
Epoch [6/10], Batch [22/63], Loss: 0.0767
Epoch [6/10], Batch [23/63], Loss: 0.0732
Epoch [6/10], Batch [24/63], Loss: 0.0520
Epoch [6/10], Batch [25/63], Loss: 0.0196
Epoch [6/10], Batch [26/63], Loss: 0.0946
Epoch [6/10], Batch [27/63], Loss: 0.0786
Epoch [6/10], Batch [28/63], Loss: 0.0715
Epoch [6/10], Batch [29/63], Loss: 0.0811
Epoch [6/10], Batch [30/63], Loss: 0.0521
Epoch [6/10], Batch [31/63], Loss: 0.0402
Epoch [6/10], Batch [32/63], Loss: 0.0768
Epoch [6/10], Batch [33/63], Loss: 0.0765
Epoch [6/10], Batch [34/63], Loss: 0.0290
Epoch [6/10], Batch [35/63], Loss: 0.0422
Epoch [6/10], Batch [36/63], Loss: 0.1312
Epoch [6/10], Batch [37/63], Loss: 0.0598
Epoch [6/10], Batch [38/63], Loss: 0.1041
Epoch [6/10], Batch [39/63], Loss: 0.2192
Epoch [6/10], Batch [40/63], Loss: 0.0427
Epoch [6/10], Batch [41/63], Loss: 0.0805
Epoch [6/10], Batch [42/63], Loss: 0.0942
Epoch [6/10], Batch [43/63], Loss: 0.0625
Epoch [6/10], Batch [44/63], Loss: 0.0272
Epoch [6/10], Batch [45/63], Loss: 0.0229
Epoch [6/10], Batch [46/63], Loss: 0.0639
Epoch [6/10], Batch [47/63], Loss: 0.0677
Epoch [6/10], Batch [48/63], Loss: 0.1273
Epoch [6/10], Batch [49/63], Loss: 0.0736
Epoch [6/10], Batch [50/63], Loss: 0.0471
Epoch [6/10], Batch [51/63], Loss: 0.0496
Epoch [6/10], Batch [52/63], Loss: 0.0731
Epoch [6/10], Batch [53/63], Loss: 0.1060
Epoch [6/10], Batch [54/63], Loss: 0.0593
Epoch [6/10], Batch [55/63], Loss: 0.0819
Epoch [6/10], Batch [56/63], Loss: 0.0481
Epoch [6/10], Batch [57/63], Loss: 0.1973
Epoch [6/10], Batch [58/63], Loss: 0.0511
Epoch [6/10], Batch [59/63], Loss: 0.0425
Epoch [6/10], Batch [60/63], Loss: 0.1408
Epoch [6/10], Batch [61/63], Loss: 0.0766
Epoch [6/10], Batch [62/63], Loss: 0.0551
Epoch [6/10], Batch [63/63], Loss: 0.0306
Epoch [6/10], Average Loss: 0.0921
-----------------------------------------------------------
strategy: BEAM
iter: 2
epoch: 5
Test Loss: 0.4029
F1_overall: 0.5140
F1_AGENT: 0.6799
F1_TARGET: 0.3506
-----------------------------------------------------------
Epoch [7/10], Batch [1/63], Loss: 0.0485
Epoch [7/10], Batch [2/63], Loss: 0.0242
Epoch [7/10], Batch [3/63], Loss: 0.1578
Epoch [7/10], Batch [4/63], Loss: 0.0404
Epoch [7/10], Batch [5/63], Loss: 0.0624
Epoch [7/10], Batch [6/63], Loss: 0.0244
Epoch [7/10], Batch [7/63], Loss: 0.1388
Epoch [7/10], Batch [8/63], Loss: 0.0200
Epoch [7/10], Batch [9/63], Loss: 0.0850
Epoch [7/10], Batch [10/63], Loss: 0.0883
Epoch [7/10], Batch [11/63], Loss: 0.0499
Epoch [7/10], Batch [12/63], Loss: 0.2542
Epoch [7/10], Batch [13/63], Loss: 0.1026
Epoch [7/10], Batch [14/63], Loss: 0.0667
Epoch [7/10], Batch [15/63], Loss: 0.0820
Epoch [7/10], Batch [16/63], Loss: 0.0473
Epoch [7/10], Batch [17/63], Loss: 0.0334
Epoch [7/10], Batch [18/63], Loss: 0.0943
Epoch [7/10], Batch [19/63], Loss: 0.0457
Epoch [7/10], Batch [20/63], Loss: 0.0221
Epoch [7/10], Batch [21/63], Loss: 0.0821
Epoch [7/10], Batch [22/63], Loss: 0.0270
Epoch [7/10], Batch [23/63], Loss: 0.0257
Epoch [7/10], Batch [24/63], Loss: 0.0163
Epoch [7/10], Batch [25/63], Loss: 0.0613
Epoch [7/10], Batch [26/63], Loss: 0.0579
Epoch [7/10], Batch [27/63], Loss: 0.0318
Epoch [7/10], Batch [28/63], Loss: 0.0248
Epoch [7/10], Batch [29/63], Loss: 0.1154
Epoch [7/10], Batch [30/63], Loss: 0.0283
Epoch [7/10], Batch [31/63], Loss: 0.0220
Epoch [7/10], Batch [32/63], Loss: 0.0437
Epoch [7/10], Batch [33/63], Loss: 0.0253
Epoch [7/10], Batch [34/63], Loss: 0.1330
Epoch [7/10], Batch [35/63], Loss: 0.0717
Epoch [7/10], Batch [36/63], Loss: 0.0911
Epoch [7/10], Batch [37/63], Loss: 0.0367
Epoch [7/10], Batch [38/63], Loss: 0.0396
Epoch [7/10], Batch [39/63], Loss: 0.0366
Epoch [7/10], Batch [40/63], Loss: 0.0488
Epoch [7/10], Batch [41/63], Loss: 0.0694
Epoch [7/10], Batch [42/63], Loss: 0.0841
Epoch [7/10], Batch [43/63], Loss: 0.1215
Epoch [7/10], Batch [44/63], Loss: 0.0828
Epoch [7/10], Batch [45/63], Loss: 0.0191
Epoch [7/10], Batch [46/63], Loss: 0.0487
Epoch [7/10], Batch [47/63], Loss: 0.0258
Epoch [7/10], Batch [48/63], Loss: 0.0651
Epoch [7/10], Batch [49/63], Loss: 0.0317
Epoch [7/10], Batch [50/63], Loss: 0.0612
Epoch [7/10], Batch [51/63], Loss: 0.0569
Epoch [7/10], Batch [52/63], Loss: 0.0526
Epoch [7/10], Batch [53/63], Loss: 0.0228
Epoch [7/10], Batch [54/63], Loss: 0.0555
Epoch [7/10], Batch [55/63], Loss: 0.0215
Epoch [7/10], Batch [56/63], Loss: 0.0658
Epoch [7/10], Batch [57/63], Loss: 0.5120
Epoch [7/10], Batch [58/63], Loss: 0.0563
Epoch [7/10], Batch [59/63], Loss: 0.0360
Epoch [7/10], Batch [60/63], Loss: 0.0610
Epoch [7/10], Batch [61/63], Loss: 0.0077
Epoch [7/10], Batch [62/63], Loss: 0.0926
Epoch [7/10], Batch [63/63], Loss: 0.0361
Epoch [7/10], Average Loss: 0.0666
-----------------------------------------------------------
strategy: BEAM
iter: 2
epoch: 6
Test Loss: 0.4492
F1_overall: 0.5295
F1_AGENT: 0.6920
F1_TARGET: 0.3597
-----------------------------------------------------------
Epoch [8/10], Batch [1/63], Loss: 0.0152
Epoch [8/10], Batch [2/63], Loss: 0.0720
Epoch [8/10], Batch [3/63], Loss: 0.1057
Epoch [8/10], Batch [4/63], Loss: 0.0365
Epoch [8/10], Batch [5/63], Loss: 0.0154
Epoch [8/10], Batch [6/63], Loss: 0.0896
Epoch [8/10], Batch [7/63], Loss: 0.0647
Epoch [8/10], Batch [8/63], Loss: 0.0136
Epoch [8/10], Batch [9/63], Loss: 0.0232
Epoch [8/10], Batch [10/63], Loss: 0.0062
Epoch [8/10], Batch [11/63], Loss: 0.0274
Epoch [8/10], Batch [12/63], Loss: 0.0821
Epoch [8/10], Batch [13/63], Loss: 0.0148
Epoch [8/10], Batch [14/63], Loss: 0.0286
Epoch [8/10], Batch [15/63], Loss: 0.1114
Epoch [8/10], Batch [16/63], Loss: 0.0251
Epoch [8/10], Batch [17/63], Loss: 0.0157
Epoch [8/10], Batch [18/63], Loss: 0.0095
Epoch [8/10], Batch [19/63], Loss: 0.0473
Epoch [8/10], Batch [20/63], Loss: 0.0245
Epoch [8/10], Batch [21/63], Loss: 0.0061
Epoch [8/10], Batch [22/63], Loss: 0.0126
Epoch [8/10], Batch [23/63], Loss: 0.1204
Epoch [8/10], Batch [24/63], Loss: 0.0105
Epoch [8/10], Batch [25/63], Loss: 0.0666
Epoch [8/10], Batch [26/63], Loss: 0.0317
Epoch [8/10], Batch [27/63], Loss: 0.0410
Epoch [8/10], Batch [28/63], Loss: 0.0706
Epoch [8/10], Batch [29/63], Loss: 0.0989
Epoch [8/10], Batch [30/63], Loss: 0.0106
Epoch [8/10], Batch [31/63], Loss: 0.0315
Epoch [8/10], Batch [32/63], Loss: 0.1409
Epoch [8/10], Batch [33/63], Loss: 0.0991
Epoch [8/10], Batch [34/63], Loss: 0.0789
Epoch [8/10], Batch [35/63], Loss: 0.0109
Epoch [8/10], Batch [36/63], Loss: 0.0242
Epoch [8/10], Batch [37/63], Loss: 0.0218
Epoch [8/10], Batch [38/63], Loss: 0.0501
Epoch [8/10], Batch [39/63], Loss: 0.0160
Epoch [8/10], Batch [40/63], Loss: 0.0245
Epoch [8/10], Batch [41/63], Loss: 0.0248
Epoch [8/10], Batch [42/63], Loss: 0.0199
Epoch [8/10], Batch [43/63], Loss: 0.0542
Epoch [8/10], Batch [44/63], Loss: 0.0162
Epoch [8/10], Batch [45/63], Loss: 0.0052
Epoch [8/10], Batch [46/63], Loss: 0.0264
Epoch [8/10], Batch [47/63], Loss: 0.0062
Epoch [8/10], Batch [48/63], Loss: 0.0086
Epoch [8/10], Batch [49/63], Loss: 0.0198
Epoch [8/10], Batch [50/63], Loss: 0.1223
Epoch [8/10], Batch [51/63], Loss: 0.0413
Epoch [8/10], Batch [52/63], Loss: 0.1214
Epoch [8/10], Batch [53/63], Loss: 0.0527
Epoch [8/10], Batch [54/63], Loss: 0.0242
Epoch [8/10], Batch [55/63], Loss: 0.0184
Epoch [8/10], Batch [56/63], Loss: 0.1053
Epoch [8/10], Batch [57/63], Loss: 0.1792
Epoch [8/10], Batch [58/63], Loss: 0.2269
Epoch [8/10], Batch [59/63], Loss: 0.0512
Epoch [8/10], Batch [60/63], Loss: 0.0341
Epoch [8/10], Batch [61/63], Loss: 0.0118
Epoch [8/10], Batch [62/63], Loss: 0.0736
Epoch [8/10], Batch [63/63], Loss: 0.0252
Epoch [8/10], Average Loss: 0.0486
-----------------------------------------------------------
strategy: BEAM
iter: 2
epoch: 7
Test Loss: 0.4349
F1_overall: 0.5394
F1_AGENT: 0.6995
F1_TARGET: 0.3714
-----------------------------------------------------------
Epoch [9/10], Batch [1/63], Loss: 0.0086
Epoch [9/10], Batch [2/63], Loss: 0.0091
Epoch [9/10], Batch [3/63], Loss: 0.0273
Epoch [9/10], Batch [4/63], Loss: 0.1001
Epoch [9/10], Batch [5/63], Loss: 0.0468
Epoch [9/10], Batch [6/63], Loss: 0.0235
Epoch [9/10], Batch [7/63], Loss: 0.0437
Epoch [9/10], Batch [8/63], Loss: 0.0903
Epoch [9/10], Batch [9/63], Loss: 0.0253
Epoch [9/10], Batch [10/63], Loss: 0.0176
Epoch [9/10], Batch [11/63], Loss: 0.0486
Epoch [9/10], Batch [12/63], Loss: 0.0345
Epoch [9/10], Batch [13/63], Loss: 0.0375
Epoch [9/10], Batch [14/63], Loss: 0.0621
Epoch [9/10], Batch [15/63], Loss: 0.0295
Epoch [9/10], Batch [16/63], Loss: 0.0167
Epoch [9/10], Batch [17/63], Loss: 0.0366
Epoch [9/10], Batch [18/63], Loss: 0.1001
Epoch [9/10], Batch [19/63], Loss: 0.0110
Epoch [9/10], Batch [20/63], Loss: 0.0500
Epoch [9/10], Batch [21/63], Loss: 0.0664
Epoch [9/10], Batch [22/63], Loss: 0.0108
Epoch [9/10], Batch [23/63], Loss: 0.0124
Epoch [9/10], Batch [24/63], Loss: 0.0255
Epoch [9/10], Batch [25/63], Loss: 0.0570
Epoch [9/10], Batch [26/63], Loss: 0.0038
Epoch [9/10], Batch [27/63], Loss: 0.0124
Epoch [9/10], Batch [28/63], Loss: 0.0202
Epoch [9/10], Batch [29/63], Loss: 0.0466
Epoch [9/10], Batch [30/63], Loss: 0.0550
Epoch [9/10], Batch [31/63], Loss: 0.0753
Epoch [9/10], Batch [32/63], Loss: 0.0142
Epoch [9/10], Batch [33/63], Loss: 0.0051
Epoch [9/10], Batch [34/63], Loss: 0.0976
Epoch [9/10], Batch [35/63], Loss: 0.0111
Epoch [9/10], Batch [36/63], Loss: 0.0345
Epoch [9/10], Batch [37/63], Loss: 0.0658
Epoch [9/10], Batch [38/63], Loss: 0.0165
Epoch [9/10], Batch [39/63], Loss: 0.0701
Epoch [9/10], Batch [40/63], Loss: 0.0365
Epoch [9/10], Batch [41/63], Loss: 0.1066
Epoch [9/10], Batch [42/63], Loss: 0.0518
Epoch [9/10], Batch [43/63], Loss: 0.0411
Epoch [9/10], Batch [44/63], Loss: 0.0162
Epoch [9/10], Batch [45/63], Loss: 0.0118
Epoch [9/10], Batch [46/63], Loss: 0.0239
Epoch [9/10], Batch [47/63], Loss: 0.0375
Epoch [9/10], Batch [48/63], Loss: 0.0672
Epoch [9/10], Batch [49/63], Loss: 0.1813
Epoch [9/10], Batch [50/63], Loss: 0.0178
Epoch [9/10], Batch [51/63], Loss: 0.0585
Epoch [9/10], Batch [52/63], Loss: 0.0425
Epoch [9/10], Batch [53/63], Loss: 0.0887
Epoch [9/10], Batch [54/63], Loss: 0.0138
Epoch [9/10], Batch [55/63], Loss: 0.0838
Epoch [9/10], Batch [56/63], Loss: 0.0429
Epoch [9/10], Batch [57/63], Loss: 0.0252
Epoch [9/10], Batch [58/63], Loss: 0.0355
Epoch [9/10], Batch [59/63], Loss: 0.0815
Epoch [9/10], Batch [60/63], Loss: 0.0067
Epoch [9/10], Batch [61/63], Loss: 0.0408
Epoch [9/10], Batch [62/63], Loss: 0.0088
Epoch [9/10], Batch [63/63], Loss: 0.0337
Epoch [9/10], Average Loss: 0.0424
-----------------------------------------------------------
strategy: BEAM
iter: 2
epoch: 8
Test Loss: 0.4414
F1_overall: 0.5466
F1_AGENT: 0.6851
F1_TARGET: 0.3986
-----------------------------------------------------------
Epoch [10/10], Batch [1/63], Loss: 0.0278
Epoch [10/10], Batch [2/63], Loss: 0.0602
Epoch [10/10], Batch [3/63], Loss: 0.0122
Epoch [10/10], Batch [4/63], Loss: 0.0792
Epoch [10/10], Batch [5/63], Loss: 0.0453
Epoch [10/10], Batch [6/63], Loss: 0.0131
Epoch [10/10], Batch [7/63], Loss: 0.1284
Epoch [10/10], Batch [8/63], Loss: 0.0375
Epoch [10/10], Batch [9/63], Loss: 0.0168
Epoch [10/10], Batch [10/63], Loss: 0.0112
Epoch [10/10], Batch [11/63], Loss: 0.0726
Epoch [10/10], Batch [12/63], Loss: 0.0283
Epoch [10/10], Batch [13/63], Loss: 0.0210
Epoch [10/10], Batch [14/63], Loss: 0.0091
Epoch [10/10], Batch [15/63], Loss: 0.0070
Epoch [10/10], Batch [16/63], Loss: 0.0068
Epoch [10/10], Batch [17/63], Loss: 0.0332
Epoch [10/10], Batch [18/63], Loss: 0.0061
Epoch [10/10], Batch [19/63], Loss: 0.0125
Epoch [10/10], Batch [20/63], Loss: 0.0087
Epoch [10/10], Batch [21/63], Loss: 0.0378
Epoch [10/10], Batch [22/63], Loss: 0.0511
Epoch [10/10], Batch [23/63], Loss: 0.0190
Epoch [10/10], Batch [24/63], Loss: 0.0297
Epoch [10/10], Batch [25/63], Loss: 0.0134
Epoch [10/10], Batch [26/63], Loss: 0.0112
Epoch [10/10], Batch [27/63], Loss: 0.0373
Epoch [10/10], Batch [28/63], Loss: 0.0246
Epoch [10/10], Batch [29/63], Loss: 0.0101
Epoch [10/10], Batch [30/63], Loss: 0.0173
Epoch [10/10], Batch [31/63], Loss: 0.0188
Epoch [10/10], Batch [32/63], Loss: 0.1502
Epoch [10/10], Batch [33/63], Loss: 0.0331
Epoch [10/10], Batch [34/63], Loss: 0.0955
Epoch [10/10], Batch [35/63], Loss: 0.0133
Epoch [10/10], Batch [36/63], Loss: 0.4540
Epoch [10/10], Batch [37/63], Loss: 0.0108
Epoch [10/10], Batch [38/63], Loss: 0.1076
Epoch [10/10], Batch [39/63], Loss: 0.0202
Epoch [10/10], Batch [40/63], Loss: 0.2129
Epoch [10/10], Batch [41/63], Loss: 0.0757
Epoch [10/10], Batch [42/63], Loss: 0.0674
Epoch [10/10], Batch [43/63], Loss: 0.0493
Epoch [10/10], Batch [44/63], Loss: 0.0161
Epoch [10/10], Batch [45/63], Loss: 0.0155
Epoch [10/10], Batch [46/63], Loss: 0.0431
Epoch [10/10], Batch [47/63], Loss: 0.0513
Epoch [10/10], Batch [48/63], Loss: 0.0422
Epoch [10/10], Batch [49/63], Loss: 0.0147
Epoch [10/10], Batch [50/63], Loss: 0.0994
Epoch [10/10], Batch [51/63], Loss: 0.0266
Epoch [10/10], Batch [52/63], Loss: 0.0598
Epoch [10/10], Batch [53/63], Loss: 0.1564
Epoch [10/10], Batch [54/63], Loss: 0.0217
Epoch [10/10], Batch [55/63], Loss: 0.0298
Epoch [10/10], Batch [56/63], Loss: 0.0527
Epoch [10/10], Batch [57/63], Loss: 0.0344
Epoch [10/10], Batch [58/63], Loss: 0.0417
Epoch [10/10], Batch [59/63], Loss: 0.0368
Epoch [10/10], Batch [60/63], Loss: 0.0443
Epoch [10/10], Batch [61/63], Loss: 0.1056
Epoch [10/10], Batch [62/63], Loss: 0.0562
Epoch [10/10], Batch [63/63], Loss: 0.0290
Epoch [10/10], Average Loss: 0.0504
-----------------------------------------------------------
strategy: BEAM
iter: 2
epoch: 9
Test Loss: 0.4693
F1_overall: 0.5257
F1_AGENT: 0.6602
F1_TARGET: 0.3905
-----------------------------------------------------------
sorted_beam_scores: [(2481, tensor(-0.4631, dtype=torch.float64)), (1307, tensor(-0.3917, dtype=torch.float64)), (1003, tensor(-0.3492, dtype=torch.float64)), (899, tensor(-0.3457, dtype=torch.float64)), (2409, tensor(-0.3438, dtype=torch.float64)), (2277, tensor(-0.3306, dtype=torch.float64)), (462, tensor(-0.3287, dtype=torch.float64)), (2057, tensor(-0.3258, dtype=torch.float64)), (108, tensor(-0.3141, dtype=torch.float64)), (2028, tensor(-0.3100, dtype=torch.float64)), (2386, tensor(-0.3013, dtype=torch.float64)), (2897, tensor(-0.2902, dtype=torch.float64)), (2144, tensor(-0.2818, dtype=torch.float64)), (1693, tensor(-0.2792, dtype=torch.float64)), (575, tensor(-0.2685, dtype=torch.float64)), (1064, tensor(-0.2675, dtype=torch.float64)), (2777, tensor(-0.2670, dtype=torch.float64)), (204, tensor(-0.2651, dtype=torch.float64)), (3028, tensor(-0.2632, dtype=torch.float64)), (2853, tensor(-0.2614, dtype=torch.float64)), (2001, tensor(-0.2574, dtype=torch.float64)), (90, tensor(-0.2534, dtype=torch.float64)), (2696, tensor(-0.2475, dtype=torch.float64)), (2509, tensor(-0.2460, dtype=torch.float64)), (700, tensor(-0.2445, dtype=torch.float64)), (2284, tensor(-0.2442, dtype=torch.float64)), (737, tensor(-0.2398, dtype=torch.float64)), (2821, tensor(-0.2398, dtype=torch.float64)), (872, tensor(-0.2322, dtype=torch.float64)), (2258, tensor(-0.2297, dtype=torch.float64)), (1815, tensor(-0.2264, dtype=torch.float64)), (2779, tensor(-0.2263, dtype=torch.float64)), (769, tensor(-0.2251, dtype=torch.float64)), (1655, tensor(-0.2229, dtype=torch.float64)), (91, tensor(-0.2193, dtype=torch.float64)), (2760, tensor(-0.2167, dtype=torch.float64)), (1602, tensor(-0.2160, dtype=torch.float64)), (629, tensor(-0.2153, dtype=torch.float64)), (925, tensor(-0.2139, dtype=torch.float64)), (1067, tensor(-0.2097, dtype=torch.float64)), (970, tensor(-0.2081, dtype=torch.float64)), (2687, tensor(-0.2078, dtype=torch.float64)), (2210, tensor(-0.2064, dtype=torch.float64)), (1905, tensor(-0.2061, dtype=torch.float64)), (713, tensor(-0.2059, dtype=torch.float64)), (2514, tensor(-0.2036, dtype=torch.float64)), (2265, tensor(-0.1967, dtype=torch.float64)), (332, tensor(-0.1957, dtype=torch.float64)), (1026, tensor(-0.1929, dtype=torch.float64)), (2885, tensor(-0.1901, dtype=torch.float64)), (1131, tensor(-0.1892, dtype=torch.float64)), (2623, tensor(-0.1882, dtype=torch.float64)), (564, tensor(-0.1881, dtype=torch.float64)), (768, tensor(-0.1862, dtype=torch.float64)), (2105, tensor(-0.1844, dtype=torch.float64)), (2002, tensor(-0.1815, dtype=torch.float64)), (2976, tensor(-0.1796, dtype=torch.float64)), (785, tensor(-0.1788, dtype=torch.float64)), (748, tensor(-0.1758, dtype=torch.float64)), (1492, tensor(-0.1754, dtype=torch.float64)), (667, tensor(-0.1725, dtype=torch.float64)), (2206, tensor(-0.1717, dtype=torch.float64)), (566, tensor(-0.1701, dtype=torch.float64)), (1164, tensor(-0.1699, dtype=torch.float64)), (997, tensor(-0.1678, dtype=torch.float64)), (1059, tensor(-0.1678, dtype=torch.float64)), (2067, tensor(-0.1676, dtype=torch.float64)), (1066, tensor(-0.1668, dtype=torch.float64)), (2924, tensor(-0.1661, dtype=torch.float64)), (1538, tensor(-0.1651, dtype=torch.float64)), (2416, tensor(-0.1651, dtype=torch.float64)), (1529, tensor(-0.1641, dtype=torch.float64)), (1071, tensor(-0.1640, dtype=torch.float64)), (2052, tensor(-0.1632, dtype=torch.float64)), (634, tensor(-0.1631, dtype=torch.float64)), (958, tensor(-0.1630, dtype=torch.float64)), (651, tensor(-0.1630, dtype=torch.float64)), (842, tensor(-0.1629, dtype=torch.float64)), (868, tensor(-0.1621, dtype=torch.float64)), (2522, tensor(-0.1617, dtype=torch.float64)), (105, tensor(-0.1611, dtype=torch.float64)), (1640, tensor(-0.1607, dtype=torch.float64)), (2448, tensor(-0.1602, dtype=torch.float64)), (1624, tensor(-0.1599, dtype=torch.float64)), (1623, tensor(-0.1579, dtype=torch.float64)), (1737, tensor(-0.1579, dtype=torch.float64)), (19, tensor(-0.1578, dtype=torch.float64)), (2805, tensor(-0.1573, dtype=torch.float64)), (2281, tensor(-0.1570, dtype=torch.float64)), (1934, tensor(-0.1568, dtype=torch.float64)), (300, tensor(-0.1568, dtype=torch.float64)), (1397, tensor(-0.1561, dtype=torch.float64)), (1325, tensor(-0.1559, dtype=torch.float64)), (1695, tensor(-0.1558, dtype=torch.float64)), (312, tensor(-0.1552, dtype=torch.float64)), (480, tensor(-0.1550, dtype=torch.float64)), (412, tensor(-0.1549, dtype=torch.float64)), (2137, tensor(-0.1548, dtype=torch.float64)), (1096, tensor(-0.1547, dtype=torch.float64)), (2619, tensor(-0.1545, dtype=torch.float64)), (2747, tensor(-0.1545, dtype=torch.float64)), (2019, tensor(-0.1544, dtype=torch.float64)), (477, tensor(-0.1539, dtype=torch.float64)), (2962, tensor(-0.1538, dtype=torch.float64)), (1783, tensor(-0.1524, dtype=torch.float64)), (936, tensor(-0.1519, dtype=torch.float64)), (324, tensor(-0.1514, dtype=torch.float64)), (1565, tensor(-0.1511, dtype=torch.float64)), (877, tensor(-0.1510, dtype=torch.float64)), (1762, tensor(-0.1505, dtype=torch.float64)), (1290, tensor(-0.1501, dtype=torch.float64)), (1422, tensor(-0.1500, dtype=torch.float64)), (2245, tensor(-0.1484, dtype=torch.float64)), (2782, tensor(-0.1483, dtype=torch.float64)), (720, tensor(-0.1472, dtype=torch.float64)), (783, tensor(-0.1471, dtype=torch.float64)), (2088, tensor(-0.1469, dtype=torch.float64)), (1314, tensor(-0.1467, dtype=torch.float64)), (1465, tensor(-0.1462, dtype=torch.float64)), (2626, tensor(-0.1457, dtype=torch.float64)), (962, tensor(-0.1449, dtype=torch.float64)), (2834, tensor(-0.1448, dtype=torch.float64)), (1259, tensor(-0.1442, dtype=torch.float64)), (2722, tensor(-0.1433, dtype=torch.float64)), (379, tensor(-0.1432, dtype=torch.float64)), (221, tensor(-0.1432, dtype=torch.float64)), (1329, tensor(-0.1426, dtype=torch.float64)), (975, tensor(-0.1421, dtype=torch.float64)), (349, tensor(-0.1418, dtype=torch.float64)), (1490, tensor(-0.1415, dtype=torch.float64)), (1909, tensor(-0.1405, dtype=torch.float64)), (1095, tensor(-0.1405, dtype=torch.float64)), (1662, tensor(-0.1405, dtype=torch.float64)), (2398, tensor(-0.1401, dtype=torch.float64)), (1740, tensor(-0.1399, dtype=torch.float64)), (115, tensor(-0.1397, dtype=torch.float64)), (251, tensor(-0.1393, dtype=torch.float64)), (225, tensor(-0.1392, dtype=torch.float64)), (1722, tensor(-0.1390, dtype=torch.float64)), (1103, tensor(-0.1390, dtype=torch.float64)), (2702, tensor(-0.1388, dtype=torch.float64)), (533, tensor(-0.1386, dtype=torch.float64)), (520, tensor(-0.1373, dtype=torch.float64)), (1544, tensor(-0.1372, dtype=torch.float64)), (1515, tensor(-0.1372, dtype=torch.float64)), (1090, tensor(-0.1370, dtype=torch.float64)), (988, tensor(-0.1369, dtype=torch.float64)), (517, tensor(-0.1367, dtype=torch.float64)), (368, tensor(-0.1366, dtype=torch.float64)), (1206, tensor(-0.1362, dtype=torch.float64)), (2836, tensor(-0.1360, dtype=torch.float64)), (278, tensor(-0.1352, dtype=torch.float64)), (2091, tensor(-0.1350, dtype=torch.float64)), (2055, tensor(-0.1344, dtype=torch.float64)), (2255, tensor(-0.1344, dtype=torch.float64)), (245, tensor(-0.1339, dtype=torch.float64)), (1969, tensor(-0.1339, dtype=torch.float64)), (1121, tensor(-0.1339, dtype=torch.float64)), (1849, tensor(-0.1335, dtype=torch.float64)), (2681, tensor(-0.1335, dtype=torch.float64)), (1057, tensor(-0.1329, dtype=torch.float64)), (2651, tensor(-0.1328, dtype=torch.float64)), (2305, tensor(-0.1325, dtype=torch.float64)), (1712, tensor(-0.1324, dtype=torch.float64)), (68, tensor(-0.1323, dtype=torch.float64)), (920, tensor(-0.1321, dtype=torch.float64)), (582, tensor(-0.1316, dtype=torch.float64)), (1851, tensor(-0.1315, dtype=torch.float64)), (789, tensor(-0.1315, dtype=torch.float64)), (1994, tensor(-0.1315, dtype=torch.float64)), (1499, tensor(-0.1313, dtype=torch.float64)), (963, tensor(-0.1313, dtype=torch.float64)), (1436, tensor(-0.1311, dtype=torch.float64)), (2026, tensor(-0.1310, dtype=torch.float64)), (1141, tensor(-0.1310, dtype=torch.float64)), (941, tensor(-0.1309, dtype=torch.float64)), (1010, tensor(-0.1307, dtype=torch.float64)), (1982, tensor(-0.1305, dtype=torch.float64)), (1345, tensor(-0.1300, dtype=torch.float64)), (1318, tensor(-0.1300, dtype=torch.float64)), (441, tensor(-0.1299, dtype=torch.float64)), (1077, tensor(-0.1296, dtype=torch.float64)), (808, tensor(-0.1292, dtype=torch.float64)), (2220, tensor(-0.1292, dtype=torch.float64)), (587, tensor(-0.1292, dtype=torch.float64)), (586, tensor(-0.1289, dtype=torch.float64)), (1630, tensor(-0.1288, dtype=torch.float64)), (473, tensor(-0.1287, dtype=torch.float64)), (2741, tensor(-0.1287, dtype=torch.float64)), (770, tensor(-0.1287, dtype=torch.float64)), (1068, tensor(-0.1281, dtype=torch.float64)), (1617, tensor(-0.1280, dtype=torch.float64)), (323, tensor(-0.1279, dtype=torch.float64)), (1222, tensor(-0.1277, dtype=torch.float64)), (1951, tensor(-0.1274, dtype=torch.float64)), (1659, tensor(-0.1272, dtype=torch.float64)), (97, tensor(-0.1272, dtype=torch.float64)), (2478, tensor(-0.1271, dtype=torch.float64)), (697, tensor(-0.1271, dtype=torch.float64)), (983, tensor(-0.1270, dtype=torch.float64)), (1985, tensor(-0.1269, dtype=torch.float64)), (686, tensor(-0.1269, dtype=torch.float64)), (1276, tensor(-0.1268, dtype=torch.float64)), (2524, tensor(-0.1266, dtype=torch.float64)), (313, tensor(-0.1262, dtype=torch.float64)), (2414, tensor(-0.1260, dtype=torch.float64)), (1863, tensor(-0.1258, dtype=torch.float64)), (2990, tensor(-0.1250, dtype=torch.float64)), (160, tensor(-0.1248, dtype=torch.float64)), (2786, tensor(-0.1240, dtype=torch.float64)), (2050, tensor(-0.1234, dtype=torch.float64)), (238, tensor(-0.1233, dtype=torch.float64)), (2903, tensor(-0.1232, dtype=torch.float64)), (771, tensor(-0.1229, dtype=torch.float64)), (1872, tensor(-0.1224, dtype=torch.float64)), (391, tensor(-0.1207, dtype=torch.float64)), (2361, tensor(-0.1204, dtype=torch.float64)), (3003, tensor(-0.1203, dtype=torch.float64)), (2246, tensor(-0.1201, dtype=torch.float64)), (1631, tensor(-0.1201, dtype=torch.float64)), (2729, tensor(-0.1200, dtype=torch.float64)), (2430, tensor(-0.1199, dtype=torch.float64)), (839, tensor(-0.1199, dtype=torch.float64)), (1174, tensor(-0.1196, dtype=torch.float64)), (1410, tensor(-0.1195, dtype=torch.float64)), (2539, tensor(-0.1194, dtype=torch.float64)), (1346, tensor(-0.1194, dtype=torch.float64)), (1626, tensor(-0.1192, dtype=torch.float64)), (1291, tensor(-0.1190, dtype=torch.float64)), (2966, tensor(-0.1190, dtype=torch.float64)), (373, tensor(-0.1184, dtype=torch.float64)), (1157, tensor(-0.1183, dtype=torch.float64)), (2657, tensor(-0.1182, dtype=torch.float64)), (2488, tensor(-0.1180, dtype=torch.float64)), (2641, tensor(-0.1176, dtype=torch.float64)), (2952, tensor(-0.1174, dtype=torch.float64)), (2803, tensor(-0.1174, dtype=torch.float64)), (1522, tensor(-0.1174, dtype=torch.float64)), (2644, tensor(-0.1172, dtype=torch.float64)), (2519, tensor(-0.1170, dtype=torch.float64)), (99, tensor(-0.1170, dtype=torch.float64)), (2826, tensor(-0.1166, dtype=torch.float64)), (2069, tensor(-0.1164, dtype=torch.float64)), (315, tensor(-0.1163, dtype=torch.float64)), (2101, tensor(-0.1161, dtype=torch.float64)), (317, tensor(-0.1160, dtype=torch.float64)), (1530, tensor(-0.1159, dtype=torch.float64)), (2174, tensor(-0.1156, dtype=torch.float64)), (460, tensor(-0.1154, dtype=torch.float64)), (1743, tensor(-0.1151, dtype=torch.float64)), (463, tensor(-0.1149, dtype=torch.float64)), (1342, tensor(-0.1144, dtype=torch.float64)), (2625, tensor(-0.1143, dtype=torch.float64)), (456, tensor(-0.1142, dtype=torch.float64)), (712, tensor(-0.1141, dtype=torch.float64)), (43, tensor(-0.1140, dtype=torch.float64)), (31, tensor(-0.1137, dtype=torch.float64)), (1252, tensor(-0.1137, dtype=torch.float64)), (631, tensor(-0.1136, dtype=torch.float64)), (46, tensor(-0.1134, dtype=torch.float64)), (1407, tensor(-0.1134, dtype=torch.float64)), (1315, tensor(-0.1132, dtype=torch.float64)), (2661, tensor(-0.1130, dtype=torch.float64)), (927, tensor(-0.1129, dtype=torch.float64)), (2577, tensor(-0.1128, dtype=torch.float64)), (1016, tensor(-0.1127, dtype=torch.float64)), (1549, tensor(-0.1123, dtype=torch.float64)), (1007, tensor(-0.1122, dtype=torch.float64)), (1169, tensor(-0.1122, dtype=torch.float64)), (1145, tensor(-0.1121, dtype=torch.float64)), (2656, tensor(-0.1120, dtype=torch.float64)), (2791, tensor(-0.1115, dtype=torch.float64)), (1753, tensor(-0.1115, dtype=torch.float64)), (275, tensor(-0.1115, dtype=torch.float64)), (2017, tensor(-0.1112, dtype=torch.float64)), (409, tensor(-0.1112, dtype=torch.float64)), (1773, tensor(-0.1109, dtype=torch.float64)), (2855, tensor(-0.1104, dtype=torch.float64)), (2480, tensor(-0.1104, dtype=torch.float64)), (2813, tensor(-0.1102, dtype=torch.float64)), (1279, tensor(-0.1102, dtype=torch.float64)), (1384, tensor(-0.1100, dtype=torch.float64)), (218, tensor(-0.1100, dtype=torch.float64)), (2095, tensor(-0.1099, dtype=torch.float64)), (1266, tensor(-0.1098, dtype=torch.float64)), (2438, tensor(-0.1097, dtype=torch.float64)), (1706, tensor(-0.1096, dtype=torch.float64)), (1841, tensor(-0.1094, dtype=torch.float64)), (1760, tensor(-0.1094, dtype=torch.float64)), (1113, tensor(-0.1093, dtype=torch.float64)), (794, tensor(-0.1093, dtype=torch.float64)), (2431, tensor(-0.1092, dtype=torch.float64)), (2727, tensor(-0.1092, dtype=torch.float64)), (2391, tensor(-0.1088, dtype=torch.float64)), (1884, tensor(-0.1087, dtype=torch.float64)), (2667, tensor(-0.1085, dtype=torch.float64)), (1152, tensor(-0.1083, dtype=torch.float64)), (377, tensor(-0.1082, dtype=torch.float64)), (1199, tensor(-0.1081, dtype=torch.float64)), (547, tensor(-0.1081, dtype=torch.float64)), (1765, tensor(-0.1080, dtype=torch.float64)), (1525, tensor(-0.1079, dtype=torch.float64)), (878, tensor(-0.1078, dtype=torch.float64)), (1453, tensor(-0.1074, dtype=torch.float64)), (106, tensor(-0.1070, dtype=torch.float64)), (2424, tensor(-0.1069, dtype=torch.float64)), (1069, tensor(-0.1068, dtype=torch.float64)), (2937, tensor(-0.1068, dtype=torch.float64)), (102, tensor(-0.1067, dtype=torch.float64)), (1092, tensor(-0.1067, dtype=torch.float64)), (1967, tensor(-0.1064, dtype=torch.float64)), (2419, tensor(-0.1063, dtype=torch.float64)), (1216, tensor(-0.1062, dtype=torch.float64)), (706, tensor(-0.1060, dtype=torch.float64)), (1683, tensor(-0.1060, dtype=torch.float64)), (405, tensor(-0.1060, dtype=torch.float64)), (2325, tensor(-0.1058, dtype=torch.float64)), (2682, tensor(-0.1054, dtype=torch.float64)), (75, tensor(-0.1053, dtype=torch.float64)), (285, tensor(-0.1051, dtype=torch.float64)), (229, tensor(-0.1048, dtype=torch.float64)), (1939, tensor(-0.1048, dtype=torch.float64)), (2382, tensor(-0.1048, dtype=torch.float64)), (2346, tensor(-0.1045, dtype=torch.float64)), (707, tensor(-0.1042, dtype=torch.float64)), (1705, tensor(-0.1041, dtype=torch.float64)), (311, tensor(-0.1041, dtype=torch.float64)), (677, tensor(-0.1040, dtype=torch.float64)), (1813, tensor(-0.1040, dtype=torch.float64)), (1497, tensor(-0.1038, dtype=torch.float64)), (1802, tensor(-0.1037, dtype=torch.float64)), (1123, tensor(-0.1036, dtype=torch.float64)), (230, tensor(-0.1035, dtype=torch.float64)), (2444, tensor(-0.1034, dtype=torch.float64)), (1423, tensor(-0.1033, dtype=torch.float64)), (1653, tensor(-0.1033, dtype=torch.float64)), (2288, tensor(-0.1031, dtype=torch.float64)), (2992, tensor(-0.1031, dtype=torch.float64)), (1539, tensor(-0.1030, dtype=torch.float64)), (2178, tensor(-0.1030, dtype=torch.float64)), (2300, tensor(-0.1026, dtype=torch.float64)), (847, tensor(-0.1025, dtype=torch.float64)), (1568, tensor(-0.1025, dtype=torch.float64)), (1246, tensor(-0.1024, dtype=torch.float64)), (889, tensor(-0.1021, dtype=torch.float64)), (775, tensor(-0.1020, dtype=torch.float64)), (454, tensor(-0.1019, dtype=torch.float64)), (65, tensor(-0.1019, dtype=torch.float64)), (786, tensor(-0.1018, dtype=torch.float64)), (213, tensor(-0.1018, dtype=torch.float64)), (1517, tensor(-0.1017, dtype=torch.float64)), (2815, tensor(-0.1015, dtype=torch.float64)), (1843, tensor(-0.1014, dtype=torch.float64)), (1273, tensor(-0.1014, dtype=torch.float64)), (607, tensor(-0.1014, dtype=torch.float64)), (1671, tensor(-0.1014, dtype=torch.float64)), (618, tensor(-0.1013, dtype=torch.float64)), (1449, tensor(-0.1013, dtype=torch.float64)), (735, tensor(-0.1012, dtype=torch.float64)), (1864, tensor(-0.1011, dtype=torch.float64)), (1856, tensor(-0.1011, dtype=torch.float64)), (1547, tensor(-0.1010, dtype=torch.float64)), (2830, tensor(-0.1009, dtype=torch.float64)), (2381, tensor(-0.1008, dtype=torch.float64)), (1901, tensor(-0.1005, dtype=torch.float64)), (673, tensor(-0.1004, dtype=torch.float64)), (1922, tensor(-0.1001, dtype=torch.float64)), (2173, tensor(-0.1000, dtype=torch.float64)), (2319, tensor(-0.1000, dtype=torch.float64)), (1601, tensor(-0.0999, dtype=torch.float64)), (2636, tensor(-0.0999, dtype=torch.float64)), (683, tensor(-0.0999, dtype=torch.float64)), (928, tensor(-0.0997, dtype=torch.float64)), (2268, tensor(-0.0997, dtype=torch.float64)), (908, tensor(-0.0996, dtype=torch.float64)), (336, tensor(-0.0994, dtype=torch.float64)), (2708, tensor(-0.0990, dtype=torch.float64)), (2076, tensor(-0.0989, dtype=torch.float64)), (1182, tensor(-0.0989, dtype=torch.float64)), (87, tensor(-0.0989, dtype=torch.float64)), (1355, tensor(-0.0988, dtype=torch.float64)), (2372, tensor(-0.0986, dtype=torch.float64)), (638, tensor(-0.0985, dtype=torch.float64)), (555, tensor(-0.0983, dtype=torch.float64)), (163, tensor(-0.0981, dtype=torch.float64)), (1117, tensor(-0.0979, dtype=torch.float64)), (289, tensor(-0.0978, dtype=torch.float64)), (2363, tensor(-0.0975, dtype=torch.float64)), (1723, tensor(-0.0973, dtype=torch.float64)), (1758, tensor(-0.0972, dtype=torch.float64)), (2614, tensor(-0.0971, dtype=torch.float64)), (1088, tensor(-0.0964, dtype=torch.float64)), (2126, tensor(-0.0964, dtype=torch.float64)), (433, tensor(-0.0964, dtype=torch.float64)), (351, tensor(-0.0964, dtype=torch.float64)), (2389, tensor(-0.0963, dtype=torch.float64)), (2216, tensor(-0.0963, dtype=torch.float64)), (605, tensor(-0.0962, dtype=torch.float64)), (2225, tensor(-0.0962, dtype=torch.float64)), (1308, tensor(-0.0960, dtype=torch.float64)), (1229, tensor(-0.0959, dtype=torch.float64)), (688, tensor(-0.0959, dtype=torch.float64)), (1347, tensor(-0.0958, dtype=torch.float64)), (2850, tensor(-0.0957, dtype=torch.float64)), (2367, tensor(-0.0956, dtype=torch.float64)), (1709, tensor(-0.0956, dtype=torch.float64)), (1187, tensor(-0.0956, dtype=torch.float64)), (2294, tensor(-0.0954, dtype=torch.float64)), (2573, tensor(-0.0953, dtype=torch.float64)), (759, tensor(-0.0953, dtype=torch.float64)), (684, tensor(-0.0953, dtype=torch.float64)), (1479, tensor(-0.0952, dtype=torch.float64)), (1827, tensor(-0.0951, dtype=torch.float64)), (800, tensor(-0.0950, dtype=torch.float64)), (1971, tensor(-0.0950, dtype=torch.float64)), (1830, tensor(-0.0950, dtype=torch.float64)), (491, tensor(-0.0950, dtype=torch.float64)), (2552, tensor(-0.0949, dtype=torch.float64)), (2692, tensor(-0.0948, dtype=torch.float64)), (1425, tensor(-0.0946, dtype=torch.float64)), (54, tensor(-0.0946, dtype=torch.float64)), (1188, tensor(-0.0945, dtype=torch.float64)), (2415, tensor(-0.0945, dtype=torch.float64)), (2580, tensor(-0.0942, dtype=torch.float64)), (2568, tensor(-0.0941, dtype=torch.float64)), (3035, tensor(-0.0940, dtype=torch.float64)), (375, tensor(-0.0940, dtype=torch.float64)), (2200, tensor(-0.0938, dtype=torch.float64)), (2342, tensor(-0.0937, dtype=torch.float64)), (2968, tensor(-0.0936, dtype=torch.float64)), (177, tensor(-0.0936, dtype=torch.float64)), (370, tensor(-0.0936, dtype=torch.float64)), (3033, tensor(-0.0936, dtype=torch.float64)), (539, tensor(-0.0935, dtype=torch.float64)), (2790, tensor(-0.0934, dtype=torch.float64)), (2373, tensor(-0.0934, dtype=torch.float64)), (2615, tensor(-0.0933, dtype=torch.float64)), (696, tensor(-0.0932, dtype=torch.float64)), (1038, tensor(-0.0932, dtype=torch.float64)), (1363, tensor(-0.0930, dtype=torch.float64)), (2820, tensor(-0.0930, dtype=torch.float64)), (922, tensor(-0.0926, dtype=torch.float64)), (141, tensor(-0.0926, dtype=torch.float64)), (2042, tensor(-0.0926, dtype=torch.float64)), (2770, tensor(-0.0925, dtype=torch.float64)), (2936, tensor(-0.0925, dtype=torch.float64)), (1678, tensor(-0.0921, dtype=torch.float64)), (2405, tensor(-0.0920, dtype=torch.float64)), (2187, tensor(-0.0920, dtype=torch.float64)), (2670, tensor(-0.0920, dtype=torch.float64)), (73, tensor(-0.0918, dtype=torch.float64)), (242, tensor(-0.0918, dtype=torch.float64)), (153, tensor(-0.0917, dtype=torch.float64)), (1065, tensor(-0.0914, dtype=torch.float64)), (1912, tensor(-0.0914, dtype=torch.float64)), (2525, tensor(-0.0914, dtype=torch.float64)), (1857, tensor(-0.0913, dtype=torch.float64)), (151, tensor(-0.0913, dtype=torch.float64)), (51, tensor(-0.0912, dtype=torch.float64)), (1040, tensor(-0.0912, dtype=torch.float64)), (415, tensor(-0.0910, dtype=torch.float64)), (429, tensor(-0.0910, dtype=torch.float64)), (953, tensor(-0.0909, dtype=torch.float64)), (1029, tensor(-0.0908, dtype=torch.float64)), (10, tensor(-0.0907, dtype=torch.float64)), (2112, tensor(-0.0907, dtype=torch.float64)), (2677, tensor(-0.0906, dtype=torch.float64)), (2929, tensor(-0.0906, dtype=torch.float64)), (2049, tensor(-0.0905, dtype=torch.float64)), (773, tensor(-0.0904, dtype=torch.float64)), (1587, tensor(-0.0904, dtype=torch.float64)), (2796, tensor(-0.0902, dtype=torch.float64)), (1983, tensor(-0.0901, dtype=torch.float64)), (1578, tensor(-0.0901, dtype=torch.float64)), (1825, tensor(-0.0900, dtype=torch.float64)), (1448, tensor(-0.0898, dtype=torch.float64)), (2891, tensor(-0.0898, dtype=torch.float64)), (1116, tensor(-0.0897, dtype=torch.float64)), (909, tensor(-0.0896, dtype=torch.float64)), (1491, tensor(-0.0895, dtype=torch.float64)), (80, tensor(-0.0894, dtype=torch.float64)), (1405, tensor(-0.0894, dtype=torch.float64)), (2171, tensor(-0.0894, dtype=torch.float64)), (1713, tensor(-0.0893, dtype=torch.float64)), (2705, tensor(-0.0891, dtype=torch.float64)), (116, tensor(-0.0891, dtype=torch.float64)), (652, tensor(-0.0890, dtype=torch.float64)), (526, tensor(-0.0889, dtype=torch.float64)), (1292, tensor(-0.0887, dtype=torch.float64)), (1226, tensor(-0.0886, dtype=torch.float64)), (169, tensor(-0.0885, dtype=torch.float64)), (579, tensor(-0.0885, dtype=torch.float64)), (2131, tensor(-0.0884, dtype=torch.float64)), (2370, tensor(-0.0882, dtype=torch.float64)), (1248, tensor(-0.0881, dtype=torch.float64)), (1102, tensor(-0.0881, dtype=torch.float64)), (1816, tensor(-0.0881, dtype=torch.float64)), (111, tensor(-0.0880, dtype=torch.float64)), (1821, tensor(-0.0880, dtype=torch.float64)), (669, tensor(-0.0880, dtype=torch.float64)), (1666, tensor(-0.0880, dtype=torch.float64)), (1736, tensor(-0.0879, dtype=torch.float64)), (1791, tensor(-0.0877, dtype=torch.float64)), (1925, tensor(-0.0876, dtype=torch.float64)), (2753, tensor(-0.0876, dtype=torch.float64)), (1217, tensor(-0.0875, dtype=torch.float64)), (907, tensor(-0.0874, dtype=torch.float64)), (57, tensor(-0.0873, dtype=torch.float64)), (1730, tensor(-0.0873, dtype=torch.float64)), (1862, tensor(-0.0871, dtype=torch.float64)), (624, tensor(-0.0869, dtype=torch.float64)), (1931, tensor(-0.0868, dtype=torch.float64)), (850, tensor(-0.0866, dtype=torch.float64)), (125, tensor(-0.0866, dtype=torch.float64)), (530, tensor(-0.0865, dtype=torch.float64)), (959, tensor(-0.0864, dtype=torch.float64)), (1510, tensor(-0.0864, dtype=torch.float64)), (2037, tensor(-0.0864, dtype=torch.float64)), (1030, tensor(-0.0864, dtype=torch.float64)), (2124, tensor(-0.0863, dtype=torch.float64)), (470, tensor(-0.0863, dtype=torch.float64)), (1074, tensor(-0.0862, dtype=torch.float64)), (81, tensor(-0.0861, dtype=torch.float64)), (680, tensor(-0.0860, dtype=torch.float64)), (1477, tensor(-0.0860, dtype=torch.float64)), (1317, tensor(-0.0857, dtype=torch.float64)), (2863, tensor(-0.0857, dtype=torch.float64)), (2599, tensor(-0.0857, dtype=torch.float64)), (1378, tensor(-0.0856, dtype=torch.float64)), (1319, tensor(-0.0855, dtype=torch.float64)), (2170, tensor(-0.0855, dtype=torch.float64)), (146, tensor(-0.0853, dtype=torch.float64)), (1381, tensor(-0.0852, dtype=torch.float64)), (322, tensor(-0.0852, dtype=torch.float64)), (1083, tensor(-0.0852, dtype=torch.float64)), (2123, tensor(-0.0851, dtype=torch.float64)), (2771, tensor(-0.0851, dtype=torch.float64)), (1502, tensor(-0.0850, dtype=torch.float64)), (2269, tensor(-0.0849, dtype=torch.float64)), (2113, tensor(-0.0849, dtype=torch.float64)), (967, tensor(-0.0848, dtype=torch.float64)), (500, tensor(-0.0847, dtype=torch.float64)), (2048, tensor(-0.0844, dtype=torch.float64)), (1528, tensor(-0.0843, dtype=torch.float64)), (1692, tensor(-0.0842, dtype=torch.float64)), (1710, tensor(-0.0841, dtype=torch.float64)), (499, tensor(-0.0840, dtype=torch.float64)), (1304, tensor(-0.0840, dtype=torch.float64)), (830, tensor(-0.0840, dtype=torch.float64)), (2115, tensor(-0.0839, dtype=torch.float64)), (2218, tensor(-0.0839, dtype=torch.float64)), (2878, tensor(-0.0839, dtype=torch.float64)), (510, tensor(-0.0838, dtype=torch.float64)), (1467, tensor(-0.0837, dtype=torch.float64)), (567, tensor(-0.0835, dtype=torch.float64)), (2869, tensor(-0.0834, dtype=torch.float64)), (2153, tensor(-0.0829, dtype=torch.float64)), (466, tensor(-0.0829, dtype=torch.float64)), (725, tensor(-0.0829, dtype=torch.float64)), (1526, tensor(-0.0828, dtype=torch.float64)), (1349, tensor(-0.0827, dtype=torch.float64)), (1927, tensor(-0.0827, dtype=torch.float64)), (2900, tensor(-0.0827, dtype=torch.float64)), (2436, tensor(-0.0827, dtype=torch.float64)), (627, tensor(-0.0826, dtype=torch.float64)), (2969, tensor(-0.0826, dtype=torch.float64)), (2721, tensor(-0.0825, dtype=torch.float64)), (596, tensor(-0.0825, dtype=torch.float64)), (1035, tensor(-0.0823, dtype=torch.float64)), (2726, tensor(-0.0823, dtype=torch.float64)), (1094, tensor(-0.0823, dtype=torch.float64)), (1437, tensor(-0.0822, dtype=torch.float64)), (1487, tensor(-0.0822, dtype=torch.float64)), (3023, tensor(-0.0821, dtype=torch.float64)), (8, tensor(-0.0820, dtype=torch.float64)), (1999, tensor(-0.0820, dtype=torch.float64)), (1256, tensor(-0.0818, dtype=torch.float64)), (660, tensor(-0.0816, dtype=torch.float64)), (1936, tensor(-0.0816, dtype=torch.float64)), (2468, tensor(-0.0816, dtype=torch.float64)), (385, tensor(-0.0815, dtype=torch.float64)), (219, tensor(-0.0815, dtype=torch.float64)), (1486, tensor(-0.0815, dtype=torch.float64)), (767, tensor(-0.0815, dtype=torch.float64)), (3025, tensor(-0.0814, dtype=torch.float64)), (2886, tensor(-0.0814, dtype=torch.float64)), (1972, tensor(-0.0813, dtype=torch.float64)), (119, tensor(-0.0813, dtype=torch.float64)), (532, tensor(-0.0811, dtype=torch.float64)), (1032, tensor(-0.0811, dtype=torch.float64)), (413, tensor(-0.0810, dtype=torch.float64)), (2902, tensor(-0.0810, dtype=torch.float64)), (303, tensor(-0.0808, dtype=torch.float64)), (1553, tensor(-0.0808, dtype=torch.float64)), (2063, tensor(-0.0807, dtype=torch.float64)), (675, tensor(-0.0806, dtype=torch.float64)), (15, tensor(-0.0805, dtype=torch.float64)), (1670, tensor(-0.0804, dtype=torch.float64)), (2710, tensor(-0.0804, dtype=torch.float64)), (124, tensor(-0.0804, dtype=torch.float64)), (2546, tensor(-0.0803, dtype=torch.float64)), (2676, tensor(-0.0801, dtype=torch.float64)), (810, tensor(-0.0801, dtype=torch.float64)), (2331, tensor(-0.0800, dtype=torch.float64)), (2942, tensor(-0.0800, dtype=torch.float64)), (2941, tensor(-0.0799, dtype=torch.float64)), (426, tensor(-0.0799, dtype=torch.float64)), (243, tensor(-0.0798, dtype=torch.float64)), (637, tensor(-0.0797, dtype=torch.float64)), (2564, tensor(-0.0796, dtype=torch.float64)), (2529, tensor(-0.0794, dtype=torch.float64)), (676, tensor(-0.0793, dtype=torch.float64)), (437, tensor(-0.0792, dtype=torch.float64)), (2161, tensor(-0.0792, dtype=torch.float64)), (159, tensor(-0.0792, dtype=torch.float64)), (14, tensor(-0.0790, dtype=torch.float64)), (1605, tensor(-0.0790, dtype=torch.float64)), (1196, tensor(-0.0789, dtype=torch.float64)), (1432, tensor(-0.0789, dtype=torch.float64)), (261, tensor(-0.0787, dtype=torch.float64)), (425, tensor(-0.0787, dtype=torch.float64)), (1956, tensor(-0.0787, dtype=torch.float64)), (210, tensor(-0.0786, dtype=torch.float64)), (2955, tensor(-0.0783, dtype=torch.float64)), (1870, tensor(-0.0782, dtype=torch.float64)), (89, tensor(-0.0782, dtype=torch.float64)), (2090, tensor(-0.0782, dtype=torch.float64)), (752, tensor(-0.0782, dtype=torch.float64)), (1167, tensor(-0.0781, dtype=torch.float64)), (636, tensor(-0.0780, dtype=torch.float64)), (2256, tensor(-0.0779, dtype=torch.float64)), (1897, tensor(-0.0779, dtype=torch.float64)), (1860, tensor(-0.0779, dtype=torch.float64)), (2642, tensor(-0.0778, dtype=torch.float64)), (1028, tensor(-0.0777, dtype=torch.float64)), (41, tensor(-0.0774, dtype=torch.float64)), (9, tensor(-0.0773, dtype=torch.float64)), (1923, tensor(-0.0773, dtype=torch.float64)), (761, tensor(-0.0773, dtype=torch.float64)), (613, tensor(-0.0772, dtype=torch.float64)), (1612, tensor(-0.0771, dtype=torch.float64)), (2920, tensor(-0.0771, dtype=torch.float64)), (930, tensor(-0.0771, dtype=torch.float64)), (506, tensor(-0.0771, dtype=torch.float64)), (2608, tensor(-0.0770, dtype=torch.float64)), (2321, tensor(-0.0770, dtype=torch.float64)), (1711, tensor(-0.0770, dtype=torch.float64)), (1628, tensor(-0.0770, dtype=torch.float64)), (3016, tensor(-0.0769, dtype=torch.float64)), (1335, tensor(-0.0767, dtype=torch.float64)), (2541, tensor(-0.0767, dtype=torch.float64)), (228, tensor(-0.0767, dtype=torch.float64)), (2773, tensor(-0.0764, dtype=torch.float64)), (694, tensor(-0.0764, dtype=torch.float64)), (1569, tensor(-0.0762, dtype=torch.float64)), (66, tensor(-0.0761, dtype=torch.float64)), (2926, tensor(-0.0761, dtype=torch.float64)), (711, tensor(-0.0761, dtype=torch.float64)), (1288, tensor(-0.0760, dtype=torch.float64)), (1788, tensor(-0.0758, dtype=torch.float64)), (1654, tensor(-0.0758, dtype=torch.float64)), (447, tensor(-0.0757, dtype=torch.float64)), (2338, tensor(-0.0755, dtype=torch.float64)), (549, tensor(-0.0755, dtype=torch.float64)), (1949, tensor(-0.0754, dtype=torch.float64)), (1767, tensor(-0.0753, dtype=torch.float64)), (611, tensor(-0.0752, dtype=torch.float64)), (563, tensor(-0.0752, dtype=torch.float64)), (1389, tensor(-0.0751, dtype=torch.float64)), (2348, tensor(-0.0750, dtype=torch.float64)), (113, tensor(-0.0750, dtype=torch.float64)), (2152, tensor(-0.0750, dtype=torch.float64)), (1419, tensor(-0.0749, dtype=torch.float64)), (1940, tensor(-0.0748, dtype=torch.float64)), (1932, tensor(-0.0748, dtype=torch.float64)), (593, tensor(-0.0748, dtype=torch.float64)), (79, tensor(-0.0747, dtype=torch.float64)), (170, tensor(-0.0746, dtype=torch.float64)), (270, tensor(-0.0745, dtype=torch.float64)), (2538, tensor(-0.0745, dtype=torch.float64)), (110, tensor(-0.0744, dtype=torch.float64)), (475, tensor(-0.0744, dtype=torch.float64)), (1262, tensor(-0.0744, dtype=torch.float64)), (2711, tensor(-0.0743, dtype=torch.float64)), (130, tensor(-0.0743, dtype=torch.float64)), (2199, tensor(-0.0741, dtype=torch.float64)), (2607, tensor(-0.0741, dtype=torch.float64)), (1636, tensor(-0.0741, dtype=torch.float64)), (1742, tensor(-0.0740, dtype=torch.float64)), (2535, tensor(-0.0740, dtype=torch.float64)), (2073, tensor(-0.0739, dtype=torch.float64)), (1647, tensor(-0.0739, dtype=torch.float64)), (1149, tensor(-0.0737, dtype=torch.float64)), (232, tensor(-0.0736, dtype=torch.float64)), (1598, tensor(-0.0736, dtype=torch.float64)), (717, tensor(-0.0735, dtype=torch.float64)), (1893, tensor(-0.0735, dtype=torch.float64)), (3013, tensor(-0.0734, dtype=torch.float64)), (940, tensor(-0.0734, dtype=torch.float64)), (1013, tensor(-0.0733, dtype=torch.float64)), (985, tensor(-0.0733, dtype=torch.float64)), (2104, tensor(-0.0732, dtype=torch.float64)), (787, tensor(-0.0732, dtype=torch.float64)), (1233, tensor(-0.0731, dtype=torch.float64)), (939, tensor(-0.0731, dtype=torch.float64)), (1178, tensor(-0.0730, dtype=torch.float64)), (363, tensor(-0.0729, dtype=torch.float64)), (430, tensor(-0.0729, dtype=torch.float64)), (2654, tensor(-0.0728, dtype=torch.float64)), (364, tensor(-0.0728, dtype=torch.float64)), (2921, tensor(-0.0728, dtype=torch.float64)), (591, tensor(-0.0727, dtype=torch.float64)), (3011, tensor(-0.0726, dtype=torch.float64)), (1191, tensor(-0.0725, dtype=torch.float64)), (2781, tensor(-0.0725, dtype=torch.float64)), (2998, tensor(-0.0725, dtype=torch.float64)), (2868, tensor(-0.0724, dtype=torch.float64)), (2293, tensor(-0.0724, dtype=torch.float64)), (2858, tensor(-0.0724, dtype=torch.float64)), (2537, tensor(-0.0724, dtype=torch.float64)), (1689, tensor(-0.0722, dtype=torch.float64)), (1589, tensor(-0.0722, dtype=torch.float64)), (583, tensor(-0.0721, dtype=torch.float64)), (2709, tensor(-0.0720, dtype=torch.float64)), (1402, tensor(-0.0719, dtype=torch.float64)), (1351, tensor(-0.0719, dtype=torch.float64)), (136, tensor(-0.0718, dtype=torch.float64)), (1991, tensor(-0.0718, dtype=torch.float64)), (3031, tensor(-0.0718, dtype=torch.float64)), (2975, tensor(-0.0718, dtype=torch.float64)), (603, tensor(-0.0718, dtype=torch.float64)), (757, tensor(-0.0717, dtype=torch.float64)), (2260, tensor(-0.0716, dtype=torch.float64)), (1977, tensor(-0.0714, dtype=torch.float64)), (2685, tensor(-0.0714, dtype=torch.float64)), (2505, tensor(-0.0714, dtype=torch.float64)), (755, tensor(-0.0713, dtype=torch.float64)), (2383, tensor(-0.0713, dtype=torch.float64)), (2927, tensor(-0.0711, dtype=torch.float64)), (144, tensor(-0.0710, dtype=torch.float64)), (1633, tensor(-0.0709, dtype=torch.float64)), (326, tensor(-0.0709, dtype=torch.float64)), (1729, tensor(-0.0709, dtype=torch.float64)), (1717, tensor(-0.0709, dtype=torch.float64)), (1037, tensor(-0.0708, dtype=torch.float64)), (796, tensor(-0.0708, dtype=torch.float64)), (394, tensor(-0.0706, dtype=torch.float64)), (2943, tensor(-0.0706, dtype=torch.float64)), (2303, tensor(-0.0705, dtype=torch.float64)), (165, tensor(-0.0704, dtype=torch.float64)), (727, tensor(-0.0704, dtype=torch.float64)), (2148, tensor(-0.0703, dtype=torch.float64)), (1052, tensor(-0.0703, dtype=torch.float64)), (2881, tensor(-0.0702, dtype=torch.float64)), (154, tensor(-0.0702, dtype=torch.float64)), (650, tensor(-0.0701, dtype=torch.float64)), (1313, tensor(-0.0700, dtype=torch.float64)), (2876, tensor(-0.0700, dtype=torch.float64)), (1000, tensor(-0.0699, dtype=torch.float64)), (1153, tensor(-0.0697, dtype=torch.float64)), (1413, tensor(-0.0696, dtype=torch.float64)), (1609, tensor(-0.0696, dtype=torch.float64)), (1552, tensor(-0.0696, dtype=torch.float64)), (1574, tensor(-0.0694, dtype=torch.float64)), (497, tensor(-0.0694, dtype=torch.float64)), (1204, tensor(-0.0693, dtype=torch.float64)), (709, tensor(-0.0693, dtype=torch.float64)), (2776, tensor(-0.0693, dtype=torch.float64)), (2501, tensor(-0.0693, dtype=torch.float64)), (2479, tensor(-0.0693, dtype=torch.float64)), (1219, tensor(-0.0693, dtype=torch.float64)), (1769, tensor(-0.0693, dtype=torch.float64)), (2103, tensor(-0.0692, dtype=torch.float64)), (1408, tensor(-0.0690, dtype=torch.float64)), (509, tensor(-0.0688, dtype=torch.float64)), (840, tensor(-0.0688, dtype=torch.float64)), (1738, tensor(-0.0688, dtype=torch.float64)), (344, tensor(-0.0688, dtype=torch.float64)), (1098, tensor(-0.0688, dtype=torch.float64)), (318, tensor(-0.0687, dtype=torch.float64)), (1050, tensor(-0.0686, dtype=torch.float64)), (2140, tensor(-0.0686, dtype=torch.float64)), (2106, tensor(-0.0686, dtype=torch.float64)), (1385, tensor(-0.0686, dtype=torch.float64)), (2390, tensor(-0.0685, dtype=torch.float64)), (814, tensor(-0.0685, dtype=torch.float64)), (2724, tensor(-0.0684, dtype=torch.float64)), (131, tensor(-0.0684, dtype=torch.float64)), (513, tensor(-0.0683, dtype=torch.float64)), (309, tensor(-0.0683, dtype=torch.float64)), (1845, tensor(-0.0682, dtype=torch.float64)), (2701, tensor(-0.0682, dtype=torch.float64)), (2166, tensor(-0.0681, dtype=torch.float64)), (1119, tensor(-0.0681, dtype=torch.float64)), (1300, tensor(-0.0681, dtype=torch.float64)), (1784, tensor(-0.0681, dtype=torch.float64)), (2176, tensor(-0.0680, dtype=torch.float64)), (900, tensor(-0.0679, dtype=torch.float64)), (1873, tensor(-0.0678, dtype=torch.float64)), (215, tensor(-0.0678, dtype=torch.float64)), (1438, tensor(-0.0678, dtype=torch.float64)), (2609, tensor(-0.0677, dtype=torch.float64)), (2221, tensor(-0.0677, dtype=torch.float64)), (1228, tensor(-0.0676, dtype=torch.float64)), (2151, tensor(-0.0675, dtype=torch.float64)), (974, tensor(-0.0675, dtype=torch.float64)), (1387, tensor(-0.0675, dtype=torch.float64)), (2774, tensor(-0.0673, dtype=torch.float64)), (1896, tensor(-0.0672, dtype=torch.float64)), (833, tensor(-0.0672, dtype=torch.float64)), (2267, tensor(-0.0672, dtype=torch.float64)), (1168, tensor(-0.0672, dtype=torch.float64)), (1478, tensor(-0.0670, dtype=torch.float64)), (642, tensor(-0.0670, dtype=torch.float64)), (1615, tensor(-0.0670, dtype=torch.float64)), (597, tensor(-0.0670, dtype=torch.float64)), (1806, tensor(-0.0670, dtype=torch.float64)), (2597, tensor(-0.0669, dtype=torch.float64)), (2570, tensor(-0.0669, dtype=torch.float64)), (2555, tensor(-0.0669, dtype=torch.float64)), (401, tensor(-0.0669, dtype=torch.float64)), (288, tensor(-0.0669, dtype=torch.float64)), (1395, tensor(-0.0669, dtype=torch.float64)), (2780, tensor(-0.0668, dtype=torch.float64)), (1733, tensor(-0.0666, dtype=torch.float64)), (1771, tensor(-0.0665, dtype=torch.float64)), (679, tensor(-0.0664, dtype=torch.float64)), (1681, tensor(-0.0663, dtype=torch.float64)), (2798, tensor(-0.0662, dtype=torch.float64)), (763, tensor(-0.0662, dtype=torch.float64)), (455, tensor(-0.0662, dtype=torch.float64)), (1728, tensor(-0.0662, dtype=torch.float64)), (1988, tensor(-0.0661, dtype=torch.float64)), (2341, tensor(-0.0661, dtype=torch.float64)), (1924, tensor(-0.0659, dtype=torch.float64)), (2136, tensor(-0.0659, dtype=torch.float64)), (1336, tensor(-0.0657, dtype=torch.float64)), (1051, tensor(-0.0655, dtype=torch.float64)), (2343, tensor(-0.0655, dtype=torch.float64)), (140, tensor(-0.0654, dtype=torch.float64)), (1937, tensor(-0.0653, dtype=torch.float64)), (184, tensor(-0.0652, dtype=torch.float64)), (1446, tensor(-0.0652, dtype=torch.float64)), (2273, tensor(-0.0652, dtype=torch.float64)), (2429, tensor(-0.0651, dtype=torch.float64)), (2287, tensor(-0.0649, dtype=torch.float64)), (2823, tensor(-0.0649, dtype=torch.float64)), (853, tensor(-0.0647, dtype=torch.float64)), (2422, tensor(-0.0647, dtype=torch.float64)), (1181, tensor(-0.0647, dtype=torch.float64)), (257, tensor(-0.0647, dtype=torch.float64)), (747, tensor(-0.0647, dtype=torch.float64)), (1158, tensor(-0.0646, dtype=torch.float64)), (1741, tensor(-0.0645, dtype=torch.float64)), (1365, tensor(-0.0644, dtype=torch.float64)), (1883, tensor(-0.0644, dtype=torch.float64)), (1193, tensor(-0.0644, dtype=torch.float64)), (1343, tensor(-0.0643, dtype=torch.float64)), (2182, tensor(-0.0642, dtype=torch.float64)), (239, tensor(-0.0641, dtype=torch.float64)), (972, tensor(-0.0641, dtype=torch.float64)), (1619, tensor(-0.0641, dtype=torch.float64)), (2022, tensor(-0.0640, dtype=torch.float64)), (126, tensor(-0.0640, dtype=torch.float64)), (890, tensor(-0.0640, dtype=torch.float64)), (1261, tensor(-0.0640, dtype=torch.float64)), (1947, tensor(-0.0640, dtype=torch.float64)), (268, tensor(-0.0639, dtype=torch.float64)), (2643, tensor(-0.0638, dtype=torch.float64)), (356, tensor(-0.0638, dtype=torch.float64)), (689, tensor(-0.0638, dtype=torch.float64)), (94, tensor(-0.0637, dtype=torch.float64)), (1022, tensor(-0.0637, dtype=torch.float64)), (1641, tensor(-0.0637, dtype=torch.float64)), (233, tensor(-0.0636, dtype=torch.float64)), (630, tensor(-0.0636, dtype=torch.float64)), (2639, tensor(-0.0635, dtype=torch.float64)), (2549, tensor(-0.0635, dtype=torch.float64)), (2693, tensor(-0.0635, dtype=torch.float64)), (2387, tensor(-0.0635, dtype=torch.float64)), (926, tensor(-0.0634, dtype=torch.float64)), (2094, tensor(-0.0634, dtype=torch.float64)), (2172, tensor(-0.0633, dtype=torch.float64)), (2013, tensor(-0.0632, dtype=torch.float64)), (2699, tensor(-0.0632, dtype=torch.float64)), (2809, tensor(-0.0632, dtype=torch.float64)), (1255, tensor(-0.0632, dtype=torch.float64)), (25, tensor(-0.0631, dtype=torch.float64)), (1968, tensor(-0.0631, dtype=torch.float64)), (2093, tensor(-0.0631, dtype=torch.float64)), (615, tensor(-0.0631, dtype=torch.float64)), (829, tensor(-0.0631, dtype=torch.float64)), (1039, tensor(-0.0631, dtype=torch.float64)), (2678, tensor(-0.0631, dtype=torch.float64)), (24, tensor(-0.0631, dtype=torch.float64)), (206, tensor(-0.0630, dtype=torch.float64)), (1984, tensor(-0.0630, dtype=torch.float64)), (2814, tensor(-0.0630, dtype=torch.float64)), (701, tensor(-0.0630, dtype=torch.float64)), (178, tensor(-0.0629, dtype=torch.float64)), (1278, tensor(-0.0629, dtype=torch.float64)), (1298, tensor(-0.0629, dtype=torch.float64)), (1404, tensor(-0.0628, dtype=torch.float64)), (1034, tensor(-0.0628, dtype=torch.float64)), (3014, tensor(-0.0628, dtype=torch.float64)), (2074, tensor(-0.0627, dtype=torch.float64)), (2486, tensor(-0.0626, dtype=torch.float64)), (2561, tensor(-0.0625, dtype=torch.float64)), (1652, tensor(-0.0625, dtype=torch.float64)), (966, tensor(-0.0625, dtype=torch.float64)), (1454, tensor(-0.0624, dtype=torch.float64)), (2253, tensor(-0.0623, dtype=torch.float64)), (2627, tensor(-0.0622, dtype=torch.float64)), (2864, tensor(-0.0622, dtype=torch.float64)), (45, tensor(-0.0622, dtype=torch.float64)), (2108, tensor(-0.0622, dtype=torch.float64)), (2147, tensor(-0.0622, dtype=torch.float64)), (954, tensor(-0.0621, dtype=torch.float64)), (1333, tensor(-0.0621, dtype=torch.float64)), (1106, tensor(-0.0621, dtype=torch.float64)), (2000, tensor(-0.0620, dtype=torch.float64)), (2860, tensor(-0.0620, dtype=torch.float64)), (2029, tensor(-0.0620, dtype=torch.float64)), (944, tensor(-0.0620, dtype=torch.float64)), (2548, tensor(-0.0619, dtype=torch.float64)), (1676, tensor(-0.0618, dtype=torch.float64)), (449, tensor(-0.0618, dtype=torch.float64)), (476, tensor(-0.0618, dtype=torch.float64)), (1957, tensor(-0.0617, dtype=torch.float64)), (1207, tensor(-0.0617, dtype=torch.float64)), (386, tensor(-0.0617, dtype=torch.float64)), (2393, tensor(-0.0614, dtype=torch.float64)), (236, tensor(-0.0613, dtype=torch.float64)), (2822, tensor(-0.0613, dtype=torch.float64)), (2114, tensor(-0.0613, dtype=torch.float64)), (2566, tensor(-0.0613, dtype=torch.float64)), (971, tensor(-0.0613, dtype=torch.float64)), (1581, tensor(-0.0612, dtype=torch.float64)), (1443, tensor(-0.0612, dtype=torch.float64)), (118, tensor(-0.0612, dtype=torch.float64)), (2553, tensor(-0.0612, dtype=torch.float64)), (1481, tensor(-0.0611, dtype=torch.float64)), (254, tensor(-0.0611, dtype=torch.float64)), (442, tensor(-0.0611, dtype=torch.float64)), (2658, tensor(-0.0610, dtype=torch.float64)), (2097, tensor(-0.0610, dtype=torch.float64)), (793, tensor(-0.0609, dtype=torch.float64)), (71, tensor(-0.0609, dtype=torch.float64)), (671, tensor(-0.0608, dtype=torch.float64)), (1031, tensor(-0.0606, dtype=torch.float64)), (2188, tensor(-0.0604, dtype=torch.float64)), (2412, tensor(-0.0604, dtype=torch.float64)), (2575, tensor(-0.0604, dtype=torch.float64)), (1954, tensor(-0.0603, dtype=torch.float64)), (440, tensor(-0.0603, dtype=torch.float64)), (828, tensor(-0.0603, dtype=torch.float64)), (2241, tensor(-0.0602, dtype=torch.float64)), (1014, tensor(-0.0602, dtype=torch.float64)), (2890, tensor(-0.0602, dtype=torch.float64)), (2377, tensor(-0.0601, dtype=torch.float64)), (571, tensor(-0.0601, dtype=torch.float64)), (1894, tensor(-0.0601, dtype=torch.float64)), (2335, tensor(-0.0601, dtype=torch.float64)), (2068, tensor(-0.0600, dtype=torch.float64)), (2506, tensor(-0.0600, dtype=torch.float64)), (2612, tensor(-0.0600, dtype=torch.float64)), (904, tensor(-0.0599, dtype=torch.float64)), (472, tensor(-0.0599, dtype=torch.float64)), (1297, tensor(-0.0599, dtype=torch.float64)), (1429, tensor(-0.0599, dtype=torch.float64)), (2542, tensor(-0.0597, dtype=torch.float64)), (2908, tensor(-0.0596, dtype=torch.float64)), (183, tensor(-0.0595, dtype=torch.float64)), (2464, tensor(-0.0594, dtype=torch.float64)), (38, tensor(-0.0593, dtype=torch.float64)), (1086, tensor(-0.0592, dtype=torch.float64)), (545, tensor(-0.0592, dtype=torch.float64)), (489, tensor(-0.0592, dtype=torch.float64)), (2689, tensor(-0.0592, dtype=torch.float64)), (1853, tensor(-0.0592, dtype=torch.float64)), (1635, tensor(-0.0592, dtype=torch.float64)), (1428, tensor(-0.0592, dtype=torch.float64)), (67, tensor(-0.0591, dtype=torch.float64)), (1284, tensor(-0.0591, dtype=torch.float64)), (2158, tensor(-0.0590, dtype=torch.float64)), (1918, tensor(-0.0590, dtype=torch.float64)), (577, tensor(-0.0590, dtype=torch.float64)), (542, tensor(-0.0589, dtype=torch.float64)), (644, tensor(-0.0588, dtype=torch.float64)), (197, tensor(-0.0588, dtype=torch.float64)), (1721, tensor(-0.0587, dtype=torch.float64)), (424, tensor(-0.0587, dtype=torch.float64)), (2238, tensor(-0.0587, dtype=torch.float64)), (2183, tensor(-0.0586, dtype=torch.float64)), (2347, tensor(-0.0586, dtype=torch.float64)), (1554, tensor(-0.0586, dtype=torch.float64)), (1139, tensor(-0.0586, dtype=torch.float64)), (2720, tensor(-0.0586, dtype=torch.float64)), (1514, tensor(-0.0585, dtype=torch.float64)), (723, tensor(-0.0585, dtype=torch.float64)), (2024, tensor(-0.0585, dtype=torch.float64)), (1986, tensor(-0.0585, dtype=torch.float64)), (883, tensor(-0.0584, dtype=torch.float64)), (2380, tensor(-0.0583, dtype=torch.float64)), (2254, tensor(-0.0583, dtype=torch.float64)), (2845, tensor(-0.0583, dtype=torch.float64)), (1426, tensor(-0.0581, dtype=torch.float64)), (337, tensor(-0.0581, dtype=torch.float64)), (2043, tensor(-0.0581, dtype=torch.float64)), (1657, tensor(-0.0581, dtype=torch.float64)), (2964, tensor(-0.0581, dtype=torch.float64)), (196, tensor(-0.0580, dtype=torch.float64)), (2859, tensor(-0.0580, dtype=torch.float64)), (1240, tensor(-0.0580, dtype=torch.float64)), (406, tensor(-0.0579, dtype=torch.float64)), (209, tensor(-0.0578, dtype=torch.float64)), (2008, tensor(-0.0577, dtype=torch.float64)), (601, tensor(-0.0577, dtype=torch.float64)), (2271, tensor(-0.0577, dtype=torch.float64)), (2359, tensor(-0.0577, dtype=torch.float64)), (1583, tensor(-0.0576, dtype=torch.float64)), (1805, tensor(-0.0575, dtype=torch.float64)), (237, tensor(-0.0573, dtype=torch.float64)), (981, tensor(-0.0573, dtype=torch.float64)), (998, tensor(-0.0573, dtype=torch.float64)), (760, tensor(-0.0573, dtype=torch.float64)), (780, tensor(-0.0572, dtype=torch.float64)), (211, tensor(-0.0572, dtype=torch.float64)), (2752, tensor(-0.0571, dtype=torch.float64)), (1195, tensor(-0.0571, dtype=torch.float64)), (69, tensor(-0.0570, dtype=torch.float64)), (1580, tensor(-0.0569, dtype=torch.float64)), (2385, tensor(-0.0569, dtype=torch.float64)), (2384, tensor(-0.0569, dtype=torch.float64)), (1275, tensor(-0.0569, dtype=torch.float64)), (2498, tensor(-0.0568, dtype=torch.float64)), (1109, tensor(-0.0568, dtype=torch.float64)), (1359, tensor(-0.0568, dtype=torch.float64)), (0, tensor(-0.0567, dtype=torch.float64)), (1632, tensor(-0.0567, dtype=torch.float64)), (188, tensor(-0.0566, dtype=torch.float64)), (1391, tensor(-0.0566, dtype=torch.float64)), (1537, tensor(-0.0566, dtype=torch.float64)), (2560, tensor(-0.0565, dtype=torch.float64)), (2403, tensor(-0.0565, dtype=torch.float64)), (815, tensor(-0.0565, dtype=torch.float64)), (1989, tensor(-0.0564, dtype=torch.float64)), (879, tensor(-0.0562, dtype=torch.float64)), (1694, tensor(-0.0562, dtype=torch.float64)), (1394, tensor(-0.0562, dtype=torch.float64)), (1185, tensor(-0.0562, dtype=torch.float64)), (231, tensor(-0.0561, dtype=torch.float64)), (822, tensor(-0.0561, dtype=torch.float64)), (827, tensor(-0.0560, dtype=torch.float64)), (1595, tensor(-0.0560, dtype=torch.float64)), (2944, tensor(-0.0560, dtype=torch.float64)), (1527, tensor(-0.0560, dtype=torch.float64)), (2426, tensor(-0.0560, dtype=torch.float64)), (2887, tensor(-0.0560, dtype=torch.float64)), (2588, tensor(-0.0559, dtype=torch.float64)), (942, tensor(-0.0558, dtype=torch.float64)), (2688, tensor(-0.0558, dtype=torch.float64)), (708, tensor(-0.0557, dtype=torch.float64)), (2080, tensor(-0.0557, dtype=torch.float64)), (858, tensor(-0.0556, dtype=torch.float64)), (932, tensor(-0.0555, dtype=torch.float64)), (2165, tensor(-0.0555, dtype=torch.float64)), (479, tensor(-0.0555, dtype=torch.float64)), (1377, tensor(-0.0554, dtype=torch.float64)), (2500, tensor(-0.0554, dtype=torch.float64)), (1795, tensor(-0.0554, dtype=torch.float64)), (1280, tensor(-0.0553, dtype=torch.float64)), (26, tensor(-0.0552, dtype=torch.float64)), (2994, tensor(-0.0552, dtype=torch.float64)), (536, tensor(-0.0551, dtype=torch.float64)), (2833, tensor(-0.0551, dtype=torch.float64)), (2005, tensor(-0.0550, dtype=torch.float64)), (2916, tensor(-0.0550, dtype=torch.float64)), (1452, tensor(-0.0549, dtype=torch.float64)), (2092, tensor(-0.0549, dtype=torch.float64)), (2339, tensor(-0.0548, dtype=torch.float64)), (2167, tensor(-0.0548, dtype=torch.float64)), (1648, tensor(-0.0548, dtype=torch.float64)), (2634, tensor(-0.0548, dtype=torch.float64)), (2179, tensor(-0.0547, dtype=torch.float64)), (1596, tensor(-0.0546, dtype=torch.float64)), (584, tensor(-0.0546, dtype=torch.float64)), (117, tensor(-0.0546, dtype=torch.float64)), (301, tensor(-0.0545, dtype=torch.float64)), (1100, tensor(-0.0545, dtype=torch.float64)), (1550, tensor(-0.0544, dtype=torch.float64)), (2622, tensor(-0.0544, dtype=torch.float64)), (1642, tensor(-0.0544, dtype=torch.float64)), (2598, tensor(-0.0544, dtype=torch.float64)), (2649, tensor(-0.0544, dtype=torch.float64)), (1027, tensor(-0.0544, dtype=torch.float64)), (2457, tensor(-0.0544, dtype=torch.float64)), (37, tensor(-0.0543, dtype=torch.float64)), (699, tensor(-0.0543, dtype=torch.float64)), (2006, tensor(-0.0543, dtype=torch.float64)), (2806, tensor(-0.0542, dtype=torch.float64)), (590, tensor(-0.0542, dtype=torch.float64)), (1375, tensor(-0.0540, dtype=torch.float64)), (1536, tensor(-0.0540, dtype=torch.float64)), (841, tensor(-0.0540, dtype=torch.float64)), (2400, tensor(-0.0540, dtype=torch.float64)), (1718, tensor(-0.0540, dtype=torch.float64)), (467, tensor(-0.0540, dtype=torch.float64)), (2056, tensor(-0.0539, dtype=torch.float64)), (1480, tensor(-0.0539, dtype=torch.float64)), (2163, tensor(-0.0539, dtype=torch.float64)), (2668, tensor(-0.0538, dtype=torch.float64)), (1688, tensor(-0.0538, dtype=torch.float64)), (1532, tensor(-0.0538, dtype=torch.float64)), (376, tensor(-0.0537, dtype=torch.float64)), (2892, tensor(-0.0537, dtype=torch.float64)), (83, tensor(-0.0537, dtype=torch.float64)), (2121, tensor(-0.0537, dtype=torch.float64)), (860, tensor(-0.0536, dtype=torch.float64)), (2611, tensor(-0.0536, dtype=torch.float64)), (1976, tensor(-0.0535, dtype=torch.float64)), (1058, tensor(-0.0534, dtype=torch.float64)), (2443, tensor(-0.0534, dtype=torch.float64)), (3036, tensor(-0.0534, dtype=torch.float64)), (2873, tensor(-0.0534, dtype=torch.float64)), (498, tensor(-0.0534, dtype=torch.float64)), (3010, tensor(-0.0533, dtype=torch.float64)), (2312, tensor(-0.0533, dtype=torch.float64)), (2695, tensor(-0.0532, dtype=torch.float64)), (668, tensor(-0.0531, dtype=torch.float64)), (274, tensor(-0.0531, dtype=torch.float64)), (1418, tensor(-0.0531, dtype=torch.float64)), (1312, tensor(-0.0530, dtype=torch.float64)), (2713, tensor(-0.0530, dtype=torch.float64)), (2482, tensor(-0.0529, dtype=torch.float64)), (2523, tensor(-0.0529, dtype=torch.float64)), (1496, tensor(-0.0529, dtype=torch.float64)), (2304, tensor(-0.0529, dtype=torch.float64)), (453, tensor(-0.0528, dtype=torch.float64)), (739, tensor(-0.0528, dtype=torch.float64)), (2867, tensor(-0.0527, dtype=torch.float64)), (1506, tensor(-0.0527, dtype=torch.float64)), (1946, tensor(-0.0527, dtype=torch.float64)), (1534, tensor(-0.0527, dtype=torch.float64)), (2081, tensor(-0.0527, dtype=torch.float64)), (2795, tensor(-0.0526, dtype=torch.float64)), (2351, tensor(-0.0526, dtype=torch.float64)), (436, tensor(-0.0526, dtype=torch.float64)), (1107, tensor(-0.0526, dtype=torch.float64)), (1281, tensor(-0.0525, dtype=torch.float64)), (1577, tensor(-0.0525, dtype=torch.float64)), (1513, tensor(-0.0524, dtype=torch.float64)), (444, tensor(-0.0524, dtype=torch.float64)), (2208, tensor(-0.0524, dtype=torch.float64)), (965, tensor(-0.0523, dtype=torch.float64)), (2291, tensor(-0.0522, dtype=torch.float64)), (2828, tensor(-0.0522, dtype=torch.float64)), (2911, tensor(-0.0522, dtype=torch.float64)), (2888, tensor(-0.0520, dtype=torch.float64)), (2184, tensor(-0.0519, dtype=torch.float64)), (1504, tensor(-0.0519, dtype=torch.float64)), (857, tensor(-0.0519, dtype=torch.float64)), (1137, tensor(-0.0519, dtype=torch.float64)), (806, tensor(-0.0519, dtype=torch.float64)), (1258, tensor(-0.0518, dtype=torch.float64)), (1543, tensor(-0.0518, dtype=torch.float64)), (2669, tensor(-0.0518, dtype=torch.float64)), (658, tensor(-0.0518, dtype=torch.float64)), (585, tensor(-0.0517, dtype=torch.float64)), (2045, tensor(-0.0517, dtype=torch.float64)), (1356, tensor(-0.0517, dtype=torch.float64)), (1235, tensor(-0.0517, dtype=torch.float64)), (399, tensor(-0.0517, dtype=torch.float64)), (1621, tensor(-0.0516, dtype=torch.float64)), (207, tensor(-0.0516, dtype=torch.float64)), (2872, tensor(-0.0516, dtype=torch.float64)), (2484, tensor(-0.0516, dtype=torch.float64)), (2483, tensor(-0.0515, dtype=torch.float64)), (1614, tensor(-0.0514, dtype=torch.float64)), (1488, tensor(-0.0514, dtype=torch.float64)), (1542, tensor(-0.0514, dtype=torch.float64)), (2918, tensor(-0.0513, dtype=torch.float64)), (653, tensor(-0.0512, dtype=torch.float64)), (913, tensor(-0.0512, dtype=torch.float64)), (1938, tensor(-0.0512, dtype=torch.float64)), (419, tensor(-0.0511, dtype=torch.float64)), (2229, tensor(-0.0511, dtype=torch.float64)), (484, tensor(-0.0511, dtype=torch.float64)), (648, tensor(-0.0510, dtype=torch.float64)), (1561, tensor(-0.0510, dtype=torch.float64)), (1775, tensor(-0.0509, dtype=torch.float64)), (715, tensor(-0.0508, dtype=torch.float64)), (610, tensor(-0.0508, dtype=torch.float64)), (92, tensor(-0.0508, dtype=torch.float64)), (2059, tensor(-0.0508, dtype=torch.float64)), (468, tensor(-0.0508, dtype=torch.float64)), (1846, tensor(-0.0507, dtype=torch.float64)), (1832, tensor(-0.0507, dtype=torch.float64)), (2128, tensor(-0.0507, dtype=torch.float64)), (1180, tensor(-0.0507, dtype=torch.float64)), (328, tensor(-0.0506, dtype=torch.float64)), (2938, tensor(-0.0506, dtype=torch.float64)), (2503, tensor(-0.0506, dtype=torch.float64)), (1707, tensor(-0.0504, dtype=torch.float64)), (2316, tensor(-0.0504, dtype=torch.float64)), (1799, tensor(-0.0504, dtype=torch.float64)), (128, tensor(-0.0503, dtype=torch.float64)), (2328, tensor(-0.0503, dtype=torch.float64)), (2562, tensor(-0.0503, dtype=torch.float64)), (621, tensor(-0.0503, dtype=torch.float64)), (2819, tensor(-0.0502, dtype=torch.float64)), (2450, tensor(-0.0501, dtype=torch.float64)), (943, tensor(-0.0500, dtype=torch.float64)), (2945, tensor(-0.0500, dtype=torch.float64)), (1557, tensor(-0.0499, dtype=torch.float64)), (1081, tensor(-0.0499, dtype=torch.float64)), (2201, tensor(-0.0499, dtype=torch.float64)), (1867, tensor(-0.0498, dtype=torch.float64)), (2613, tensor(-0.0498, dtype=torch.float64)), (832, tensor(-0.0498, dtype=torch.float64)), (1749, tensor(-0.0498, dtype=torch.float64)), (1593, tensor(-0.0498, dtype=torch.float64)), (551, tensor(-0.0497, dtype=torch.float64)), (2913, tensor(-0.0497, dtype=torch.float64)), (350, tensor(-0.0497, dtype=torch.float64)), (2761, tensor(-0.0496, dtype=torch.float64)), (2401, tensor(-0.0496, dtype=torch.float64)), (1211, tensor(-0.0496, dtype=torch.float64)), (606, tensor(-0.0496, dtype=torch.float64)), (2581, tensor(-0.0495, dtype=torch.float64)), (1201, tensor(-0.0494, dtype=torch.float64)), (427, tensor(-0.0494, dtype=torch.float64)), (1785, tensor(-0.0494, dtype=torch.float64)), (2517, tensor(-0.0494, dtype=torch.float64)), (461, tensor(-0.0492, dtype=torch.float64)), (1701, tensor(-0.0492, dtype=torch.float64)), (296, tensor(-0.0492, dtype=torch.float64)), (2185, tensor(-0.0491, dtype=torch.float64)), (812, tensor(-0.0491, dtype=torch.float64)), (1127, tensor(-0.0491, dtype=torch.float64)), (1811, tensor(-0.0490, dtype=torch.float64)), (2844, tensor(-0.0490, dtype=torch.float64)), (894, tensor(-0.0489, dtype=torch.float64)), (2861, tensor(-0.0489, dtype=torch.float64)), (1523, tensor(-0.0488, dtype=torch.float64)), (2285, tensor(-0.0487, dtype=torch.float64)), (2465, tensor(-0.0487, dtype=torch.float64)), (2449, tensor(-0.0486, dtype=torch.float64)), (2764, tensor(-0.0486, dtype=torch.float64)), (1136, tensor(-0.0486, dtype=torch.float64)), (2125, tensor(-0.0486, dtype=torch.float64)), (1344, tensor(-0.0486, dtype=torch.float64)), (174, tensor(-0.0486, dtype=torch.float64)), (2865, tensor(-0.0485, dtype=torch.float64)), (2812, tensor(-0.0485, dtype=torch.float64)), (960, tensor(-0.0484, dtype=torch.float64)), (234, tensor(-0.0484, dtype=torch.float64)), (1599, tensor(-0.0483, dtype=torch.float64)), (2882, tensor(-0.0483, dtype=torch.float64)), (2995, tensor(-0.0483, dtype=torch.float64)), (884, tensor(-0.0482, dtype=torch.float64)), (2912, tensor(-0.0482, dtype=torch.float64)), (2270, tensor(-0.0482, dtype=torch.float64)), (633, tensor(-0.0481, dtype=torch.float64)), (244, tensor(-0.0481, dtype=torch.float64)), (548, tensor(-0.0481, dtype=torch.float64)), (478, tensor(-0.0480, dtype=torch.float64)), (999, tensor(-0.0479, dtype=torch.float64)), (1566, tensor(-0.0479, dtype=torch.float64)), (1790, tensor(-0.0479, dtype=torch.float64)), (226, tensor(-0.0478, dtype=torch.float64)), (1294, tensor(-0.0477, dtype=torch.float64)), (2513, tensor(-0.0477, dtype=torch.float64)), (2085, tensor(-0.0477, dtype=torch.float64)), (906, tensor(-0.0477, dtype=torch.float64)), (2666, tensor(-0.0477, dtype=torch.float64)), (911, tensor(-0.0477, dtype=torch.float64)), (1097, tensor(-0.0477, dtype=torch.float64)), (1724, tensor(-0.0476, dtype=torch.float64)), (1906, tensor(-0.0476, dtype=torch.float64)), (813, tensor(-0.0476, dtype=torch.float64)), (2811, tensor(-0.0475, dtype=torch.float64)), (869, tensor(-0.0475, dtype=torch.float64)), (2313, tensor(-0.0475, dtype=torch.float64)), (2800, tensor(-0.0474, dtype=torch.float64)), (838, tensor(-0.0473, dtype=torch.float64)), (5, tensor(-0.0472, dtype=torch.float64)), (744, tensor(-0.0471, dtype=torch.float64)), (1685, tensor(-0.0471, dtype=torch.float64)), (2530, tensor(-0.0470, dtype=torch.float64)), (1761, tensor(-0.0470, dtype=torch.float64)), (2168, tensor(-0.0470, dtype=torch.float64)), (2632, tensor(-0.0470, dtype=torch.float64)), (1190, tensor(-0.0469, dtype=torch.float64)), (1777, tensor(-0.0469, dtype=torch.float64)), (798, tensor(-0.0468, dtype=torch.float64)), (2932, tensor(-0.0468, dtype=torch.float64)), (3000, tensor(-0.0467, dtype=torch.float64)), (1415, tensor(-0.0465, dtype=torch.float64)), (1114, tensor(-0.0465, dtype=torch.float64)), (1855, tensor(-0.0465, dtype=torch.float64)), (1835, tensor(-0.0464, dtype=torch.float64)), (2470, tensor(-0.0464, dtype=torch.float64)), (2871, tensor(-0.0463, dtype=torch.float64)), (2440, tensor(-0.0462, dtype=torch.float64)), (817, tensor(-0.0462, dtype=torch.float64)), (502, tensor(-0.0462, dtype=torch.float64)), (1220, tensor(-0.0462, dtype=torch.float64)), (1218, tensor(-0.0462, dtype=torch.float64)), (2933, tensor(-0.0460, dtype=torch.float64)), (1682, tensor(-0.0460, dtype=torch.float64)), (1120, tensor(-0.0459, dtype=torch.float64)), (1874, tensor(-0.0458, dtype=torch.float64)), (494, tensor(-0.0458, dtype=torch.float64)), (1442, tensor(-0.0458, dtype=torch.float64)), (1622, tensor(-0.0457, dtype=torch.float64)), (1409, tensor(-0.0456, dtype=torch.float64)), (85, tensor(-0.0456, dtype=torch.float64)), (345, tensor(-0.0456, dtype=torch.float64)), (28, tensor(-0.0455, dtype=torch.float64)), (1915, tensor(-0.0455, dtype=torch.float64)), (1004, tensor(-0.0454, dtype=torch.float64)), (2797, tensor(-0.0454, dtype=torch.float64)), (2020, tensor(-0.0454, dtype=torch.float64)), (2556, tensor(-0.0453, dtype=torch.float64)), (112, tensor(-0.0453, dtype=torch.float64)), (1920, tensor(-0.0453, dtype=torch.float64)), (2186, tensor(-0.0453, dtype=torch.float64)), (2461, tensor(-0.0453, dtype=torch.float64)), (578, tensor(-0.0452, dtype=torch.float64)), (2757, tensor(-0.0452, dtype=torch.float64)), (1703, tensor(-0.0452, dtype=torch.float64)), (1887, tensor(-0.0452, dtype=torch.float64)), (2355, tensor(-0.0451, dtype=torch.float64)), (446, tensor(-0.0451, dtype=torch.float64)), (2558, tensor(-0.0451, dtype=torch.float64)), (1337, tensor(-0.0451, dtype=torch.float64)), (1579, tensor(-0.0451, dtype=torch.float64)), (2716, tensor(-0.0450, dtype=torch.float64)), (1840, tensor(-0.0450, dtype=torch.float64)), (1690, tensor(-0.0450, dtype=torch.float64)), (60, tensor(-0.0449, dtype=torch.float64)), (562, tensor(-0.0449, dtype=torch.float64)), (1371, tensor(-0.0449, dtype=torch.float64)), (1611, tensor(-0.0449, dtype=torch.float64)), (2454, tensor(-0.0449, dtype=torch.float64)), (2134, tensor(-0.0448, dtype=torch.float64)), (2477, tensor(-0.0448, dtype=torch.float64)), (1489, tensor(-0.0448, dtype=torch.float64)), (1274, tensor(-0.0448, dtype=torch.float64)), (109, tensor(-0.0447, dtype=torch.float64)), (950, tensor(-0.0447, dtype=torch.float64)), (1975, tensor(-0.0446, dtype=torch.float64)), (1521, tensor(-0.0446, dtype=torch.float64)), (78, tensor(-0.0446, dtype=torch.float64)), (1877, tensor(-0.0445, dtype=torch.float64)), (1898, tensor(-0.0445, dtype=torch.float64)), (2286, tensor(-0.0445, dtype=torch.float64)), (374, tensor(-0.0445, dtype=torch.float64)), (1082, tensor(-0.0445, dtype=torch.float64)), (1197, tensor(-0.0444, dtype=torch.float64)), (2038, tensor(-0.0444, dtype=torch.float64)), (3027, tensor(-0.0444, dtype=torch.float64)), (398, tensor(-0.0443, dtype=torch.float64)), (1696, tensor(-0.0443, dtype=torch.float64)), (143, tensor(-0.0442, dtype=torch.float64)), (816, tensor(-0.0442, dtype=torch.float64)), (486, tensor(-0.0442, dtype=torch.float64)), (1009, tensor(-0.0442, dtype=torch.float64)), (2317, tensor(-0.0441, dtype=torch.float64)), (595, tensor(-0.0441, dtype=torch.float64)), (831, tensor(-0.0441, dtype=torch.float64)), (797, tensor(-0.0441, dtype=torch.float64)), (1766, tensor(-0.0441, dtype=torch.float64)), (1485, tensor(-0.0441, dtype=torch.float64)), (3018, tensor(-0.0441, dtype=torch.float64)), (2263, tensor(-0.0440, dtype=torch.float64)), (1755, tensor(-0.0440, dtype=torch.float64)), (2880, tensor(-0.0440, dtype=torch.float64)), (628, tensor(-0.0440, dtype=torch.float64)), (284, tensor(-0.0439, dtype=torch.float64)), (654, tensor(-0.0439, dtype=torch.float64)), (1505, tensor(-0.0438, dtype=torch.float64)), (2540, tensor(-0.0437, dtype=torch.float64)), (451, tensor(-0.0437, dtype=torch.float64)), (1283, tensor(-0.0436, dtype=torch.float64)), (1459, tensor(-0.0436, dtype=torch.float64)), (2704, tensor(-0.0436, dtype=torch.float64)), (2910, tensor(-0.0436, dtype=torch.float64)), (321, tensor(-0.0436, dtype=torch.float64)), (2534, tensor(-0.0436, dtype=torch.float64)), (2102, tensor(-0.0435, dtype=torch.float64)), (2223, tensor(-0.0435, dtype=torch.float64)), (2754, tensor(-0.0435, dtype=torch.float64)), (1424, tensor(-0.0435, dtype=torch.float64)), (182, tensor(-0.0434, dtype=torch.float64)), (2707, tensor(-0.0434, dtype=torch.float64)), (1231, tensor(-0.0434, dtype=torch.float64)), (1399, tensor(-0.0433, dtype=torch.float64)), (1637, tensor(-0.0433, dtype=torch.float64)), (2276, tensor(-0.0433, dtype=torch.float64)), (1739, tensor(-0.0432, dtype=torch.float64)), (1056, tensor(-0.0432, dtype=torch.float64)), (2600, tensor(-0.0432, dtype=torch.float64)), (1573, tensor(-0.0432, dtype=torch.float64)), (132, tensor(-0.0431, dtype=torch.float64)), (2785, tensor(-0.0431, dtype=torch.float64)), (1041, tensor(-0.0431, dtype=torch.float64)), (1781, tensor(-0.0431, dtype=torch.float64)), (1455, tensor(-0.0431, dtype=torch.float64)), (1468, tensor(-0.0430, dtype=torch.float64)), (2550, tensor(-0.0430, dtype=torch.float64)), (1546, tensor(-0.0429, dtype=torch.float64)), (1080, tensor(-0.0429, dtype=torch.float64)), (1293, tensor(-0.0429, dtype=torch.float64)), (1232, tensor(-0.0429, dtype=torch.float64)), (2674, tensor(-0.0428, dtype=torch.float64)), (756, tensor(-0.0427, dtype=torch.float64)), (30, tensor(-0.0427, dtype=torch.float64)), (2290, tensor(-0.0427, dtype=torch.float64)), (1302, tensor(-0.0427, dtype=torch.float64)), (2366, tensor(-0.0426, dtype=torch.float64)), (729, tensor(-0.0426, dtype=torch.float64)), (1878, tensor(-0.0426, dtype=torch.float64)), (3019, tensor(-0.0426, dtype=torch.float64)), (1891, tensor(-0.0426, dtype=torch.float64)), (1879, tensor(-0.0426, dtype=torch.float64)), (779, tensor(-0.0426, dtype=torch.float64)), (662, tensor(-0.0425, dtype=torch.float64)), (1473, tensor(-0.0425, dtype=torch.float64)), (2371, tensor(-0.0425, dtype=torch.float64)), (1801, tensor(-0.0425, dtype=torch.float64)), (782, tensor(-0.0425, dtype=torch.float64)), (2772, tensor(-0.0425, dtype=torch.float64)), (293, tensor(-0.0425, dtype=torch.float64)), (874, tensor(-0.0425, dtype=torch.float64)), (2653, tensor(-0.0424, dtype=torch.float64)), (1320, tensor(-0.0423, dtype=torch.float64)), (235, tensor(-0.0423, dtype=torch.float64)), (616, tensor(-0.0423, dtype=torch.float64)), (152, tensor(-0.0423, dtype=torch.float64)), (1441, tensor(-0.0422, dtype=torch.float64)), (2214, tensor(-0.0422, dtype=torch.float64)), (1876, tensor(-0.0422, dtype=torch.float64)), (1735, tensor(-0.0421, dtype=torch.float64)), (352, tensor(-0.0421, dtype=torch.float64)), (2111, tensor(-0.0421, dtype=torch.float64)), (901, tensor(-0.0421, dtype=torch.float64)), (2369, tensor(-0.0420, dtype=torch.float64)), (1078, tensor(-0.0420, dtype=torch.float64)), (1588, tensor(-0.0420, dtype=torch.float64)), (641, tensor(-0.0419, dtype=torch.float64)), (1987, tensor(-0.0419, dtype=torch.float64)), (937, tensor(-0.0418, dtype=torch.float64)), (1535, tensor(-0.0418, dtype=torch.float64)), (1563, tensor(-0.0418, dtype=torch.float64)), (2145, tensor(-0.0417, dtype=torch.float64)), (1865, tensor(-0.0417, dtype=torch.float64)), (2447, tensor(-0.0417, dtype=torch.float64)), (2402, tensor(-0.0416, dtype=torch.float64)), (1243, tensor(-0.0416, dtype=torch.float64)), (751, tensor(-0.0416, dtype=torch.float64)), (546, tensor(-0.0416, dtype=torch.float64)), (2053, tensor(-0.0416, dtype=torch.float64)), (1085, tensor(-0.0415, dtype=torch.float64)), (1763, tensor(-0.0415, dtype=torch.float64)), (2755, tensor(-0.0415, dtype=torch.float64)), (734, tensor(-0.0415, dtype=torch.float64)), (898, tensor(-0.0414, dtype=torch.float64)), (643, tensor(-0.0414, dtype=torch.float64)), (16, tensor(-0.0414, dtype=torch.float64)), (2061, tensor(-0.0414, dtype=torch.float64)), (2817, tensor(-0.0413, dtype=torch.float64)), (1618, tensor(-0.0413, dtype=torch.float64)), (522, tensor(-0.0413, dtype=torch.float64)), (2686, tensor(-0.0413, dtype=torch.float64)), (2230, tensor(-0.0412, dtype=torch.float64)), (2852, tensor(-0.0412, dtype=torch.float64)), (2585, tensor(-0.0411, dtype=torch.float64)), (986, tensor(-0.0411, dtype=torch.float64)), (2078, tensor(-0.0411, dtype=torch.float64)), (543, tensor(-0.0411, dtype=torch.float64)), (875, tensor(-0.0411, dtype=torch.float64)), (1457, tensor(-0.0410, dtype=torch.float64)), (1230, tensor(-0.0410, dtype=torch.float64)), (1935, tensor(-0.0410, dtype=torch.float64)), (2787, tensor(-0.0409, dtype=torch.float64)), (657, tensor(-0.0409, dtype=torch.float64)), (1084, tensor(-0.0408, dtype=torch.float64)), (2485, tensor(-0.0407, dtype=torch.float64)), (1638, tensor(-0.0407, dtype=torch.float64)), (835, tensor(-0.0407, dtype=torch.float64)), (2827, tensor(-0.0407, dtype=torch.float64)), (2122, tensor(-0.0407, dtype=torch.float64)), (2226, tensor(-0.0407, dtype=torch.float64)), (267, tensor(-0.0406, dtype=torch.float64)), (2032, tensor(-0.0406, dtype=torch.float64)), (1070, tensor(-0.0406, dtype=torch.float64)), (1450, tensor(-0.0406, dtype=torch.float64)), (435, tensor(-0.0405, dtype=torch.float64)), (2602, tensor(-0.0405, dtype=torch.float64)), (369, tensor(-0.0405, dtype=torch.float64)), (255, tensor(-0.0404, dtype=torch.float64)), (2617, tensor(-0.0404, dtype=torch.float64)), (1444, tensor(-0.0404, dtype=torch.float64)), (147, tensor(-0.0404, dtype=torch.float64)), (1875, tensor(-0.0404, dtype=torch.float64)), (1439, tensor(-0.0404, dtype=torch.float64)), (826, tensor(-0.0404, dtype=torch.float64)), (802, tensor(-0.0403, dtype=torch.float64)), (1144, tensor(-0.0403, dtype=torch.float64)), (1331, tensor(-0.0403, dtype=torch.float64)), (290, tensor(-0.0403, dtype=torch.float64)), (2645, tensor(-0.0403, dtype=torch.float64)), (984, tensor(-0.0403, dtype=torch.float64)), (1392, tensor(-0.0402, dtype=torch.float64)), (732, tensor(-0.0401, dtype=torch.float64)), (421, tensor(-0.0400, dtype=torch.float64)), (2489, tensor(-0.0399, dtype=torch.float64)), (2408, tensor(-0.0399, dtype=torch.float64)), (1360, tensor(-0.0399, dtype=torch.float64)), (2788, tensor(-0.0399, dtype=torch.float64)), (1844, tensor(-0.0399, dtype=torch.float64)), (1271, tensor(-0.0399, dtype=torch.float64)), (848, tensor(-0.0398, dtype=torch.float64)), (980, tensor(-0.0398, dtype=torch.float64)), (2493, tensor(-0.0398, dtype=torch.float64)), (1764, tensor(-0.0397, dtype=torch.float64)), (2663, tensor(-0.0397, dtype=torch.float64)), (1881, tensor(-0.0396, dtype=torch.float64)), (2318, tensor(-0.0396, dtype=torch.float64)), (150, tensor(-0.0396, dtype=torch.float64)), (138, tensor(-0.0396, dtype=torch.float64)), (157, tensor(-0.0395, dtype=torch.float64)), (2425, tensor(-0.0395, dtype=torch.float64)), (2851, tensor(-0.0394, dtype=torch.float64)), (367, tensor(-0.0394, dtype=torch.float64)), (357, tensor(-0.0394, dtype=torch.float64)), (2846, tensor(-0.0394, dtype=torch.float64)), (194, tensor(-0.0394, dtype=torch.float64)), (602, tensor(-0.0393, dtype=torch.float64)), (2571, tensor(-0.0393, dtype=torch.float64)), (173, tensor(-0.0393, dtype=torch.float64)), (338, tensor(-0.0393, dtype=torch.float64)), (1379, tensor(-0.0393, dtype=torch.float64)), (938, tensor(-0.0392, dtype=torch.float64)), (2736, tensor(-0.0392, dtype=torch.float64)), (11, tensor(-0.0392, dtype=torch.float64)), (623, tensor(-0.0392, dtype=torch.float64)), (2889, tensor(-0.0391, dtype=torch.float64)), (2532, tensor(-0.0390, dtype=torch.float64)), (2909, tensor(-0.0389, dtype=torch.float64)), (1245, tensor(-0.0389, dtype=torch.float64)), (495, tensor(-0.0389, dtype=torch.float64)), (185, tensor(-0.0388, dtype=torch.float64)), (2194, tensor(-0.0388, dtype=torch.float64)), (348, tensor(-0.0388, dtype=torch.float64)), (753, tensor(-0.0388, dtype=torch.float64)), (2536, tensor(-0.0387, dtype=torch.float64)), (265, tensor(-0.0387, dtype=torch.float64)), (2784, tensor(-0.0387, dtype=torch.float64)), (1794, tensor(-0.0387, dtype=torch.float64)), (554, tensor(-0.0387, dtype=torch.float64)), (2898, tensor(-0.0386, dtype=torch.float64)), (2589, tensor(-0.0385, dtype=torch.float64)), (1118, tensor(-0.0385, dtype=torch.float64)), (2901, tensor(-0.0385, dtype=torch.float64)), (2717, tensor(-0.0385, dtype=torch.float64)), (1582, tensor(-0.0384, dtype=torch.float64)), (2244, tensor(-0.0384, dtype=torch.float64)), (359, tensor(-0.0384, dtype=torch.float64)), (2516, tensor(-0.0384, dtype=torch.float64)), (1430, tensor(-0.0383, dtype=torch.float64)), (674, tensor(-0.0383, dtype=torch.float64)), (1289, tensor(-0.0383, dtype=torch.float64)), (260, tensor(-0.0381, dtype=torch.float64)), (754, tensor(-0.0380, dtype=torch.float64)), (201, tensor(-0.0379, dtype=torch.float64)), (2439, tensor(-0.0379, dtype=torch.float64)), (252, tensor(-0.0379, dtype=torch.float64)), (1267, tensor(-0.0378, dtype=torch.float64)), (1929, tensor(-0.0378, dtype=torch.float64)), (632, tensor(-0.0378, dtype=torch.float64)), (1787, tensor(-0.0376, dtype=torch.float64)), (103, tensor(-0.0376, dtype=torch.float64)), (692, tensor(-0.0376, dtype=torch.float64)), (1919, tensor(-0.0376, dtype=torch.float64)), (540, tensor(-0.0376, dtype=torch.float64)), (880, tensor(-0.0376, dtype=torch.float64)), (1417, tensor(-0.0375, dtype=torch.float64)), (3029, tensor(-0.0375, dtype=torch.float64)), (2574, tensor(-0.0375, dtype=torch.float64)), (742, tensor(-0.0375, dtype=torch.float64)), (1406, tensor(-0.0375, dtype=torch.float64)), (947, tensor(-0.0374, dtype=torch.float64)), (1099, tensor(-0.0374, dtype=torch.float64)), (2576, tensor(-0.0374, dtype=torch.float64)), (2322, tensor(-0.0374, dtype=torch.float64)), (1326, tensor(-0.0373, dtype=torch.float64)), (2584, tensor(-0.0373, dtype=torch.float64)), (2407, tensor(-0.0372, dtype=torch.float64)), (2590, tensor(-0.0372, dtype=torch.float64)), (2730, tensor(-0.0372, dtype=torch.float64)), (2353, tensor(-0.0371, dtype=torch.float64)), (1357, tensor(-0.0371, dtype=torch.float64)), (55, tensor(-0.0371, dtype=torch.float64)), (991, tensor(-0.0370, dtype=torch.float64)), (1916, tensor(-0.0370, dtype=torch.float64)), (175, tensor(-0.0370, dtype=torch.float64)), (663, tensor(-0.0370, dtype=torch.float64)), (1215, tensor(-0.0370, dtype=torch.float64)), (801, tensor(-0.0370, dtype=torch.float64)), (1702, tensor(-0.0370, dtype=torch.float64)), (2039, tensor(-0.0369, dtype=torch.float64)), (2098, tensor(-0.0369, dtype=torch.float64)), (1597, tensor(-0.0368, dtype=torch.float64)), (2974, tensor(-0.0368, dtype=torch.float64)), (957, tensor(-0.0367, dtype=torch.float64)), (44, tensor(-0.0367, dtype=torch.float64)), (2591, tensor(-0.0367, dtype=torch.float64)), (2557, tensor(-0.0366, dtype=torch.float64)), (1571, tensor(-0.0366, dtype=torch.float64)), (1518, tensor(-0.0365, dtype=torch.float64)), (1590, tensor(-0.0365, dtype=torch.float64)), (2311, tensor(-0.0365, dtype=torch.float64)), (2033, tensor(-0.0365, dtype=torch.float64)), (1889, tensor(-0.0365, dtype=torch.float64)), (640, tensor(-0.0364, dtype=torch.float64)), (3002, tensor(-0.0364, dtype=torch.float64)), (2011, tensor(-0.0364, dtype=torch.float64)), (390, tensor(-0.0364, dtype=torch.float64)), (2471, tensor(-0.0363, dtype=torch.float64)), (1075, tensor(-0.0363, dtype=torch.float64)), (264, tensor(-0.0363, dtype=torch.float64)), (2310, tensor(-0.0363, dtype=torch.float64)), (1060, tensor(-0.0363, dtype=torch.float64)), (1390, tensor(-0.0363, dtype=torch.float64)), (2064, tensor(-0.0362, dtype=torch.float64)), (58, tensor(-0.0362, dtype=torch.float64)), (1639, tensor(-0.0361, dtype=torch.float64)), (2989, tensor(-0.0361, dtype=torch.float64)), (294, tensor(-0.0361, dtype=torch.float64)), (1264, tensor(-0.0360, dtype=torch.float64)), (2406, tensor(-0.0360, dtype=torch.float64)), (100, tensor(-0.0360, dtype=torch.float64)), (2970, tensor(-0.0360, dtype=torch.float64)), (1108, tensor(-0.0360, dtype=torch.float64)), (2604, tensor(-0.0359, dtype=torch.float64)), (1833, tensor(-0.0359, dtype=torch.float64)), (2323, tensor(-0.0358, dtype=torch.float64)), (1866, tensor(-0.0358, dtype=torch.float64)), (647, tensor(-0.0358, dtype=torch.float64)), (1170, tensor(-0.0357, dtype=torch.float64)), (2923, tensor(-0.0357, dtype=torch.float64)), (1208, tensor(-0.0357, dtype=torch.float64)), (297, tensor(-0.0357, dtype=torch.float64)), (845, tensor(-0.0356, dtype=torch.float64)), (389, tensor(-0.0356, dtype=torch.float64)), (2494, tensor(-0.0355, dtype=torch.float64)), (2066, tensor(-0.0355, dtype=torch.float64)), (2159, tensor(-0.0355, dtype=torch.float64)), (2594, tensor(-0.0355, dtype=torch.float64)), (2983, tensor(-0.0354, dtype=torch.float64)), (573, tensor(-0.0354, dtype=torch.float64)), (1253, tensor(-0.0354, dtype=torch.float64)), (1386, tensor(-0.0352, dtype=torch.float64)), (1124, tensor(-0.0352, dtype=torch.float64)), (96, tensor(-0.0351, dtype=torch.float64)), (2388, tensor(-0.0351, dtype=torch.float64)), (1393, tensor(-0.0351, dtype=torch.float64)), (158, tensor(-0.0351, dtype=torch.float64)), (1869, tensor(-0.0349, dtype=torch.float64)), (222, tensor(-0.0349, dtype=torch.float64)), (964, tensor(-0.0348, dtype=torch.float64)), (1839, tensor(-0.0348, dtype=torch.float64)), (366, tensor(-0.0348, dtype=torch.float64)), (488, tensor(-0.0348, dtype=torch.float64)), (1142, tensor(-0.0348, dtype=torch.float64)), (719, tensor(-0.0347, dtype=torch.float64)), (1814, tensor(-0.0347, dtype=torch.float64)), (1541, tensor(-0.0347, dtype=torch.float64)), (2593, tensor(-0.0346, dtype=torch.float64)), (2349, tensor(-0.0346, dtype=torch.float64)), (2512, tensor(-0.0346, dtype=torch.float64)), (2894, tensor(-0.0345, dtype=torch.float64)), (1352, tensor(-0.0344, dtype=torch.float64)), (1992, tensor(-0.0344, dtype=torch.float64)), (1900, tensor(-0.0343, dtype=torch.float64)), (576, tensor(-0.0342, dtype=torch.float64)), (135, tensor(-0.0342, dtype=torch.float64)), (1366, tensor(-0.0342, dtype=torch.float64)), (687, tensor(-0.0342, dtype=torch.float64)), (619, tensor(-0.0342, dtype=torch.float64)), (726, tensor(-0.0342, dtype=torch.float64)), (2810, tensor(-0.0341, dtype=torch.float64)), (2956, tensor(-0.0341, dtype=torch.float64)), (2375, tensor(-0.0340, dtype=torch.float64)), (1719, tensor(-0.0339, dtype=torch.float64)), (2691, tensor(-0.0339, dtype=torch.float64)), (2972, tensor(-0.0338, dtype=torch.float64)), (1519, tensor(-0.0338, dtype=torch.float64)), (2298, tensor(-0.0338, dtype=torch.float64)), (2100, tensor(-0.0338, dtype=torch.float64)), (1516, tensor(-0.0337, dtype=torch.float64)), (931, tensor(-0.0336, dtype=torch.float64)), (1213, tensor(-0.0336, dtype=torch.float64)), (809, tensor(-0.0336, dtype=torch.float64)), (2896, tensor(-0.0335, dtype=torch.float64)), (524, tensor(-0.0335, dtype=torch.float64)), (2251, tensor(-0.0335, dtype=torch.float64)), (1466, tensor(-0.0335, dtype=torch.float64)), (2205, tensor(-0.0334, dtype=torch.float64)), (550, tensor(-0.0334, dtype=torch.float64)), (220, tensor(-0.0333, dtype=torch.float64)), (820, tensor(-0.0333, dtype=torch.float64)), (910, tensor(-0.0333, dtype=torch.float64)), (681, tensor(-0.0333, dtype=torch.float64)), (1672, tensor(-0.0333, dtype=torch.float64)), (2985, tensor(-0.0333, dtype=torch.float64)), (503, tensor(-0.0332, dtype=torch.float64)), (625, tensor(-0.0332, dtype=torch.float64)), (428, tensor(-0.0332, dtype=torch.float64)), (2212, tensor(-0.0332, dtype=torch.float64)), (2837, tensor(-0.0332, dtype=torch.float64)), (2935, tensor(-0.0331, dtype=torch.float64)), (371, tensor(-0.0331, dtype=torch.float64)), (1200, tensor(-0.0331, dtype=torch.float64)), (181, tensor(-0.0330, dtype=torch.float64)), (1495, tensor(-0.0330, dtype=torch.float64)), (792, tensor(-0.0330, dtype=torch.float64)), (2647, tensor(-0.0330, dtype=torch.float64)), (2690, tensor(-0.0330, dtype=torch.float64)), (1808, tensor(-0.0330, dtype=torch.float64)), (2526, tensor(-0.0330, dtype=torch.float64)), (2129, tensor(-0.0329, dtype=torch.float64)), (1340, tensor(-0.0329, dtype=torch.float64)), (2266, tensor(-0.0328, dtype=torch.float64)), (459, tensor(-0.0327, dtype=torch.float64)), (1829, tensor(-0.0327, dtype=torch.float64)), (2452, tensor(-0.0326, dtype=torch.float64)), (1978, tensor(-0.0326, dtype=torch.float64)), (269, tensor(-0.0326, dtype=torch.float64)), (2154, tensor(-0.0326, dtype=torch.float64)), (918, tensor(-0.0324, dtype=torch.float64)), (1858, tensor(-0.0324, dtype=torch.float64)), (1044, tensor(-0.0324, dtype=torch.float64)), (98, tensor(-0.0323, dtype=torch.float64)), (149, tensor(-0.0323, dtype=torch.float64)), (1036, tensor(-0.0323, dtype=torch.float64)), (749, tensor(-0.0322, dtype=torch.float64)), (552, tensor(-0.0322, dtype=torch.float64)), (1122, tensor(-0.0321, dtype=torch.float64)), (2107, tensor(-0.0321, dtype=torch.float64)), (3012, tensor(-0.0321, dtype=torch.float64)), (2239, tensor(-0.0321, dtype=torch.float64)), (3007, tensor(-0.0321, dtype=torch.float64)), (572, tensor(-0.0320, dtype=torch.float64)), (2925, tensor(-0.0320, dtype=torch.float64)), (1933, tensor(-0.0320, dtype=torch.float64)), (2508, tensor(-0.0320, dtype=torch.float64)), (39, tensor(-0.0320, dtype=torch.float64)), (335, tensor(-0.0319, dtype=torch.float64)), (212, tensor(-0.0319, dtype=torch.float64)), (1616, tensor(-0.0318, dtype=torch.float64)), (346, tensor(-0.0318, dtype=torch.float64)), (1572, tensor(-0.0318, dtype=torch.float64)), (2379, tensor(-0.0318, dtype=torch.float64)), (2217, tensor(-0.0318, dtype=torch.float64)), (2737, tensor(-0.0318, dtype=torch.float64)), (2698, tensor(-0.0317, dtype=torch.float64)), (2807, tensor(-0.0317, dtype=torch.float64)), (474, tensor(-0.0317, dtype=torch.float64)), (1212, tensor(-0.0316, dtype=torch.float64)), (1350, tensor(-0.0316, dtype=torch.float64)), (2326, tensor(-0.0316, dtype=torch.float64)), (1053, tensor(-0.0315, dtype=torch.float64)), (1913, tensor(-0.0315, dtype=torch.float64)), (2528, tensor(-0.0315, dtype=torch.float64)), (2818, tensor(-0.0315, dtype=torch.float64)), (825, tensor(-0.0315, dtype=torch.float64)), (2030, tensor(-0.0315, dtype=torch.float64)), (2723, tensor(-0.0314, dtype=torch.float64)), (2096, tensor(-0.0314, dtype=torch.float64)), (388, tensor(-0.0314, dtype=torch.float64)), (1093, tensor(-0.0314, dtype=torch.float64)), (3039, tensor(-0.0313, dtype=torch.float64)), (805, tensor(-0.0313, dtype=torch.float64)), (171, tensor(-0.0313, dtype=torch.float64)), (1962, tensor(-0.0313, dtype=torch.float64)), (411, tensor(-0.0313, dtype=torch.float64)), (1247, tensor(-0.0313, dtype=torch.float64)), (2490, tensor(-0.0312, dtype=torch.float64)), (2775, tensor(-0.0312, dtype=torch.float64)), (599, tensor(-0.0312, dtype=torch.float64)), (951, tensor(-0.0312, dtype=torch.float64)), (604, tensor(-0.0312, dtype=torch.float64)), (718, tensor(-0.0311, dtype=torch.float64)), (172, tensor(-0.0310, dtype=torch.float64)), (347, tensor(-0.0310, dtype=torch.float64)), (1886, tensor(-0.0310, dtype=torch.float64)), (216, tensor(-0.0310, dtype=torch.float64)), (121, tensor(-0.0309, dtype=torch.float64)), (195, tensor(-0.0309, dtype=torch.float64)), (2157, tensor(-0.0309, dtype=torch.float64)), (804, tensor(-0.0309, dtype=torch.float64)), (2418, tensor(-0.0309, dtype=torch.float64)), (2703, tensor(-0.0308, dtype=torch.float64)), (1993, tensor(-0.0308, dtype=torch.float64)), (2340, tensor(-0.0308, dtype=torch.float64)), (736, tensor(-0.0308, dtype=torch.float64)), (2987, tensor(-0.0308, dtype=torch.float64)), (2109, tensor(-0.0308, dtype=torch.float64)), (646, tensor(-0.0308, dtype=torch.float64)), (923, tensor(-0.0307, dtype=torch.float64)), (2156, tensor(-0.0307, dtype=torch.float64)), (612, tensor(-0.0307, dtype=torch.float64)), (487, tensor(-0.0307, dtype=torch.float64)), (2958, tensor(-0.0306, dtype=torch.float64)), (3026, tensor(-0.0306, dtype=torch.float64)), (1176, tensor(-0.0306, dtype=torch.float64)), (1440, tensor(-0.0305, dtype=torch.float64)), (471, tensor(-0.0305, dtype=torch.float64)), (2866, tensor(-0.0305, dtype=torch.float64)), (392, tensor(-0.0305, dtype=torch.float64)), (501, tensor(-0.0305, dtype=torch.float64)), (2051, tensor(-0.0304, dtype=torch.float64)), (32, tensor(-0.0304, dtype=torch.float64)), (262, tensor(-0.0304, dtype=torch.float64)), (504, tensor(-0.0304, dtype=torch.float64)), (331, tensor(-0.0303, dtype=torch.float64)), (2877, tensor(-0.0303, dtype=torch.float64)), (1214, tensor(-0.0302, dtype=torch.float64)), (2870, tensor(-0.0302, dtype=torch.float64)), (485, tensor(-0.0302, dtype=torch.float64)), (2904, tensor(-0.0302, dtype=torch.float64)), (2592, tensor(-0.0302, dtype=torch.float64)), (291, tensor(-0.0302, dtype=torch.float64)), (1757, tensor(-0.0301, dtype=torch.float64)), (1981, tensor(-0.0301, dtype=torch.float64)), (1826, tensor(-0.0301, dtype=torch.float64)), (142, tensor(-0.0300, dtype=torch.float64)), (2808, tensor(-0.0300, dtype=torch.float64)), (1943, tensor(-0.0300, dtype=torch.float64)), (1484, tensor(-0.0300, dtype=torch.float64)), (2089, tensor(-0.0299, dtype=torch.float64)), (1570, tensor(-0.0299, dtype=torch.float64)), (1768, tensor(-0.0299, dtype=torch.float64)), (933, tensor(-0.0299, dtype=torch.float64)), (2462, tensor(-0.0299, dtype=torch.float64)), (1362, tensor(-0.0298, dtype=torch.float64)), (1627, tensor(-0.0298, dtype=torch.float64)), (821, tensor(-0.0298, dtype=torch.float64)), (205, tensor(-0.0297, dtype=torch.float64)), (1963, tensor(-0.0297, dtype=torch.float64)), (1263, tensor(-0.0297, dtype=torch.float64)), (861, tensor(-0.0297, dtype=torch.float64)), (253, tensor(-0.0296, dtype=torch.float64)), (2559, tensor(-0.0296, dtype=torch.float64)), (2547, tensor(-0.0295, dtype=torch.float64)), (61, tensor(-0.0295, dtype=torch.float64)), (2404, tensor(-0.0295, dtype=torch.float64)), (525, tensor(-0.0295, dtype=torch.float64)), (819, tensor(-0.0294, dtype=torch.float64)), (1475, tensor(-0.0294, dtype=torch.float64)), (1576, tensor(-0.0294, dtype=torch.float64)), (469, tensor(-0.0294, dtype=torch.float64)), (319, tensor(-0.0294, dtype=torch.float64)), (129, tensor(-0.0294, dtype=torch.float64)), (2475, tensor(-0.0294, dtype=torch.float64)), (2219, tensor(-0.0294, dtype=torch.float64)), (3004, tensor(-0.0293, dtype=torch.float64)), (308, tensor(-0.0293, dtype=torch.float64)), (2149, tensor(-0.0293, dtype=torch.float64)), (987, tensor(-0.0293, dtype=torch.float64)), (1155, tensor(-0.0292, dtype=torch.float64)), (88, tensor(-0.0292, dtype=torch.float64)), (2583, tensor(-0.0292, dtype=torch.float64)), (155, tensor(-0.0292, dtype=torch.float64)), (214, tensor(-0.0292, dtype=torch.float64)), (2308, tensor(-0.0291, dtype=torch.float64)), (1126, tensor(-0.0290, dtype=torch.float64)), (2931, tensor(-0.0290, dtype=torch.float64)), (1303, tensor(-0.0290, dtype=torch.float64)), (2228, tensor(-0.0290, dtype=torch.float64)), (1998, tensor(-0.0289, dtype=torch.float64)), (1750, tensor(-0.0289, dtype=torch.float64)), (2224, tensor(-0.0289, dtype=torch.float64)), (993, tensor(-0.0289, dtype=torch.float64)), (1205, tensor(-0.0288, dtype=torch.float64)), (139, tensor(-0.0288, dtype=torch.float64)), (2420, tensor(-0.0288, dtype=torch.float64)), (191, tensor(-0.0288, dtype=torch.float64)), (1508, tensor(-0.0288, dtype=torch.float64)), (2120, tensor(-0.0287, dtype=torch.float64)), (2295, tensor(-0.0287, dtype=torch.float64)), (2164, tensor(-0.0287, dtype=torch.float64)), (2749, tensor(-0.0287, dtype=torch.float64)), (2743, tensor(-0.0287, dtype=torch.float64)), (217, tensor(-0.0286, dtype=torch.float64)), (569, tensor(-0.0286, dtype=torch.float64)), (1941, tensor(-0.0285, dtype=torch.float64)), (535, tensor(-0.0285, dtype=torch.float64)), (1746, tensor(-0.0285, dtype=torch.float64)), (1745, tensor(-0.0285, dtype=torch.float64)), (223, tensor(-0.0285, dtype=torch.float64)), (661, tensor(-0.0285, dtype=torch.float64)), (3022, tensor(-0.0285, dtype=torch.float64)), (2683, tensor(-0.0284, dtype=torch.float64)), (1244, tensor(-0.0284, dtype=torch.float64)), (1179, tensor(-0.0284, dtype=torch.float64)), (2193, tensor(-0.0284, dtype=torch.float64)), (528, tensor(-0.0284, dtype=torch.float64)), (2257, tensor(-0.0284, dtype=torch.float64)), (2279, tensor(-0.0283, dtype=torch.float64)), (464, tensor(-0.0283, dtype=torch.float64)), (2207, tensor(-0.0283, dtype=torch.float64)), (2605, tensor(-0.0283, dtype=torch.float64)), (956, tensor(-0.0283, dtype=torch.float64)), (240, tensor(-0.0283, dtype=torch.float64)), (1411, tensor(-0.0282, dtype=torch.float64)), (1921, tensor(-0.0282, dtype=torch.float64)), (2272, tensor(-0.0282, dtype=torch.float64)), (1953, tensor(-0.0282, dtype=torch.float64)), (521, tensor(-0.0282, dtype=torch.float64)), (1073, tensor(-0.0282, dtype=torch.float64)), (1223, tensor(-0.0281, dtype=torch.float64)), (2169, tensor(-0.0280, dtype=torch.float64)), (1001, tensor(-0.0280, dtype=torch.float64)), (1311, tensor(-0.0279, dtype=torch.float64)), (1727, tensor(-0.0279, dtype=torch.float64)), (2334, tensor(-0.0279, dtype=torch.float64)), (306, tensor(-0.0279, dtype=torch.float64)), (511, tensor(-0.0278, dtype=torch.float64)), (2046, tensor(-0.0278, dtype=torch.float64)), (1697, tensor(-0.0278, dtype=torch.float64)), (1282, tensor(-0.0278, dtype=torch.float64)), (784, tensor(-0.0277, dtype=torch.float64)), (1714, tensor(-0.0277, dtype=torch.float64)), (1533, tensor(-0.0277, dtype=torch.float64)), (589, tensor(-0.0277, dtype=torch.float64)), (2423, tensor(-0.0277, dtype=torch.float64)), (1285, tensor(-0.0276, dtype=torch.float64)), (1770, tensor(-0.0275, dtype=torch.float64)), (1500, tensor(-0.0275, dtype=torch.float64)), (2766, tensor(-0.0274, dtype=torch.float64)), (4, tensor(-0.0274, dtype=torch.float64)), (2473, tensor(-0.0273, dtype=torch.float64)), (1890, tensor(-0.0273, dtype=torch.float64)), (2746, tensor(-0.0273, dtype=torch.float64)), (2637, tensor(-0.0273, dtype=torch.float64)), (2961, tensor(-0.0273, dtype=torch.float64)), (2659, tensor(-0.0273, dtype=torch.float64)), (1055, tensor(-0.0273, dtype=torch.float64)), (1789, tensor(-0.0272, dtype=torch.float64)), (2672, tensor(-0.0272, dtype=torch.float64)), (457, tensor(-0.0272, dtype=torch.float64)), (2874, tensor(-0.0271, dtype=torch.float64)), (1772, tensor(-0.0271, dtype=torch.float64)), (2455, tensor(-0.0270, dtype=torch.float64)), (989, tensor(-0.0270, dtype=torch.float64)), (2231, tensor(-0.0270, dtype=torch.float64)), (1778, tensor(-0.0269, dtype=torch.float64)), (2192, tensor(-0.0269, dtype=torch.float64)), (3009, tensor(-0.0268, dtype=torch.float64)), (1163, tensor(-0.0268, dtype=torch.float64)), (776, tensor(-0.0268, dtype=torch.float64)), (2181, tensor(-0.0268, dtype=torch.float64)), (1545, tensor(-0.0268, dtype=torch.float64)), (2601, tensor(-0.0267, dtype=torch.float64)), (156, tensor(-0.0267, dtype=torch.float64)), (741, tensor(-0.0267, dtype=torch.float64)), (407, tensor(-0.0267, dtype=torch.float64)), (866, tensor(-0.0266, dtype=torch.float64)), (334, tensor(-0.0266, dtype=torch.float64)), (2804, tensor(-0.0266, dtype=torch.float64)), (2296, tensor(-0.0266, dtype=torch.float64)), (2463, tensor(-0.0266, dtype=torch.float64)), (2297, tensor(-0.0266, dtype=torch.float64)), (1908, tensor(-0.0265, dtype=torch.float64)), (2330, tensor(-0.0265, dtype=torch.float64)), (1047, tensor(-0.0265, dtype=torch.float64)), (2946, tensor(-0.0265, dtype=torch.float64)), (2628, tensor(-0.0265, dtype=torch.float64)), (1143, tensor(-0.0265, dtype=torch.float64)), (490, tensor(-0.0265, dtype=torch.float64)), (1087, tensor(-0.0265, dtype=torch.float64)), (639, tensor(-0.0265, dtype=torch.float64)), (397, tensor(-0.0264, dtype=torch.float64)), (1400, tensor(-0.0263, dtype=torch.float64)), (1251, tensor(-0.0263, dtype=torch.float64)), (224, tensor(-0.0263, dtype=torch.float64)), (529, tensor(-0.0262, dtype=torch.float64)), (414, tensor(-0.0262, dtype=torch.float64)), (20, tensor(-0.0262, dtype=torch.float64)), (682, tensor(-0.0261, dtype=torch.float64)), (1793, tensor(-0.0261, dtype=torch.float64)), (2832, tensor(-0.0261, dtype=torch.float64)), (2906, tensor(-0.0261, dtype=torch.float64)), (2427, tensor(-0.0261, dtype=torch.float64)), (896, tensor(-0.0261, dtype=torch.float64)), (2499, tensor(-0.0260, dtype=torch.float64)), (1472, tensor(-0.0260, dtype=torch.float64)), (36, tensor(-0.0260, dtype=torch.float64)), (2350, tensor(-0.0259, dtype=torch.float64)), (1751, tensor(-0.0259, dtype=torch.float64)), (1321, tensor(-0.0259, dtype=torch.float64)), (17, tensor(-0.0258, dtype=torch.float64)), (1272, tensor(-0.0258, dtype=torch.float64)), (2150, tensor(-0.0258, dtype=torch.float64)), (2854, tensor(-0.0258, dtype=torch.float64)), (2572, tensor(-0.0258, dtype=torch.float64)), (1135, tensor(-0.0258, dtype=torch.float64)), (1045, tensor(-0.0258, dtype=torch.float64)), (492, tensor(-0.0258, dtype=torch.float64)), (1221, tensor(-0.0257, dtype=torch.float64)), (2914, tensor(-0.0257, dtype=torch.float64)), (887, tensor(-0.0257, dtype=torch.float64)), (1061, tensor(-0.0256, dtype=torch.float64)), (2336, tensor(-0.0256, dtype=torch.float64)), (2015, tensor(-0.0255, dtype=torch.float64)), (2082, tensor(-0.0255, dtype=torch.float64)), (2650, tensor(-0.0255, dtype=torch.float64)), (1646, tensor(-0.0254, dtype=torch.float64)), (996, tensor(-0.0254, dtype=torch.float64)), (1837, tensor(-0.0253, dtype=torch.float64)), (434, tensor(-0.0252, dtype=torch.float64)), (1234, tensor(-0.0252, dtype=torch.float64)), (1708, tensor(-0.0252, dtype=torch.float64)), (2209, tensor(-0.0252, dtype=torch.float64)), (2515, tensor(-0.0252, dtype=torch.float64)), (23, tensor(-0.0252, dtype=torch.float64)), (199, tensor(-0.0251, dtype=torch.float64)), (2739, tensor(-0.0251, dtype=torch.float64)), (1049, tensor(-0.0251, dtype=torch.float64)), (2895, tensor(-0.0251, dtype=torch.float64)), (893, tensor(-0.0251, dtype=torch.float64)), (416, tensor(-0.0251, dtype=torch.float64)), (2954, tensor(-0.0250, dtype=torch.float64)), (1192, tensor(-0.0250, dtype=torch.float64)), (2762, tensor(-0.0250, dtype=torch.float64)), (1979, tensor(-0.0250, dtype=torch.float64)), (3001, tensor(-0.0249, dtype=torch.float64)), (2905, tensor(-0.0249, dtype=torch.float64)), (1048, tensor(-0.0249, dtype=torch.float64)), (122, tensor(-0.0248, dtype=torch.float64)), (443, tensor(-0.0248, dtype=torch.float64)), (2198, tensor(-0.0248, dtype=torch.float64)), (2189, tensor(-0.0247, dtype=torch.float64)), (733, tensor(-0.0247, dtype=torch.float64)), (1177, tensor(-0.0247, dtype=torch.float64)), (1372, tensor(-0.0247, dtype=torch.float64)), (1809, tensor(-0.0246, dtype=torch.float64)), (2162, tensor(-0.0245, dtype=torch.float64)), (1945, tensor(-0.0245, dtype=torch.float64)), (570, tensor(-0.0245, dtype=torch.float64)), (1011, tensor(-0.0244, dtype=torch.float64)), (123, tensor(-0.0244, dtype=torch.float64)), (1548, tensor(-0.0244, dtype=torch.float64)), (873, tensor(-0.0244, dtype=torch.float64)), (1503, tensor(-0.0243, dtype=torch.float64)), (2190, tensor(-0.0243, dtype=torch.float64)), (2793, tensor(-0.0243, dtype=torch.float64)), (166, tensor(-0.0242, dtype=torch.float64)), (2719, tensor(-0.0242, dtype=torch.float64)), (1239, tensor(-0.0242, dtype=torch.float64)), (1025, tensor(-0.0242, dtype=torch.float64)), (2518, tensor(-0.0242, dtype=torch.float64)), (518, tensor(-0.0241, dtype=torch.float64)), (1470, tensor(-0.0241, dtype=torch.float64)), (2075, tensor(-0.0241, dtype=torch.float64)), (1189, tensor(-0.0240, dtype=torch.float64)), (445, tensor(-0.0240, dtype=torch.float64)), (1339, tensor(-0.0239, dtype=torch.float64)), (2235, tensor(-0.0239, dtype=torch.float64)), (705, tensor(-0.0239, dtype=torch.float64)), (863, tensor(-0.0238, dtype=torch.float64)), (2023, tensor(-0.0238, dtype=torch.float64)), (743, tensor(-0.0237, dtype=torch.float64)), (1610, tensor(-0.0237, dtype=torch.float64)), (2635, tensor(-0.0237, dtype=torch.float64)), (1008, tensor(-0.0236, dtype=torch.float64)), (844, tensor(-0.0236, dtype=torch.float64)), (2474, tensor(-0.0236, dtype=torch.float64)), (2119, tensor(-0.0236, dtype=torch.float64)), (2587, tensor(-0.0235, dtype=torch.float64)), (2411, tensor(-0.0235, dtype=torch.float64)), (1658, tensor(-0.0235, dtype=torch.float64)), (670, tensor(-0.0235, dtype=torch.float64)), (1944, tensor(-0.0234, dtype=torch.float64)), (702, tensor(-0.0234, dtype=torch.float64)), (1172, tensor(-0.0232, dtype=torch.float64)), (1368, tensor(-0.0232, dtype=torch.float64)), (1369, tensor(-0.0232, dtype=torch.float64)), (145, tensor(-0.0232, dtype=torch.float64)), (2018, tensor(-0.0232, dtype=torch.float64)), (823, tensor(-0.0231, dtype=torch.float64)), (2718, tensor(-0.0231, dtype=torch.float64)), (1414, tensor(-0.0231, dtype=torch.float64)), (2036, tensor(-0.0230, dtype=torch.float64)), (29, tensor(-0.0230, dtype=torch.float64)), (76, tensor(-0.0230, dtype=torch.float64)), (281, tensor(-0.0229, dtype=torch.float64)), (867, tensor(-0.0229, dtype=torch.float64)), (649, tensor(-0.0229, dtype=torch.float64)), (2084, tensor(-0.0229, dtype=torch.float64)), (728, tensor(-0.0228, dtype=torch.float64)), (1254, tensor(-0.0228, dtype=torch.float64)), (2203, tensor(-0.0228, dtype=torch.float64)), (1498, tensor(-0.0227, dtype=torch.float64)), (2648, tensor(-0.0227, dtype=torch.float64)), (1324, tensor(-0.0227, dtype=torch.float64)), (1250, tensor(-0.0227, dtype=torch.float64)), (2362, tensor(-0.0226, dtype=torch.float64)), (208, tensor(-0.0226, dtype=torch.float64)), (104, tensor(-0.0226, dtype=torch.float64)), (49, tensor(-0.0226, dtype=torch.float64)), (1138, tensor(-0.0226, dtype=torch.float64)), (2410, tensor(-0.0226, dtype=torch.float64)), (114, tensor(-0.0226, dtype=torch.float64)), (2003, tensor(-0.0226, dtype=torch.float64)), (565, tensor(-0.0225, dtype=torch.float64)), (1748, tensor(-0.0225, dtype=torch.float64)), (1017, tensor(-0.0225, dtype=torch.float64)), (2252, tensor(-0.0225, dtype=torch.float64)), (738, tensor(-0.0225, dtype=torch.float64)), (2392, tensor(-0.0225, dtype=torch.float64)), (2684, tensor(-0.0225, dtype=torch.float64)), (2893, tensor(-0.0223, dtype=torch.float64)), (2847, tensor(-0.0223, dtype=torch.float64)), (973, tensor(-0.0222, dtype=torch.float64)), (1, tensor(-0.0222, dtype=torch.float64)), (2843, tensor(-0.0222, dtype=torch.float64)), (1456, tensor(-0.0222, dtype=torch.float64)), (2977, tensor(-0.0221, dtype=torch.float64)), (2299, tensor(-0.0221, dtype=torch.float64)), (2007, tensor(-0.0221, dtype=torch.float64)), (2986, tensor(-0.0220, dtype=torch.float64)), (865, tensor(-0.0219, dtype=torch.float64)), (1942, tensor(-0.0219, dtype=torch.float64)), (2354, tensor(-0.0219, dtype=torch.float64)), (2360, tensor(-0.0219, dtype=torch.float64)), (924, tensor(-0.0218, dtype=torch.float64)), (2502, tensor(-0.0217, dtype=torch.float64)), (2357, tensor(-0.0216, dtype=torch.float64)), (916, tensor(-0.0216, dtype=torch.float64)), (418, tensor(-0.0216, dtype=torch.float64)), (2014, tensor(-0.0216, dtype=torch.float64)), (1604, tensor(-0.0215, dtype=torch.float64)), (93, tensor(-0.0215, dtype=torch.float64)), (2180, tensor(-0.0214, dtype=torch.float64)), (1482, tensor(-0.0214, dtype=torch.float64)), (1747, tensor(-0.0214, dtype=torch.float64)), (295, tensor(-0.0213, dtype=torch.float64)), (127, tensor(-0.0213, dtype=torch.float64)), (969, tensor(-0.0213, dtype=torch.float64)), (2004, tensor(-0.0213, dtype=torch.float64)), (2879, tensor(-0.0213, dtype=torch.float64)), (162, tensor(-0.0212, dtype=torch.float64)), (1019, tensor(-0.0212, dtype=torch.float64)), (846, tensor(-0.0212, dtype=torch.float64)), (1111, tensor(-0.0212, dtype=torch.float64)), (1310, tensor(-0.0211, dtype=torch.float64)), (2792, tensor(-0.0211, dtype=torch.float64)), (892, tensor(-0.0211, dtype=torch.float64)), (2434, tensor(-0.0211, dtype=torch.float64)), (2196, tensor(-0.0211, dtype=torch.float64)), (279, tensor(-0.0210, dtype=torch.float64)), (2631, tensor(-0.0210, dtype=torch.float64)), (137, tensor(-0.0209, dtype=torch.float64)), (2333, tensor(-0.0209, dtype=torch.float64)), (1792, tensor(-0.0209, dtype=torch.float64)), (1629, tensor(-0.0209, dtype=torch.float64)), (1433, tensor(-0.0208, dtype=torch.float64)), (1980, tensor(-0.0208, dtype=torch.float64)), (1458, tensor(-0.0208, dtype=torch.float64)), (2715, tensor(-0.0207, dtype=torch.float64)), (2337, tensor(-0.0207, dtype=torch.float64)), (2027, tensor(-0.0207, dtype=torch.float64)), (2250, tensor(-0.0207, dtype=torch.float64)), (1952, tensor(-0.0206, dtype=torch.float64)), (1463, tensor(-0.0206, dtype=torch.float64)), (750, tensor(-0.0206, dtype=torch.float64)), (458, tensor(-0.0206, dtype=torch.float64)), (2044, tensor(-0.0206, dtype=torch.float64)), (2417, tensor(-0.0205, dtype=torch.float64)), (1634, tensor(-0.0205, dtype=torch.float64)), (544, tensor(-0.0204, dtype=torch.float64)), (2264, tensor(-0.0204, dtype=torch.float64)), (1328, tensor(-0.0204, dtype=torch.float64)), (1330, tensor(-0.0204, dtype=torch.float64)), (2899, tensor(-0.0203, dtype=torch.float64)), (2456, tensor(-0.0203, dtype=torch.float64)), (1043, tensor(-0.0202, dtype=torch.float64)), (1354, tensor(-0.0202, dtype=torch.float64)), (2345, tensor(-0.0202, dtype=torch.float64)), (107, tensor(-0.0202, dtype=torch.float64)), (1105, tensor(-0.0202, dtype=torch.float64)), (982, tensor(-0.0201, dtype=torch.float64)), (1677, tensor(-0.0201, dtype=torch.float64)), (2875, tensor(-0.0201, dtype=torch.float64)), (2138, tensor(-0.0201, dtype=torch.float64)), (2467, tensor(-0.0200, dtype=torch.float64)), (600, tensor(-0.0200, dtype=torch.float64)), (1859, tensor(-0.0200, dtype=torch.float64)), (1130, tensor(-0.0200, dtype=torch.float64)), (1960, tensor(-0.0199, dtype=torch.float64)), (1046, tensor(-0.0199, dtype=torch.float64)), (745, tensor(-0.0199, dtype=torch.float64)), (2062, tensor(-0.0199, dtype=torch.float64)), (423, tensor(-0.0198, dtype=torch.float64)), (2939, tensor(-0.0197, dtype=torch.float64)), (1133, tensor(-0.0197, dtype=torch.float64)), (765, tensor(-0.0197, dtype=torch.float64)), (2734, tensor(-0.0196, dtype=torch.float64)), (2744, tensor(-0.0196, dtype=torch.float64)), (50, tensor(-0.0196, dtype=torch.float64)), (1316, tensor(-0.0196, dtype=torch.float64)), (915, tensor(-0.0196, dtype=torch.float64)), (1679, tensor(-0.0195, dtype=torch.float64)), (935, tensor(-0.0194, dtype=torch.float64)), (2783, tensor(-0.0194, dtype=torch.float64)), (1524, tensor(-0.0194, dtype=torch.float64)), (2368, tensor(-0.0194, dtype=torch.float64)), (2673, tensor(-0.0194, dtype=torch.float64)), (949, tensor(-0.0193, dtype=torch.float64)), (534, tensor(-0.0193, dtype=torch.float64)), (766, tensor(-0.0193, dtype=torch.float64)), (1033, tensor(-0.0193, dtype=torch.float64)), (2633, tensor(-0.0193, dtype=torch.float64)), (588, tensor(-0.0192, dtype=torch.float64)), (372, tensor(-0.0192, dtype=torch.float64)), (1165, tensor(-0.0192, dtype=torch.float64)), (1015, tensor(-0.0191, dtype=torch.float64)), (12, tensor(-0.0191, dtype=torch.float64)), (1509, tensor(-0.0191, dtype=torch.float64)), (2476, tensor(-0.0191, dtype=torch.float64)), (581, tensor(-0.0190, dtype=torch.float64)), (2618, tensor(-0.0190, dtype=torch.float64)), (316, tensor(-0.0190, dtype=torch.float64)), (561, tensor(-0.0190, dtype=torch.float64)), (2848, tensor(-0.0190, dtype=torch.float64)), (1818, tensor(-0.0190, dtype=torch.float64)), (659, tensor(-0.0189, dtype=torch.float64)), (1161, tensor(-0.0189, dtype=torch.float64)), (1494, tensor(-0.0189, dtype=torch.float64)), (1364, tensor(-0.0189, dtype=torch.float64)), (95, tensor(-0.0189, dtype=torch.float64)), (2079, tensor(-0.0189, dtype=torch.float64)), (3024, tensor(-0.0188, dtype=torch.float64)), (790, tensor(-0.0188, dtype=torch.float64)), (2466, tensor(-0.0187, dtype=torch.float64)), (1828, tensor(-0.0187, dtype=torch.float64)), (246, tensor(-0.0186, dtype=torch.float64)), (1076, tensor(-0.0186, dtype=torch.float64)), (1585, tensor(-0.0186, dtype=torch.float64)), (1649, tensor(-0.0186, dtype=torch.float64)), (1973, tensor(-0.0186, dtype=torch.float64)), (190, tensor(-0.0186, dtype=torch.float64)), (1899, tensor(-0.0185, dtype=torch.float64)), (2451, tensor(-0.0185, dtype=torch.float64)), (1125, tensor(-0.0185, dtype=torch.float64)), (2010, tensor(-0.0185, dtype=torch.float64)), (452, tensor(-0.0183, dtype=torch.float64)), (1917, tensor(-0.0182, dtype=torch.float64)), (656, tensor(-0.0182, dtype=torch.float64)), (1665, tensor(-0.0182, dtype=torch.float64)), (655, tensor(-0.0182, dtype=torch.float64)), (730, tensor(-0.0181, dtype=torch.float64)), (1888, tensor(-0.0181, dtype=torch.float64)), (764, tensor(-0.0181, dtype=torch.float64)), (2492, tensor(-0.0181, dtype=torch.float64)), (1594, tensor(-0.0181, dtype=torch.float64)), (2177, tensor(-0.0181, dtype=torch.float64)), (82, tensor(-0.0180, dtype=torch.float64)), (1965, tensor(-0.0180, dtype=torch.float64)), (721, tensor(-0.0180, dtype=torch.float64)), (2314, tensor(-0.0179, dtype=torch.float64)), (1398, tensor(-0.0179, dtype=torch.float64)), (2358, tensor(-0.0178, dtype=torch.float64)), (2578, tensor(-0.0177, dtype=torch.float64)), (1054, tensor(-0.0177, dtype=torch.float64)), (834, tensor(-0.0177, dtype=torch.float64)), (1353, tensor(-0.0176, dtype=torch.float64)), (133, tensor(-0.0176, dtype=torch.float64)), (3006, tensor(-0.0176, dtype=torch.float64)), (1838, tensor(-0.0176, dtype=torch.float64)), (2135, tensor(-0.0176, dtype=torch.float64)), (2756, tensor(-0.0176, dtype=torch.float64)), (3038, tensor(-0.0175, dtype=torch.float64)), (558, tensor(-0.0175, dtype=torch.float64)), (592, tensor(-0.0175, dtype=torch.float64)), (2563, tensor(-0.0175, dtype=torch.float64)), (2751, tensor(-0.0175, dtype=torch.float64)), (1667, tensor(-0.0175, dtype=torch.float64)), (355, tensor(-0.0175, dtype=torch.float64)), (2453, tensor(-0.0174, dtype=torch.float64)), (2261, tensor(-0.0174, dtype=torch.float64)), (1780, tensor(-0.0174, dtype=torch.float64)), (622, tensor(-0.0174, dtype=torch.float64)), (417, tensor(-0.0174, dtype=torch.float64)), (1725, tensor(-0.0174, dtype=torch.float64)), (2759, tensor(-0.0173, dtype=torch.float64)), (895, tensor(-0.0173, dtype=torch.float64)), (716, tensor(-0.0173, dtype=torch.float64)), (2543, tensor(-0.0173, dtype=torch.float64)), (598, tensor(-0.0173, dtype=torch.float64)), (2243, tensor(-0.0173, dtype=torch.float64)), (2586, tensor(-0.0173, dtype=torch.float64)), (2511, tensor(-0.0172, dtype=torch.float64)), (304, tensor(-0.0172, dtype=torch.float64)), (2133, tensor(-0.0172, dtype=torch.float64)), (2009, tensor(-0.0172, dtype=torch.float64)), (2603, tensor(-0.0171, dtype=torch.float64)), (635, tensor(-0.0171, dtype=torch.float64)), (1684, tensor(-0.0171, dtype=torch.float64)), (1531, tensor(-0.0170, dtype=torch.float64)), (1556, tensor(-0.0170, dtype=torch.float64)), (164, tensor(-0.0170, dtype=torch.float64)), (1584, tensor(-0.0170, dtype=torch.float64)), (2884, tensor(-0.0170, dtype=torch.float64)), (2527, tensor(-0.0169, dtype=torch.float64)), (2728, tensor(-0.0169, dtype=torch.float64)), (2320, tensor(-0.0169, dtype=torch.float64)), (2070, tensor(-0.0169, dtype=torch.float64)), (22, tensor(-0.0168, dtype=torch.float64)), (1885, tensor(-0.0168, dtype=torch.float64)), (666, tensor(-0.0167, dtype=torch.float64)), (249, tensor(-0.0167, dtype=torch.float64)), (1930, tensor(-0.0167, dtype=torch.float64)), (2289, tensor(-0.0167, dtype=torch.float64)), (2733, tensor(-0.0166, dtype=torch.float64)), (1334, tensor(-0.0166, dtype=torch.float64)), (395, tensor(-0.0166, dtype=torch.float64)), (1198, tensor(-0.0165, dtype=torch.float64)), (803, tensor(-0.0165, dtype=torch.float64)), (1643, tensor(-0.0164, dtype=torch.float64)), (2740, tensor(-0.0164, dtype=torch.float64)), (3021, tensor(-0.0164, dtype=torch.float64)), (1564, tensor(-0.0164, dtype=torch.float64)), (1910, tensor(-0.0164, dtype=torch.float64)), (1150, tensor(-0.0164, dtype=torch.float64)), (2801, tensor(-0.0164, dtype=torch.float64)), (2660, tensor(-0.0163, dtype=torch.float64)), (2582, tensor(-0.0162, dtype=torch.float64)), (247, tensor(-0.0162, dtype=torch.float64)), (2763, tensor(-0.0162, dtype=torch.float64)), (59, tensor(-0.0162, dtype=torch.float64)), (1974, tensor(-0.0162, dtype=torch.float64)), (1904, tensor(-0.0161, dtype=torch.float64)), (1089, tensor(-0.0161, dtype=torch.float64)), (508, tensor(-0.0161, dtype=torch.float64)), (292, tensor(-0.0161, dtype=torch.float64)), (1776, tensor(-0.0161, dtype=torch.float64)), (2934, tensor(-0.0160, dtype=torch.float64)), (2662, tensor(-0.0160, dtype=torch.float64)), (1822, tensor(-0.0159, dtype=torch.float64)), (1162, tensor(-0.0159, dtype=torch.float64)), (1914, tensor(-0.0159, dtype=torch.float64)), (2973, tensor(-0.0159, dtype=torch.float64)), (1376, tensor(-0.0159, dtype=torch.float64)), (856, tensor(-0.0159, dtype=torch.float64)), (620, tensor(-0.0158, dtype=torch.float64)), (897, tensor(-0.0158, dtype=torch.float64)), (2, tensor(-0.0157, dtype=torch.float64)), (189, tensor(-0.0157, dtype=torch.float64)), (1651, tensor(-0.0157, dtype=torch.float64)), (2396, tensor(-0.0157, dtype=torch.float64)), (976, tensor(-0.0157, dtype=torch.float64)), (1673, tensor(-0.0156, dtype=torch.float64)), (327, tensor(-0.0156, dtype=torch.float64)), (2948, tensor(-0.0156, dtype=torch.float64)), (134, tensor(-0.0156, dtype=torch.float64)), (778, tensor(-0.0156, dtype=torch.float64)), (1160, tensor(-0.0155, dtype=torch.float64)), (1341, tensor(-0.0155, dtype=torch.float64)), (1754, tensor(-0.0155, dtype=torch.float64)), (781, tensor(-0.0155, dtype=torch.float64)), (818, tensor(-0.0155, dtype=torch.float64)), (538, tensor(-0.0155, dtype=torch.float64)), (481, tensor(-0.0154, dtype=torch.float64)), (2671, tensor(-0.0154, dtype=torch.float64)), (1416, tensor(-0.0154, dtype=torch.float64)), (1911, tensor(-0.0154, dtype=torch.float64)), (2397, tensor(-0.0153, dtype=torch.float64)), (256, tensor(-0.0153, dtype=torch.float64)), (1305, tensor(-0.0153, dtype=torch.float64)), (2579, tensor(-0.0153, dtype=torch.float64)), (1166, tensor(-0.0152, dtype=torch.float64)), (193, tensor(-0.0152, dtype=torch.float64)), (740, tensor(-0.0152, dtype=torch.float64)), (1062, tensor(-0.0152, dtype=torch.float64)), (402, tensor(-0.0152, dtype=torch.float64)), (2118, tensor(-0.0151, dtype=torch.float64)), (1299, tensor(-0.0151, dtype=torch.float64)), (722, tensor(-0.0151, dtype=torch.float64)), (1603, tensor(-0.0150, dtype=torch.float64)), (559, tensor(-0.0150, dtype=torch.float64)), (1687, tensor(-0.0150, dtype=torch.float64)), (2675, tensor(-0.0150, dtype=torch.float64)), (2982, tensor(-0.0150, dtype=torch.float64)), (811, tensor(-0.0150, dtype=torch.float64)), (2487, tensor(-0.0149, dtype=torch.float64)), (1396, tensor(-0.0149, dtype=torch.float64)), (1210, tensor(-0.0149, dtype=torch.float64)), (343, tensor(-0.0149, dtype=torch.float64)), (1880, tensor(-0.0149, dtype=torch.float64)), (2237, tensor(-0.0149, dtype=torch.float64)), (1309, tensor(-0.0148, dtype=torch.float64)), (2856, tensor(-0.0147, dtype=torch.float64)), (837, tensor(-0.0147, dtype=torch.float64)), (2694, tensor(-0.0147, dtype=torch.float64)), (2750, tensor(-0.0147, dtype=torch.float64)), (393, tensor(-0.0145, dtype=torch.float64)), (1024, tensor(-0.0145, dtype=torch.float64)), (2596, tensor(-0.0145, dtype=torch.float64)), (2940, tensor(-0.0144, dtype=torch.float64)), (1955, tensor(-0.0144, dtype=torch.float64)), (2352, tensor(-0.0144, dtype=torch.float64)), (2700, tensor(-0.0144, dtype=torch.float64)), (864, tensor(-0.0144, dtype=torch.float64)), (1560, tensor(-0.0143, dtype=torch.float64)), (2247, tensor(-0.0143, dtype=torch.float64)), (1779, tensor(-0.0143, dtype=torch.float64)), (1332, tensor(-0.0142, dtype=torch.float64)), (1159, tensor(-0.0142, dtype=torch.float64)), (259, tensor(-0.0142, dtype=torch.float64)), (277, tensor(-0.0142, dtype=torch.float64)), (929, tensor(-0.0141, dtype=torch.float64)), (3037, tensor(-0.0141, dtype=torch.float64)), (496, tensor(-0.0141, dtype=torch.float64)), (42, tensor(-0.0140, dtype=torch.float64)), (381, tensor(-0.0140, dtype=torch.float64)), (2714, tensor(-0.0140, dtype=torch.float64)), (1664, tensor(-0.0139, dtype=torch.float64)), (1268, tensor(-0.0139, dtype=torch.float64)), (772, tensor(-0.0139, dtype=torch.float64)), (886, tensor(-0.0138, dtype=torch.float64)), (283, tensor(-0.0138, dtype=torch.float64)), (2472, tensor(-0.0138, dtype=torch.float64)), (1184, tensor(-0.0138, dtype=torch.float64)), (2930, tensor(-0.0137, dtype=torch.float64)), (788, tensor(-0.0137, dtype=torch.float64)), (870, tensor(-0.0136, dtype=torch.float64)), (1464, tensor(-0.0136, dtype=torch.float64)), (2142, tensor(-0.0136, dtype=torch.float64)), (482, tensor(-0.0136, dtype=torch.float64)), (2510, tensor(-0.0136, dtype=torch.float64)), (714, tensor(-0.0135, dtype=torch.float64)), (1990, tensor(-0.0135, dtype=torch.float64)), (305, tensor(-0.0135, dtype=torch.float64)), (608, tensor(-0.0135, dtype=torch.float64)), (1112, tensor(-0.0135, dtype=torch.float64)), (851, tensor(-0.0134, dtype=torch.float64)), (2236, tensor(-0.0132, dtype=torch.float64)), (1656, tensor(-0.0132, dtype=torch.float64)), (1698, tensor(-0.0132, dtype=torch.float64)), (626, tensor(-0.0132, dtype=torch.float64)), (2306, tensor(-0.0132, dtype=torch.float64)), (314, tensor(-0.0131, dtype=torch.float64)), (299, tensor(-0.0131, dtype=torch.float64)), (1323, tensor(-0.0131, dtype=torch.float64)), (2329, tensor(-0.0131, dtype=torch.float64)), (1242, tensor(-0.0131, dtype=torch.float64)), (1948, tensor(-0.0131, dtype=torch.float64)), (1961, tensor(-0.0130, dtype=torch.float64)), (1731, tensor(-0.0130, dtype=torch.float64)), (2638, tensor(-0.0129, dtype=torch.float64)), (1286, tensor(-0.0129, dtype=torch.float64)), (2842, tensor(-0.0129, dtype=torch.float64)), (2099, tensor(-0.0129, dtype=torch.float64)), (2195, tensor(-0.0128, dtype=torch.float64)), (2460, tensor(-0.0128, dtype=torch.float64)), (1995, tensor(-0.0128, dtype=torch.float64)), (3008, tensor(-0.0128, dtype=torch.float64)), (1752, tensor(-0.0127, dtype=torch.float64)), (1225, tensor(-0.0127, dtype=torch.float64)), (2309, tensor(-0.0126, dtype=torch.float64)), (2016, tensor(-0.0126, dtype=torch.float64)), (1562, tensor(-0.0125, dtype=torch.float64)), (1382, tensor(-0.0125, dtype=torch.float64)), (1110, tensor(-0.0125, dtype=torch.float64)), (1820, tensor(-0.0125, dtype=torch.float64)), (1606, tensor(-0.0124, dtype=torch.float64)), (515, tensor(-0.0124, dtype=torch.float64)), (1370, tensor(-0.0124, dtype=torch.float64)), (2307, tensor(-0.0124, dtype=torch.float64)), (1819, tensor(-0.0123, dtype=torch.float64)), (1674, tensor(-0.0123, dtype=torch.float64)), (2495, tensor(-0.0123, dtype=torch.float64)), (272, tensor(-0.0123, dtype=torch.float64)), (2551, tensor(-0.0123, dtype=torch.float64)), (2960, tensor(-0.0123, dtype=torch.float64)), (2376, tensor(-0.0122, dtype=torch.float64)), (2242, tensor(-0.0122, dtype=torch.float64)), (698, tensor(-0.0122, dtype=torch.float64)), (774, tensor(-0.0121, dtype=torch.float64)), (1265, tensor(-0.0121, dtype=torch.float64)), (400, tensor(-0.0120, dtype=torch.float64)), (179, tensor(-0.0120, dtype=torch.float64)), (1607, tensor(-0.0120, dtype=torch.float64)), (2435, tensor(-0.0120, dtype=torch.float64)), (2232, tensor(-0.0120, dtype=torch.float64)), (2202, tensor(-0.0119, dtype=torch.float64)), (1850, tensor(-0.0119, dtype=torch.float64)), (871, tensor(-0.0119, dtype=torch.float64)), (1800, tensor(-0.0119, dtype=torch.float64)), (994, tensor(-0.0119, dtype=torch.float64)), (919, tensor(-0.0119, dtype=torch.float64)), (2012, tensor(-0.0119, dtype=torch.float64)), (1600, tensor(-0.0119, dtype=torch.float64)), (2446, tensor(-0.0119, dtype=torch.float64)), (665, tensor(-0.0119, dtype=torch.float64)), (1847, tensor(-0.0119, dtype=torch.float64)), (1147, tensor(-0.0119, dtype=torch.float64)), (1892, tensor(-0.0118, dtype=torch.float64)), (849, tensor(-0.0118, dtype=torch.float64)), (1483, tensor(-0.0118, dtype=torch.float64)), (1592, tensor(-0.0117, dtype=torch.float64)), (1868, tensor(-0.0117, dtype=torch.float64)), (1295, tensor(-0.0117, dtype=torch.float64)), (1836, tensor(-0.0117, dtype=torch.float64)), (1241, tensor(-0.0117, dtype=torch.float64)), (2997, tensor(-0.0117, dtype=torch.float64)), (2139, tensor(-0.0117, dtype=torch.float64)), (664, tensor(-0.0117, dtype=torch.float64)), (70, tensor(-0.0116, dtype=torch.float64)), (2054, tensor(-0.0116, dtype=torch.float64)), (2428, tensor(-0.0116, dtype=torch.float64)), (340, tensor(-0.0116, dtype=torch.float64)), (2742, tensor(-0.0115, dtype=torch.float64)), (493, tensor(-0.0115, dtype=torch.float64)), (556, tensor(-0.0115, dtype=torch.float64)), (1306, tensor(-0.0115, dtype=torch.float64)), (2610, tensor(-0.0115, dtype=torch.float64)), (2991, tensor(-0.0115, dtype=torch.float64)), (1551, tensor(-0.0115, dtype=torch.float64)), (2824, tensor(-0.0115, dtype=torch.float64)), (2980, tensor(-0.0114, dtype=torch.float64)), (1476, tensor(-0.0114, dtype=torch.float64)), (537, tensor(-0.0114, dtype=torch.float64)), (2965, tensor(-0.0114, dtype=torch.float64)), (2758, tensor(-0.0114, dtype=torch.float64)), (1005, tensor(-0.0113, dtype=torch.float64)), (1796, tensor(-0.0113, dtype=torch.float64)), (2947, tensor(-0.0113, dtype=torch.float64)), (1224, tensor(-0.0113, dtype=torch.float64)), (310, tensor(-0.0113, dtype=torch.float64)), (2248, tensor(-0.0113, dtype=torch.float64)), (2967, tensor(-0.0113, dtype=torch.float64)), (2984, tensor(-0.0112, dtype=torch.float64)), (21, tensor(-0.0112, dtype=torch.float64)), (1732, tensor(-0.0111, dtype=torch.float64)), (1507, tensor(-0.0111, dtype=torch.float64)), (361, tensor(-0.0111, dtype=torch.float64)), (250, tensor(-0.0110, dtype=torch.float64)), (365, tensor(-0.0110, dtype=torch.float64)), (2060, tensor(-0.0110, dtype=torch.float64)), (1287, tensor(-0.0110, dtype=torch.float64)), (2745, tensor(-0.0110, dtype=torch.float64)), (187, tensor(-0.0110, dtype=torch.float64)), (1620, tensor(-0.0109, dtype=torch.float64)), (1555, tensor(-0.0109, dtype=torch.float64)), (2565, tensor(-0.0108, dtype=torch.float64)), (1950, tensor(-0.0108, dtype=torch.float64)), (380, tensor(-0.0108, dtype=torch.float64)), (1734, tensor(-0.0108, dtype=torch.float64)), (553, tensor(-0.0108, dtype=torch.float64)), (2595, tensor(-0.0108, dtype=torch.float64)), (271, tensor(-0.0108, dtype=torch.float64)), (35, tensor(-0.0108, dtype=torch.float64)), (1854, tensor(-0.0106, dtype=torch.float64)), (1474, tensor(-0.0106, dtype=torch.float64)), (955, tensor(-0.0106, dtype=torch.float64)), (378, tensor(-0.0105, dtype=torch.float64)), (52, tensor(-0.0105, dtype=torch.float64)), (541, tensor(-0.0105, dtype=torch.float64)), (192, tensor(-0.0105, dtype=torch.float64)), (176, tensor(-0.0104, dtype=torch.float64)), (978, tensor(-0.0104, dtype=torch.float64)), (1260, tensor(-0.0104, dtype=torch.float64)), (341, tensor(-0.0104, dtype=torch.float64)), (1063, tensor(-0.0104, dtype=torch.float64)), (1861, tensor(-0.0103, dtype=torch.float64)), (934, tensor(-0.0103, dtype=torch.float64)), (2957, tensor(-0.0103, dtype=torch.float64)), (1171, tensor(-0.0103, dtype=torch.float64)), (2356, tensor(-0.0103, dtype=torch.float64)), (2907, tensor(-0.0103, dtype=torch.float64)), (1804, tensor(-0.0102, dtype=torch.float64)), (2769, tensor(-0.0102, dtype=torch.float64)), (1895, tensor(-0.0102, dtype=torch.float64)), (2437, tensor(-0.0102, dtype=torch.float64)), (62, tensor(-0.0102, dtype=torch.float64)), (1966, tensor(-0.0101, dtype=torch.float64)), (7, tensor(-0.0101, dtype=torch.float64)), (1928, tensor(-0.0101, dtype=torch.float64)), (557, tensor(-0.0101, dtype=torch.float64)), (2394, tensor(-0.0101, dtype=torch.float64)), (1296, tensor(-0.0101, dtype=torch.float64)), (1803, tensor(-0.0100, dtype=torch.float64)), (2679, tensor(-0.0100, dtype=torch.float64)), (2554, tensor(-0.0100, dtype=torch.float64)), (2469, tensor(-0.0100, dtype=torch.float64)), (1358, tensor(-0.0100, dtype=torch.float64)), (1608, tensor(-0.0100, dtype=torch.float64)), (1257, tensor(-0.0100, dtype=torch.float64)), (13, tensor(-0.0100, dtype=torch.float64)), (1493, tensor(-0.0099, dtype=torch.float64)), (439, tensor(-0.0099, dtype=torch.float64)), (360, tensor(-0.0099, dtype=torch.float64)), (2035, tensor(-0.0099, dtype=torch.float64)), (1434, tensor(-0.0098, dtype=torch.float64)), (1586, tensor(-0.0098, dtype=torch.float64)), (531, tensor(-0.0098, dtype=torch.float64)), (64, tensor(-0.0097, dtype=torch.float64)), (519, tensor(-0.0097, dtype=torch.float64)), (855, tensor(-0.0097, dtype=torch.float64)), (512, tensor(-0.0096, dtype=torch.float64)), (2621, tensor(-0.0096, dtype=torch.float64)), (2963, tensor(-0.0095, dtype=torch.float64)), (2072, tensor(-0.0095, dtype=torch.float64)), (3, tensor(-0.0095, dtype=torch.float64)), (286, tensor(-0.0095, dtype=torch.float64)), (186, tensor(-0.0095, dtype=torch.float64)), (298, tensor(-0.0095, dtype=torch.float64)), (280, tensor(-0.0094, dtype=torch.float64)), (1348, tensor(-0.0094, dtype=torch.float64)), (1115, tensor(-0.0094, dtype=torch.float64)), (2949, tensor(-0.0094, dtype=torch.float64)), (1128, tensor(-0.0094, dtype=torch.float64)), (2533, tensor(-0.0094, dtype=torch.float64)), (843, tensor(-0.0094, dtype=torch.float64)), (2838, tensor(-0.0094, dtype=torch.float64)), (2531, tensor(-0.0094, dtype=torch.float64)), (1926, tensor(-0.0094, dtype=torch.float64)), (53, tensor(-0.0093, dtype=torch.float64)), (2616, tensor(-0.0093, dtype=torch.float64)), (1427, tensor(-0.0093, dtype=torch.float64)), (2835, tensor(-0.0092, dtype=torch.float64)), (882, tensor(-0.0092, dtype=torch.float64)), (1501, tensor(-0.0092, dtype=torch.float64)), (2083, tensor(-0.0092, dtype=torch.float64)), (746, tensor(-0.0092, dtype=torch.float64)), (420, tensor(-0.0092, dtype=torch.float64)), (2520, tensor(-0.0091, dtype=torch.float64)), (2799, tensor(-0.0091, dtype=torch.float64)), (2458, tensor(-0.0091, dtype=torch.float64)), (685, tensor(-0.0091, dtype=torch.float64)), (483, tensor(-0.0091, dtype=torch.float64)), (2629, tensor(-0.0091, dtype=torch.float64)), (1322, tensor(-0.0091, dtype=torch.float64)), (330, tensor(-0.0090, dtype=torch.float64)), (2521, tensor(-0.0090, dtype=torch.float64)), (2504, tensor(-0.0089, dtype=torch.float64)), (2191, tensor(-0.0089, dtype=torch.float64)), (1042, tensor(-0.0089, dtype=torch.float64)), (2087, tensor(-0.0089, dtype=torch.float64)), (2117, tensor(-0.0089, dtype=torch.float64)), (2857, tensor(-0.0089, dtype=torch.float64)), (432, tensor(-0.0088, dtype=torch.float64)), (40, tensor(-0.0088, dtype=torch.float64)), (2040, tensor(-0.0088, dtype=torch.float64)), (2697, tensor(-0.0088, dtype=torch.float64)), (1882, tensor(-0.0087, dtype=torch.float64)), (2778, tensor(-0.0087, dtype=torch.float64)), (1644, tensor(-0.0087, dtype=torch.float64)), (2086, tensor(-0.0087, dtype=torch.float64)), (2155, tensor(-0.0087, dtype=torch.float64)), (693, tensor(-0.0087, dtype=torch.float64)), (731, tensor(-0.0086, dtype=torch.float64)), (2862, tensor(-0.0086, dtype=torch.float64)), (609, tensor(-0.0086, dtype=torch.float64)), (1277, tensor(-0.0086, dtype=torch.float64)), (2507, tensor(-0.0085, dtype=torch.float64)), (2620, tensor(-0.0085, dtype=torch.float64)), (807, tensor(-0.0085, dtype=torch.float64)), (1852, tensor(-0.0085, dtype=torch.float64)), (703, tensor(-0.0085, dtype=torch.float64)), (2364, tensor(-0.0085, dtype=torch.float64)), (450, tensor(-0.0085, dtype=torch.float64)), (84, tensor(-0.0085, dtype=torch.float64)), (362, tensor(-0.0084, dtype=torch.float64)), (1797, tensor(-0.0084, dtype=torch.float64)), (325, tensor(-0.0084, dtype=torch.float64)), (1451, tensor(-0.0084, dtype=torch.float64)), (276, tensor(-0.0084, dtype=torch.float64)), (1374, tensor(-0.0084, dtype=torch.float64)), (2365, tensor(-0.0084, dtype=torch.float64)), (2630, tensor(-0.0083, dtype=torch.float64)), (2442, tensor(-0.0083, dtype=torch.float64)), (2981, tensor(-0.0083, dtype=torch.float64)), (1373, tensor(-0.0083, dtype=torch.float64)), (431, tensor(-0.0083, dtype=torch.float64)), (695, tensor(-0.0082, dtype=torch.float64)), (1759, tensor(-0.0082, dtype=torch.float64)), (2915, tensor(-0.0082, dtype=torch.float64)), (465, tensor(-0.0082, dtype=torch.float64)), (320, tensor(-0.0082, dtype=torch.float64)), (1002, tensor(-0.0082, dtype=torch.float64)), (74, tensor(-0.0082, dtype=torch.float64)), (1903, tensor(-0.0082, dtype=torch.float64)), (961, tensor(-0.0082, dtype=torch.float64)), (2789, tensor(-0.0082, dtype=torch.float64)), (410, tensor(-0.0081, dtype=torch.float64)), (2282, tensor(-0.0081, dtype=torch.float64)), (1650, tensor(-0.0081, dtype=torch.float64)), (1020, tensor(-0.0081, dtype=torch.float64)), (3034, tensor(-0.0080, dtype=torch.float64)), (799, tensor(-0.0080, dtype=torch.float64)), (1006, tensor(-0.0080, dtype=torch.float64)), (1661, tensor(-0.0080, dtype=torch.float64)), (1091, tensor(-0.0079, dtype=torch.float64)), (1958, tensor(-0.0079, dtype=torch.float64)), (6, tensor(-0.0079, dtype=torch.float64)), (448, tensor(-0.0079, dtype=torch.float64)), (2496, tensor(-0.0079, dtype=torch.float64)), (3017, tensor(-0.0078, dtype=torch.float64)), (72, tensor(-0.0078, dtype=torch.float64)), (1645, tensor(-0.0076, dtype=torch.float64)), (2021, tensor(-0.0076, dtype=torch.float64)), (263, tensor(-0.0075, dtype=torch.float64)), (353, tensor(-0.0075, dtype=torch.float64)), (2047, tensor(-0.0075, dtype=torch.float64)), (921, tensor(-0.0075, dtype=torch.float64)), (2731, tensor(-0.0074, dtype=torch.float64)), (1140, tensor(-0.0074, dtype=torch.float64)), (791, tensor(-0.0073, dtype=torch.float64)), (2841, tensor(-0.0073, dtype=torch.float64)), (2130, tensor(-0.0072, dtype=torch.float64)), (704, tensor(-0.0072, dtype=torch.float64)), (2825, tensor(-0.0072, dtype=torch.float64)), (1420, tensor(-0.0072, dtype=torch.float64)), (1338, tensor(-0.0072, dtype=torch.float64)), (2748, tensor(-0.0072, dtype=torch.float64)), (1238, tensor(-0.0072, dtype=torch.float64)), (2849, tensor(-0.0071, dtype=torch.float64)), (2606, tensor(-0.0071, dtype=torch.float64)), (227, tensor(-0.0071, dtype=torch.float64)), (2441, tensor(-0.0071, dtype=torch.float64)), (1380, tensor(-0.0071, dtype=torch.float64)), (1462, tensor(-0.0071, dtype=torch.float64)), (358, tensor(-0.0070, dtype=torch.float64)), (2544, tensor(-0.0070, dtype=torch.float64)), (168, tensor(-0.0070, dtype=torch.float64)), (404, tensor(-0.0070, dtype=torch.float64)), (2665, tensor(-0.0069, dtype=torch.float64)), (1848, tensor(-0.0069, dtype=torch.float64)), (2767, tensor(-0.0069, dtype=torch.float64)), (1018, tensor(-0.0069, dtype=torch.float64)), (2883, tensor(-0.0069, dtype=torch.float64)), (2816, tensor(-0.0068, dtype=torch.float64)), (979, tensor(-0.0068, dtype=torch.float64)), (995, tensor(-0.0068, dtype=torch.float64)), (2831, tensor(-0.0068, dtype=torch.float64)), (1367, tensor(-0.0067, dtype=torch.float64)), (580, tensor(-0.0067, dtype=torch.float64)), (1591, tensor(-0.0067, dtype=torch.float64)), (1700, tensor(-0.0067, dtype=torch.float64)), (560, tensor(-0.0067, dtype=torch.float64)), (2031, tensor(-0.0066, dtype=torch.float64)), (594, tensor(-0.0066, dtype=torch.float64)), (2680, tensor(-0.0066, dtype=torch.float64)), (3032, tensor(-0.0066, dtype=torch.float64)), (1101, tensor(-0.0066, dtype=torch.float64)), (287, tensor(-0.0066, dtype=torch.float64)), (383, tensor(-0.0066, dtype=torch.float64)), (917, tensor(-0.0065, dtype=torch.float64)), (339, tensor(-0.0065, dtype=torch.float64)), (2928, tensor(-0.0065, dtype=torch.float64)), (2275, tensor(-0.0064, dtype=torch.float64)), (2459, tensor(-0.0064, dtype=torch.float64)), (1236, tensor(-0.0063, dtype=torch.float64)), (758, tensor(-0.0063, dtype=torch.float64)), (1726, tensor(-0.0063, dtype=torch.float64)), (2497, tensor(-0.0062, dtype=torch.float64)), (202, tensor(-0.0062, dtype=torch.float64)), (1461, tensor(-0.0062, dtype=torch.float64)), (63, tensor(-0.0062, dtype=torch.float64)), (2222, tensor(-0.0062, dtype=torch.float64)), (2432, tensor(-0.0062, dtype=torch.float64)), (1786, tensor(-0.0061, dtype=torch.float64)), (56, tensor(-0.0061, dtype=torch.float64)), (2725, tensor(-0.0061, dtype=torch.float64)), (2959, tensor(-0.0061, dtype=torch.float64)), (2110, tensor(-0.0061, dtype=torch.float64)), (2211, tensor(-0.0061, dtype=torch.float64)), (568, tensor(-0.0061, dtype=torch.float64)), (523, tensor(-0.0060, dtype=torch.float64)), (1435, tensor(-0.0060, dtype=torch.float64)), (2735, tensor(-0.0060, dtype=torch.float64)), (2204, tensor(-0.0060, dtype=torch.float64)), (1613, tensor(-0.0060, dtype=torch.float64)), (2175, tensor(-0.0060, dtype=torch.float64)), (77, tensor(-0.0059, dtype=torch.float64)), (3005, tensor(-0.0058, dtype=torch.float64)), (2146, tensor(-0.0058, dtype=torch.float64)), (1782, tensor(-0.0057, dtype=torch.float64)), (836, tensor(-0.0057, dtype=torch.float64)), (2141, tensor(-0.0057, dtype=torch.float64)), (1447, tensor(-0.0057, dtype=torch.float64)), (342, tensor(-0.0057, dtype=torch.float64)), (1691, tensor(-0.0057, dtype=torch.float64)), (48, tensor(-0.0057, dtype=torch.float64)), (1383, tensor(-0.0057, dtype=torch.float64)), (1269, tensor(-0.0057, dtype=torch.float64)), (2988, tensor(-0.0056, dtype=torch.float64)), (2116, tensor(-0.0056, dtype=torch.float64)), (854, tensor(-0.0056, dtype=torch.float64)), (645, tensor(-0.0056, dtype=torch.float64)), (1072, tensor(-0.0055, dtype=torch.float64)), (1401, tensor(-0.0055, dtype=torch.float64)), (2143, tensor(-0.0055, dtype=torch.float64)), (1567, tensor(-0.0055, dtype=torch.float64)), (101, tensor(-0.0055, dtype=torch.float64)), (2234, tensor(-0.0055, dtype=torch.float64)), (2292, tensor(-0.0055, dtype=torch.float64)), (1202, tensor(-0.0055, dtype=torch.float64)), (2839, tensor(-0.0054, dtype=torch.float64)), (2302, tensor(-0.0054, dtype=torch.float64)), (2421, tensor(-0.0054, dtype=torch.float64)), (1173, tensor(-0.0054, dtype=torch.float64)), (2738, tensor(-0.0054, dtype=torch.float64)), (258, tensor(-0.0054, dtype=torch.float64)), (2278, tensor(-0.0054, dtype=torch.float64)), (505, tensor(-0.0054, dtype=torch.float64)), (1194, tensor(-0.0053, dtype=torch.float64)), (888, tensor(-0.0053, dtype=torch.float64)), (2545, tensor(-0.0053, dtype=torch.float64)), (1625, tensor(-0.0052, dtype=torch.float64)), (1301, tensor(-0.0052, dtype=torch.float64)), (2706, tensor(-0.0052, dtype=torch.float64)), (1798, tensor(-0.0052, dtype=torch.float64)), (1431, tensor(-0.0051, dtype=torch.float64)), (180, tensor(-0.0051, dtype=torch.float64)), (333, tensor(-0.0051, dtype=torch.float64)), (1559, tensor(-0.0051, dtype=torch.float64)), (1175, tensor(-0.0050, dtype=torch.float64)), (2999, tensor(-0.0050, dtype=torch.float64)), (1203, tensor(-0.0050, dtype=torch.float64)), (1388, tensor(-0.0050, dtype=torch.float64)), (2802, tensor(-0.0049, dtype=torch.float64)), (1668, tensor(-0.0049, dtype=torch.float64)), (1412, tensor(-0.0049, dtype=torch.float64)), (710, tensor(-0.0049, dtype=torch.float64)), (795, tensor(-0.0048, dtype=torch.float64)), (1834, tensor(-0.0048, dtype=torch.float64)), (1575, tensor(-0.0047, dtype=torch.float64)), (1902, tensor(-0.0047, dtype=torch.float64)), (2413, tensor(-0.0047, dtype=torch.float64)), (3030, tensor(-0.0047, dtype=torch.float64)), (2794, tensor(-0.0046, dtype=torch.float64)), (2996, tensor(-0.0045, dtype=torch.float64)), (2664, tensor(-0.0045, dtype=torch.float64)), (1823, tensor(-0.0045, dtype=torch.float64)), (1824, tensor(-0.0045, dtype=torch.float64)), (885, tensor(-0.0045, dtype=torch.float64)), (2240, tensor(-0.0045, dtype=torch.float64)), (1132, tensor(-0.0044, dtype=torch.float64)), (862, tensor(-0.0044, dtype=torch.float64)), (1842, tensor(-0.0044, dtype=torch.float64)), (1270, tensor(-0.0044, dtype=torch.float64)), (1807, tensor(-0.0044, dtype=torch.float64)), (1209, tensor(-0.0044, dtype=torch.float64)), (952, tensor(-0.0043, dtype=torch.float64)), (422, tensor(-0.0042, dtype=torch.float64)), (438, tensor(-0.0042, dtype=torch.float64)), (2732, tensor(-0.0042, dtype=torch.float64)), (762, tensor(-0.0042, dtype=torch.float64)), (1249, tensor(-0.0041, dtype=torch.float64)), (968, tensor(-0.0041, dtype=torch.float64)), (614, tensor(-0.0040, dtype=torch.float64)), (2978, tensor(-0.0040, dtype=torch.float64)), (990, tensor(-0.0040, dtype=torch.float64)), (302, tensor(-0.0040, dtype=torch.float64)), (2344, tensor(-0.0040, dtype=torch.float64)), (2259, tensor(-0.0040, dtype=torch.float64)), (1511, tensor(-0.0039, dtype=torch.float64)), (27, tensor(-0.0039, dtype=torch.float64)), (672, tensor(-0.0039, dtype=torch.float64)), (329, tensor(-0.0039, dtype=torch.float64)), (198, tensor(-0.0039, dtype=torch.float64)), (2160, tensor(-0.0039, dtype=torch.float64)), (34, tensor(-0.0039, dtype=torch.float64)), (2567, tensor(-0.0038, dtype=torch.float64)), (161, tensor(-0.0038, dtype=torch.float64)), (1996, tensor(-0.0038, dtype=torch.float64)), (1023, tensor(-0.0038, dtype=torch.float64)), (2041, tensor(-0.0038, dtype=torch.float64)), (876, tensor(-0.0038, dtype=torch.float64)), (1699, tensor(-0.0038, dtype=torch.float64)), (2127, tensor(-0.0037, dtype=torch.float64)), (948, tensor(-0.0037, dtype=torch.float64)), (2132, tensor(-0.0037, dtype=torch.float64)), (1079, tensor(-0.0037, dtype=torch.float64)), (2491, tensor(-0.0037, dtype=torch.float64)), (859, tensor(-0.0037, dtype=torch.float64)), (2922, tensor(-0.0037, dtype=torch.float64)), (1186, tensor(-0.0036, dtype=torch.float64)), (1183, tensor(-0.0036, dtype=torch.float64)), (1421, tensor(-0.0036, dtype=torch.float64)), (1361, tensor(-0.0035, dtype=torch.float64)), (354, tensor(-0.0035, dtype=torch.float64)), (2215, tensor(-0.0035, dtype=torch.float64)), (2280, tensor(-0.0035, dtype=torch.float64)), (86, tensor(-0.0035, dtype=torch.float64)), (387, tensor(-0.0035, dtype=torch.float64)), (945, tensor(-0.0034, dtype=torch.float64)), (1831, tensor(-0.0034, dtype=torch.float64)), (200, tensor(-0.0034, dtype=torch.float64)), (1403, tensor(-0.0034, dtype=torch.float64)), (47, tensor(-0.0034, dtype=torch.float64)), (1756, tensor(-0.0034, dtype=torch.float64)), (1558, tensor(-0.0033, dtype=torch.float64)), (2971, tensor(-0.0033, dtype=torch.float64)), (2327, tensor(-0.0033, dtype=torch.float64)), (2077, tensor(-0.0032, dtype=torch.float64)), (1871, tensor(-0.0032, dtype=torch.float64)), (2951, tensor(-0.0032, dtype=torch.float64)), (1716, tensor(-0.0031, dtype=torch.float64)), (946, tensor(-0.0031, dtype=torch.float64)), (1151, tensor(-0.0031, dtype=torch.float64)), (1704, tensor(-0.0031, dtype=torch.float64)), (2993, tensor(-0.0031, dtype=torch.float64)), (1715, tensor(-0.0031, dtype=torch.float64)), (2712, tensor(-0.0030, dtype=torch.float64)), (1104, tensor(-0.0030, dtype=torch.float64)), (852, tensor(-0.0030, dtype=torch.float64)), (2953, tensor(-0.0030, dtype=torch.float64)), (516, tensor(-0.0030, dtype=torch.float64)), (396, tensor(-0.0030, dtype=torch.float64)), (408, tensor(-0.0029, dtype=torch.float64)), (1154, tensor(-0.0029, dtype=torch.float64)), (1812, tensor(-0.0029, dtype=torch.float64)), (514, tensor(-0.0029, dtype=torch.float64)), (914, tensor(-0.0029, dtype=torch.float64)), (1134, tensor(-0.0029, dtype=torch.float64)), (1146, tensor(-0.0029, dtype=torch.float64)), (33, tensor(-0.0028, dtype=torch.float64)), (574, tensor(-0.0028, dtype=torch.float64)), (2840, tensor(-0.0028, dtype=torch.float64)), (120, tensor(-0.0028, dtype=torch.float64)), (1012, tensor(-0.0028, dtype=torch.float64)), (2058, tensor(-0.0028, dtype=torch.float64)), (1469, tensor(-0.0027, dtype=torch.float64)), (507, tensor(-0.0027, dtype=torch.float64)), (617, tensor(-0.0027, dtype=torch.float64)), (1680, tensor(-0.0027, dtype=torch.float64)), (248, tensor(-0.0027, dtype=torch.float64)), (2652, tensor(-0.0027, dtype=torch.float64)), (2569, tensor(-0.0026, dtype=torch.float64)), (2197, tensor(-0.0026, dtype=torch.float64)), (1156, tensor(-0.0026, dtype=torch.float64)), (1907, tensor(-0.0026, dtype=torch.float64)), (2445, tensor(-0.0025, dtype=torch.float64)), (2768, tensor(-0.0025, dtype=torch.float64)), (2378, tensor(-0.0025, dtype=torch.float64)), (148, tensor(-0.0025, dtype=torch.float64)), (1540, tensor(-0.0025, dtype=torch.float64)), (1964, tensor(-0.0025, dtype=torch.float64)), (1237, tensor(-0.0024, dtype=torch.float64)), (724, tensor(-0.0024, dtype=torch.float64)), (1959, tensor(-0.0024, dtype=torch.float64)), (282, tensor(-0.0024, dtype=torch.float64)), (2227, tensor(-0.0024, dtype=torch.float64)), (2646, tensor(-0.0023, dtype=torch.float64)), (2283, tensor(-0.0023, dtype=torch.float64)), (2917, tensor(-0.0022, dtype=torch.float64)), (266, tensor(-0.0022, dtype=torch.float64)), (1148, tensor(-0.0022, dtype=torch.float64)), (1129, tensor(-0.0022, dtype=torch.float64)), (690, tensor(-0.0022, dtype=torch.float64)), (2624, tensor(-0.0021, dtype=torch.float64)), (691, tensor(-0.0021, dtype=torch.float64)), (1512, tensor(-0.0021, dtype=torch.float64)), (2249, tensor(-0.0021, dtype=torch.float64)), (403, tensor(-0.0021, dtype=torch.float64)), (824, tensor(-0.0021, dtype=torch.float64)), (1471, tensor(-0.0020, dtype=torch.float64)), (2262, tensor(-0.0020, dtype=torch.float64)), (2324, tensor(-0.0020, dtype=torch.float64)), (1774, tensor(-0.0020, dtype=torch.float64)), (1663, tensor(-0.0019, dtype=torch.float64)), (777, tensor(-0.0019, dtype=torch.float64)), (1520, tensor(-0.0019, dtype=torch.float64)), (2025, tensor(-0.0018, dtype=torch.float64)), (2315, tensor(-0.0018, dtype=torch.float64)), (2395, tensor(-0.0018, dtype=torch.float64)), (2233, tensor(-0.0018, dtype=torch.float64)), (2071, tensor(-0.0018, dtype=torch.float64)), (1744, tensor(-0.0018, dtype=torch.float64)), (1460, tensor(-0.0017, dtype=torch.float64)), (2950, tensor(-0.0017, dtype=torch.float64)), (977, tensor(-0.0017, dtype=torch.float64)), (1675, tensor(-0.0017, dtype=torch.float64)), (1660, tensor(-0.0016, dtype=torch.float64)), (2655, tensor(-0.0016, dtype=torch.float64)), (3020, tensor(-0.0016, dtype=torch.float64)), (1686, tensor(-0.0016, dtype=torch.float64)), (1445, tensor(-0.0016, dtype=torch.float64)), (2829, tensor(-0.0015, dtype=torch.float64)), (912, tensor(-0.0015, dtype=torch.float64)), (2301, tensor(-0.0015, dtype=torch.float64)), (2065, tensor(-0.0014, dtype=torch.float64)), (2919, tensor(-0.0014, dtype=torch.float64)), (2034, tensor(-0.0014, dtype=torch.float64)), (2640, tensor(-0.0014, dtype=torch.float64)), (527, tensor(-0.0014, dtype=torch.float64)), (2979, tensor(-0.0014, dtype=torch.float64)), (905, tensor(-0.0014, dtype=torch.float64)), (902, tensor(-0.0013, dtype=torch.float64)), (2213, tensor(-0.0013, dtype=torch.float64)), (241, tensor(-0.0013, dtype=torch.float64)), (1997, tensor(-0.0013, dtype=torch.float64)), (167, tensor(-0.0012, dtype=torch.float64)), (1970, tensor(-0.0012, dtype=torch.float64)), (384, tensor(-0.0012, dtype=torch.float64)), (903, tensor(-0.0012, dtype=torch.float64)), (2274, tensor(-0.0011, dtype=torch.float64)), (1817, tensor(-0.0011, dtype=torch.float64)), (992, tensor(-0.0011, dtype=torch.float64)), (678, tensor(-0.0011, dtype=torch.float64)), (3015, tensor(-0.0010, dtype=torch.float64)), (1720, tensor(-0.0010, dtype=torch.float64)), (1669, tensor(-0.0010, dtype=torch.float64)), (307, tensor(-0.0010, dtype=torch.float64)), (203, tensor(-0.0010, dtype=torch.float64)), (881, tensor(-0.0009, dtype=torch.float64)), (1021, tensor(-0.0009, dtype=torch.float64)), (2399, tensor(-0.0009, dtype=torch.float64)), (2765, tensor(-0.0009, dtype=torch.float64)), (891, tensor(-0.0008, dtype=torch.float64)), (2332, tensor(-0.0008, dtype=torch.float64)), (18, tensor(-0.0007, dtype=torch.float64)), (382, tensor(-0.0007, dtype=torch.float64)), (273, tensor(-0.0007, dtype=torch.float64)), (1227, tensor(-0.0006, dtype=torch.float64)), (2433, tensor(-0.0004, dtype=torch.float64)), (2374, tensor(-0.0003, dtype=torch.float64)), (1810, tensor(-0.0003, dtype=torch.float64)), (1327, tensor(-0.0003, dtype=torch.float64))]
annotated_samples_num: 656
unannotated_samples_num: 2888
update datapool!
annotated_samples_num: 656
unannotated_samples_num: 2888
iter: 3
annotated_samples_num: 656
unannotated_samples_num: 2888
Epoch [1/10], Batch [1/82], Loss: 4.6131
Epoch [1/10], Batch [2/82], Loss: 3.4805
Epoch [1/10], Batch [3/82], Loss: 2.2507
Epoch [1/10], Batch [4/82], Loss: 2.3933
Epoch [1/10], Batch [5/82], Loss: 1.6746
Epoch [1/10], Batch [6/82], Loss: 1.6324
Epoch [1/10], Batch [7/82], Loss: 1.1988
Epoch [1/10], Batch [8/82], Loss: 1.1540
Epoch [1/10], Batch [9/82], Loss: 1.7343
Epoch [1/10], Batch [10/82], Loss: 0.4717
Epoch [1/10], Batch [11/82], Loss: 0.8415
Epoch [1/10], Batch [12/82], Loss: 0.6587
Epoch [1/10], Batch [13/82], Loss: 0.5226
Epoch [1/10], Batch [14/82], Loss: 0.6202
Epoch [1/10], Batch [15/82], Loss: 1.0370
Epoch [1/10], Batch [16/82], Loss: 0.6783
Epoch [1/10], Batch [17/82], Loss: 0.3860
Epoch [1/10], Batch [18/82], Loss: 0.6726
Epoch [1/10], Batch [19/82], Loss: 0.6852
Epoch [1/10], Batch [20/82], Loss: 0.8907
Epoch [1/10], Batch [21/82], Loss: 0.3625
Epoch [1/10], Batch [22/82], Loss: 0.5322
Epoch [1/10], Batch [23/82], Loss: 0.4380
Epoch [1/10], Batch [24/82], Loss: 0.4808
Epoch [1/10], Batch [25/82], Loss: 0.3600
Epoch [1/10], Batch [26/82], Loss: 0.4926
Epoch [1/10], Batch [27/82], Loss: 0.3468
Epoch [1/10], Batch [28/82], Loss: 0.6680
Epoch [1/10], Batch [29/82], Loss: 0.7092
Epoch [1/10], Batch [30/82], Loss: 0.6054
Epoch [1/10], Batch [31/82], Loss: 0.4289
Epoch [1/10], Batch [32/82], Loss: 0.4196
Epoch [1/10], Batch [33/82], Loss: 0.6207
Epoch [1/10], Batch [34/82], Loss: 0.5197
Epoch [1/10], Batch [35/82], Loss: 0.4984
Epoch [1/10], Batch [36/82], Loss: 0.3860
Epoch [1/10], Batch [37/82], Loss: 0.4749
Epoch [1/10], Batch [38/82], Loss: 0.7438
Epoch [1/10], Batch [39/82], Loss: 0.5047
Epoch [1/10], Batch [40/82], Loss: 0.4227
Epoch [1/10], Batch [41/82], Loss: 0.5637
Epoch [1/10], Batch [42/82], Loss: 0.3298
Epoch [1/10], Batch [43/82], Loss: 0.3141
Epoch [1/10], Batch [44/82], Loss: 0.2454
Epoch [1/10], Batch [45/82], Loss: 0.4937
Epoch [1/10], Batch [46/82], Loss: 0.5146
Epoch [1/10], Batch [47/82], Loss: 0.4455
Epoch [1/10], Batch [48/82], Loss: 0.5710
Epoch [1/10], Batch [49/82], Loss: 0.4151
Epoch [1/10], Batch [50/82], Loss: 0.3556
Epoch [1/10], Batch [51/82], Loss: 0.4114
Epoch [1/10], Batch [52/82], Loss: 0.2423
Epoch [1/10], Batch [53/82], Loss: 0.4577
Epoch [1/10], Batch [54/82], Loss: 0.4300
Epoch [1/10], Batch [55/82], Loss: 0.4140
Epoch [1/10], Batch [56/82], Loss: 0.4036
Epoch [1/10], Batch [57/82], Loss: 0.5684
Epoch [1/10], Batch [58/82], Loss: 0.2767
Epoch [1/10], Batch [59/82], Loss: 0.3274
Epoch [1/10], Batch [60/82], Loss: 0.5964
Epoch [1/10], Batch [61/82], Loss: 0.4594
Epoch [1/10], Batch [62/82], Loss: 0.3359
Epoch [1/10], Batch [63/82], Loss: 0.2277
Epoch [1/10], Batch [64/82], Loss: 0.6549
Epoch [1/10], Batch [65/82], Loss: 0.2180
Epoch [1/10], Batch [66/82], Loss: 0.7231
Epoch [1/10], Batch [67/82], Loss: 0.2860
Epoch [1/10], Batch [68/82], Loss: 0.4882
Epoch [1/10], Batch [69/82], Loss: 0.3615
Epoch [1/10], Batch [70/82], Loss: 0.6411
Epoch [1/10], Batch [71/82], Loss: 0.3194
Epoch [1/10], Batch [72/82], Loss: 0.4449
Epoch [1/10], Batch [73/82], Loss: 0.3025
Epoch [1/10], Batch [74/82], Loss: 0.2808
Epoch [1/10], Batch [75/82], Loss: 0.3404
Epoch [1/10], Batch [76/82], Loss: 0.2955
Epoch [1/10], Batch [77/82], Loss: 0.2537
Epoch [1/10], Batch [78/82], Loss: 0.3481
Epoch [1/10], Batch [79/82], Loss: 0.2582
Epoch [1/10], Batch [80/82], Loss: 0.3355
Epoch [1/10], Batch [81/82], Loss: 0.4893
Epoch [1/10], Batch [82/82], Loss: 0.3747
Epoch [1/10], Average Loss: 0.6637
-----------------------------------------------------------
strategy: BEAM
iter: 3
epoch: 0
Test Loss: 0.3024
F1_overall: 0.4846
F1_AGENT: 0.6600
F1_TARGET: 0.2375
-----------------------------------------------------------
Epoch [2/10], Batch [1/82], Loss: 0.2920
Epoch [2/10], Batch [2/82], Loss: 0.2288
Epoch [2/10], Batch [3/82], Loss: 0.2882
Epoch [2/10], Batch [4/82], Loss: 0.2137
Epoch [2/10], Batch [5/82], Loss: 0.2515
Epoch [2/10], Batch [6/82], Loss: 0.3402
Epoch [2/10], Batch [7/82], Loss: 0.1992
Epoch [2/10], Batch [8/82], Loss: 0.2348
Epoch [2/10], Batch [9/82], Loss: 0.2306
Epoch [2/10], Batch [10/82], Loss: 0.2922
Epoch [2/10], Batch [11/82], Loss: 0.2497
Epoch [2/10], Batch [12/82], Loss: 0.3650
Epoch [2/10], Batch [13/82], Loss: 0.2436
Epoch [2/10], Batch [14/82], Loss: 0.2985
Epoch [2/10], Batch [15/82], Loss: 0.3051
Epoch [2/10], Batch [16/82], Loss: 0.2353
Epoch [2/10], Batch [17/82], Loss: 0.2855
Epoch [2/10], Batch [18/82], Loss: 0.4761
Epoch [2/10], Batch [19/82], Loss: 0.2364
Epoch [2/10], Batch [20/82], Loss: 0.2274
Epoch [2/10], Batch [21/82], Loss: 0.2785
Epoch [2/10], Batch [22/82], Loss: 0.3843
Epoch [2/10], Batch [23/82], Loss: 0.1517
Epoch [2/10], Batch [24/82], Loss: 0.6149
Epoch [2/10], Batch [25/82], Loss: 0.1139
Epoch [2/10], Batch [26/82], Loss: 0.4344
Epoch [2/10], Batch [27/82], Loss: 0.3769
Epoch [2/10], Batch [28/82], Loss: 0.1495
Epoch [2/10], Batch [29/82], Loss: 0.3692
Epoch [2/10], Batch [30/82], Loss: 0.2802
Epoch [2/10], Batch [31/82], Loss: 0.2280
Epoch [2/10], Batch [32/82], Loss: 0.2337
Epoch [2/10], Batch [33/82], Loss: 0.2856
Epoch [2/10], Batch [34/82], Loss: 0.3085
Epoch [2/10], Batch [35/82], Loss: 0.1844
Epoch [2/10], Batch [36/82], Loss: 0.1243
Epoch [2/10], Batch [37/82], Loss: 0.2193
Epoch [2/10], Batch [38/82], Loss: 0.2639
Epoch [2/10], Batch [39/82], Loss: 0.3934
Epoch [2/10], Batch [40/82], Loss: 0.3328
Epoch [2/10], Batch [41/82], Loss: 0.3362
Epoch [2/10], Batch [42/82], Loss: 0.1521
Epoch [2/10], Batch [43/82], Loss: 0.2408
Epoch [2/10], Batch [44/82], Loss: 0.1770
Epoch [2/10], Batch [45/82], Loss: 0.2487
Epoch [2/10], Batch [46/82], Loss: 0.2256
Epoch [2/10], Batch [47/82], Loss: 0.2357
Epoch [2/10], Batch [48/82], Loss: 0.3218
Epoch [2/10], Batch [49/82], Loss: 0.2148
Epoch [2/10], Batch [50/82], Loss: 0.3117
Epoch [2/10], Batch [51/82], Loss: 0.3741
Epoch [2/10], Batch [52/82], Loss: 0.2918
Epoch [2/10], Batch [53/82], Loss: 0.2999
Epoch [2/10], Batch [54/82], Loss: 0.2056
Epoch [2/10], Batch [55/82], Loss: 0.2168
Epoch [2/10], Batch [56/82], Loss: 0.2217
Epoch [2/10], Batch [57/82], Loss: 0.4367
Epoch [2/10], Batch [58/82], Loss: 0.4059
Epoch [2/10], Batch [59/82], Loss: 0.4124
Epoch [2/10], Batch [60/82], Loss: 0.2363
Epoch [2/10], Batch [61/82], Loss: 0.2288
Epoch [2/10], Batch [62/82], Loss: 0.4224
Epoch [2/10], Batch [63/82], Loss: 0.2297
Epoch [2/10], Batch [64/82], Loss: 0.2560
Epoch [2/10], Batch [65/82], Loss: 0.5253
Epoch [2/10], Batch [66/82], Loss: 0.1878
Epoch [2/10], Batch [67/82], Loss: 0.4574
Epoch [2/10], Batch [68/82], Loss: 0.1735
Epoch [2/10], Batch [69/82], Loss: 0.2764
Epoch [2/10], Batch [70/82], Loss: 0.1813
Epoch [2/10], Batch [71/82], Loss: 0.2018
Epoch [2/10], Batch [72/82], Loss: 0.2050
Epoch [2/10], Batch [73/82], Loss: 0.3691
Epoch [2/10], Batch [74/82], Loss: 0.1839
Epoch [2/10], Batch [75/82], Loss: 0.2207
Epoch [2/10], Batch [76/82], Loss: 0.3050
Epoch [2/10], Batch [77/82], Loss: 0.1283
Epoch [2/10], Batch [78/82], Loss: 0.2156
Epoch [2/10], Batch [79/82], Loss: 0.3222
Epoch [2/10], Batch [80/82], Loss: 0.1656
Epoch [2/10], Batch [81/82], Loss: 0.3687
Epoch [2/10], Batch [82/82], Loss: 0.0973
Epoch [2/10], Average Loss: 0.2745
-----------------------------------------------------------
strategy: BEAM
iter: 3
epoch: 1
Test Loss: 0.3035
F1_overall: 0.5320
F1_AGENT: 0.6859
F1_TARGET: 0.3624
-----------------------------------------------------------
Epoch [3/10], Batch [1/82], Loss: 0.1213
Epoch [3/10], Batch [2/82], Loss: 0.2608
Epoch [3/10], Batch [3/82], Loss: 0.1560
Epoch [3/10], Batch [4/82], Loss: 0.1891
Epoch [3/10], Batch [5/82], Loss: 0.1796
Epoch [3/10], Batch [6/82], Loss: 0.3787
Epoch [3/10], Batch [7/82], Loss: 0.1765
Epoch [3/10], Batch [8/82], Loss: 0.1280
Epoch [3/10], Batch [9/82], Loss: 0.2114
Epoch [3/10], Batch [10/82], Loss: 0.2394
Epoch [3/10], Batch [11/82], Loss: 0.3038
Epoch [3/10], Batch [12/82], Loss: 0.2779
Epoch [3/10], Batch [13/82], Loss: 0.2313
Epoch [3/10], Batch [14/82], Loss: 0.1994
Epoch [3/10], Batch [15/82], Loss: 0.1743
Epoch [3/10], Batch [16/82], Loss: 0.2511
Epoch [3/10], Batch [17/82], Loss: 0.1008
Epoch [3/10], Batch [18/82], Loss: 0.2231
Epoch [3/10], Batch [19/82], Loss: 0.2187
Epoch [3/10], Batch [20/82], Loss: 0.2374
Epoch [3/10], Batch [21/82], Loss: 0.1306
Epoch [3/10], Batch [22/82], Loss: 0.2856
Epoch [3/10], Batch [23/82], Loss: 0.0934
Epoch [3/10], Batch [24/82], Loss: 0.1428
Epoch [3/10], Batch [25/82], Loss: 0.1608
Epoch [3/10], Batch [26/82], Loss: 0.0993
Epoch [3/10], Batch [27/82], Loss: 0.1810
Epoch [3/10], Batch [28/82], Loss: 0.1623
Epoch [3/10], Batch [29/82], Loss: 0.2822
Epoch [3/10], Batch [30/82], Loss: 0.3299
Epoch [3/10], Batch [31/82], Loss: 0.0935
Epoch [3/10], Batch [32/82], Loss: 0.2812
Epoch [3/10], Batch [33/82], Loss: 0.1799
Epoch [3/10], Batch [34/82], Loss: 0.2634
Epoch [3/10], Batch [35/82], Loss: 0.1720
Epoch [3/10], Batch [36/82], Loss: 0.1088
Epoch [3/10], Batch [37/82], Loss: 0.1233
Epoch [3/10], Batch [38/82], Loss: 0.1787
Epoch [3/10], Batch [39/82], Loss: 0.1575
Epoch [3/10], Batch [40/82], Loss: 0.2357
Epoch [3/10], Batch [41/82], Loss: 0.4247
Epoch [3/10], Batch [42/82], Loss: 0.2338
Epoch [3/10], Batch [43/82], Loss: 0.2603
Epoch [3/10], Batch [44/82], Loss: 0.1474
Epoch [3/10], Batch [45/82], Loss: 0.2847
Epoch [3/10], Batch [46/82], Loss: 0.2006
Epoch [3/10], Batch [47/82], Loss: 0.1475
Epoch [3/10], Batch [48/82], Loss: 0.2089
Epoch [3/10], Batch [49/82], Loss: 0.5386
Epoch [3/10], Batch [50/82], Loss: 0.2028
Epoch [3/10], Batch [51/82], Loss: 0.1985
Epoch [3/10], Batch [52/82], Loss: 0.3318
Epoch [3/10], Batch [53/82], Loss: 0.2203
Epoch [3/10], Batch [54/82], Loss: 0.2046
Epoch [3/10], Batch [55/82], Loss: 0.2562
Epoch [3/10], Batch [56/82], Loss: 0.2019
Epoch [3/10], Batch [57/82], Loss: 0.1884
Epoch [3/10], Batch [58/82], Loss: 0.1361
Epoch [3/10], Batch [59/82], Loss: 0.2347
Epoch [3/10], Batch [60/82], Loss: 0.3609
Epoch [3/10], Batch [61/82], Loss: 0.1276
Epoch [3/10], Batch [62/82], Loss: 0.2279
Epoch [3/10], Batch [63/82], Loss: 0.1690
Epoch [3/10], Batch [64/82], Loss: 0.2645
Epoch [3/10], Batch [65/82], Loss: 0.2304
Epoch [3/10], Batch [66/82], Loss: 0.1294
Epoch [3/10], Batch [67/82], Loss: 0.3501
Epoch [3/10], Batch [68/82], Loss: 0.0595
Epoch [3/10], Batch [69/82], Loss: 0.2718
Epoch [3/10], Batch [70/82], Loss: 0.0849
Epoch [3/10], Batch [71/82], Loss: 0.1950
Epoch [3/10], Batch [72/82], Loss: 0.2192
Epoch [3/10], Batch [73/82], Loss: 0.1494
Epoch [3/10], Batch [74/82], Loss: 0.3149
Epoch [3/10], Batch [75/82], Loss: 0.1973
Epoch [3/10], Batch [76/82], Loss: 0.1992
Epoch [3/10], Batch [77/82], Loss: 0.1830
Epoch [3/10], Batch [78/82], Loss: 0.1621
Epoch [3/10], Batch [79/82], Loss: 0.1463
Epoch [3/10], Batch [80/82], Loss: 0.1401
Epoch [3/10], Batch [81/82], Loss: 0.0926
Epoch [3/10], Batch [82/82], Loss: 0.1911
Epoch [3/10], Average Loss: 0.2074
-----------------------------------------------------------
strategy: BEAM
iter: 3
epoch: 2
Test Loss: 0.3332
F1_overall: 0.5519
F1_AGENT: 0.7032
F1_TARGET: 0.3987
-----------------------------------------------------------
Epoch [4/10], Batch [1/82], Loss: 0.1708
Epoch [4/10], Batch [2/82], Loss: 0.1838
Epoch [4/10], Batch [3/82], Loss: 0.1064
Epoch [4/10], Batch [4/82], Loss: 0.1499
Epoch [4/10], Batch [5/82], Loss: 0.1173
Epoch [4/10], Batch [6/82], Loss: 0.1071
Epoch [4/10], Batch [7/82], Loss: 0.1205
Epoch [4/10], Batch [8/82], Loss: 0.1138
Epoch [4/10], Batch [9/82], Loss: 0.2776
Epoch [4/10], Batch [10/82], Loss: 0.1161
Epoch [4/10], Batch [11/82], Loss: 0.0596
Epoch [4/10], Batch [12/82], Loss: 0.1491
Epoch [4/10], Batch [13/82], Loss: 0.2602
Epoch [4/10], Batch [14/82], Loss: 0.1975
Epoch [4/10], Batch [15/82], Loss: 0.2664
Epoch [4/10], Batch [16/82], Loss: 0.1317
Epoch [4/10], Batch [17/82], Loss: 0.0738
Epoch [4/10], Batch [18/82], Loss: 0.0855
Epoch [4/10], Batch [19/82], Loss: 0.0967
Epoch [4/10], Batch [20/82], Loss: 0.0872
Epoch [4/10], Batch [21/82], Loss: 0.0738
Epoch [4/10], Batch [22/82], Loss: 0.1964
Epoch [4/10], Batch [23/82], Loss: 0.2045
Epoch [4/10], Batch [24/82], Loss: 0.0859
Epoch [4/10], Batch [25/82], Loss: 0.0688
Epoch [4/10], Batch [26/82], Loss: 0.0824
Epoch [4/10], Batch [27/82], Loss: 0.0918
Epoch [4/10], Batch [28/82], Loss: 0.1951
Epoch [4/10], Batch [29/82], Loss: 0.1519
Epoch [4/10], Batch [30/82], Loss: 0.1392
Epoch [4/10], Batch [31/82], Loss: 0.1655
Epoch [4/10], Batch [32/82], Loss: 0.1098
Epoch [4/10], Batch [33/82], Loss: 0.0696
Epoch [4/10], Batch [34/82], Loss: 0.1453
Epoch [4/10], Batch [35/82], Loss: 0.1227
Epoch [4/10], Batch [36/82], Loss: 0.1641
Epoch [4/10], Batch [37/82], Loss: 0.1205
Epoch [4/10], Batch [38/82], Loss: 0.1480
Epoch [4/10], Batch [39/82], Loss: 0.1270
Epoch [4/10], Batch [40/82], Loss: 0.0475
Epoch [4/10], Batch [41/82], Loss: 0.0897
Epoch [4/10], Batch [42/82], Loss: 0.1357
Epoch [4/10], Batch [43/82], Loss: 0.1103
Epoch [4/10], Batch [44/82], Loss: 0.1411
Epoch [4/10], Batch [45/82], Loss: 0.1672
Epoch [4/10], Batch [46/82], Loss: 0.1392
Epoch [4/10], Batch [47/82], Loss: 0.0705
Epoch [4/10], Batch [48/82], Loss: 0.2371
Epoch [4/10], Batch [49/82], Loss: 0.1034
Epoch [4/10], Batch [50/82], Loss: 0.1499
Epoch [4/10], Batch [51/82], Loss: 0.1066
Epoch [4/10], Batch [52/82], Loss: 0.0475
Epoch [4/10], Batch [53/82], Loss: 0.1680
Epoch [4/10], Batch [54/82], Loss: 0.1532
Epoch [4/10], Batch [55/82], Loss: 0.1606
Epoch [4/10], Batch [56/82], Loss: 0.1387
Epoch [4/10], Batch [57/82], Loss: 0.2303
Epoch [4/10], Batch [58/82], Loss: 0.0814
Epoch [4/10], Batch [59/82], Loss: 0.0568
Epoch [4/10], Batch [60/82], Loss: 0.1181
Epoch [4/10], Batch [61/82], Loss: 0.0805
Epoch [4/10], Batch [62/82], Loss: 0.0884
Epoch [4/10], Batch [63/82], Loss: 0.1388
Epoch [4/10], Batch [64/82], Loss: 0.2045
Epoch [4/10], Batch [65/82], Loss: 0.1291
Epoch [4/10], Batch [66/82], Loss: 0.2451
Epoch [4/10], Batch [67/82], Loss: 0.0917
Epoch [4/10], Batch [68/82], Loss: 0.2121
Epoch [4/10], Batch [69/82], Loss: 0.0801
Epoch [4/10], Batch [70/82], Loss: 0.1394
Epoch [4/10], Batch [71/82], Loss: 0.1470
Epoch [4/10], Batch [72/82], Loss: 0.1127
Epoch [4/10], Batch [73/82], Loss: 0.0415
Epoch [4/10], Batch [74/82], Loss: 0.0979
Epoch [4/10], Batch [75/82], Loss: 0.2716
Epoch [4/10], Batch [76/82], Loss: 0.0419
Epoch [4/10], Batch [77/82], Loss: 0.1462
Epoch [4/10], Batch [78/82], Loss: 0.1008
Epoch [4/10], Batch [79/82], Loss: 0.1663
Epoch [4/10], Batch [80/82], Loss: 0.3273
Epoch [4/10], Batch [81/82], Loss: 0.0853
Epoch [4/10], Batch [82/82], Loss: 0.0883
Epoch [4/10], Average Loss: 0.1344
-----------------------------------------------------------
strategy: BEAM
iter: 3
epoch: 3
Test Loss: 0.3432
F1_overall: 0.5271
F1_AGENT: 0.6548
F1_TARGET: 0.4129
-----------------------------------------------------------
Epoch [5/10], Batch [1/82], Loss: 0.0829
Epoch [5/10], Batch [2/82], Loss: 0.1383
Epoch [5/10], Batch [3/82], Loss: 0.0298
Epoch [5/10], Batch [4/82], Loss: 0.1362
Epoch [5/10], Batch [5/82], Loss: 0.0379
Epoch [5/10], Batch [6/82], Loss: 0.0705
Epoch [5/10], Batch [7/82], Loss: 0.0605
Epoch [5/10], Batch [8/82], Loss: 0.1382
Epoch [5/10], Batch [9/82], Loss: 0.0901
Epoch [5/10], Batch [10/82], Loss: 0.1000
Epoch [5/10], Batch [11/82], Loss: 0.0371
Epoch [5/10], Batch [12/82], Loss: 0.0664
Epoch [5/10], Batch [13/82], Loss: 0.0939
Epoch [5/10], Batch [14/82], Loss: 0.1025
Epoch [5/10], Batch [15/82], Loss: 0.1277
Epoch [5/10], Batch [16/82], Loss: 0.0864
Epoch [5/10], Batch [17/82], Loss: 0.1045
Epoch [5/10], Batch [18/82], Loss: 0.1335
Epoch [5/10], Batch [19/82], Loss: 0.1397
Epoch [5/10], Batch [20/82], Loss: 0.3333
Epoch [5/10], Batch [21/82], Loss: 0.0559
Epoch [5/10], Batch [22/82], Loss: 0.2133
Epoch [5/10], Batch [23/82], Loss: 0.0380
Epoch [5/10], Batch [24/82], Loss: 0.0900
Epoch [5/10], Batch [25/82], Loss: 0.1674
Epoch [5/10], Batch [26/82], Loss: 0.1973
Epoch [5/10], Batch [27/82], Loss: 0.0729
Epoch [5/10], Batch [28/82], Loss: 0.0893
Epoch [5/10], Batch [29/82], Loss: 0.1691
Epoch [5/10], Batch [30/82], Loss: 0.1160
Epoch [5/10], Batch [31/82], Loss: 0.0923
Epoch [5/10], Batch [32/82], Loss: 0.0853
Epoch [5/10], Batch [33/82], Loss: 0.1112
Epoch [5/10], Batch [34/82], Loss: 0.0551
Epoch [5/10], Batch [35/82], Loss: 0.0926
Epoch [5/10], Batch [36/82], Loss: 0.0541
Epoch [5/10], Batch [37/82], Loss: 0.0954
Epoch [5/10], Batch [38/82], Loss: 0.1259
Epoch [5/10], Batch [39/82], Loss: 0.0642
Epoch [5/10], Batch [40/82], Loss: 0.0824
Epoch [5/10], Batch [41/82], Loss: 0.1160
Epoch [5/10], Batch [42/82], Loss: 0.0377
Epoch [5/10], Batch [43/82], Loss: 0.0450
Epoch [5/10], Batch [44/82], Loss: 0.1250
Epoch [5/10], Batch [45/82], Loss: 0.1109
Epoch [5/10], Batch [46/82], Loss: 0.0278
Epoch [5/10], Batch [47/82], Loss: 0.0810
Epoch [5/10], Batch [48/82], Loss: 0.1416
Epoch [5/10], Batch [49/82], Loss: 0.1497
Epoch [5/10], Batch [50/82], Loss: 0.0776
Epoch [5/10], Batch [51/82], Loss: 0.0802
Epoch [5/10], Batch [52/82], Loss: 0.2003
Epoch [5/10], Batch [53/82], Loss: 0.0656
Epoch [5/10], Batch [54/82], Loss: 0.0213
Epoch [5/10], Batch [55/82], Loss: 0.0308
Epoch [5/10], Batch [56/82], Loss: 0.1171
Epoch [5/10], Batch [57/82], Loss: 0.2359
Epoch [5/10], Batch [58/82], Loss: 0.1969
Epoch [5/10], Batch [59/82], Loss: 0.0169
Epoch [5/10], Batch [60/82], Loss: 0.0603
Epoch [5/10], Batch [61/82], Loss: 0.0658
Epoch [5/10], Batch [62/82], Loss: 0.1660
Epoch [5/10], Batch [63/82], Loss: 0.1661
Epoch [5/10], Batch [64/82], Loss: 0.1621
Epoch [5/10], Batch [65/82], Loss: 0.0674
Epoch [5/10], Batch [66/82], Loss: 0.1087
Epoch [5/10], Batch [67/82], Loss: 0.0860
Epoch [5/10], Batch [68/82], Loss: 0.0835
Epoch [5/10], Batch [69/82], Loss: 0.0796
Epoch [5/10], Batch [70/82], Loss: 0.1080
Epoch [5/10], Batch [71/82], Loss: 0.0958
Epoch [5/10], Batch [72/82], Loss: 0.0862
Epoch [5/10], Batch [73/82], Loss: 0.1351
Epoch [5/10], Batch [74/82], Loss: 0.2103
Epoch [5/10], Batch [75/82], Loss: 0.0430
Epoch [5/10], Batch [76/82], Loss: 0.0656
Epoch [5/10], Batch [77/82], Loss: 0.1142
Epoch [5/10], Batch [78/82], Loss: 0.2189
Epoch [5/10], Batch [79/82], Loss: 0.3089
Epoch [5/10], Batch [80/82], Loss: 0.1537
Epoch [5/10], Batch [81/82], Loss: 0.2088
Epoch [5/10], Batch [82/82], Loss: 0.0780
Epoch [5/10], Average Loss: 0.1089
-----------------------------------------------------------
strategy: BEAM
iter: 3
epoch: 4
Test Loss: 0.3646
F1_overall: 0.5714
F1_AGENT: 0.7034
F1_TARGET: 0.4400
-----------------------------------------------------------
Epoch [6/10], Batch [1/82], Loss: 0.0894
Epoch [6/10], Batch [2/82], Loss: 0.0568
Epoch [6/10], Batch [3/82], Loss: 0.1286
Epoch [6/10], Batch [4/82], Loss: 0.1280
Epoch [6/10], Batch [5/82], Loss: 0.0742
Epoch [6/10], Batch [6/82], Loss: 0.0876
Epoch [6/10], Batch [7/82], Loss: 0.0652
Epoch [6/10], Batch [8/82], Loss: 0.1795
Epoch [6/10], Batch [9/82], Loss: 0.0530
Epoch [6/10], Batch [10/82], Loss: 0.1196
Epoch [6/10], Batch [11/82], Loss: 0.0785
Epoch [6/10], Batch [12/82], Loss: 0.1471
Epoch [6/10], Batch [13/82], Loss: 0.0669
Epoch [6/10], Batch [14/82], Loss: 0.0940
Epoch [6/10], Batch [15/82], Loss: 0.0976
Epoch [6/10], Batch [16/82], Loss: 0.0593
Epoch [6/10], Batch [17/82], Loss: 0.0231
Epoch [6/10], Batch [18/82], Loss: 0.1201
Epoch [6/10], Batch [19/82], Loss: 0.1008
Epoch [6/10], Batch [20/82], Loss: 0.0566
Epoch [6/10], Batch [21/82], Loss: 0.0860
Epoch [6/10], Batch [22/82], Loss: 0.0506
Epoch [6/10], Batch [23/82], Loss: 0.1196
Epoch [6/10], Batch [24/82], Loss: 0.0339
Epoch [6/10], Batch [25/82], Loss: 0.0342
Epoch [6/10], Batch [26/82], Loss: 0.1138
Epoch [6/10], Batch [27/82], Loss: 0.1028
Epoch [6/10], Batch [28/82], Loss: 0.1001
Epoch [6/10], Batch [29/82], Loss: 0.1029
Epoch [6/10], Batch [30/82], Loss: 0.0883
Epoch [6/10], Batch [31/82], Loss: 0.0165
Epoch [6/10], Batch [32/82], Loss: 0.0494
Epoch [6/10], Batch [33/82], Loss: 0.0843
Epoch [6/10], Batch [34/82], Loss: 0.0316
Epoch [6/10], Batch [35/82], Loss: 0.1067
Epoch [6/10], Batch [36/82], Loss: 0.0508
Epoch [6/10], Batch [37/82], Loss: 0.0333
Epoch [6/10], Batch [38/82], Loss: 0.0263
Epoch [6/10], Batch [39/82], Loss: 0.1325
Epoch [6/10], Batch [40/82], Loss: 0.0481
Epoch [6/10], Batch [41/82], Loss: 0.0427
Epoch [6/10], Batch [42/82], Loss: 0.0521
Epoch [6/10], Batch [43/82], Loss: 0.0862
Epoch [6/10], Batch [44/82], Loss: 0.0819
Epoch [6/10], Batch [45/82], Loss: 0.1435
Epoch [6/10], Batch [46/82], Loss: 0.0573
Epoch [6/10], Batch [47/82], Loss: 0.0299
Epoch [6/10], Batch [48/82], Loss: 0.0452
Epoch [6/10], Batch [49/82], Loss: 0.1011
Epoch [6/10], Batch [50/82], Loss: 0.0979
Epoch [6/10], Batch [51/82], Loss: 0.1002
Epoch [6/10], Batch [52/82], Loss: 0.0255
Epoch [6/10], Batch [53/82], Loss: 0.0597
Epoch [6/10], Batch [54/82], Loss: 0.0265
Epoch [6/10], Batch [55/82], Loss: 0.1160
Epoch [6/10], Batch [56/82], Loss: 0.1410
Epoch [6/10], Batch [57/82], Loss: 0.0335
Epoch [6/10], Batch [58/82], Loss: 0.0792
Epoch [6/10], Batch [59/82], Loss: 0.0953
Epoch [6/10], Batch [60/82], Loss: 0.1041
Epoch [6/10], Batch [61/82], Loss: 0.0559
Epoch [6/10], Batch [62/82], Loss: 0.0531
Epoch [6/10], Batch [63/82], Loss: 0.0752
Epoch [6/10], Batch [64/82], Loss: 0.0985
Epoch [6/10], Batch [65/82], Loss: 0.0753
Epoch [6/10], Batch [66/82], Loss: 0.1499
Epoch [6/10], Batch [67/82], Loss: 0.0417
Epoch [6/10], Batch [68/82], Loss: 0.2527
Epoch [6/10], Batch [69/82], Loss: 0.0360
Epoch [6/10], Batch [70/82], Loss: 0.1892
Epoch [6/10], Batch [71/82], Loss: 0.0528
Epoch [6/10], Batch [72/82], Loss: 0.2388
Epoch [6/10], Batch [73/82], Loss: 0.0771
Epoch [6/10], Batch [74/82], Loss: 0.0464
Epoch [6/10], Batch [75/82], Loss: 0.0449
Epoch [6/10], Batch [76/82], Loss: 0.0916
Epoch [6/10], Batch [77/82], Loss: 0.1179
Epoch [6/10], Batch [78/82], Loss: 0.0720
Epoch [6/10], Batch [79/82], Loss: 0.0697
Epoch [6/10], Batch [80/82], Loss: 0.0119
Epoch [6/10], Batch [81/82], Loss: 0.0647
Epoch [6/10], Batch [82/82], Loss: 0.1164
Epoch [6/10], Average Loss: 0.0828
-----------------------------------------------------------
strategy: BEAM
iter: 3
epoch: 5
Test Loss: 0.4126
F1_overall: 0.5561
F1_AGENT: 0.7145
F1_TARGET: 0.3913
-----------------------------------------------------------
Epoch [7/10], Batch [1/82], Loss: 0.0276
Epoch [7/10], Batch [2/82], Loss: 0.0107
Epoch [7/10], Batch [3/82], Loss: 0.0484
Epoch [7/10], Batch [4/82], Loss: 0.1148
Epoch [7/10], Batch [5/82], Loss: 0.2453
Epoch [7/10], Batch [6/82], Loss: 0.0246
Epoch [7/10], Batch [7/82], Loss: 0.0355
Epoch [7/10], Batch [8/82], Loss: 0.0631
Epoch [7/10], Batch [9/82], Loss: 0.0564
Epoch [7/10], Batch [10/82], Loss: 0.0758
Epoch [7/10], Batch [11/82], Loss: 0.0176
Epoch [7/10], Batch [12/82], Loss: 0.1883
Epoch [7/10], Batch [13/82], Loss: 0.0401
Epoch [7/10], Batch [14/82], Loss: 0.0474
Epoch [7/10], Batch [15/82], Loss: 0.0674
Epoch [7/10], Batch [16/82], Loss: 0.0299
Epoch [7/10], Batch [17/82], Loss: 0.0445
Epoch [7/10], Batch [18/82], Loss: 0.0684
Epoch [7/10], Batch [19/82], Loss: 0.0664
Epoch [7/10], Batch [20/82], Loss: 0.0163
Epoch [7/10], Batch [21/82], Loss: 0.0903
Epoch [7/10], Batch [22/82], Loss: 0.0134
Epoch [7/10], Batch [23/82], Loss: 0.0844
Epoch [7/10], Batch [24/82], Loss: 0.0324
Epoch [7/10], Batch [25/82], Loss: 0.0308
Epoch [7/10], Batch [26/82], Loss: 0.0527
Epoch [7/10], Batch [27/82], Loss: 0.0657
Epoch [7/10], Batch [28/82], Loss: 0.0325
Epoch [7/10], Batch [29/82], Loss: 0.0503
Epoch [7/10], Batch [30/82], Loss: 0.0495
Epoch [7/10], Batch [31/82], Loss: 0.0512
Epoch [7/10], Batch [32/82], Loss: 0.0443
Epoch [7/10], Batch [33/82], Loss: 0.0405
Epoch [7/10], Batch [34/82], Loss: 0.0807
Epoch [7/10], Batch [35/82], Loss: 0.0451
Epoch [7/10], Batch [36/82], Loss: 0.0206
Epoch [7/10], Batch [37/82], Loss: 0.1818
Epoch [7/10], Batch [38/82], Loss: 0.1444
Epoch [7/10], Batch [39/82], Loss: 0.0071
Epoch [7/10], Batch [40/82], Loss: 0.1022
Epoch [7/10], Batch [41/82], Loss: 0.0117
Epoch [7/10], Batch [42/82], Loss: 0.0375
Epoch [7/10], Batch [43/82], Loss: 0.1414
Epoch [7/10], Batch [44/82], Loss: 0.0212
Epoch [7/10], Batch [45/82], Loss: 0.0391
Epoch [7/10], Batch [46/82], Loss: 0.0181
Epoch [7/10], Batch [47/82], Loss: 0.0546
Epoch [7/10], Batch [48/82], Loss: 0.0378
Epoch [7/10], Batch [49/82], Loss: 0.0528
Epoch [7/10], Batch [50/82], Loss: 0.1203
Epoch [7/10], Batch [51/82], Loss: 0.0111
Epoch [7/10], Batch [52/82], Loss: 0.0421
Epoch [7/10], Batch [53/82], Loss: 0.1140
Epoch [7/10], Batch [54/82], Loss: 0.1446
Epoch [7/10], Batch [55/82], Loss: 0.0574
Epoch [7/10], Batch [56/82], Loss: 0.0197
Epoch [7/10], Batch [57/82], Loss: 0.0091
Epoch [7/10], Batch [58/82], Loss: 0.0851
Epoch [7/10], Batch [59/82], Loss: 0.0891
Epoch [7/10], Batch [60/82], Loss: 0.0484
Epoch [7/10], Batch [61/82], Loss: 0.0476
Epoch [7/10], Batch [62/82], Loss: 0.0565
Epoch [7/10], Batch [63/82], Loss: 0.0932
Epoch [7/10], Batch [64/82], Loss: 0.0450
Epoch [7/10], Batch [65/82], Loss: 0.0554
Epoch [7/10], Batch [66/82], Loss: 0.1017
Epoch [7/10], Batch [67/82], Loss: 0.0429
Epoch [7/10], Batch [68/82], Loss: 0.1281
Epoch [7/10], Batch [69/82], Loss: 0.0636
Epoch [7/10], Batch [70/82], Loss: 0.0436
Epoch [7/10], Batch [71/82], Loss: 0.0810
Epoch [7/10], Batch [72/82], Loss: 0.0332
Epoch [7/10], Batch [73/82], Loss: 0.0490
Epoch [7/10], Batch [74/82], Loss: 0.0185
Epoch [7/10], Batch [75/82], Loss: 0.1159
Epoch [7/10], Batch [76/82], Loss: 0.0638
Epoch [7/10], Batch [77/82], Loss: 0.0732
Epoch [7/10], Batch [78/82], Loss: 0.1057
Epoch [7/10], Batch [79/82], Loss: 0.0514
Epoch [7/10], Batch [80/82], Loss: 0.0189
Epoch [7/10], Batch [81/82], Loss: 0.1016
Epoch [7/10], Batch [82/82], Loss: 0.0294
Epoch [7/10], Average Loss: 0.0620
-----------------------------------------------------------
strategy: BEAM
iter: 3
epoch: 6
Test Loss: 0.4409
F1_overall: 0.5511
F1_AGENT: 0.7089
F1_TARGET: 0.3904
-----------------------------------------------------------
Epoch [8/10], Batch [1/82], Loss: 0.0468
Epoch [8/10], Batch [2/82], Loss: 0.0091
Epoch [8/10], Batch [3/82], Loss: 0.0763
Epoch [8/10], Batch [4/82], Loss: 0.1785
Epoch [8/10], Batch [5/82], Loss: 0.0203
Epoch [8/10], Batch [6/82], Loss: 0.0166
Epoch [8/10], Batch [7/82], Loss: 0.0060
Epoch [8/10], Batch [8/82], Loss: 0.3540
Epoch [8/10], Batch [9/82], Loss: 0.0095
Epoch [8/10], Batch [10/82], Loss: 0.1175
Epoch [8/10], Batch [11/82], Loss: 0.0409
Epoch [8/10], Batch [12/82], Loss: 0.0579
Epoch [8/10], Batch [13/82], Loss: 0.0198
Epoch [8/10], Batch [14/82], Loss: 0.0591
Epoch [8/10], Batch [15/82], Loss: 0.0322
Epoch [8/10], Batch [16/82], Loss: 0.0544
Epoch [8/10], Batch [17/82], Loss: 0.0679
Epoch [8/10], Batch [18/82], Loss: 0.0245
Epoch [8/10], Batch [19/82], Loss: 0.2244
Epoch [8/10], Batch [20/82], Loss: 0.1442
Epoch [8/10], Batch [21/82], Loss: 0.0482
Epoch [8/10], Batch [22/82], Loss: 0.1017
Epoch [8/10], Batch [23/82], Loss: 0.0246
Epoch [8/10], Batch [24/82], Loss: 0.0233
Epoch [8/10], Batch [25/82], Loss: 0.0348
Epoch [8/10], Batch [26/82], Loss: 0.0559
Epoch [8/10], Batch [27/82], Loss: 0.0664
Epoch [8/10], Batch [28/82], Loss: 0.0413
Epoch [8/10], Batch [29/82], Loss: 0.1725
Epoch [8/10], Batch [30/82], Loss: 0.0793
Epoch [8/10], Batch [31/82], Loss: 0.0287
Epoch [8/10], Batch [32/82], Loss: 0.0324
Epoch [8/10], Batch [33/82], Loss: 0.1665
Epoch [8/10], Batch [34/82], Loss: 0.1364
Epoch [8/10], Batch [35/82], Loss: 0.1241
Epoch [8/10], Batch [36/82], Loss: 0.0980
Epoch [8/10], Batch [37/82], Loss: 0.0382
Epoch [8/10], Batch [38/82], Loss: 0.0720
Epoch [8/10], Batch [39/82], Loss: 0.1444
Epoch [8/10], Batch [40/82], Loss: 0.2823
Epoch [8/10], Batch [41/82], Loss: 0.0592
Epoch [8/10], Batch [42/82], Loss: 0.0645
Epoch [8/10], Batch [43/82], Loss: 0.1405
Epoch [8/10], Batch [44/82], Loss: 0.0165
Epoch [8/10], Batch [45/82], Loss: 0.0595
Epoch [8/10], Batch [46/82], Loss: 0.1587
Epoch [8/10], Batch [47/82], Loss: 0.0672
Epoch [8/10], Batch [48/82], Loss: 0.0622
Epoch [8/10], Batch [49/82], Loss: 0.1471
Epoch [8/10], Batch [50/82], Loss: 0.0897
Epoch [8/10], Batch [51/82], Loss: 0.0408
Epoch [8/10], Batch [52/82], Loss: 0.0146
Epoch [8/10], Batch [53/82], Loss: 0.0806
Epoch [8/10], Batch [54/82], Loss: 0.1051
Epoch [8/10], Batch [55/82], Loss: 0.0461
Epoch [8/10], Batch [56/82], Loss: 0.1597
Epoch [8/10], Batch [57/82], Loss: 0.0373
Epoch [8/10], Batch [58/82], Loss: 0.0634
Epoch [8/10], Batch [59/82], Loss: 0.0619
Epoch [8/10], Batch [60/82], Loss: 0.0188
Epoch [8/10], Batch [61/82], Loss: 0.0995
Epoch [8/10], Batch [62/82], Loss: 0.0136
Epoch [8/10], Batch [63/82], Loss: 0.0279
Epoch [8/10], Batch [64/82], Loss: 0.0983
Epoch [8/10], Batch [65/82], Loss: 0.1773
Epoch [8/10], Batch [66/82], Loss: 0.0208
Epoch [8/10], Batch [67/82], Loss: 0.0122
Epoch [8/10], Batch [68/82], Loss: 0.2115
Epoch [8/10], Batch [69/82], Loss: 0.0152
Epoch [8/10], Batch [70/82], Loss: 0.0239
Epoch [8/10], Batch [71/82], Loss: 0.0444
Epoch [8/10], Batch [72/82], Loss: 0.0503
Epoch [8/10], Batch [73/82], Loss: 0.1879
Epoch [8/10], Batch [74/82], Loss: 0.1553
Epoch [8/10], Batch [75/82], Loss: 0.1023
Epoch [8/10], Batch [76/82], Loss: 0.0490
Epoch [8/10], Batch [77/82], Loss: 0.0478
Epoch [8/10], Batch [78/82], Loss: 0.0792
Epoch [8/10], Batch [79/82], Loss: 0.1188
Epoch [8/10], Batch [80/82], Loss: 0.0824
Epoch [8/10], Batch [81/82], Loss: 0.1906
Epoch [8/10], Batch [82/82], Loss: 0.0377
Epoch [8/10], Average Loss: 0.0813
-----------------------------------------------------------
strategy: BEAM
iter: 3
epoch: 7
Test Loss: 0.4096
F1_overall: 0.5693
F1_AGENT: 0.7034
F1_TARGET: 0.4393
-----------------------------------------------------------
Epoch [9/10], Batch [1/82], Loss: 0.0280
Epoch [9/10], Batch [2/82], Loss: 0.0347
Epoch [9/10], Batch [3/82], Loss: 0.1836
Epoch [9/10], Batch [4/82], Loss: 0.0951
Epoch [9/10], Batch [5/82], Loss: 0.0543
Epoch [9/10], Batch [6/82], Loss: 0.0173
Epoch [9/10], Batch [7/82], Loss: 0.0216
Epoch [9/10], Batch [8/82], Loss: 0.1128
Epoch [9/10], Batch [9/82], Loss: 0.0946
Epoch [9/10], Batch [10/82], Loss: 0.0132
Epoch [9/10], Batch [11/82], Loss: 0.0257
Epoch [9/10], Batch [12/82], Loss: 0.0057
Epoch [9/10], Batch [13/82], Loss: 0.0413
Epoch [9/10], Batch [14/82], Loss: 0.1513
Epoch [9/10], Batch [15/82], Loss: 0.0168
Epoch [9/10], Batch [16/82], Loss: 0.0142
Epoch [9/10], Batch [17/82], Loss: 0.0254
Epoch [9/10], Batch [18/82], Loss: 0.0166
Epoch [9/10], Batch [19/82], Loss: 0.0654
Epoch [9/10], Batch [20/82], Loss: 0.0963
Epoch [9/10], Batch [21/82], Loss: 0.0358
Epoch [9/10], Batch [22/82], Loss: 0.0534
Epoch [9/10], Batch [23/82], Loss: 0.0291
Epoch [9/10], Batch [24/82], Loss: 0.1806
Epoch [9/10], Batch [25/82], Loss: 0.1315
Epoch [9/10], Batch [26/82], Loss: 0.0616
Epoch [9/10], Batch [27/82], Loss: 0.0475
Epoch [9/10], Batch [28/82], Loss: 0.1739
Epoch [9/10], Batch [29/82], Loss: 0.0602
Epoch [9/10], Batch [30/82], Loss: 0.0107
Epoch [9/10], Batch [31/82], Loss: 0.0630
Epoch [9/10], Batch [32/82], Loss: 0.1320
Epoch [9/10], Batch [33/82], Loss: 0.0410
Epoch [9/10], Batch [34/82], Loss: 0.0474
Epoch [9/10], Batch [35/82], Loss: 0.0580
Epoch [9/10], Batch [36/82], Loss: 0.0683
Epoch [9/10], Batch [37/82], Loss: 0.0047
Epoch [9/10], Batch [38/82], Loss: 0.0169
Epoch [9/10], Batch [39/82], Loss: 0.1302
Epoch [9/10], Batch [40/82], Loss: 0.0105
Epoch [9/10], Batch [41/82], Loss: 0.0311
Epoch [9/10], Batch [42/82], Loss: 0.0929
Epoch [9/10], Batch [43/82], Loss: 0.0146
Epoch [9/10], Batch [44/82], Loss: 0.1139
Epoch [9/10], Batch [45/82], Loss: 0.0534
Epoch [9/10], Batch [46/82], Loss: 0.0328
Epoch [9/10], Batch [47/82], Loss: 0.0231
Epoch [9/10], Batch [48/82], Loss: 0.0157
Epoch [9/10], Batch [49/82], Loss: 0.0075
Epoch [9/10], Batch [50/82], Loss: 0.0470
Epoch [9/10], Batch [51/82], Loss: 0.0700
Epoch [9/10], Batch [52/82], Loss: 0.0464
Epoch [9/10], Batch [53/82], Loss: 0.0285
Epoch [9/10], Batch [54/82], Loss: 0.0794
Epoch [9/10], Batch [55/82], Loss: 0.2186
Epoch [9/10], Batch [56/82], Loss: 0.0145
Epoch [9/10], Batch [57/82], Loss: 0.0560
Epoch [9/10], Batch [58/82], Loss: 0.0204
Epoch [9/10], Batch [59/82], Loss: 0.0653
Epoch [9/10], Batch [60/82], Loss: 0.0334
Epoch [9/10], Batch [61/82], Loss: 0.0251
Epoch [9/10], Batch [62/82], Loss: 0.0405
Epoch [9/10], Batch [63/82], Loss: 0.0222
Epoch [9/10], Batch [64/82], Loss: 0.0607
Epoch [9/10], Batch [65/82], Loss: 0.0196
Epoch [9/10], Batch [66/82], Loss: 0.1527
Epoch [9/10], Batch [67/82], Loss: 0.0169
Epoch [9/10], Batch [68/82], Loss: 0.0744
Epoch [9/10], Batch [69/82], Loss: 0.0663
Epoch [9/10], Batch [70/82], Loss: 0.2150
Epoch [9/10], Batch [71/82], Loss: 0.0386
Epoch [9/10], Batch [72/82], Loss: 0.3439
Epoch [9/10], Batch [73/82], Loss: 0.0804
Epoch [9/10], Batch [74/82], Loss: 0.0630
Epoch [9/10], Batch [75/82], Loss: 0.1338
Epoch [9/10], Batch [76/82], Loss: 0.0410
Epoch [9/10], Batch [77/82], Loss: 0.0284
Epoch [9/10], Batch [78/82], Loss: 0.1504
Epoch [9/10], Batch [79/82], Loss: 0.0551
Epoch [9/10], Batch [80/82], Loss: 0.0195
Epoch [9/10], Batch [81/82], Loss: 0.0354
Epoch [9/10], Batch [82/82], Loss: 0.0339
Epoch [9/10], Average Loss: 0.0640
-----------------------------------------------------------
strategy: BEAM
iter: 3
epoch: 8
Test Loss: 0.4377
F1_overall: 0.5314
F1_AGENT: 0.6971
F1_TARGET: 0.3678
-----------------------------------------------------------
Epoch [10/10], Batch [1/82], Loss: 0.0044
Epoch [10/10], Batch [2/82], Loss: 0.0247
Epoch [10/10], Batch [3/82], Loss: 0.0999
Epoch [10/10], Batch [4/82], Loss: 0.0248
Epoch [10/10], Batch [5/82], Loss: 0.1851
Epoch [10/10], Batch [6/82], Loss: 0.0271
Epoch [10/10], Batch [7/82], Loss: 0.0118
Epoch [10/10], Batch [8/82], Loss: 0.0162
Epoch [10/10], Batch [9/82], Loss: 0.0185
Epoch [10/10], Batch [10/82], Loss: 0.0043
Epoch [10/10], Batch [11/82], Loss: 0.0353
Epoch [10/10], Batch [12/82], Loss: 0.0326
Epoch [10/10], Batch [13/82], Loss: 0.1007
Epoch [10/10], Batch [14/82], Loss: 0.1337
Epoch [10/10], Batch [15/82], Loss: 0.0111
Epoch [10/10], Batch [16/82], Loss: 0.0726
Epoch [10/10], Batch [17/82], Loss: 0.0425
Epoch [10/10], Batch [18/82], Loss: 0.0525
Epoch [10/10], Batch [19/82], Loss: 0.0051
Epoch [10/10], Batch [20/82], Loss: 0.0133
Epoch [10/10], Batch [21/82], Loss: 0.0678
Epoch [10/10], Batch [22/82], Loss: 0.0159
Epoch [10/10], Batch [23/82], Loss: 0.0241
Epoch [10/10], Batch [24/82], Loss: 0.0158
Epoch [10/10], Batch [25/82], Loss: 0.0349
Epoch [10/10], Batch [26/82], Loss: 0.0747
Epoch [10/10], Batch [27/82], Loss: 0.0178
Epoch [10/10], Batch [28/82], Loss: 0.0113
Epoch [10/10], Batch [29/82], Loss: 0.0297
Epoch [10/10], Batch [30/82], Loss: 0.0362
Epoch [10/10], Batch [31/82], Loss: 0.0210
Epoch [10/10], Batch [32/82], Loss: 0.0208
Epoch [10/10], Batch [33/82], Loss: 0.0213
Epoch [10/10], Batch [34/82], Loss: 0.0142
Epoch [10/10], Batch [35/82], Loss: 0.0158
Epoch [10/10], Batch [36/82], Loss: 0.0146
Epoch [10/10], Batch [37/82], Loss: 0.0066
Epoch [10/10], Batch [38/82], Loss: 0.0114
Epoch [10/10], Batch [39/82], Loss: 0.0189
Epoch [10/10], Batch [40/82], Loss: 0.0654
Epoch [10/10], Batch [41/82], Loss: 0.0087
Epoch [10/10], Batch [42/82], Loss: 0.0988
Epoch [10/10], Batch [43/82], Loss: 0.0152
Epoch [10/10], Batch [44/82], Loss: 0.0462
Epoch [10/10], Batch [45/82], Loss: 0.0328
Epoch [10/10], Batch [46/82], Loss: 0.0061
Epoch [10/10], Batch [47/82], Loss: 0.0077
Epoch [10/10], Batch [48/82], Loss: 0.0189
Epoch [10/10], Batch [49/82], Loss: 0.0783
Epoch [10/10], Batch [50/82], Loss: 0.0174
Epoch [10/10], Batch [51/82], Loss: 0.0079
Epoch [10/10], Batch [52/82], Loss: 0.0955
Epoch [10/10], Batch [53/82], Loss: 0.0190
Epoch [10/10], Batch [54/82], Loss: 0.0343
Epoch [10/10], Batch [55/82], Loss: 0.1841
Epoch [10/10], Batch [56/82], Loss: 0.0529
Epoch [10/10], Batch [57/82], Loss: 0.0106
Epoch [10/10], Batch [58/82], Loss: 0.0364
Epoch [10/10], Batch [59/82], Loss: 0.0283
Epoch [10/10], Batch [60/82], Loss: 0.0397
Epoch [10/10], Batch [61/82], Loss: 0.0026
Epoch [10/10], Batch [62/82], Loss: 0.0413
Epoch [10/10], Batch [63/82], Loss: 0.0267
Epoch [10/10], Batch [64/82], Loss: 0.0035
Epoch [10/10], Batch [65/82], Loss: 0.0034
Epoch [10/10], Batch [66/82], Loss: 0.0149
Epoch [10/10], Batch [67/82], Loss: 0.1558
Epoch [10/10], Batch [68/82], Loss: 0.0870
Epoch [10/10], Batch [69/82], Loss: 0.0227
Epoch [10/10], Batch [70/82], Loss: 0.0056
Epoch [10/10], Batch [71/82], Loss: 0.0096
Epoch [10/10], Batch [72/82], Loss: 0.0265
Epoch [10/10], Batch [73/82], Loss: 0.0193
Epoch [10/10], Batch [74/82], Loss: 0.1016
Epoch [10/10], Batch [75/82], Loss: 0.0262
Epoch [10/10], Batch [76/82], Loss: 0.0562
Epoch [10/10], Batch [77/82], Loss: 0.0828
Epoch [10/10], Batch [78/82], Loss: 0.0648
Epoch [10/10], Batch [79/82], Loss: 0.0783
Epoch [10/10], Batch [80/82], Loss: 0.0137
Epoch [10/10], Batch [81/82], Loss: 0.0159
Epoch [10/10], Batch [82/82], Loss: 0.0127
Epoch [10/10], Average Loss: 0.0386
-----------------------------------------------------------
strategy: BEAM
iter: 3
epoch: 9
Test Loss: 0.4384
F1_overall: 0.5496
F1_AGENT: 0.6769
F1_TARGET: 0.4261
-----------------------------------------------------------
sorted_beam_scores: [(709, tensor(-0.3197, dtype=torch.float64)), (1086, tensor(-0.2971, dtype=torch.float64)), (230, tensor(-0.2721, dtype=torch.float64)), (2540, tensor(-0.2573, dtype=torch.float64)), (394, tensor(-0.2522, dtype=torch.float64)), (2009, tensor(-0.2448, dtype=torch.float64)), (1237, tensor(-0.2433, dtype=torch.float64)), (1161, tensor(-0.2321, dtype=torch.float64)), (1944, tensor(-0.2300, dtype=torch.float64)), (1417, tensor(-0.2295, dtype=torch.float64)), (950, tensor(-0.2291, dtype=torch.float64)), (2266, tensor(-0.2154, dtype=torch.float64)), (2150, tensor(-0.2120, dtype=torch.float64)), (53, tensor(-0.2098, dtype=torch.float64)), (1095, tensor(-0.2084, dtype=torch.float64)), (881, tensor(-0.2062, dtype=torch.float64)), (686, tensor(-0.2014, dtype=torch.float64)), (1810, tensor(-0.2011, dtype=torch.float64)), (735, tensor(-0.1961, dtype=torch.float64)), (1033, tensor(-0.1924, dtype=torch.float64)), (955, tensor(-0.1906, dtype=torch.float64)), (2485, tensor(-0.1885, dtype=torch.float64)), (690, tensor(-0.1863, dtype=torch.float64)), (481, tensor(-0.1857, dtype=torch.float64)), (252, tensor(-0.1854, dtype=torch.float64)), (967, tensor(-0.1849, dtype=torch.float64)), (1329, tensor(-0.1836, dtype=torch.float64)), (350, tensor(-0.1832, dtype=torch.float64)), (2490, tensor(-0.1783, dtype=torch.float64)), (2479, tensor(-0.1765, dtype=torch.float64)), (2705, tensor(-0.1749, dtype=torch.float64)), (1564, tensor(-0.1742, dtype=torch.float64)), (1809, tensor(-0.1730, dtype=torch.float64)), (310, tensor(-0.1729, dtype=torch.float64)), (724, tensor(-0.1719, dtype=torch.float64)), (2584, tensor(-0.1715, dtype=torch.float64)), (496, tensor(-0.1698, dtype=torch.float64)), (167, tensor(-0.1654, dtype=torch.float64)), (2752, tensor(-0.1650, dtype=torch.float64)), (205, tensor(-0.1648, dtype=torch.float64)), (2646, tensor(-0.1645, dtype=torch.float64)), (2014, tensor(-0.1643, dtype=torch.float64)), (2441, tensor(-0.1642, dtype=torch.float64)), (2127, tensor(-0.1638, dtype=torch.float64)), (177, tensor(-0.1618, dtype=torch.float64)), (661, tensor(-0.1609, dtype=torch.float64)), (2625, tensor(-0.1609, dtype=torch.float64)), (1373, tensor(-0.1605, dtype=torch.float64)), (2213, tensor(-0.1596, dtype=torch.float64)), (242, tensor(-0.1594, dtype=torch.float64)), (227, tensor(-0.1573, dtype=torch.float64)), (741, tensor(-0.1572, dtype=torch.float64)), (1200, tensor(-0.1562, dtype=torch.float64)), (2062, tensor(-0.1550, dtype=torch.float64)), (1691, tensor(-0.1545, dtype=torch.float64)), (2846, tensor(-0.1542, dtype=torch.float64)), (236, tensor(-0.1537, dtype=torch.float64)), (692, tensor(-0.1536, dtype=torch.float64)), (1982, tensor(-0.1535, dtype=torch.float64)), (2234, tensor(-0.1530, dtype=torch.float64)), (1052, tensor(-0.1529, dtype=torch.float64)), (2489, tensor(-0.1523, dtype=torch.float64)), (1635, tensor(-0.1519, dtype=torch.float64)), (1793, tensor(-0.1506, dtype=torch.float64)), (834, tensor(-0.1502, dtype=torch.float64)), (57, tensor(-0.1489, dtype=torch.float64)), (848, tensor(-0.1481, dtype=torch.float64)), (2508, tensor(-0.1480, dtype=torch.float64)), (91, tensor(-0.1474, dtype=torch.float64)), (2491, tensor(-0.1455, dtype=torch.float64)), (742, tensor(-0.1451, dtype=torch.float64)), (1413, tensor(-0.1450, dtype=torch.float64)), (645, tensor(-0.1450, dtype=torch.float64)), (1549, tensor(-0.1443, dtype=torch.float64)), (668, tensor(-0.1433, dtype=torch.float64)), (564, tensor(-0.1419, dtype=torch.float64)), (1664, tensor(-0.1410, dtype=torch.float64)), (2524, tensor(-0.1406, dtype=torch.float64)), (305, tensor(-0.1398, dtype=torch.float64)), (669, tensor(-0.1394, dtype=torch.float64)), (1277, tensor(-0.1385, dtype=torch.float64)), (502, tensor(-0.1384, dtype=torch.float64)), (1002, tensor(-0.1378, dtype=torch.float64)), (2502, tensor(-0.1374, dtype=torch.float64)), (653, tensor(-0.1373, dtype=torch.float64)), (1766, tensor(-0.1365, dtype=torch.float64)), (2283, tensor(-0.1361, dtype=torch.float64)), (2679, tensor(-0.1359, dtype=torch.float64)), (358, tensor(-0.1357, dtype=torch.float64)), (2879, tensor(-0.1356, dtype=torch.float64)), (48, tensor(-0.1350, dtype=torch.float64)), (896, tensor(-0.1343, dtype=torch.float64)), (2552, tensor(-0.1337, dtype=torch.float64)), (233, tensor(-0.1334, dtype=torch.float64)), (2486, tensor(-0.1333, dtype=torch.float64)), (1673, tensor(-0.1322, dtype=torch.float64)), (2334, tensor(-0.1322, dtype=torch.float64)), (509, tensor(-0.1319, dtype=torch.float64)), (628, tensor(-0.1319, dtype=torch.float64)), (1803, tensor(-0.1315, dtype=torch.float64)), (480, tensor(-0.1313, dtype=torch.float64)), (2504, tensor(-0.1308, dtype=torch.float64)), (2301, tensor(-0.1305, dtype=torch.float64)), (1602, tensor(-0.1298, dtype=torch.float64)), (572, tensor(-0.1295, dtype=torch.float64)), (654, tensor(-0.1291, dtype=torch.float64)), (2410, tensor(-0.1285, dtype=torch.float64)), (1855, tensor(-0.1284, dtype=torch.float64)), (1379, tensor(-0.1282, dtype=torch.float64)), (2519, tensor(-0.1271, dtype=torch.float64)), (2168, tensor(-0.1265, dtype=torch.float64)), (2861, tensor(-0.1263, dtype=torch.float64)), (1079, tensor(-0.1260, dtype=torch.float64)), (1893, tensor(-0.1260, dtype=torch.float64)), (1132, tensor(-0.1257, dtype=torch.float64)), (1762, tensor(-0.1253, dtype=torch.float64)), (1833, tensor(-0.1248, dtype=torch.float64)), (1891, tensor(-0.1247, dtype=torch.float64)), (398, tensor(-0.1246, dtype=torch.float64)), (635, tensor(-0.1245, dtype=torch.float64)), (1517, tensor(-0.1245, dtype=torch.float64)), (1649, tensor(-0.1237, dtype=torch.float64)), (2455, tensor(-0.1235, dtype=torch.float64)), (2510, tensor(-0.1235, dtype=torch.float64)), (1627, tensor(-0.1232, dtype=torch.float64)), (523, tensor(-0.1222, dtype=torch.float64)), (2446, tensor(-0.1222, dtype=torch.float64)), (378, tensor(-0.1221, dtype=torch.float64)), (1613, tensor(-0.1219, dtype=torch.float64)), (2027, tensor(-0.1219, dtype=torch.float64)), (1663, tensor(-0.1213, dtype=torch.float64)), (2306, tensor(-0.1211, dtype=torch.float64)), (938, tensor(-0.1208, dtype=torch.float64)), (1108, tensor(-0.1201, dtype=torch.float64)), (2026, tensor(-0.1198, dtype=torch.float64)), (163, tensor(-0.1192, dtype=torch.float64)), (106, tensor(-0.1192, dtype=torch.float64)), (963, tensor(-0.1192, dtype=torch.float64)), (731, tensor(-0.1190, dtype=torch.float64)), (2525, tensor(-0.1185, dtype=torch.float64)), (2574, tensor(-0.1184, dtype=torch.float64)), (744, tensor(-0.1184, dtype=torch.float64)), (1452, tensor(-0.1176, dtype=torch.float64)), (1187, tensor(-0.1176, dtype=torch.float64)), (2439, tensor(-0.1175, dtype=torch.float64)), (939, tensor(-0.1168, dtype=torch.float64)), (67, tensor(-0.1163, dtype=torch.float64)), (2577, tensor(-0.1160, dtype=torch.float64)), (2406, tensor(-0.1159, dtype=torch.float64)), (556, tensor(-0.1159, dtype=torch.float64)), (2303, tensor(-0.1158, dtype=torch.float64)), (530, tensor(-0.1153, dtype=torch.float64)), (55, tensor(-0.1152, dtype=torch.float64)), (1686, tensor(-0.1152, dtype=torch.float64)), (270, tensor(-0.1149, dtype=torch.float64)), (1618, tensor(-0.1149, dtype=torch.float64)), (1894, tensor(-0.1149, dtype=torch.float64)), (484, tensor(-0.1148, dtype=torch.float64)), (913, tensor(-0.1147, dtype=torch.float64)), (552, tensor(-0.1144, dtype=torch.float64)), (1464, tensor(-0.1141, dtype=torch.float64)), (1559, tensor(-0.1140, dtype=torch.float64)), (1570, tensor(-0.1140, dtype=torch.float64)), (1177, tensor(-0.1137, dtype=torch.float64)), (1482, tensor(-0.1134, dtype=torch.float64)), (1966, tensor(-0.1132, dtype=torch.float64)), (1499, tensor(-0.1132, dtype=torch.float64)), (594, tensor(-0.1131, dtype=torch.float64)), (2872, tensor(-0.1130, dtype=torch.float64)), (264, tensor(-0.1128, dtype=torch.float64)), (370, tensor(-0.1127, dtype=torch.float64)), (1903, tensor(-0.1125, dtype=torch.float64)), (2075, tensor(-0.1124, dtype=torch.float64)), (372, tensor(-0.1120, dtype=torch.float64)), (443, tensor(-0.1117, dtype=torch.float64)), (2671, tensor(-0.1116, dtype=torch.float64)), (1037, tensor(-0.1116, dtype=torch.float64)), (1607, tensor(-0.1115, dtype=torch.float64)), (353, tensor(-0.1109, dtype=torch.float64)), (1525, tensor(-0.1107, dtype=torch.float64)), (293, tensor(-0.1106, dtype=torch.float64)), (2199, tensor(-0.1102, dtype=torch.float64)), (10, tensor(-0.1102, dtype=torch.float64)), (65, tensor(-0.1096, dtype=torch.float64)), (2765, tensor(-0.1094, dtype=torch.float64)), (417, tensor(-0.1094, dtype=torch.float64)), (2522, tensor(-0.1092, dtype=torch.float64)), (278, tensor(-0.1091, dtype=torch.float64)), (767, tensor(-0.1089, dtype=torch.float64)), (1743, tensor(-0.1086, dtype=torch.float64)), (621, tensor(-0.1085, dtype=torch.float64)), (2437, tensor(-0.1084, dtype=torch.float64)), (1013, tensor(-0.1079, dtype=torch.float64)), (994, tensor(-0.1079, dtype=torch.float64)), (1029, tensor(-0.1073, dtype=torch.float64)), (880, tensor(-0.1071, dtype=torch.float64)), (395, tensor(-0.1071, dtype=torch.float64)), (2066, tensor(-0.1070, dtype=torch.float64)), (1641, tensor(-0.1068, dtype=torch.float64)), (539, tensor(-0.1067, dtype=torch.float64)), (354, tensor(-0.1065, dtype=torch.float64)), (1467, tensor(-0.1065, dtype=torch.float64)), (1015, tensor(-0.1062, dtype=torch.float64)), (2005, tensor(-0.1062, dtype=torch.float64)), (1016, tensor(-0.1061, dtype=torch.float64)), (470, tensor(-0.1060, dtype=torch.float64)), (1904, tensor(-0.1059, dtype=torch.float64)), (1799, tensor(-0.1057, dtype=torch.float64)), (2766, tensor(-0.1055, dtype=torch.float64)), (764, tensor(-0.1053, dtype=torch.float64)), (1939, tensor(-0.1051, dtype=torch.float64)), (2530, tensor(-0.1050, dtype=torch.float64)), (2112, tensor(-0.1048, dtype=torch.float64)), (1128, tensor(-0.1046, dtype=torch.float64)), (79, tensor(-0.1046, dtype=torch.float64)), (281, tensor(-0.1045, dtype=torch.float64)), (1062, tensor(-0.1042, dtype=torch.float64)), (571, tensor(-0.1041, dtype=torch.float64)), (550, tensor(-0.1040, dtype=torch.float64)), (1088, tensor(-0.1040, dtype=torch.float64)), (2536, tensor(-0.1039, dtype=torch.float64)), (1332, tensor(-0.1037, dtype=torch.float64)), (2599, tensor(-0.1034, dtype=torch.float64)), (1800, tensor(-0.1034, dtype=torch.float64)), (888, tensor(-0.1030, dtype=torch.float64)), (726, tensor(-0.1030, dtype=torch.float64)), (416, tensor(-0.1028, dtype=torch.float64)), (2036, tensor(-0.1027, dtype=torch.float64)), (934, tensor(-0.1027, dtype=torch.float64)), (1209, tensor(-0.1024, dtype=torch.float64)), (2505, tensor(-0.1022, dtype=torch.float64)), (45, tensor(-0.1018, dtype=torch.float64)), (1149, tensor(-0.1018, dtype=torch.float64)), (1164, tensor(-0.1018, dtype=torch.float64)), (84, tensor(-0.1018, dtype=torch.float64)), (2257, tensor(-0.1017, dtype=torch.float64)), (1842, tensor(-0.1013, dtype=torch.float64)), (2685, tensor(-0.1012, dtype=torch.float64)), (1914, tensor(-0.1010, dtype=torch.float64)), (276, tensor(-0.1010, dtype=torch.float64)), (1502, tensor(-0.1009, dtype=torch.float64)), (42, tensor(-0.1007, dtype=torch.float64)), (0, tensor(-0.1007, dtype=torch.float64)), (2460, tensor(-0.1006, dtype=torch.float64)), (1160, tensor(-0.1006, dtype=torch.float64)), (491, tensor(-0.1006, dtype=torch.float64)), (1301, tensor(-0.1001, dtype=torch.float64)), (245, tensor(-0.1001, dtype=torch.float64)), (436, tensor(-0.1000, dtype=torch.float64)), (399, tensor(-0.1000, dtype=torch.float64)), (2084, tensor(-0.0999, dtype=torch.float64)), (2468, tensor(-0.0997, dtype=torch.float64)), (1520, tensor(-0.0997, dtype=torch.float64)), (2771, tensor(-0.0995, dtype=torch.float64)), (2337, tensor(-0.0990, dtype=torch.float64)), (1221, tensor(-0.0989, dtype=torch.float64)), (2312, tensor(-0.0989, dtype=torch.float64)), (1352, tensor(-0.0989, dtype=torch.float64)), (2311, tensor(-0.0982, dtype=torch.float64)), (596, tensor(-0.0981, dtype=torch.float64)), (815, tensor(-0.0981, dtype=torch.float64)), (2443, tensor(-0.0981, dtype=torch.float64)), (827, tensor(-0.0980, dtype=torch.float64)), (1722, tensor(-0.0980, dtype=torch.float64)), (1121, tensor(-0.0977, dtype=torch.float64)), (684, tensor(-0.0977, dtype=torch.float64)), (206, tensor(-0.0974, dtype=torch.float64)), (849, tensor(-0.0972, dtype=torch.float64)), (2757, tensor(-0.0972, dtype=torch.float64)), (2057, tensor(-0.0972, dtype=torch.float64)), (664, tensor(-0.0971, dtype=torch.float64)), (1008, tensor(-0.0971, dtype=torch.float64)), (2358, tensor(-0.0967, dtype=torch.float64)), (1043, tensor(-0.0967, dtype=torch.float64)), (1399, tensor(-0.0964, dtype=torch.float64)), (1304, tensor(-0.0963, dtype=torch.float64)), (2534, tensor(-0.0963, dtype=torch.float64)), (2750, tensor(-0.0961, dtype=torch.float64)), (61, tensor(-0.0961, dtype=torch.float64)), (477, tensor(-0.0961, dtype=torch.float64)), (852, tensor(-0.0960, dtype=torch.float64)), (1644, tensor(-0.0959, dtype=torch.float64)), (2346, tensor(-0.0949, dtype=torch.float64)), (854, tensor(-0.0949, dtype=torch.float64)), (2131, tensor(-0.0948, dtype=torch.float64)), (2841, tensor(-0.0948, dtype=torch.float64)), (672, tensor(-0.0947, dtype=torch.float64)), (2570, tensor(-0.0947, dtype=torch.float64)), (260, tensor(-0.0946, dtype=torch.float64)), (333, tensor(-0.0946, dtype=torch.float64)), (682, tensor(-0.0946, dtype=torch.float64)), (376, tensor(-0.0946, dtype=torch.float64)), (1742, tensor(-0.0944, dtype=torch.float64)), (1462, tensor(-0.0944, dtype=torch.float64)), (99, tensor(-0.0944, dtype=torch.float64)), (112, tensor(-0.0943, dtype=torch.float64)), (506, tensor(-0.0943, dtype=torch.float64)), (2690, tensor(-0.0942, dtype=torch.float64)), (2859, tensor(-0.0941, dtype=torch.float64)), (410, tensor(-0.0941, dtype=torch.float64)), (2324, tensor(-0.0940, dtype=torch.float64)), (2467, tensor(-0.0939, dtype=torch.float64)), (1920, tensor(-0.0937, dtype=torch.float64)), (1125, tensor(-0.0935, dtype=torch.float64)), (2626, tensor(-0.0935, dtype=torch.float64)), (1222, tensor(-0.0933, dtype=torch.float64)), (93, tensor(-0.0933, dtype=torch.float64)), (2475, tensor(-0.0931, dtype=torch.float64)), (2087, tensor(-0.0926, dtype=torch.float64)), (858, tensor(-0.0925, dtype=torch.float64)), (1333, tensor(-0.0925, dtype=torch.float64)), (851, tensor(-0.0923, dtype=torch.float64)), (2167, tensor(-0.0922, dtype=torch.float64)), (116, tensor(-0.0922, dtype=torch.float64)), (2608, tensor(-0.0922, dtype=torch.float64)), (1441, tensor(-0.0922, dtype=torch.float64)), (323, tensor(-0.0921, dtype=torch.float64)), (2367, tensor(-0.0920, dtype=torch.float64)), (452, tensor(-0.0919, dtype=torch.float64)), (636, tensor(-0.0917, dtype=torch.float64)), (957, tensor(-0.0916, dtype=torch.float64)), (558, tensor(-0.0916, dtype=torch.float64)), (1522, tensor(-0.0916, dtype=torch.float64)), (1330, tensor(-0.0914, dtype=torch.float64)), (2404, tensor(-0.0913, dtype=torch.float64)), (911, tensor(-0.0913, dtype=torch.float64)), (2564, tensor(-0.0911, dtype=torch.float64)), (145, tensor(-0.0910, dtype=torch.float64)), (1254, tensor(-0.0910, dtype=torch.float64)), (120, tensor(-0.0909, dtype=torch.float64)), (2650, tensor(-0.0909, dtype=torch.float64)), (1446, tensor(-0.0908, dtype=torch.float64)), (2105, tensor(-0.0907, dtype=torch.float64)), (2788, tensor(-0.0906, dtype=torch.float64)), (979, tensor(-0.0906, dtype=torch.float64)), (1478, tensor(-0.0906, dtype=torch.float64)), (2878, tensor(-0.0906, dtype=torch.float64)), (2096, tensor(-0.0905, dtype=torch.float64)), (601, tensor(-0.0904, dtype=torch.float64)), (2778, tensor(-0.0902, dtype=torch.float64)), (2575, tensor(-0.0902, dtype=torch.float64)), (1306, tensor(-0.0901, dtype=torch.float64)), (2825, tensor(-0.0899, dtype=torch.float64)), (303, tensor(-0.0898, dtype=torch.float64)), (1271, tensor(-0.0897, dtype=torch.float64)), (1785, tensor(-0.0896, dtype=torch.float64)), (1593, tensor(-0.0894, dtype=torch.float64)), (734, tensor(-0.0891, dtype=torch.float64)), (24, tensor(-0.0890, dtype=torch.float64)), (586, tensor(-0.0890, dtype=torch.float64)), (2798, tensor(-0.0889, dtype=torch.float64)), (543, tensor(-0.0886, dtype=torch.float64)), (414, tensor(-0.0886, dtype=torch.float64)), (980, tensor(-0.0885, dtype=torch.float64)), (2847, tensor(-0.0885, dtype=torch.float64)), (2054, tensor(-0.0884, dtype=torch.float64)), (2445, tensor(-0.0883, dtype=torch.float64)), (400, tensor(-0.0883, dtype=torch.float64)), (715, tensor(-0.0882, dtype=torch.float64)), (1423, tensor(-0.0881, dtype=torch.float64)), (2291, tensor(-0.0881, dtype=torch.float64)), (1738, tensor(-0.0881, dtype=torch.float64)), (88, tensor(-0.0881, dtype=torch.float64)), (1537, tensor(-0.0880, dtype=torch.float64)), (511, tensor(-0.0878, dtype=torch.float64)), (366, tensor(-0.0878, dtype=torch.float64)), (667, tensor(-0.0875, dtype=torch.float64)), (2263, tensor(-0.0875, dtype=torch.float64)), (300, tensor(-0.0872, dtype=torch.float64)), (283, tensor(-0.0871, dtype=torch.float64)), (431, tensor(-0.0870, dtype=torch.float64)), (1777, tensor(-0.0868, dtype=torch.float64)), (222, tensor(-0.0868, dtype=torch.float64)), (1406, tensor(-0.0868, dtype=torch.float64)), (2010, tensor(-0.0867, dtype=torch.float64)), (2383, tensor(-0.0865, dtype=torch.float64)), (2828, tensor(-0.0865, dtype=torch.float64)), (891, tensor(-0.0865, dtype=torch.float64)), (2795, tensor(-0.0861, dtype=torch.float64)), (2528, tensor(-0.0860, dtype=torch.float64)), (1060, tensor(-0.0860, dtype=torch.float64)), (723, tensor(-0.0860, dtype=torch.float64)), (1702, tensor(-0.0860, dtype=torch.float64)), (525, tensor(-0.0859, dtype=torch.float64)), (307, tensor(-0.0859, dtype=torch.float64)), (1867, tensor(-0.0852, dtype=torch.float64)), (2634, tensor(-0.0851, dtype=torch.float64)), (1794, tensor(-0.0851, dtype=torch.float64)), (1032, tensor(-0.0851, dtype=torch.float64)), (244, tensor(-0.0851, dtype=torch.float64)), (348, tensor(-0.0848, dtype=torch.float64)), (2614, tensor(-0.0848, dtype=torch.float64)), (1415, tensor(-0.0845, dtype=torch.float64)), (100, tensor(-0.0843, dtype=torch.float64)), (1521, tensor(-0.0842, dtype=torch.float64)), (2764, tensor(-0.0838, dtype=torch.float64)), (961, tensor(-0.0837, dtype=torch.float64)), (1527, tensor(-0.0837, dtype=torch.float64)), (1729, tensor(-0.0836, dtype=torch.float64)), (1812, tensor(-0.0832, dtype=torch.float64)), (2680, tensor(-0.0832, dtype=torch.float64)), (1945, tensor(-0.0832, dtype=torch.float64)), (2193, tensor(-0.0830, dtype=torch.float64)), (2001, tensor(-0.0830, dtype=torch.float64)), (1772, tensor(-0.0830, dtype=torch.float64)), (2655, tensor(-0.0829, dtype=torch.float64)), (2606, tensor(-0.0829, dtype=torch.float64)), (842, tensor(-0.0828, dtype=torch.float64)), (2863, tensor(-0.0828, dtype=torch.float64)), (2228, tensor(-0.0828, dtype=torch.float64)), (122, tensor(-0.0828, dtype=torch.float64)), (1575, tensor(-0.0826, dtype=torch.float64)), (2305, tensor(-0.0826, dtype=torch.float64)), (2526, tensor(-0.0826, dtype=torch.float64)), (1956, tensor(-0.0825, dtype=torch.float64)), (1798, tensor(-0.0823, dtype=torch.float64)), (2762, tensor(-0.0822, dtype=torch.float64)), (697, tensor(-0.0821, dtype=torch.float64)), (2809, tensor(-0.0821, dtype=torch.float64)), (1695, tensor(-0.0820, dtype=torch.float64)), (1882, tensor(-0.0819, dtype=torch.float64)), (63, tensor(-0.0819, dtype=torch.float64)), (2063, tensor(-0.0816, dtype=torch.float64)), (1100, tensor(-0.0815, dtype=torch.float64)), (107, tensor(-0.0812, dtype=torch.float64)), (182, tensor(-0.0812, dtype=torch.float64)), (1259, tensor(-0.0809, dtype=torch.float64)), (402, tensor(-0.0809, dtype=torch.float64)), (553, tensor(-0.0809, dtype=torch.float64)), (1933, tensor(-0.0809, dtype=torch.float64)), (437, tensor(-0.0808, dtype=torch.float64)), (1418, tensor(-0.0807, dtype=torch.float64)), (670, tensor(-0.0806, dtype=torch.float64)), (658, tensor(-0.0805, dtype=torch.float64)), (2686, tensor(-0.0804, dtype=torch.float64)), (2776, tensor(-0.0804, dtype=torch.float64)), (465, tensor(-0.0803, dtype=torch.float64)), (456, tensor(-0.0800, dtype=torch.float64)), (1836, tensor(-0.0800, dtype=torch.float64)), (2465, tensor(-0.0800, dtype=torch.float64)), (2392, tensor(-0.0799, dtype=torch.float64)), (968, tensor(-0.0799, dtype=torch.float64)), (875, tensor(-0.0799, dtype=torch.float64)), (1421, tensor(-0.0798, dtype=torch.float64)), (2153, tensor(-0.0798, dtype=torch.float64)), (2113, tensor(-0.0797, dtype=torch.float64)), (220, tensor(-0.0797, dtype=torch.float64)), (2473, tensor(-0.0797, dtype=torch.float64)), (2683, tensor(-0.0796, dtype=torch.float64)), (2156, tensor(-0.0794, dtype=torch.float64)), (388, tensor(-0.0792, dtype=torch.float64)), (1789, tensor(-0.0791, dtype=torch.float64)), (845, tensor(-0.0789, dtype=torch.float64)), (732, tensor(-0.0788, dtype=torch.float64)), (1393, tensor(-0.0786, dtype=torch.float64)), (805, tensor(-0.0786, dtype=torch.float64)), (2412, tensor(-0.0786, dtype=torch.float64)), (622, tensor(-0.0785, dtype=torch.float64)), (259, tensor(-0.0784, dtype=torch.float64)), (722, tensor(-0.0784, dtype=torch.float64)), (2487, tensor(-0.0783, dtype=torch.float64)), (369, tensor(-0.0778, dtype=torch.float64)), (1166, tensor(-0.0778, dtype=torch.float64)), (1213, tensor(-0.0777, dtype=torch.float64)), (1539, tensor(-0.0776, dtype=torch.float64)), (237, tensor(-0.0776, dtype=torch.float64)), (786, tensor(-0.0776, dtype=torch.float64)), (1825, tensor(-0.0775, dtype=torch.float64)), (835, tensor(-0.0774, dtype=torch.float64)), (70, tensor(-0.0772, dtype=torch.float64)), (832, tensor(-0.0771, dtype=torch.float64)), (1838, tensor(-0.0770, dtype=torch.float64)), (1888, tensor(-0.0770, dtype=torch.float64)), (1009, tensor(-0.0770, dtype=torch.float64)), (2170, tensor(-0.0770, dtype=torch.float64)), (2360, tensor(-0.0769, dtype=torch.float64)), (2571, tensor(-0.0768, dtype=torch.float64)), (1951, tensor(-0.0766, dtype=torch.float64)), (2507, tensor(-0.0765, dtype=torch.float64)), (1991, tensor(-0.0765, dtype=torch.float64)), (2434, tensor(-0.0765, dtype=torch.float64)), (1339, tensor(-0.0765, dtype=torch.float64)), (2551, tensor(-0.0764, dtype=torch.float64)), (2763, tensor(-0.0764, dtype=torch.float64)), (1282, tensor(-0.0764, dtype=torch.float64)), (1572, tensor(-0.0764, dtype=torch.float64)), (2031, tensor(-0.0763, dtype=torch.float64)), (2811, tensor(-0.0760, dtype=torch.float64)), (1170, tensor(-0.0759, dtype=torch.float64)), (2124, tensor(-0.0759, dtype=torch.float64)), (331, tensor(-0.0759, dtype=torch.float64)), (2050, tensor(-0.0759, dtype=torch.float64)), (792, tensor(-0.0757, dtype=torch.float64)), (1210, tensor(-0.0756, dtype=torch.float64)), (1107, tensor(-0.0756, dtype=torch.float64)), (2875, tensor(-0.0756, dtype=torch.float64)), (1977, tensor(-0.0755, dtype=torch.float64)), (972, tensor(-0.0755, dtype=torch.float64)), (679, tensor(-0.0752, dtype=torch.float64)), (241, tensor(-0.0751, dtype=torch.float64)), (688, tensor(-0.0751, dtype=torch.float64)), (929, tensor(-0.0750, dtype=torch.float64)), (1760, tensor(-0.0749, dtype=torch.float64)), (2760, tensor(-0.0748, dtype=torch.float64)), (238, tensor(-0.0748, dtype=torch.float64)), (2464, tensor(-0.0748, dtype=torch.float64)), (652, tensor(-0.0747, dtype=torch.float64)), (86, tensor(-0.0747, dtype=torch.float64)), (96, tensor(-0.0746, dtype=torch.float64)), (590, tensor(-0.0745, dtype=torch.float64)), (1010, tensor(-0.0745, dtype=torch.float64)), (2803, tensor(-0.0745, dtype=torch.float64)), (1375, tensor(-0.0744, dtype=torch.float64)), (1632, tensor(-0.0744, dtype=torch.float64)), (660, tensor(-0.0744, dtype=torch.float64)), (2630, tensor(-0.0743, dtype=torch.float64)), (518, tensor(-0.0742, dtype=torch.float64)), (68, tensor(-0.0741, dtype=torch.float64)), (1203, tensor(-0.0740, dtype=torch.float64)), (608, tensor(-0.0739, dtype=torch.float64)), (1082, tensor(-0.0739, dtype=torch.float64)), (2049, tensor(-0.0738, dtype=torch.float64)), (1343, tensor(-0.0738, dtype=torch.float64)), (196, tensor(-0.0736, dtype=torch.float64)), (251, tensor(-0.0736, dtype=torch.float64)), (299, tensor(-0.0736, dtype=torch.float64)), (18, tensor(-0.0735, dtype=torch.float64)), (1993, tensor(-0.0734, dtype=torch.float64)), (1021, tensor(-0.0734, dtype=torch.float64)), (1727, tensor(-0.0733, dtype=torch.float64)), (287, tensor(-0.0733, dtype=torch.float64)), (1815, tensor(-0.0731, dtype=torch.float64)), (2831, tensor(-0.0730, dtype=torch.float64)), (763, tensor(-0.0730, dtype=torch.float64)), (1705, tensor(-0.0729, dtype=torch.float64)), (1678, tensor(-0.0728, dtype=torch.float64)), (2355, tensor(-0.0728, dtype=torch.float64)), (865, tensor(-0.0725, dtype=torch.float64)), (356, tensor(-0.0725, dtype=torch.float64)), (362, tensor(-0.0722, dtype=torch.float64)), (774, tensor(-0.0722, dtype=torch.float64)), (1412, tensor(-0.0721, dtype=torch.float64)), (1988, tensor(-0.0719, dtype=torch.float64)), (134, tensor(-0.0719, dtype=torch.float64)), (1495, tensor(-0.0716, dtype=torch.float64)), (1426, tensor(-0.0714, dtype=torch.float64)), (1267, tensor(-0.0714, dtype=torch.float64)), (2684, tensor(-0.0713, dtype=torch.float64)), (2480, tensor(-0.0713, dtype=torch.float64)), (1101, tensor(-0.0712, dtype=torch.float64)), (183, tensor(-0.0711, dtype=torch.float64)), (2538, tensor(-0.0710, dtype=torch.float64)), (2511, tensor(-0.0710, dtype=torch.float64)), (199, tensor(-0.0709, dtype=torch.float64)), (2314, tensor(-0.0708, dtype=torch.float64)), (611, tensor(-0.0704, dtype=torch.float64)), (2701, tensor(-0.0702, dtype=torch.float64)), (483, tensor(-0.0702, dtype=torch.float64)), (2643, tensor(-0.0701, dtype=torch.float64)), (915, tensor(-0.0701, dtype=torch.float64)), (1670, tensor(-0.0700, dtype=torch.float64)), (1366, tensor(-0.0699, dtype=torch.float64)), (2741, tensor(-0.0699, dtype=torch.float64)), (1165, tensor(-0.0697, dtype=torch.float64)), (1489, tensor(-0.0697, dtype=torch.float64)), (1261, tensor(-0.0697, dtype=torch.float64)), (58, tensor(-0.0696, dtype=torch.float64)), (2845, tensor(-0.0696, dtype=torch.float64)), (2382, tensor(-0.0696, dtype=torch.float64)), (1001, tensor(-0.0696, dtype=torch.float64)), (1226, tensor(-0.0695, dtype=torch.float64)), (2271, tensor(-0.0694, dtype=torch.float64)), (2617, tensor(-0.0694, dtype=torch.float64)), (593, tensor(-0.0694, dtype=torch.float64)), (1470, tensor(-0.0693, dtype=torch.float64)), (548, tensor(-0.0693, dtype=torch.float64)), (982, tensor(-0.0692, dtype=torch.float64)), (1297, tensor(-0.0692, dtype=torch.float64)), (2194, tensor(-0.0691, dtype=torch.float64)), (426, tensor(-0.0689, dtype=torch.float64)), (248, tensor(-0.0689, dtype=torch.float64)), (1819, tensor(-0.0689, dtype=torch.float64)), (2469, tensor(-0.0688, dtype=torch.float64)), (2115, tensor(-0.0687, dtype=torch.float64)), (627, tensor(-0.0687, dtype=torch.float64)), (2853, tensor(-0.0687, dtype=torch.float64)), (2755, tensor(-0.0686, dtype=torch.float64)), (140, tensor(-0.0685, dtype=torch.float64)), (201, tensor(-0.0684, dtype=torch.float64)), (2294, tensor(-0.0681, dtype=torch.float64)), (8, tensor(-0.0680, dtype=torch.float64)), (1910, tensor(-0.0679, dtype=torch.float64)), (2707, tensor(-0.0679, dtype=torch.float64)), (1069, tensor(-0.0679, dtype=torch.float64)), (570, tensor(-0.0677, dtype=torch.float64)), (405, tensor(-0.0676, dtype=torch.float64)), (2279, tensor(-0.0676, dtype=torch.float64)), (2384, tensor(-0.0676, dtype=torch.float64)), (1681, tensor(-0.0675, dtype=torch.float64)), (16, tensor(-0.0675, dtype=torch.float64)), (392, tensor(-0.0674, dtype=torch.float64)), (650, tensor(-0.0673, dtype=torch.float64)), (2580, tensor(-0.0672, dtype=torch.float64)), (614, tensor(-0.0671, dtype=torch.float64)), (2447, tensor(-0.0670, dtype=torch.float64)), (687, tensor(-0.0670, dtype=torch.float64)), (1831, tensor(-0.0670, dtype=torch.float64)), (520, tensor(-0.0669, dtype=torch.float64)), (2662, tensor(-0.0668, dtype=torch.float64)), (565, tensor(-0.0668, dtype=torch.float64)), (1630, tensor(-0.0668, dtype=torch.float64)), (537, tensor(-0.0668, dtype=torch.float64)), (721, tensor(-0.0665, dtype=torch.float64)), (2021, tensor(-0.0665, dtype=torch.float64)), (2638, tensor(-0.0665, dtype=torch.float64)), (1674, tensor(-0.0664, dtype=torch.float64)), (1391, tensor(-0.0664, dtype=torch.float64)), (1224, tensor(-0.0663, dtype=torch.float64)), (2470, tensor(-0.0661, dtype=torch.float64)), (1693, tensor(-0.0660, dtype=torch.float64)), (2729, tensor(-0.0660, dtype=torch.float64)), (2868, tensor(-0.0660, dtype=torch.float64)), (157, tensor(-0.0657, dtype=torch.float64)), (1890, tensor(-0.0657, dtype=torch.float64)), (332, tensor(-0.0657, dtype=torch.float64)), (873, tensor(-0.0656, dtype=torch.float64)), (2499, tensor(-0.0656, dtype=torch.float64)), (2344, tensor(-0.0655, dtype=torch.float64)), (788, tensor(-0.0655, dtype=torch.float64)), (253, tensor(-0.0654, dtype=torch.float64)), (172, tensor(-0.0653, dtype=torch.float64)), (2211, tensor(-0.0652, dtype=torch.float64)), (945, tensor(-0.0652, dtype=torch.float64)), (2822, tensor(-0.0652, dtype=torch.float64)), (2165, tensor(-0.0651, dtype=torch.float64)), (610, tensor(-0.0651, dtype=torch.float64)), (893, tensor(-0.0649, dtype=torch.float64)), (2452, tensor(-0.0648, dtype=torch.float64)), (2100, tensor(-0.0646, dtype=torch.float64)), (1907, tensor(-0.0646, dtype=torch.float64)), (780, tensor(-0.0646, dtype=torch.float64)), (2880, tensor(-0.0645, dtype=torch.float64)), (860, tensor(-0.0645, dtype=torch.float64)), (2482, tensor(-0.0644, dtype=torch.float64)), (816, tensor(-0.0644, dtype=torch.float64)), (2186, tensor(-0.0643, dtype=torch.float64)), (1479, tensor(-0.0643, dtype=torch.float64)), (613, tensor(-0.0641, dtype=torch.float64)), (2331, tensor(-0.0641, dtype=torch.float64)), (2839, tensor(-0.0641, dtype=torch.float64)), (1582, tensor(-0.0640, dtype=torch.float64)), (1949, tensor(-0.0639, dtype=torch.float64)), (2728, tensor(-0.0639, dtype=torch.float64)), (439, tensor(-0.0638, dtype=torch.float64)), (795, tensor(-0.0638, dtype=torch.float64)), (1609, tensor(-0.0637, dtype=torch.float64)), (2605, tensor(-0.0636, dtype=torch.float64)), (2221, tensor(-0.0635, dtype=torch.float64)), (711, tensor(-0.0634, dtype=torch.float64)), (2829, tensor(-0.0634, dtype=torch.float64)), (2128, tensor(-0.0634, dtype=torch.float64)), (2422, tensor(-0.0633, dtype=torch.float64)), (1103, tensor(-0.0633, dtype=torch.float64)), (771, tensor(-0.0633, dtype=torch.float64)), (1541, tensor(-0.0632, dtype=torch.float64)), (1356, tensor(-0.0632, dtype=torch.float64)), (1350, tensor(-0.0632, dtype=torch.float64)), (2656, tensor(-0.0632, dtype=torch.float64)), (1138, tensor(-0.0631, dtype=torch.float64)), (885, tensor(-0.0631, dtype=torch.float64)), (977, tensor(-0.0630, dtype=torch.float64)), (756, tensor(-0.0630, dtype=torch.float64)), (662, tensor(-0.0629, dtype=torch.float64)), (229, tensor(-0.0629, dtype=torch.float64)), (2130, tensor(-0.0629, dtype=torch.float64)), (1422, tensor(-0.0629, dtype=torch.float64)), (1604, tensor(-0.0629, dtype=torch.float64)), (1374, tensor(-0.0628, dtype=torch.float64)), (1181, tensor(-0.0628, dtype=torch.float64)), (1256, tensor(-0.0627, dtype=torch.float64)), (462, tensor(-0.0626, dtype=torch.float64)), (1653, tensor(-0.0625, dtype=torch.float64)), (895, tensor(-0.0625, dtype=torch.float64)), (463, tensor(-0.0625, dtype=torch.float64)), (478, tensor(-0.0622, dtype=torch.float64)), (2000, tensor(-0.0622, dtype=torch.float64)), (225, tensor(-0.0621, dtype=torch.float64)), (1779, tensor(-0.0621, dtype=torch.float64)), (2245, tensor(-0.0619, dtype=torch.float64)), (425, tensor(-0.0618, dtype=torch.float64)), (2405, tensor(-0.0618, dtype=torch.float64)), (2618, tensor(-0.0617, dtype=torch.float64)), (2329, tensor(-0.0617, dtype=torch.float64)), (85, tensor(-0.0617, dtype=torch.float64)), (1868, tensor(-0.0616, dtype=torch.float64)), (2568, tensor(-0.0615, dtype=torch.float64)), (870, tensor(-0.0615, dtype=torch.float64)), (2340, tensor(-0.0614, dtype=torch.float64)), (2712, tensor(-0.0614, dtype=torch.float64)), (2411, tensor(-0.0613, dtype=torch.float64)), (1154, tensor(-0.0612, dtype=torch.float64)), (1251, tensor(-0.0612, dtype=torch.float64)), (2624, tensor(-0.0612, dtype=torch.float64)), (770, tensor(-0.0611, dtype=torch.float64)), (246, tensor(-0.0611, dtype=torch.float64)), (2819, tensor(-0.0610, dtype=torch.float64)), (1919, tensor(-0.0610, dtype=torch.float64)), (2593, tensor(-0.0610, dtype=torch.float64)), (1056, tensor(-0.0609, dtype=torch.float64)), (2444, tensor(-0.0609, dtype=torch.float64)), (1120, tensor(-0.0609, dtype=torch.float64)), (1466, tensor(-0.0609, dtype=torch.float64)), (1102, tensor(-0.0609, dtype=torch.float64)), (2871, tensor(-0.0608, dtype=torch.float64)), (1368, tensor(-0.0608, dtype=torch.float64)), (1619, tensor(-0.0608, dtype=torch.float64)), (9, tensor(-0.0606, dtype=torch.float64)), (2761, tensor(-0.0605, dtype=torch.float64)), (1886, tensor(-0.0605, dtype=torch.float64)), (75, tensor(-0.0605, dtype=torch.float64)), (1669, tensor(-0.0603, dtype=torch.float64)), (2691, tensor(-0.0603, dtype=torch.float64)), (2806, tensor(-0.0601, dtype=torch.float64)), (1756, tensor(-0.0601, dtype=torch.float64)), (998, tensor(-0.0601, dtype=torch.float64)), (2116, tensor(-0.0601, dtype=torch.float64)), (909, tensor(-0.0600, dtype=torch.float64)), (208, tensor(-0.0599, dtype=torch.float64)), (2229, tensor(-0.0599, dtype=torch.float64)), (2807, tensor(-0.0599, dtype=torch.float64)), (2840, tensor(-0.0598, dtype=torch.float64)), (1853, tensor(-0.0598, dtype=torch.float64)), (1487, tensor(-0.0597, dtype=torch.float64)), (187, tensor(-0.0597, dtype=torch.float64)), (2275, tensor(-0.0597, dtype=torch.float64)), (1048, tensor(-0.0597, dtype=torch.float64)), (1717, tensor(-0.0595, dtype=torch.float64)), (1719, tensor(-0.0594, dtype=torch.float64)), (1973, tensor(-0.0594, dtype=torch.float64)), (2345, tensor(-0.0594, dtype=torch.float64)), (228, tensor(-0.0593, dtype=torch.float64)), (461, tensor(-0.0592, dtype=torch.float64)), (1151, tensor(-0.0591, dtype=torch.float64)), (1380, tensor(-0.0590, dtype=torch.float64)), (790, tensor(-0.0590, dtype=torch.float64)), (2319, tensor(-0.0590, dtype=torch.float64)), (427, tensor(-0.0589, dtype=torch.float64)), (820, tensor(-0.0589, dtype=torch.float64)), (1336, tensor(-0.0589, dtype=torch.float64)), (648, tensor(-0.0589, dtype=torch.float64)), (908, tensor(-0.0588, dtype=torch.float64)), (1000, tensor(-0.0587, dtype=torch.float64)), (2388, tensor(-0.0587, dtype=torch.float64)), (1576, tensor(-0.0587, dtype=torch.float64)), (78, tensor(-0.0585, dtype=torch.float64)), (914, tensor(-0.0585, dtype=torch.float64)), (289, tensor(-0.0585, dtype=torch.float64)), (1307, tensor(-0.0585, dtype=torch.float64)), (2775, tensor(-0.0583, dtype=torch.float64)), (2832, tensor(-0.0583, dtype=torch.float64)), (1849, tensor(-0.0582, dtype=torch.float64)), (1587, tensor(-0.0582, dtype=torch.float64)), (2140, tensor(-0.0581, dtype=torch.float64)), (2389, tensor(-0.0580, dtype=torch.float64)), (2004, tensor(-0.0580, dtype=torch.float64)), (674, tensor(-0.0579, dtype=torch.float64)), (2804, tensor(-0.0579, dtype=torch.float64)), (1123, tensor(-0.0578, dtype=torch.float64)), (166, tensor(-0.0578, dtype=torch.float64)), (2201, tensor(-0.0578, dtype=torch.float64)), (1041, tensor(-0.0577, dtype=torch.float64)), (2553, tensor(-0.0577, dtype=torch.float64)), (203, tensor(-0.0577, dtype=torch.float64)), (1934, tensor(-0.0576, dtype=torch.float64)), (903, tensor(-0.0574, dtype=torch.float64)), (1543, tensor(-0.0574, dtype=torch.float64)), (1759, tensor(-0.0574, dtype=torch.float64)), (1220, tensor(-0.0574, dtype=torch.float64)), (819, tensor(-0.0573, dtype=torch.float64)), (2772, tensor(-0.0572, dtype=torch.float64)), (2791, tensor(-0.0572, dtype=torch.float64)), (2142, tensor(-0.0572, dtype=torch.float64)), (121, tensor(-0.0572, dtype=torch.float64)), (1268, tensor(-0.0572, dtype=torch.float64)), (1959, tensor(-0.0572, dtype=torch.float64)), (92, tensor(-0.0572, dtype=torch.float64)), (549, tensor(-0.0571, dtype=torch.float64)), (1362, tensor(-0.0571, dtype=torch.float64)), (1289, tensor(-0.0571, dtype=torch.float64)), (56, tensor(-0.0571, dtype=torch.float64)), (309, tensor(-0.0570, dtype=torch.float64)), (2366, tensor(-0.0570, dtype=torch.float64)), (1752, tensor(-0.0570, dtype=torch.float64)), (700, tensor(-0.0570, dtype=torch.float64)), (2710, tensor(-0.0569, dtype=torch.float64)), (217, tensor(-0.0569, dtype=torch.float64)), (1347, tensor(-0.0568, dtype=torch.float64)), (81, tensor(-0.0568, dtype=torch.float64)), (953, tensor(-0.0568, dtype=torch.float64)), (2226, tensor(-0.0567, dtype=torch.float64)), (2092, tensor(-0.0567, dtype=torch.float64)), (1658, tensor(-0.0566, dtype=torch.float64)), (1672, tensor(-0.0566, dtype=torch.float64)), (1361, tensor(-0.0565, dtype=torch.float64)), (1700, tensor(-0.0565, dtype=torch.float64)), (2233, tensor(-0.0565, dtype=torch.float64)), (2295, tensor(-0.0564, dtype=torch.float64)), (1428, tensor(-0.0564, dtype=torch.float64)), (1278, tensor(-0.0561, dtype=torch.float64)), (1477, tensor(-0.0561, dtype=torch.float64)), (797, tensor(-0.0561, dtype=torch.float64)), (420, tensor(-0.0560, dtype=torch.float64)), (368, tensor(-0.0559, dtype=torch.float64)), (2555, tensor(-0.0558, dtype=torch.float64)), (738, tensor(-0.0558, dtype=torch.float64)), (25, tensor(-0.0558, dtype=torch.float64)), (479, tensor(-0.0557, dtype=torch.float64)), (969, tensor(-0.0557, dtype=torch.float64)), (894, tensor(-0.0555, dtype=torch.float64)), (2352, tensor(-0.0555, dtype=torch.float64)), (2197, tensor(-0.0555, dtype=torch.float64)), (2856, tensor(-0.0555, dtype=torch.float64)), (1544, tensor(-0.0554, dtype=torch.float64)), (170, tensor(-0.0553, dtype=torch.float64)), (499, tensor(-0.0553, dtype=torch.float64)), (516, tensor(-0.0553, dtype=torch.float64)), (2161, tensor(-0.0552, dtype=torch.float64)), (551, tensor(-0.0551, dtype=torch.float64)), (2529, tensor(-0.0551, dtype=torch.float64)), (2500, tensor(-0.0551, dtype=torch.float64)), (1881, tensor(-0.0551, dtype=torch.float64)), (482, tensor(-0.0551, dtype=torch.float64)), (2278, tensor(-0.0550, dtype=torch.float64)), (1485, tensor(-0.0550, dtype=torch.float64)), (1410, tensor(-0.0550, dtype=torch.float64)), (313, tensor(-0.0550, dtype=torch.float64)), (1308, tensor(-0.0549, dtype=torch.float64)), (40, tensor(-0.0549, dtype=torch.float64)), (2462, tensor(-0.0549, dtype=torch.float64)), (325, tensor(-0.0549, dtype=torch.float64)), (2426, tensor(-0.0548, dtype=torch.float64)), (2623, tensor(-0.0548, dtype=torch.float64)), (1802, tensor(-0.0548, dtype=torch.float64)), (231, tensor(-0.0547, dtype=torch.float64)), (2734, tensor(-0.0547, dtype=torch.float64)), (1947, tensor(-0.0547, dtype=torch.float64)), (1848, tensor(-0.0545, dtype=torch.float64)), (1300, tensor(-0.0545, dtype=torch.float64)), (1396, tensor(-0.0545, dtype=torch.float64)), (602, tensor(-0.0545, dtype=torch.float64)), (2747, tensor(-0.0544, dtype=torch.float64)), (1645, tensor(-0.0544, dtype=torch.float64)), (1540, tensor(-0.0544, dtype=torch.float64)), (1443, tensor(-0.0543, dtype=torch.float64)), (2425, tensor(-0.0539, dtype=torch.float64)), (336, tensor(-0.0538, dtype=torch.float64)), (2013, tensor(-0.0538, dtype=torch.float64)), (1829, tensor(-0.0538, dtype=torch.float64)), (30, tensor(-0.0537, dtype=torch.float64)), (379, tensor(-0.0536, dtype=torch.float64)), (716, tensor(-0.0536, dtype=torch.float64)), (2217, tensor(-0.0536, dtype=torch.float64)), (585, tensor(-0.0536, dtype=torch.float64)), (1334, tensor(-0.0535, dtype=torch.float64)), (933, tensor(-0.0535, dtype=torch.float64)), (2249, tensor(-0.0534, dtype=torch.float64)), (2380, tensor(-0.0534, dtype=torch.float64)), (204, tensor(-0.0533, dtype=torch.float64)), (562, tensor(-0.0531, dtype=torch.float64)), (2621, tensor(-0.0530, dtype=torch.float64)), (2047, tensor(-0.0530, dtype=torch.float64)), (1408, tensor(-0.0530, dtype=torch.float64)), (1972, tensor(-0.0530, dtype=torch.float64)), (1598, tensor(-0.0529, dtype=torch.float64)), (1192, tensor(-0.0528, dtype=torch.float64)), (975, tensor(-0.0528, dtype=torch.float64)), (577, tensor(-0.0527, dtype=torch.float64)), (432, tensor(-0.0527, dtype=torch.float64)), (992, tensor(-0.0526, dtype=torch.float64)), (1324, tensor(-0.0526, dtype=torch.float64)), (1217, tensor(-0.0526, dtype=torch.float64)), (474, tensor(-0.0526, dtype=torch.float64)), (1469, tensor(-0.0526, dtype=torch.float64)), (713, tensor(-0.0526, dtype=torch.float64)), (1926, tensor(-0.0525, dtype=torch.float64)), (360, tensor(-0.0525, dtype=torch.float64)), (527, tensor(-0.0525, dtype=torch.float64)), (2742, tensor(-0.0525, dtype=torch.float64)), (1603, tensor(-0.0525, dtype=torch.float64)), (717, tensor(-0.0525, dtype=torch.float64)), (2700, tensor(-0.0524, dtype=torch.float64)), (2260, tensor(-0.0524, dtype=torch.float64)), (988, tensor(-0.0523, dtype=torch.float64)), (1654, tensor(-0.0523, dtype=torch.float64)), (1581, tensor(-0.0523, dtype=torch.float64)), (2022, tensor(-0.0522, dtype=torch.float64)), (1601, tensor(-0.0522, dtype=torch.float64)), (446, tensor(-0.0522, dtype=torch.float64)), (1294, tensor(-0.0521, dtype=torch.float64)), (2517, tensor(-0.0520, dtype=torch.float64)), (676, tensor(-0.0519, dtype=torch.float64)), (2438, tensor(-0.0519, dtype=torch.float64)), (2255, tensor(-0.0518, dtype=torch.float64)), (1483, tensor(-0.0518, dtype=torch.float64)), (1211, tensor(-0.0518, dtype=torch.float64)), (2058, tensor(-0.0517, dtype=torch.float64)), (946, tensor(-0.0517, dtype=torch.float64)), (219, tensor(-0.0516, dtype=torch.float64)), (2134, tensor(-0.0516, dtype=torch.float64)), (2240, tensor(-0.0516, dtype=torch.float64)), (1834, tensor(-0.0515, dtype=torch.float64)), (1648, tensor(-0.0515, dtype=torch.float64)), (2152, tensor(-0.0514, dtype=torch.float64)), (2280, tensor(-0.0513, dtype=torch.float64)), (2407, tensor(-0.0513, dtype=torch.float64)), (1030, tensor(-0.0513, dtype=torch.float64)), (1965, tensor(-0.0511, dtype=torch.float64)), (447, tensor(-0.0511, dtype=torch.float64)), (1340, tensor(-0.0511, dtype=torch.float64)), (1169, tensor(-0.0510, dtype=torch.float64)), (752, tensor(-0.0510, dtype=torch.float64)), (2166, tensor(-0.0510, dtype=torch.float64)), (2854, tensor(-0.0509, dtype=torch.float64)), (1077, tensor(-0.0509, dtype=torch.float64)), (876, tensor(-0.0509, dtype=torch.float64)), (862, tensor(-0.0508, dtype=torch.float64)), (917, tensor(-0.0508, dtype=torch.float64)), (540, tensor(-0.0508, dtype=torch.float64)), (2317, tensor(-0.0508, dtype=torch.float64)), (1409, tensor(-0.0508, dtype=torch.float64)), (340, tensor(-0.0507, dtype=torch.float64)), (2332, tensor(-0.0507, dtype=torch.float64)), (1585, tensor(-0.0506, dtype=torch.float64)), (1269, tensor(-0.0505, dtype=torch.float64)), (600, tensor(-0.0505, dtype=torch.float64)), (2652, tensor(-0.0504, dtype=torch.float64)), (1245, tensor(-0.0504, dtype=torch.float64)), (1287, tensor(-0.0504, dtype=torch.float64)), (1437, tensor(-0.0503, dtype=torch.float64)), (1081, tensor(-0.0503, dtype=torch.float64)), (2814, tensor(-0.0503, dtype=torch.float64)), (2195, tensor(-0.0502, dtype=torch.float64)), (1685, tensor(-0.0502, dtype=torch.float64)), (2264, tensor(-0.0501, dtype=torch.float64)), (2375, tensor(-0.0501, dtype=torch.float64)), (2622, tensor(-0.0500, dtype=torch.float64)), (442, tensor(-0.0500, dtype=torch.float64)), (2232, tensor(-0.0500, dtype=torch.float64)), (113, tensor(-0.0499, dtype=torch.float64)), (1770, tensor(-0.0499, dtype=torch.float64)), (2347, tensor(-0.0499, dtype=torch.float64)), (2200, tensor(-0.0498, dtype=torch.float64)), (2086, tensor(-0.0498, dtype=torch.float64)), (1846, tensor(-0.0498, dtype=torch.float64)), (1063, tensor(-0.0498, dtype=torch.float64)), (1153, tensor(-0.0498, dtype=torch.float64)), (2207, tensor(-0.0498, dtype=torch.float64)), (2697, tensor(-0.0497, dtype=torch.float64)), (861, tensor(-0.0497, dtype=torch.float64)), (345, tensor(-0.0496, dtype=torch.float64)), (1145, tensor(-0.0496, dtype=torch.float64)), (892, tensor(-0.0495, dtype=torch.float64)), (1456, tensor(-0.0495, dtype=torch.float64)), (1451, tensor(-0.0495, dtype=torch.float64)), (1385, tensor(-0.0494, dtype=torch.float64)), (1515, tensor(-0.0494, dtype=torch.float64)), (459, tensor(-0.0494, dtype=torch.float64)), (2816, tensor(-0.0494, dtype=torch.float64)), (2821, tensor(-0.0494, dtype=torch.float64)), (322, tensor(-0.0493, dtype=torch.float64)), (2850, tensor(-0.0492, dtype=torch.float64)), (1780, tensor(-0.0492, dtype=torch.float64)), (464, tensor(-0.0492, dtype=torch.float64)), (1872, tensor(-0.0491, dtype=torch.float64)), (727, tensor(-0.0491, dtype=torch.float64)), (62, tensor(-0.0491, dtype=torch.float64)), (2756, tensor(-0.0490, dtype=torch.float64)), (2781, tensor(-0.0490, dtype=torch.float64)), (1740, tensor(-0.0490, dtype=torch.float64)), (995, tensor(-0.0490, dtype=torch.float64)), (844, tensor(-0.0490, dtype=torch.float64)), (1292, tensor(-0.0489, dtype=torch.float64)), (659, tensor(-0.0489, dtype=torch.float64)), (2727, tensor(-0.0488, dtype=torch.float64)), (2316, tensor(-0.0488, dtype=torch.float64)), (576, tensor(-0.0488, dtype=torch.float64)), (1007, tensor(-0.0488, dtype=torch.float64)), (422, tensor(-0.0487, dtype=torch.float64)), (1986, tensor(-0.0487, dtype=torch.float64)), (702, tensor(-0.0487, dtype=torch.float64)), (2356, tensor(-0.0487, dtype=torch.float64)), (1344, tensor(-0.0485, dtype=torch.float64)), (588, tensor(-0.0485, dtype=torch.float64)), (209, tensor(-0.0485, dtype=torch.float64)), (2631, tensor(-0.0484, dtype=torch.float64)), (2145, tensor(-0.0484, dtype=torch.float64)), (1954, tensor(-0.0483, dtype=torch.float64)), (335, tensor(-0.0483, dtype=torch.float64)), (1911, tensor(-0.0483, dtype=torch.float64)), (1746, tensor(-0.0483, dtype=torch.float64)), (2315, tensor(-0.0482, dtype=torch.float64)), (1918, tensor(-0.0482, dtype=torch.float64)), (2155, tensor(-0.0482, dtype=torch.float64)), (960, tensor(-0.0482, dtype=torch.float64)), (282, tensor(-0.0481, dtype=torch.float64)), (1592, tensor(-0.0481, dtype=torch.float64)), (655, tensor(-0.0481, dtype=torch.float64)), (1480, tensor(-0.0481, dtype=torch.float64)), (1508, tensor(-0.0481, dtype=torch.float64)), (2668, tensor(-0.0481, dtype=torch.float64)), (1931, tensor(-0.0481, dtype=torch.float64)), (1832, tensor(-0.0481, dtype=torch.float64)), (2, tensor(-0.0480, dtype=torch.float64)), (991, tensor(-0.0478, dtype=torch.float64)), (1871, tensor(-0.0477, dtype=torch.float64)), (375, tensor(-0.0476, dtype=torch.float64)), (1530, tensor(-0.0476, dtype=torch.float64)), (1529, tensor(-0.0475, dtype=torch.float64)), (2717, tensor(-0.0475, dtype=torch.float64)), (920, tensor(-0.0475, dtype=torch.float64)), (47, tensor(-0.0473, dtype=torch.float64)), (2693, tensor(-0.0473, dtype=torch.float64)), (2704, tensor(-0.0473, dtype=torch.float64)), (1778, tensor(-0.0470, dtype=torch.float64)), (1185, tensor(-0.0470, dtype=torch.float64)), (1136, tensor(-0.0470, dtype=torch.float64)), (1061, tensor(-0.0470, dtype=torch.float64)), (1494, tensor(-0.0469, dtype=torch.float64)), (1843, tensor(-0.0469, dtype=torch.float64)), (212, tensor(-0.0469, dtype=torch.float64)), (1216, tensor(-0.0469, dtype=torch.float64)), (2421, tensor(-0.0469, dtype=torch.float64)), (2454, tensor(-0.0468, dtype=torch.float64)), (1044, tensor(-0.0468, dtype=torch.float64)), (1774, tensor(-0.0468, dtype=torch.float64)), (675, tensor(-0.0468, dtype=torch.float64)), (2858, tensor(-0.0468, dtype=torch.float64)), (2118, tensor(-0.0468, dtype=torch.float64)), (1551, tensor(-0.0468, dtype=torch.float64)), (2724, tensor(-0.0467, dtype=torch.float64)), (139, tensor(-0.0467, dtype=torch.float64)), (1680, tensor(-0.0467, dtype=torch.float64)), (612, tensor(-0.0467, dtype=torch.float64)), (811, tensor(-0.0466, dtype=torch.float64)), (1569, tensor(-0.0466, dtype=torch.float64)), (2633, tensor(-0.0465, dtype=torch.float64)), (2597, tensor(-0.0464, dtype=torch.float64)), (429, tensor(-0.0464, dtype=torch.float64)), (1909, tensor(-0.0463, dtype=torch.float64)), (776, tensor(-0.0462, dtype=torch.float64)), (1707, tensor(-0.0462, dtype=torch.float64)), (1042, tensor(-0.0461, dtype=torch.float64)), (584, tensor(-0.0461, dtype=torch.float64)), (1826, tensor(-0.0461, dtype=torch.float64)), (1281, tensor(-0.0461, dtype=torch.float64)), (615, tensor(-0.0461, dtype=torch.float64)), (175, tensor(-0.0460, dtype=torch.float64)), (2594, tensor(-0.0460, dtype=torch.float64)), (132, tensor(-0.0460, dtype=torch.float64)), (168, tensor(-0.0459, dtype=torch.float64)), (1204, tensor(-0.0459, dtype=torch.float64)), (1647, tensor(-0.0459, dtype=torch.float64)), (2427, tensor(-0.0459, dtype=torch.float64)), (284, tensor(-0.0458, dtype=torch.float64)), (1844, tensor(-0.0458, dtype=torch.float64)), (666, tensor(-0.0458, dtype=torch.float64)), (1175, tensor(-0.0458, dtype=torch.float64)), (1017, tensor(-0.0458, dtype=torch.float64)), (1430, tensor(-0.0458, dtype=torch.float64)), (2719, tensor(-0.0458, dtype=torch.float64)), (1519, tensor(-0.0457, dtype=torch.float64)), (2674, tensor(-0.0457, dtype=torch.float64)), (2208, tensor(-0.0456, dtype=torch.float64)), (1721, tensor(-0.0456, dtype=torch.float64)), (2516, tensor(-0.0456, dtype=torch.float64)), (2753, tensor(-0.0455, dtype=torch.float64)), (1747, tensor(-0.0455, dtype=torch.float64)), (2607, tensor(-0.0454, dtype=torch.float64)), (2586, tensor(-0.0454, dtype=torch.float64)), (1992, tensor(-0.0453, dtype=torch.float64)), (959, tensor(-0.0453, dtype=torch.float64)), (619, tensor(-0.0453, dtype=torch.float64)), (850, tensor(-0.0452, dtype=torch.float64)), (647, tensor(-0.0452, dtype=torch.float64)), (1472, tensor(-0.0452, dtype=torch.float64)), (1822, tensor(-0.0451, dtype=torch.float64)), (138, tensor(-0.0450, dtype=torch.float64)), (889, tensor(-0.0450, dtype=torch.float64)), (1315, tensor(-0.0449, dtype=torch.float64)), (159, tensor(-0.0449, dtype=torch.float64)), (1054, tensor(-0.0448, dtype=torch.float64)), (1193, tensor(-0.0448, dtype=torch.float64)), (1745, tensor(-0.0447, dtype=torch.float64)), (154, tensor(-0.0447, dtype=torch.float64)), (2603, tensor(-0.0447, dtype=torch.float64)), (334, tensor(-0.0446, dtype=torch.float64)), (1917, tensor(-0.0445, dtype=torch.float64)), (874, tensor(-0.0444, dtype=torch.float64)), (5, tensor(-0.0444, dtype=torch.float64)), (1998, tensor(-0.0444, dtype=torch.float64)), (457, tensor(-0.0444, dtype=torch.float64)), (23, tensor(-0.0443, dtype=torch.float64)), (2348, tensor(-0.0443, dtype=torch.float64)), (1566, tensor(-0.0442, dtype=torch.float64)), (1434, tensor(-0.0441, dtype=torch.float64)), (1758, tensor(-0.0440, dtype=torch.float64)), (1974, tensor(-0.0440, dtype=torch.float64)), (587, tensor(-0.0439, dtype=torch.float64)), (2342, tensor(-0.0439, dtype=torch.float64)), (1737, tensor(-0.0439, dtype=torch.float64)), (701, tensor(-0.0439, dtype=torch.float64)), (2205, tensor(-0.0438, dtype=torch.float64)), (639, tensor(-0.0438, dtype=torch.float64)), (250, tensor(-0.0438, dtype=torch.float64)), (315, tensor(-0.0437, dtype=torch.float64)), (2716, tensor(-0.0437, dtype=torch.float64)), (1110, tensor(-0.0435, dtype=torch.float64)), (1321, tensor(-0.0434, dtype=torch.float64)), (2243, tensor(-0.0434, dtype=torch.float64)), (919, tensor(-0.0434, dtype=torch.float64)), (1126, tensor(-0.0433, dtype=torch.float64)), (2466, tensor(-0.0432, dtype=torch.float64)), (1026, tensor(-0.0432, dtype=torch.float64)), (800, tensor(-0.0432, dtype=torch.float64)), (1234, tensor(-0.0432, dtype=torch.float64)), (2711, tensor(-0.0431, dtype=torch.float64)), (765, tensor(-0.0431, dtype=torch.float64)), (2546, tensor(-0.0431, dtype=torch.float64)), (450, tensor(-0.0430, dtype=torch.float64)), (1331, tensor(-0.0429, dtype=torch.float64)), (1034, tensor(-0.0429, dtype=torch.float64)), (2185, tensor(-0.0429, dtype=torch.float64)), (2274, tensor(-0.0428, dtype=torch.float64)), (189, tensor(-0.0428, dtype=torch.float64)), (2310, tensor(-0.0427, dtype=torch.float64)), (1578, tensor(-0.0427, dtype=torch.float64)), (1076, tensor(-0.0427, dtype=torch.float64)), (1067, tensor(-0.0426, dtype=torch.float64)), (1272, tensor(-0.0425, dtype=torch.float64)), (2567, tensor(-0.0425, dtype=torch.float64)), (1646, tensor(-0.0424, dtype=torch.float64)), (3, tensor(-0.0424, dtype=torch.float64)), (1880, tensor(-0.0423, dtype=torch.float64)), (1615, tensor(-0.0423, dtype=torch.float64)), (1733, tensor(-0.0423, dtype=torch.float64)), (2065, tensor(-0.0423, dtype=torch.float64)), (338, tensor(-0.0421, dtype=torch.float64)), (1999, tensor(-0.0421, dtype=torch.float64)), (2581, tensor(-0.0421, dtype=torch.float64)), (433, tensor(-0.0420, dtype=torch.float64)), (1625, tensor(-0.0419, dtype=torch.float64)), (2497, tensor(-0.0418, dtype=torch.float64)), (1662, tensor(-0.0417, dtype=torch.float64)), (598, tensor(-0.0417, dtype=torch.float64)), (757, tensor(-0.0417, dtype=torch.float64)), (155, tensor(-0.0417, dtype=torch.float64)), (699, tensor(-0.0417, dtype=torch.float64)), (561, tensor(-0.0417, dtype=torch.float64)), (673, tensor(-0.0416, dtype=torch.float64)), (60, tensor(-0.0416, dtype=torch.float64)), (1230, tensor(-0.0416, dtype=torch.float64)), (171, tensor(-0.0415, dtype=torch.float64)), (703, tensor(-0.0414, dtype=torch.float64)), (2545, tensor(-0.0414, dtype=torch.float64)), (469, tensor(-0.0414, dtype=torch.float64)), (2886, tensor(-0.0414, dtype=torch.float64)), (2754, tensor(-0.0411, dtype=torch.float64)), (1427, tensor(-0.0411, dtype=torch.float64)), (1545, tensor(-0.0411, dtype=torch.float64)), (2731, tensor(-0.0409, dtype=torch.float64)), (1622, tensor(-0.0409, dtype=torch.float64)), (1957, tensor(-0.0409, dtype=torch.float64)), (2044, tensor(-0.0409, dtype=torch.float64)), (33, tensor(-0.0408, dtype=torch.float64)), (449, tensor(-0.0408, dtype=torch.float64)), (2300, tensor(-0.0407, dtype=torch.float64)), (1071, tensor(-0.0407, dtype=torch.float64)), (367, tensor(-0.0406, dtype=torch.float64)), (2699, tensor(-0.0406, dtype=torch.float64)), (710, tensor(-0.0406, dtype=torch.float64)), (2436, tensor(-0.0405, dtype=torch.float64)), (1425, tensor(-0.0405, dtype=torch.float64)), (1298, tensor(-0.0405, dtype=torch.float64)), (1113, tensor(-0.0405, dtype=torch.float64)), (2709, tensor(-0.0405, dtype=torch.float64)), (321, tensor(-0.0404, dtype=torch.float64)), (1420, tensor(-0.0404, dtype=torch.float64)), (1671, tensor(-0.0404, dtype=torch.float64)), (1879, tensor(-0.0404, dtype=torch.float64)), (2372, tensor(-0.0403, dtype=torch.float64)), (1022, tensor(-0.0403, dtype=torch.float64)), (263, tensor(-0.0402, dtype=torch.float64)), (1031, tensor(-0.0402, dtype=torch.float64)), (512, tensor(-0.0402, dtype=torch.float64)), (2448, tensor(-0.0402, dtype=torch.float64)), (2251, tensor(-0.0402, dtype=torch.float64)), (2395, tensor(-0.0401, dtype=torch.float64)), (2629, tensor(-0.0401, dtype=torch.float64)), (2681, tensor(-0.0401, dtype=torch.float64)), (769, tensor(-0.0401, dtype=torch.float64)), (2351, tensor(-0.0401, dtype=torch.float64)), (2647, tensor(-0.0401, dtype=torch.float64)), (1985, tensor(-0.0400, dtype=torch.float64)), (1471, tensor(-0.0400, dtype=torch.float64)), (2090, tensor(-0.0399, dtype=torch.float64)), (269, tensor(-0.0399, dtype=torch.float64)), (1144, tensor(-0.0398, dtype=torch.float64)), (2235, tensor(-0.0398, dtype=torch.float64)), (2160, tensor(-0.0398, dtype=torch.float64)), (101, tensor(-0.0398, dtype=torch.float64)), (2171, tensor(-0.0397, dtype=torch.float64)), (2296, tensor(-0.0397, dtype=torch.float64)), (1932, tensor(-0.0397, dtype=torch.float64)), (34, tensor(-0.0396, dtype=torch.float64)), (1505, tensor(-0.0396, dtype=torch.float64)), (1403, tensor(-0.0396, dtype=torch.float64)), (2191, tensor(-0.0396, dtype=torch.float64)), (352, tensor(-0.0396, dtype=torch.float64)), (2313, tensor(-0.0395, dtype=torch.float64)), (1749, tensor(-0.0395, dtype=torch.float64)), (1011, tensor(-0.0395, dtype=torch.float64)), (202, tensor(-0.0395, dtype=torch.float64)), (489, tensor(-0.0395, dtype=torch.float64)), (1912, tensor(-0.0395, dtype=torch.float64)), (2664, tensor(-0.0394, dtype=torch.float64)), (97, tensor(-0.0394, dtype=torch.float64)), (1094, tensor(-0.0394, dtype=torch.float64)), (1465, tensor(-0.0394, dtype=torch.float64)), (949, tensor(-0.0394, dtype=torch.float64)), (493, tensor(-0.0393, dtype=torch.float64)), (882, tensor(-0.0393, dtype=torch.float64)), (453, tensor(-0.0393, dtype=torch.float64)), (855, tensor(-0.0393, dtype=torch.float64)), (1382, tensor(-0.0393, dtype=torch.float64)), (1491, tensor(-0.0393, dtype=torch.float64)), (1158, tensor(-0.0392, dtype=torch.float64)), (2866, tensor(-0.0392, dtype=torch.float64)), (1162, tensor(-0.0392, dtype=torch.float64)), (1459, tensor(-0.0392, dtype=torch.float64)), (1310, tensor(-0.0392, dtype=torch.float64)), (2432, tensor(-0.0391, dtype=torch.float64)), (119, tensor(-0.0391, dtype=torch.float64)), (440, tensor(-0.0391, dtype=torch.float64)), (1550, tensor(-0.0391, dtype=torch.float64)), (2657, tensor(-0.0390, dtype=torch.float64)), (1072, tensor(-0.0390, dtype=torch.float64)), (1915, tensor(-0.0390, dtype=torch.float64)), (755, tensor(-0.0389, dtype=torch.float64)), (2461, tensor(-0.0389, dtype=torch.float64)), (1449, tensor(-0.0389, dtype=torch.float64)), (1741, tensor(-0.0387, dtype=torch.float64)), (21, tensor(-0.0387, dtype=torch.float64)), (1212, tensor(-0.0387, dtype=torch.float64)), (2531, tensor(-0.0387, dtype=torch.float64)), (1708, tensor(-0.0386, dtype=torch.float64)), (1305, tensor(-0.0385, dtype=torch.float64)), (1097, tensor(-0.0385, dtype=torch.float64)), (2549, tensor(-0.0385, dtype=torch.float64)), (1512, tensor(-0.0385, dtype=torch.float64)), (1504, tensor(-0.0385, dtype=torch.float64)), (2104, tensor(-0.0385, dtype=torch.float64)), (52, tensor(-0.0384, dtype=torch.float64)), (2849, tensor(-0.0384, dtype=torch.float64)), (1020, tensor(-0.0384, dtype=torch.float64)), (185, tensor(-0.0383, dtype=torch.float64)), (2576, tensor(-0.0383, dtype=torch.float64)), (73, tensor(-0.0382, dtype=torch.float64)), (2181, tensor(-0.0382, dtype=torch.float64)), (1450, tensor(-0.0382, dtype=torch.float64)), (49, tensor(-0.0381, dtype=torch.float64)), (2254, tensor(-0.0380, dtype=torch.float64)), (2269, tensor(-0.0380, dtype=torch.float64)), (82, tensor(-0.0380, dtype=torch.float64)), (2876, tensor(-0.0380, dtype=torch.float64)), (694, tensor(-0.0380, dtype=torch.float64)), (580, tensor(-0.0379, dtype=torch.float64)), (1183, tensor(-0.0379, dtype=torch.float64)), (2252, tensor(-0.0379, dtype=torch.float64)), (374, tensor(-0.0379, dtype=torch.float64)), (1720, tensor(-0.0378, dtype=torch.float64)), (2748, tensor(-0.0378, dtype=torch.float64)), (1018, tensor(-0.0377, dtype=torch.float64)), (1338, tensor(-0.0376, dtype=torch.float64)), (401, tensor(-0.0376, dtype=torch.float64)), (1878, tensor(-0.0376, dtype=torch.float64)), (2708, tensor(-0.0376, dtype=torch.float64)), (1404, tensor(-0.0375, dtype=torch.float64)), (2107, tensor(-0.0375, dtype=torch.float64)), (1264, tensor(-0.0374, dtype=torch.float64)), (1790, tensor(-0.0373, dtype=torch.float64)), (2583, tensor(-0.0372, dtype=torch.float64)), (1948, tensor(-0.0372, dtype=torch.float64)), (725, tensor(-0.0372, dtype=torch.float64)), (1322, tensor(-0.0371, dtype=torch.float64)), (424, tensor(-0.0371, dtype=torch.float64)), (1979, tensor(-0.0371, dtype=torch.float64)), (210, tensor(-0.0371, dtype=torch.float64)), (1684, tensor(-0.0371, dtype=torch.float64)), (719, tensor(-0.0371, dtype=torch.float64)), (1887, tensor(-0.0371, dtype=torch.float64)), (1997, tensor(-0.0371, dtype=torch.float64)), (2592, tensor(-0.0370, dtype=torch.float64)), (488, tensor(-0.0369, dtype=torch.float64)), (1930, tensor(-0.0369, dtype=torch.float64)), (1595, tensor(-0.0368, dtype=torch.float64)), (215, tensor(-0.0368, dtype=torch.float64)), (1590, tensor(-0.0368, dtype=torch.float64)), (718, tensor(-0.0368, dtype=torch.float64)), (497, tensor(-0.0367, dtype=torch.float64)), (2277, tensor(-0.0367, dtype=torch.float64)), (1316, tensor(-0.0367, dtype=torch.float64)), (937, tensor(-0.0367, dtype=torch.float64)), (2182, tensor(-0.0367, dtype=torch.float64)), (743, tensor(-0.0367, dtype=torch.float64)), (1513, tensor(-0.0367, dtype=torch.float64)), (1327, tensor(-0.0366, dtype=torch.float64)), (494, tensor(-0.0366, dtype=torch.float64)), (2230, tensor(-0.0366, dtype=torch.float64)), (1588, tensor(-0.0365, dtype=torch.float64)), (2071, tensor(-0.0365, dtype=torch.float64)), (1560, tensor(-0.0365, dtype=torch.float64)), (544, tensor(-0.0364, dtype=torch.float64)), (486, tensor(-0.0364, dtype=torch.float64)), (2138, tensor(-0.0363, dtype=torch.float64)), (2387, tensor(-0.0362, dtype=torch.float64)), (2078, tensor(-0.0362, dtype=torch.float64)), (1748, tensor(-0.0361, dtype=torch.float64)), (2718, tensor(-0.0361, dtype=torch.float64)), (1140, tensor(-0.0361, dtype=torch.float64)), (2012, tensor(-0.0361, dtype=torch.float64)), (2637, tensor(-0.0361, dtype=torch.float64)), (928, tensor(-0.0361, dtype=torch.float64)), (1782, tensor(-0.0361, dtype=torch.float64)), (1492, tensor(-0.0360, dtype=torch.float64)), (223, tensor(-0.0360, dtype=torch.float64)), (1755, tensor(-0.0360, dtype=torch.float64)), (784, tensor(-0.0359, dtype=torch.float64)), (623, tensor(-0.0359, dtype=torch.float64)), (603, tensor(-0.0359, dtype=torch.float64)), (1195, tensor(-0.0359, dtype=torch.float64)), (277, tensor(-0.0358, dtype=torch.float64)), (2514, tensor(-0.0358, dtype=torch.float64)), (887, tensor(-0.0358, dtype=torch.float64)), (29, tensor(-0.0358, dtype=torch.float64)), (532, tensor(-0.0358, dtype=torch.float64)), (1147, tensor(-0.0358, dtype=torch.float64)), (706, tensor(-0.0357, dtype=torch.float64)), (863, tensor(-0.0357, dtype=torch.float64)), (978, tensor(-0.0356, dtype=torch.float64)), (2417, tensor(-0.0356, dtype=torch.float64)), (2506, tensor(-0.0356, dtype=torch.float64)), (178, tensor(-0.0356, dtype=torch.float64)), (2578, tensor(-0.0356, dtype=torch.float64)), (2737, tensor(-0.0356, dtype=torch.float64)), (1233, tensor(-0.0355, dtype=torch.float64)), (808, tensor(-0.0355, dtype=torch.float64)), (255, tensor(-0.0355, dtype=torch.float64)), (50, tensor(-0.0354, dtype=torch.float64)), (825, tensor(-0.0354, dtype=torch.float64)), (504, tensor(-0.0352, dtype=torch.float64)), (1367, tensor(-0.0352, dtype=torch.float64)), (794, tensor(-0.0352, dtype=torch.float64)), (319, tensor(-0.0352, dtype=torch.float64)), (1531, tensor(-0.0352, dtype=torch.float64)), (1174, tensor(-0.0351, dtype=torch.float64)), (524, tensor(-0.0351, dtype=torch.float64)), (1118, tensor(-0.0351, dtype=torch.float64)), (1542, tensor(-0.0351, dtype=torch.float64)), (1148, tensor(-0.0350, dtype=torch.float64)), (460, tensor(-0.0350, dtype=torch.float64)), (1291, tensor(-0.0349, dtype=torch.float64)), (2428, tensor(-0.0349, dtype=torch.float64)), (2881, tensor(-0.0349, dtype=torch.float64)), (656, tensor(-0.0348, dtype=torch.float64)), (932, tensor(-0.0348, dtype=torch.float64)), (265, tensor(-0.0347, dtype=torch.float64)), (2143, tensor(-0.0347, dtype=torch.float64)), (226, tensor(-0.0347, dtype=torch.float64)), (1223, tensor(-0.0346, dtype=torch.float64)), (2223, tensor(-0.0346, dtype=torch.float64)), (150, tensor(-0.0346, dtype=torch.float64)), (1143, tensor(-0.0345, dtype=torch.float64)), (538, tensor(-0.0345, dtype=torch.float64)), (2341, tensor(-0.0345, dtype=torch.float64)), (1253, tensor(-0.0345, dtype=torch.float64)), (1173, tensor(-0.0344, dtype=torch.float64)), (2722, tensor(-0.0344, dtype=torch.float64)), (2542, tensor(-0.0344, dtype=torch.float64)), (476, tensor(-0.0344, dtype=torch.float64)), (317, tensor(-0.0344, dtype=torch.float64)), (1612, tensor(-0.0344, dtype=torch.float64)), (66, tensor(-0.0343, dtype=torch.float64)), (110, tensor(-0.0343, dtype=torch.float64)), (1265, tensor(-0.0343, dtype=torch.float64)), (2860, tensor(-0.0342, dtype=torch.float64)), (1019, tensor(-0.0342, dtype=torch.float64)), (1690, tensor(-0.0341, dtype=torch.float64)), (2557, tensor(-0.0341, dtype=torch.float64)), (595, tensor(-0.0341, dtype=torch.float64)), (1546, tensor(-0.0341, dtype=torch.float64)), (2203, tensor(-0.0340, dtype=torch.float64)), (1057, tensor(-0.0340, dtype=torch.float64)), (1325, tensor(-0.0340, dtype=torch.float64)), (1753, tensor(-0.0340, dtype=torch.float64)), (2789, tensor(-0.0340, dtype=torch.float64)), (1395, tensor(-0.0340, dtype=torch.float64)), (2805, tensor(-0.0340, dtype=torch.float64)), (11, tensor(-0.0339, dtype=torch.float64)), (1937, tensor(-0.0339, dtype=torch.float64)), (1189, tensor(-0.0338, dtype=torch.float64)), (1665, tensor(-0.0338, dtype=torch.float64)), (12, tensor(-0.0337, dtype=torch.float64)), (1073, tensor(-0.0337, dtype=torch.float64)), (1953, tensor(-0.0336, dtype=torch.float64)), (14, tensor(-0.0336, dtype=torch.float64)), (1386, tensor(-0.0336, dtype=torch.float64)), (1699, tensor(-0.0336, dtype=torch.float64)), (2457, tensor(-0.0335, dtype=torch.float64)), (1006, tensor(-0.0335, dtype=torch.float64)), (1656, tensor(-0.0335, dtype=torch.float64)), (2424, tensor(-0.0334, dtype=torch.float64)), (2397, tensor(-0.0334, dtype=torch.float64)), (2018, tensor(-0.0334, dtype=torch.float64)), (2265, tensor(-0.0333, dtype=torch.float64)), (2779, tensor(-0.0333, dtype=torch.float64)), (1455, tensor(-0.0333, dtype=torch.float64)), (165, tensor(-0.0333, dtype=torch.float64)), (2783, tensor(-0.0333, dtype=torch.float64)), (521, tensor(-0.0333, dtype=torch.float64)), (20, tensor(-0.0333, dtype=torch.float64)), (2400, tensor(-0.0332, dtype=torch.float64)), (1414, tensor(-0.0332, dtype=torch.float64)), (777, tensor(-0.0332, dtype=torch.float64)), (2827, tensor(-0.0331, dtype=torch.float64)), (1142, tensor(-0.0331, dtype=torch.float64)), (2256, tensor(-0.0331, dtype=torch.float64)), (2706, tensor(-0.0331, dtype=torch.float64)), (773, tensor(-0.0331, dtype=torch.float64)), (308, tensor(-0.0330, dtype=torch.float64)), (1751, tensor(-0.0330, dtype=torch.float64)), (2792, tensor(-0.0330, dtype=torch.float64)), (1726, tensor(-0.0329, dtype=torch.float64)), (54, tensor(-0.0329, dtype=torch.float64)), (728, tensor(-0.0328, dtype=torch.float64)), (2565, tensor(-0.0328, dtype=torch.float64)), (2818, tensor(-0.0327, dtype=torch.float64)), (186, tensor(-0.0327, dtype=torch.float64)), (897, tensor(-0.0327, dtype=torch.float64)), (200, tensor(-0.0327, dtype=torch.float64)), (15, tensor(-0.0326, dtype=torch.float64)), (339, tensor(-0.0326, dtype=torch.float64)), (2494, tensor(-0.0326, dtype=torch.float64)), (2117, tensor(-0.0326, dtype=torch.float64)), (2550, tensor(-0.0326, dtype=torch.float64)), (1093, tensor(-0.0325, dtype=torch.float64)), (1111, tensor(-0.0325, dtype=torch.float64)), (533, tensor(-0.0324, dtype=torch.float64)), (466, tensor(-0.0324, dtype=torch.float64)), (1877, tensor(-0.0323, dtype=torch.float64)), (1503, tensor(-0.0323, dtype=torch.float64)), (799, tensor(-0.0323, dtype=torch.float64)), (1038, tensor(-0.0322, dtype=torch.float64)), (2746, tensor(-0.0322, dtype=torch.float64)), (83, tensor(-0.0321, dtype=torch.float64)), (411, tensor(-0.0321, dtype=torch.float64)), (798, tensor(-0.0321, dtype=torch.float64)), (1935, tensor(-0.0321, dtype=torch.float64)), (2343, tensor(-0.0321, dtype=torch.float64)), (2403, tensor(-0.0320, dtype=torch.float64)), (1133, tensor(-0.0320, dtype=torch.float64)), (1055, tensor(-0.0320, dtype=torch.float64)), (312, tensor(-0.0319, dtype=torch.float64)), (1889, tensor(-0.0318, dtype=torch.float64)), (2103, tensor(-0.0318, dtype=torch.float64)), (2040, tensor(-0.0318, dtype=torch.float64)), (1728, tensor(-0.0318, dtype=torch.float64)), (1703, tensor(-0.0318, dtype=torch.float64)), (2077, tensor(-0.0317, dtype=torch.float64)), (2338, tensor(-0.0317, dtype=torch.float64)), (72, tensor(-0.0317, dtype=torch.float64)), (877, tensor(-0.0317, dtype=torch.float64)), (2287, tensor(-0.0316, dtype=torch.float64)), (2322, tensor(-0.0316, dtype=torch.float64)), (1205, tensor(-0.0316, dtype=torch.float64)), (2396, tensor(-0.0316, dtype=torch.float64)), (468, tensor(-0.0316, dtype=torch.float64)), (2308, tensor(-0.0316, dtype=torch.float64)), (1620, tensor(-0.0315, dtype=torch.float64)), (1448, tensor(-0.0315, dtype=torch.float64)), (1837, tensor(-0.0315, dtype=torch.float64)), (2826, tensor(-0.0314, dtype=torch.float64)), (1616, tensor(-0.0314, dtype=torch.float64)), (211, tensor(-0.0314, dtype=torch.float64)), (2867, tensor(-0.0314, dtype=torch.float64)), (301, tensor(-0.0314, dtype=torch.float64)), (1023, tensor(-0.0313, dtype=torch.float64)), (2159, tensor(-0.0313, dtype=torch.float64)), (2083, tensor(-0.0313, dtype=torch.float64)), (318, tensor(-0.0313, dtype=torch.float64)), (1197, tensor(-0.0313, dtype=torch.float64)), (809, tensor(-0.0312, dtype=torch.float64)), (2563, tensor(-0.0312, dtype=torch.float64)), (176, tensor(-0.0311, dtype=torch.float64)), (2069, tensor(-0.0311, dtype=torch.float64)), (761, tensor(-0.0311, dtype=torch.float64)), (2336, tensor(-0.0311, dtype=torch.float64)), (2636, tensor(-0.0311, dtype=torch.float64)), (2321, tensor(-0.0310, dtype=torch.float64)), (1784, tensor(-0.0310, dtype=torch.float64)), (2478, tensor(-0.0309, dtype=torch.float64)), (2302, tensor(-0.0309, dtype=torch.float64)), (2790, tensor(-0.0308, dtype=torch.float64)), (554, tensor(-0.0308, dtype=torch.float64)), (2048, tensor(-0.0308, dtype=torch.float64)), (1262, tensor(-0.0308, dtype=torch.float64)), (2726, tensor(-0.0308, dtype=torch.float64)), (2509, tensor(-0.0307, dtype=torch.float64)), (1688, tensor(-0.0307, dtype=torch.float64)), (822, tensor(-0.0307, dtype=torch.float64)), (2496, tensor(-0.0307, dtype=torch.float64)), (1675, tensor(-0.0306, dtype=torch.float64)), (1704, tensor(-0.0306, dtype=torch.float64)), (501, tensor(-0.0306, dtype=torch.float64)), (151, tensor(-0.0306, dtype=torch.float64)), (1968, tensor(-0.0306, dtype=torch.float64)), (631, tensor(-0.0305, dtype=torch.float64)), (1024, tensor(-0.0305, dtype=torch.float64)), (1580, tensor(-0.0305, dtype=torch.float64)), (529, tensor(-0.0305, dtype=torch.float64)), (131, tensor(-0.0304, dtype=torch.float64)), (2585, tensor(-0.0304, dtype=torch.float64)), (126, tensor(-0.0304, dtype=torch.float64)), (2325, tensor(-0.0304, dtype=torch.float64)), (1460, tensor(-0.0304, dtype=torch.float64)), (736, tensor(-0.0303, dtype=torch.float64)), (1296, tensor(-0.0303, dtype=torch.float64)), (243, tensor(-0.0302, dtype=torch.float64)), (1087, tensor(-0.0302, dtype=torch.float64)), (1215, tensor(-0.0302, dtype=torch.float64)), (1713, tensor(-0.0302, dtype=torch.float64)), (643, tensor(-0.0301, dtype=torch.float64)), (813, tensor(-0.0301, dtype=torch.float64)), (1976, tensor(-0.0301, dtype=torch.float64)), (1884, tensor(-0.0301, dtype=torch.float64)), (500, tensor(-0.0301, dtype=torch.float64)), (948, tensor(-0.0300, dtype=torch.float64)), (1039, tensor(-0.0300, dtype=torch.float64)), (1275, tensor(-0.0300, dtype=torch.float64)), (2253, tensor(-0.0299, dtype=torch.float64)), (1364, tensor(-0.0299, dtype=torch.float64)), (2740, tensor(-0.0299, dtype=torch.float64)), (1235, tensor(-0.0299, dtype=torch.float64)), (1804, tensor(-0.0299, dtype=torch.float64)), (1775, tensor(-0.0298, dtype=torch.float64)), (2851, tensor(-0.0298, dtype=torch.float64)), (1767, tensor(-0.0298, dtype=torch.float64)), (1134, tensor(-0.0297, dtype=torch.float64)), (2458, tensor(-0.0297, dtype=torch.float64)), (545, tensor(-0.0297, dtype=torch.float64)), (803, tensor(-0.0297, dtype=torch.float64)), (2512, tensor(-0.0297, dtype=torch.float64)), (1179, tensor(-0.0297, dtype=torch.float64)), (1897, tensor(-0.0297, dtype=torch.float64)), (1419, tensor(-0.0296, dtype=torch.float64)), (2187, tensor(-0.0296, dtype=torch.float64)), (828, tensor(-0.0296, dtype=torch.float64)), (2721, tensor(-0.0296, dtype=torch.float64)), (266, tensor(-0.0295, dtype=torch.float64)), (916, tensor(-0.0295, dtype=torch.float64)), (2374, tensor(-0.0294, dtype=torch.float64)), (2227, tensor(-0.0294, dtype=torch.float64)), (1781, tensor(-0.0294, dtype=torch.float64)), (2225, tensor(-0.0294, dtype=torch.float64)), (1651, tensor(-0.0294, dtype=torch.float64)), (1929, tensor(-0.0294, dtype=torch.float64)), (2390, tensor(-0.0294, dtype=torch.float64)), (2730, tensor(-0.0293, dtype=torch.float64)), (837, tensor(-0.0293, dtype=torch.float64)), (2276, tensor(-0.0292, dtype=torch.float64)), (663, tensor(-0.0292, dtype=torch.float64)), (235, tensor(-0.0292, dtype=torch.float64)), (1241, tensor(-0.0292, dtype=torch.float64)), (2678, tensor(-0.0291, dtype=torch.float64)), (984, tensor(-0.0291, dtype=torch.float64)), (1905, tensor(-0.0291, dtype=torch.float64)), (2799, tensor(-0.0290, dtype=torch.float64)), (2770, tensor(-0.0290, dtype=torch.float64)), (857, tensor(-0.0290, dtype=torch.float64)), (829, tensor(-0.0289, dtype=torch.float64)), (2645, tensor(-0.0289, dtype=torch.float64)), (1156, tensor(-0.0289, dtype=torch.float64)), (1239, tensor(-0.0289, dtype=torch.float64)), (382, tensor(-0.0289, dtype=torch.float64)), (1851, tensor(-0.0289, dtype=torch.float64)), (2024, tensor(-0.0289, dtype=torch.float64)), (846, tensor(-0.0289, dtype=torch.float64)), (2414, tensor(-0.0288, dtype=torch.float64)), (1814, tensor(-0.0288, dtype=torch.float64)), (1152, tensor(-0.0288, dtype=torch.float64)), (1830, tensor(-0.0288, dtype=torch.float64)), (2035, tensor(-0.0288, dtype=torch.float64)), (626, tensor(-0.0287, dtype=torch.float64)), (359, tensor(-0.0286, dtype=torch.float64)), (514, tensor(-0.0286, dtype=torch.float64)), (1927, tensor(-0.0286, dtype=torch.float64)), (1667, tensor(-0.0286, dtype=torch.float64)), (1360, tensor(-0.0286, dtype=torch.float64)), (1761, tensor(-0.0285, dtype=torch.float64)), (942, tensor(-0.0285, dtype=torch.float64)), (1958, tensor(-0.0285, dtype=torch.float64)), (1731, tensor(-0.0284, dtype=torch.float64)), (1682, tensor(-0.0284, dtype=torch.float64)), (1773, tensor(-0.0284, dtype=torch.float64)), (2363, tensor(-0.0284, dtype=torch.float64)), (133, tensor(-0.0282, dtype=torch.float64)), (393, tensor(-0.0282, dtype=torch.float64)), (1573, tensor(-0.0282, dtype=torch.float64)), (779, tensor(-0.0281, dtype=torch.float64)), (2034, tensor(-0.0281, dtype=torch.float64)), (2320, tensor(-0.0281, dtype=torch.float64)), (1642, tensor(-0.0281, dtype=torch.float64)), (1839, tensor(-0.0281, dtype=torch.float64)), (2423, tensor(-0.0281, dtype=torch.float64)), (789, tensor(-0.0281, dtype=torch.float64)), (1232, tensor(-0.0281, dtype=torch.float64)), (2720, tensor(-0.0280, dtype=torch.float64)), (473, tensor(-0.0280, dtype=torch.float64)), (935, tensor(-0.0280, dtype=torch.float64)), (162, tensor(-0.0279, dtype=torch.float64)), (349, tensor(-0.0279, dtype=torch.float64)), (296, tensor(-0.0279, dtype=torch.float64)), (1442, tensor(-0.0279, dtype=torch.float64)), (2209, tensor(-0.0279, dtype=torch.float64)), (812, tensor(-0.0278, dtype=torch.float64)), (1518, tensor(-0.0278, dtype=torch.float64)), (1243, tensor(-0.0278, dtype=torch.float64)), (1943, tensor(-0.0278, dtype=torch.float64)), (1371, tensor(-0.0278, dtype=torch.float64)), (1856, tensor(-0.0277, dtype=torch.float64)), (847, tensor(-0.0277, dtype=torch.float64)), (2433, tensor(-0.0277, dtype=torch.float64)), (438, tensor(-0.0277, dtype=torch.float64)), (890, tensor(-0.0277, dtype=torch.float64)), (2865, tensor(-0.0277, dtype=torch.float64)), (1599, tensor(-0.0277, dtype=torch.float64)), (218, tensor(-0.0277, dtype=torch.float64)), (391, tensor(-0.0277, dtype=torch.float64)), (1692, tensor(-0.0276, dtype=torch.float64)), (1901, tensor(-0.0276, dtype=torch.float64)), (1065, tensor(-0.0276, dtype=torch.float64)), (2290, tensor(-0.0276, dtype=torch.float64)), (1874, tensor(-0.0275, dtype=torch.float64)), (2663, tensor(-0.0275, dtype=torch.float64)), (124, tensor(-0.0275, dtype=torch.float64)), (1387, tensor(-0.0275, dtype=torch.float64)), (1712, tensor(-0.0275, dtype=torch.float64)), (886, tensor(-0.0275, dtype=torch.float64)), (2043, tensor(-0.0274, dtype=torch.float64)), (1922, tensor(-0.0274, dtype=torch.float64)), (2093, tensor(-0.0274, dtype=torch.float64)), (1629, tensor(-0.0274, dtype=torch.float64)), (295, tensor(-0.0274, dtype=torch.float64)), (1861, tensor(-0.0274, dtype=torch.float64)), (750, tensor(-0.0273, dtype=torch.float64)), (2262, tensor(-0.0273, dtype=torch.float64)), (2282, tensor(-0.0273, dtype=torch.float64)), (2873, tensor(-0.0273, dtype=torch.float64)), (1633, tensor(-0.0273, dtype=torch.float64)), (1961, tensor(-0.0272, dtype=torch.float64)), (1051, tensor(-0.0272, dtype=torch.float64)), (2231, tensor(-0.0272, dtype=torch.float64)), (386, tensor(-0.0271, dtype=torch.float64)), (180, tensor(-0.0271, dtype=torch.float64)), (2111, tensor(-0.0270, dtype=torch.float64)), (997, tensor(-0.0270, dtype=torch.float64)), (2484, tensor(-0.0270, dtype=torch.float64)), (2673, tensor(-0.0270, dtype=torch.float64)), (2877, tensor(-0.0270, dtype=torch.float64)), (762, tensor(-0.0269, dtype=torch.float64)), (1987, tensor(-0.0269, dtype=torch.float64)), (1768, tensor(-0.0269, dtype=torch.float64)), (2053, tensor(-0.0269, dtype=torch.float64)), (1638, tensor(-0.0269, dtype=torch.float64)), (198, tensor(-0.0269, dtype=torch.float64)), (2006, tensor(-0.0268, dtype=torch.float64)), (1335, tensor(-0.0268, dtype=torch.float64)), (2401, tensor(-0.0268, dtype=torch.float64)), (1787, tensor(-0.0267, dtype=torch.float64)), (1457, tensor(-0.0267, dtype=torch.float64)), (2076, tensor(-0.0266, dtype=torch.float64)), (1938, tensor(-0.0266, dtype=torch.float64)), (1035, tensor(-0.0265, dtype=torch.float64)), (1668, tensor(-0.0265, dtype=torch.float64)), (1196, tensor(-0.0264, dtype=torch.float64)), (2123, tensor(-0.0264, dtype=torch.float64)), (1218, tensor(-0.0264, dtype=torch.float64)), (2735, tensor(-0.0264, dtype=torch.float64)), (43, tensor(-0.0263, dtype=torch.float64)), (285, tensor(-0.0263, dtype=torch.float64)), (1840, tensor(-0.0263, dtype=torch.float64)), (316, tensor(-0.0262, dtype=torch.float64)), (156, tensor(-0.0262, dtype=torch.float64)), (2072, tensor(-0.0261, dtype=torch.float64)), (445, tensor(-0.0261, dtype=torch.float64)), (1824, tensor(-0.0261, dtype=torch.float64)), (1783, tensor(-0.0261, dtype=torch.float64)), (129, tensor(-0.0261, dtype=torch.float64)), (2884, tensor(-0.0260, dtype=torch.float64)), (2248, tensor(-0.0260, dtype=torch.float64)), (286, tensor(-0.0260, dtype=torch.float64)), (817, tensor(-0.0260, dtype=torch.float64)), (234, tensor(-0.0260, dtype=torch.float64)), (2037, tensor(-0.0260, dtype=torch.float64)), (804, tensor(-0.0259, dtype=torch.float64)), (17, tensor(-0.0259, dtype=torch.float64)), (1496, tensor(-0.0258, dtype=torch.float64)), (737, tensor(-0.0258, dtype=torch.float64)), (179, tensor(-0.0258, dtype=torch.float64)), (2088, tensor(-0.0258, dtype=torch.float64)), (2288, tensor(-0.0258, dtype=torch.float64)), (111, tensor(-0.0258, dtype=torch.float64)), (730, tensor(-0.0258, dtype=torch.float64)), (1946, tensor(-0.0257, dtype=torch.float64)), (964, tensor(-0.0257, dtype=torch.float64)), (1873, tensor(-0.0257, dtype=torch.float64)), (560, tensor(-0.0256, dtype=torch.float64)), (2590, tensor(-0.0256, dtype=torch.float64)), (993, tensor(-0.0256, dtype=torch.float64)), (2039, tensor(-0.0256, dtype=torch.float64)), (528, tensor(-0.0256, dtype=torch.float64)), (2632, tensor(-0.0255, dtype=torch.float64)), (2561, tensor(-0.0255, dtype=torch.float64)), (1114, tensor(-0.0255, dtype=torch.float64)), (1514, tensor(-0.0255, dtype=torch.float64)), (2119, tensor(-0.0254, dtype=torch.float64)), (1099, tensor(-0.0254, dtype=torch.float64)), (2562, tensor(-0.0254, dtype=torch.float64)), (1318, tensor(-0.0254, dtype=torch.float64)), (2442, tensor(-0.0254, dtype=torch.float64)), (127, tensor(-0.0253, dtype=torch.float64)), (1274, tensor(-0.0253, dtype=torch.float64)), (2272, tensor(-0.0253, dtype=torch.float64)), (787, tensor(-0.0253, dtype=torch.float64)), (2787, tensor(-0.0252, dtype=torch.float64)), (2273, tensor(-0.0252, dtype=torch.float64)), (147, tensor(-0.0252, dtype=torch.float64)), (905, tensor(-0.0252, dtype=torch.float64)), (1255, tensor(-0.0252, dtype=torch.float64)), (38, tensor(-0.0252, dtype=torch.float64)), (1345, tensor(-0.0252, dtype=torch.float64)), (1284, tensor(-0.0251, dtype=torch.float64)), (173, tensor(-0.0251, dtype=torch.float64)), (1981, tensor(-0.0251, dtype=torch.float64)), (707, tensor(-0.0250, dtype=torch.float64)), (2513, tensor(-0.0250, dtype=torch.float64)), (2609, tensor(-0.0250, dtype=torch.float64)), (194, tensor(-0.0250, dtype=torch.float64)), (2641, tensor(-0.0250, dtype=torch.float64)), (383, tensor(-0.0249, dtype=torch.float64)), (941, tensor(-0.0249, dtype=torch.float64)), (444, tensor(-0.0248, dtype=torch.float64)), (77, tensor(-0.0248, dtype=torch.float64)), (1657, tensor(-0.0248, dtype=torch.float64)), (441, tensor(-0.0247, dtype=torch.float64)), (377, tensor(-0.0247, dtype=torch.float64)), (1739, tensor(-0.0247, dtype=torch.float64)), (2402, tensor(-0.0246, dtype=torch.float64)), (27, tensor(-0.0246, dtype=torch.float64)), (1353, tensor(-0.0246, dtype=torch.float64)), (2106, tensor(-0.0245, dtype=torch.float64)), (343, tensor(-0.0245, dtype=torch.float64)), (2250, tensor(-0.0245, dtype=torch.float64)), (2589, tensor(-0.0244, dtype=torch.float64)), (197, tensor(-0.0244, dtype=torch.float64)), (522, tensor(-0.0244, dtype=torch.float64)), (292, tensor(-0.0244, dtype=torch.float64)), (1735, tensor(-0.0244, dtype=torch.float64)), (569, tensor(-0.0244, dtype=torch.float64)), (2259, tensor(-0.0244, dtype=torch.float64)), (505, tensor(-0.0244, dtype=torch.float64)), (1567, tensor(-0.0244, dtype=torch.float64)), (2503, tensor(-0.0243, dtype=torch.float64)), (2604, tensor(-0.0243, dtype=torch.float64)), (141, tensor(-0.0243, dtype=torch.float64)), (1611, tensor(-0.0242, dtype=torch.float64)), (1390, tensor(-0.0241, dtype=torch.float64)), (872, tensor(-0.0241, dtype=torch.float64)), (575, tensor(-0.0241, dtype=torch.float64)), (680, tensor(-0.0241, dtype=torch.float64)), (671, tensor(-0.0241, dtype=torch.float64)), (1407, tensor(-0.0240, dtype=torch.float64)), (2591, tensor(-0.0240, dtype=torch.float64)), (1978, tensor(-0.0240, dtype=torch.float64)), (971, tensor(-0.0240, dtype=torch.float64)), (2033, tensor(-0.0239, dtype=torch.float64)), (1198, tensor(-0.0239, dtype=torch.float64)), (2848, tensor(-0.0238, dtype=torch.float64)), (1180, tensor(-0.0238, dtype=torch.float64)), (1311, tensor(-0.0238, dtype=torch.float64)), (2094, tensor(-0.0238, dtype=torch.float64)), (866, tensor(-0.0237, dtype=torch.float64)), (123, tensor(-0.0237, dtype=torch.float64)), (2768, tensor(-0.0237, dtype=torch.float64)), (2137, tensor(-0.0237, dtype=torch.float64)), (407, tensor(-0.0236, dtype=torch.float64)), (1553, tensor(-0.0236, dtype=torch.float64)), (1438, tensor(-0.0235, dtype=torch.float64)), (989, tensor(-0.0235, dtype=torch.float64)), (2587, tensor(-0.0235, dtype=torch.float64)), (1813, tensor(-0.0235, dtype=torch.float64)), (617, tensor(-0.0235, dtype=torch.float64)), (327, tensor(-0.0234, dtype=torch.float64)), (148, tensor(-0.0234, dtype=torch.float64)), (115, tensor(-0.0234, dtype=torch.float64)), (563, tensor(-0.0234, dtype=torch.float64)), (2689, tensor(-0.0233, dtype=torch.float64)), (965, tensor(-0.0233, dtype=torch.float64)), (1214, tensor(-0.0233, dtype=torch.float64)), (1597, tensor(-0.0232, dtype=torch.float64)), (89, tensor(-0.0232, dtype=torch.float64)), (2293, tensor(-0.0232, dtype=torch.float64)), (2059, tensor(-0.0232, dtype=torch.float64)), (1188, tensor(-0.0231, dtype=torch.float64)), (2738, tensor(-0.0231, dtype=torch.float64)), (2147, tensor(-0.0231, dtype=torch.float64)), (279, tensor(-0.0231, dtype=torch.float64)), (954, tensor(-0.0231, dtype=torch.float64)), (1892, tensor(-0.0231, dtype=torch.float64)), (2219, tensor(-0.0231, dtype=torch.float64)), (1083, tensor(-0.0230, dtype=torch.float64)), (2051, tensor(-0.0230, dtype=torch.float64)), (824, tensor(-0.0230, dtype=torch.float64)), (2660, tensor(-0.0230, dtype=torch.float64)), (1801, tensor(-0.0230, dtype=torch.float64)), (753, tensor(-0.0230, dtype=torch.float64)), (1847, tensor(-0.0230, dtype=torch.float64)), (1433, tensor(-0.0230, dtype=torch.float64)), (1084, tensor(-0.0229, dtype=torch.float64)), (2420, tensor(-0.0229, dtype=torch.float64)), (2060, tensor(-0.0228, dtype=torch.float64)), (1365, tensor(-0.0228, dtype=torch.float64)), (1730, tensor(-0.0228, dtype=torch.float64)), (1474, tensor(-0.0227, dtype=torch.float64)), (801, tensor(-0.0227, dtype=torch.float64)), (1354, tensor(-0.0227, dtype=torch.float64)), (1163, tensor(-0.0227, dtype=torch.float64)), (1059, tensor(-0.0227, dtype=torch.float64)), (1715, tensor(-0.0227, dtype=torch.float64)), (1389, tensor(-0.0226, dtype=torch.float64)), (1285, tensor(-0.0225, dtype=torch.float64)), (901, tensor(-0.0225, dtype=torch.float64)), (2869, tensor(-0.0224, dtype=torch.float64)), (35, tensor(-0.0224, dtype=torch.float64)), (2328, tensor(-0.0224, dtype=torch.float64)), (943, tensor(-0.0224, dtype=torch.float64)), (2238, tensor(-0.0224, dtype=torch.float64)), (2073, tensor(-0.0223, dtype=torch.float64)), (646, tensor(-0.0223, dtype=torch.float64)), (1228, tensor(-0.0223, dtype=torch.float64)), (221, tensor(-0.0222, dtype=torch.float64)), (98, tensor(-0.0222, dtype=torch.float64)), (1563, tensor(-0.0222, dtype=torch.float64)), (2416, tensor(-0.0222, dtype=torch.float64)), (1591, tensor(-0.0221, dtype=torch.float64)), (2810, tensor(-0.0221, dtype=torch.float64)), (1463, tensor(-0.0221, dtype=torch.float64)), (169, tensor(-0.0221, dtype=torch.float64)), (818, tensor(-0.0221, dtype=torch.float64)), (830, tensor(-0.0220, dtype=torch.float64)), (190, tensor(-0.0220, dtype=torch.float64)), (1131, tensor(-0.0220, dtype=torch.float64)), (2015, tensor(-0.0219, dtype=torch.float64)), (2095, tensor(-0.0219, dtype=torch.float64)), (2020, tensor(-0.0219, dtype=torch.float64)), (2837, tensor(-0.0219, dtype=torch.float64)), (90, tensor(-0.0219, dtype=torch.float64)), (311, tensor(-0.0218, dtype=torch.float64)), (1288, tensor(-0.0218, dtype=torch.float64)), (2725, tensor(-0.0218, dtype=torch.float64)), (624, tensor(-0.0218, dtype=torch.float64)), (1454, tensor(-0.0217, dtype=torch.float64)), (1862, tensor(-0.0217, dtype=torch.float64)), (1923, tensor(-0.0217, dtype=torch.float64)), (1574, tensor(-0.0217, dtype=torch.float64)), (1652, tensor(-0.0217, dtype=torch.float64)), (1765, tensor(-0.0216, dtype=torch.float64)), (2045, tensor(-0.0215, dtype=torch.float64)), (1554, tensor(-0.0215, dtype=torch.float64)), (649, tensor(-0.0215, dtype=torch.float64)), (2616, tensor(-0.0214, dtype=torch.float64)), (657, tensor(-0.0214, dtype=torch.float64)), (2216, tensor(-0.0214, dtype=torch.float64)), (2154, tensor(-0.0214, dtype=torch.float64)), (104, tensor(-0.0214, dtype=torch.float64)), (412, tensor(-0.0214, dtype=torch.float64)), (2042, tensor(-0.0213, dtype=torch.float64)), (435, tensor(-0.0213, dtype=torch.float64)), (2370, tensor(-0.0213, dtype=torch.float64)), (2079, tensor(-0.0213, dtype=torch.float64)), (2802, tensor(-0.0212, dtype=torch.float64)), (329, tensor(-0.0212, dtype=torch.float64)), (583, tensor(-0.0212, dtype=torch.float64)), (1902, tensor(-0.0212, dtype=torch.float64)), (526, tensor(-0.0212, dtype=torch.float64)), (1906, tensor(-0.0212, dtype=torch.float64)), (164, tensor(-0.0211, dtype=torch.float64)), (51, tensor(-0.0211, dtype=torch.float64)), (1509, tensor(-0.0211, dtype=torch.float64)), (1068, tensor(-0.0211, dtype=torch.float64)), (1238, tensor(-0.0211, dtype=torch.float64)), (2450, tensor(-0.0210, dtype=torch.float64)), (807, tensor(-0.0210, dtype=torch.float64)), (1816, tensor(-0.0210, dtype=torch.float64)), (1219, tensor(-0.0210, dtype=torch.float64)), (1754, tensor(-0.0210, dtype=torch.float64)), (387, tensor(-0.0209, dtype=torch.float64)), (2398, tensor(-0.0209, dtype=torch.float64)), (2189, tensor(-0.0209, dtype=torch.float64)), (802, tensor(-0.0209, dtype=torch.float64)), (130, tensor(-0.0209, dtype=torch.float64)), (1416, tensor(-0.0209, dtype=torch.float64)), (760, tensor(-0.0209, dtype=torch.float64)), (567, tensor(-0.0208, dtype=torch.float64)), (2862, tensor(-0.0208, dtype=torch.float64)), (1718, tensor(-0.0207, dtype=torch.float64)), (1970, tensor(-0.0207, dtype=torch.float64)), (2666, tensor(-0.0206, dtype=torch.float64)), (1898, tensor(-0.0205, dtype=torch.float64)), (747, tensor(-0.0205, dtype=torch.float64)), (547, tensor(-0.0205, dtype=torch.float64)), (2619, tensor(-0.0205, dtype=torch.float64)), (320, tensor(-0.0205, dtype=torch.float64)), (1178, tensor(-0.0204, dtype=torch.float64)), (2080, tensor(-0.0204, dtype=torch.float64)), (1207, tensor(-0.0204, dtype=torch.float64)), (1236, tensor(-0.0203, dtype=torch.float64)), (1401, tensor(-0.0203, dtype=torch.float64)), (2815, tensor(-0.0203, dtype=torch.float64)), (1493, tensor(-0.0203, dtype=torch.float64)), (1124, tensor(-0.0203, dtype=torch.float64)), (2041, tensor(-0.0203, dtype=torch.float64)), (2654, tensor(-0.0203, dtype=torch.float64)), (1820, tensor(-0.0202, dtype=torch.float64)), (213, tensor(-0.0202, dtype=torch.float64)), (1064, tensor(-0.0202, dtype=torch.float64)), (2842, tensor(-0.0201, dtype=torch.float64)), (2844, tensor(-0.0201, dtype=torch.float64)), (2299, tensor(-0.0201, dtype=torch.float64)), (2393, tensor(-0.0201, dtype=torch.float64)), (2067, tensor(-0.0201, dtype=torch.float64)), (1626, tensor(-0.0200, dtype=torch.float64)), (1089, tensor(-0.0200, dtype=torch.float64)), (745, tensor(-0.0199, dtype=torch.float64)), (923, tensor(-0.0199, dtype=torch.float64)), (1040, tensor(-0.0199, dtype=torch.float64)), (720, tensor(-0.0199, dtype=torch.float64)), (2304, tensor(-0.0199, dtype=torch.float64)), (1431, tensor(-0.0198, dtype=torch.float64)), (1342, tensor(-0.0198, dtype=torch.float64)), (6, tensor(-0.0198, dtype=torch.float64)), (314, tensor(-0.0198, dtype=torch.float64)), (2190, tensor(-0.0197, dtype=torch.float64)), (519, tensor(-0.0197, dtype=torch.float64)), (996, tensor(-0.0197, dtype=torch.float64)), (2628, tensor(-0.0197, dtype=torch.float64)), (1357, tensor(-0.0196, dtype=torch.float64)), (1876, tensor(-0.0196, dtype=torch.float64)), (2339, tensor(-0.0196, dtype=torch.float64)), (1734, tensor(-0.0196, dtype=torch.float64)), (1786, tensor(-0.0196, dtype=torch.float64)), (2713, tensor(-0.0195, dtype=torch.float64)), (1186, tensor(-0.0195, dtype=torch.float64)), (2613, tensor(-0.0195, dtype=torch.float64)), (1857, tensor(-0.0195, dtype=torch.float64)), (768, tensor(-0.0195, dtype=torch.float64)), (2560, tensor(-0.0195, dtype=torch.float64)), (1589, tensor(-0.0194, dtype=torch.float64)), (1631, tensor(-0.0194, dtype=torch.float64)), (2610, tensor(-0.0194, dtype=torch.float64)), (2268, tensor(-0.0194, dtype=torch.float64)), (781, tensor(-0.0194, dtype=torch.float64)), (1012, tensor(-0.0194, dtype=torch.float64)), (2377, tensor(-0.0193, dtype=torch.float64)), (947, tensor(-0.0192, dtype=torch.float64)), (1229, tensor(-0.0192, dtype=torch.float64)), (451, tensor(-0.0191, dtype=torch.float64)), (2261, tensor(-0.0191, dtype=torch.float64)), (1341, tensor(-0.0191, dtype=torch.float64)), (2110, tensor(-0.0190, dtype=torch.float64)), (633, tensor(-0.0190, dtype=torch.float64)), (772, tensor(-0.0190, dtype=torch.float64)), (1763, tensor(-0.0190, dtype=torch.float64)), (2477, tensor(-0.0190, dtype=torch.float64)), (268, tensor(-0.0190, dtype=torch.float64)), (454, tensor(-0.0189, dtype=torch.float64)), (247, tensor(-0.0189, dtype=torch.float64)), (7, tensor(-0.0189, dtype=torch.float64)), (2635, tensor(-0.0189, dtype=torch.float64)), (2558, tensor(-0.0189, dtype=torch.float64)), (930, tensor(-0.0189, dtype=torch.float64)), (1003, tensor(-0.0188, dtype=torch.float64)), (2109, tensor(-0.0188, dtype=torch.float64)), (74, tensor(-0.0188, dtype=torch.float64)), (475, tensor(-0.0188, dtype=torch.float64)), (26, tensor(-0.0188, dtype=torch.float64)), (146, tensor(-0.0187, dtype=torch.float64)), (487, tensor(-0.0187, dtype=torch.float64)), (1536, tensor(-0.0187, dtype=torch.float64)), (2492, tensor(-0.0186, dtype=torch.float64)), (1864, tensor(-0.0186, dtype=torch.float64)), (2281, tensor(-0.0186, dtype=torch.float64)), (542, tensor(-0.0185, dtype=torch.float64)), (2413, tensor(-0.0185, dtype=torch.float64)), (2419, tensor(-0.0185, dtype=torch.float64)), (1659, tensor(-0.0185, dtype=torch.float64)), (1369, tensor(-0.0184, dtype=torch.float64)), (1283, tensor(-0.0184, dtype=torch.float64)), (2887, tensor(-0.0183, dtype=torch.float64)), (2498, tensor(-0.0183, dtype=torch.float64)), (1075, tensor(-0.0182, dtype=torch.float64)), (1025, tensor(-0.0182, dtype=torch.float64)), (2642, tensor(-0.0182, dtype=torch.float64)), (224, tensor(-0.0182, dtype=torch.float64)), (791, tensor(-0.0182, dtype=torch.float64)), (1411, tensor(-0.0181, dtype=torch.float64)), (428, tensor(-0.0181, dtype=torch.float64)), (22, tensor(-0.0181, dtype=torch.float64)), (2102, tensor(-0.0181, dtype=torch.float64)), (328, tensor(-0.0181, dtype=torch.float64)), (430, tensor(-0.0181, dtype=torch.float64)), (1122, tensor(-0.0180, dtype=torch.float64)), (324, tensor(-0.0180, dtype=torch.float64)), (341, tensor(-0.0180, dtype=torch.float64)), (2527, tensor(-0.0179, dtype=torch.float64)), (1823, tensor(-0.0179, dtype=torch.float64)), (2453, tensor(-0.0179, dtype=torch.float64)), (1372, tensor(-0.0179, dtype=torch.float64)), (841, tensor(-0.0179, dtype=torch.float64)), (589, tensor(-0.0178, dtype=torch.float64)), (2350, tensor(-0.0178, dtype=torch.float64)), (1137, tensor(-0.0178, dtype=torch.float64)), (2579, tensor(-0.0178, dtype=torch.float64)), (1996, tensor(-0.0177, dtype=torch.float64)), (775, tensor(-0.0177, dtype=torch.float64)), (1295, tensor(-0.0177, dtype=torch.float64)), (1246, tensor(-0.0177, dtype=torch.float64)), (883, tensor(-0.0177, dtype=torch.float64)), (1085, tensor(-0.0176, dtype=torch.float64)), (135, tensor(-0.0176, dtype=torch.float64)), (137, tensor(-0.0176, dtype=torch.float64)), (579, tensor(-0.0176, dtype=torch.float64)), (273, tensor(-0.0176, dtype=torch.float64)), (2125, tensor(-0.0176, dtype=torch.float64)), (2703, tensor(-0.0175, dtype=torch.float64)), (257, tensor(-0.0175, dtype=torch.float64)), (1098, tensor(-0.0175, dtype=torch.float64)), (685, tensor(-0.0175, dtype=torch.float64)), (578, tensor(-0.0174, dtype=torch.float64)), (1709, tensor(-0.0173, dtype=torch.float64)), (1506, tensor(-0.0173, dtype=torch.float64)), (2003, tensor(-0.0173, dtype=torch.float64)), (1242, tensor(-0.0173, dtype=torch.float64)), (1141, tensor(-0.0172, dtype=torch.float64)), (1711, tensor(-0.0172, dtype=torch.float64)), (2285, tensor(-0.0171, dtype=torch.float64)), (1606, tensor(-0.0171, dtype=torch.float64)), (2122, tensor(-0.0171, dtype=torch.float64)), (2612, tensor(-0.0170, dtype=torch.float64)), (2129, tensor(-0.0170, dtype=torch.float64)), (1139, tensor(-0.0170, dtype=torch.float64)), (2820, tensor(-0.0169, dtype=torch.float64)), (37, tensor(-0.0169, dtype=torch.float64)), (2648, tensor(-0.0169, dtype=torch.float64)), (591, tensor(-0.0168, dtype=torch.float64)), (1858, tensor(-0.0168, dtype=torch.float64)), (517, tensor(-0.0168, dtype=torch.float64)), (351, tensor(-0.0168, dtype=torch.float64)), (2364, tensor(-0.0167, dtype=torch.float64)), (698, tensor(-0.0167, dtype=torch.float64)), (1279, tensor(-0.0167, dtype=torch.float64)), (103, tensor(-0.0167, dtype=torch.float64)), (1916, tensor(-0.0167, dtype=torch.float64)), (357, tensor(-0.0166, dtype=torch.float64)), (288, tensor(-0.0166, dtype=torch.float64)), (2019, tensor(-0.0165, dtype=torch.float64)), (1679, tensor(-0.0165, dtype=torch.float64)), (2732, tensor(-0.0165, dtype=torch.float64)), (2784, tensor(-0.0164, dtype=torch.float64)), (1302, tensor(-0.0164, dtype=torch.float64)), (1266, tensor(-0.0164, dtype=torch.float64)), (153, tensor(-0.0164, dtype=torch.float64)), (981, tensor(-0.0164, dtype=torch.float64)), (2183, tensor(-0.0163, dtype=torch.float64)), (102, tensor(-0.0163, dtype=torch.float64)), (2335, tensor(-0.0162, dtype=torch.float64)), (297, tensor(-0.0162, dtype=torch.float64)), (2595, tensor(-0.0162, dtype=torch.float64)), (2385, tensor(-0.0162, dtype=torch.float64)), (1967, tensor(-0.0162, dtype=torch.float64)), (2582, tensor(-0.0162, dtype=torch.float64)), (604, tensor(-0.0161, dtype=torch.float64)), (1402, tensor(-0.0160, dtype=torch.float64)), (2687, tensor(-0.0160, dtype=torch.float64)), (902, tensor(-0.0160, dtype=torch.float64)), (2430, tensor(-0.0160, dtype=torch.float64)), (1252, tensor(-0.0159, dtype=torch.float64)), (2173, tensor(-0.0159, dtype=torch.float64)), (1617, tensor(-0.0159, dtype=torch.float64)), (2244, tensor(-0.0159, dtype=torch.float64)), (2883, tensor(-0.0159, dtype=torch.float64)), (1706, tensor(-0.0159, dtype=torch.float64)), (1392, tensor(-0.0158, dtype=torch.float64)), (361, tensor(-0.0156, dtype=torch.float64)), (2688, tensor(-0.0156, dtype=torch.float64)), (2838, tensor(-0.0156, dtype=torch.float64)), (2267, tensor(-0.0156, dtype=torch.float64)), (2204, tensor(-0.0156, dtype=torch.float64)), (1716, tensor(-0.0156, dtype=torch.float64)), (2472, tensor(-0.0155, dtype=torch.float64)), (793, tensor(-0.0155, dtype=torch.float64)), (1432, tensor(-0.0155, dtype=torch.float64)), (952, tensor(-0.0154, dtype=torch.float64)), (2786, tensor(-0.0153, dtype=torch.float64)), (2353, tensor(-0.0153, dtype=torch.float64)), (1750, tensor(-0.0153, dtype=torch.float64)), (1817, tensor(-0.0153, dtype=torch.float64)), (1276, tensor(-0.0153, dtype=torch.float64)), (1900, tensor(-0.0153, dtype=torch.float64)), (2843, tensor(-0.0153, dtype=torch.float64)), (1199, tensor(-0.0153, dtype=torch.float64)), (2030, tensor(-0.0153, dtype=torch.float64)), (2801, tensor(-0.0152, dtype=torch.float64)), (267, tensor(-0.0152, dtype=torch.float64)), (2373, tensor(-0.0152, dtype=torch.float64)), (1696, tensor(-0.0152, dtype=torch.float64)), (385, tensor(-0.0151, dtype=torch.float64)), (495, tensor(-0.0151, dtype=torch.float64)), (2002, tensor(-0.0151, dtype=torch.float64)), (642, tensor(-0.0151, dtype=torch.float64)), (434, tensor(-0.0151, dtype=torch.float64)), (1206, tensor(-0.0150, dtype=torch.float64)), (1397, tensor(-0.0150, dtype=torch.float64)), (240, tensor(-0.0150, dtype=torch.float64)), (999, tensor(-0.0150, dtype=torch.float64)), (748, tensor(-0.0150, dtype=torch.float64)), (294, tensor(-0.0150, dtype=torch.float64)), (1248, tensor(-0.0150, dtype=torch.float64)), (607, tensor(-0.0150, dtype=torch.float64)), (2132, tensor(-0.0149, dtype=torch.float64)), (783, tensor(-0.0149, dtype=torch.float64)), (606, tensor(-0.0149, dtype=torch.float64)), (2539, tensor(-0.0149, dtype=torch.float64)), (2415, tensor(-0.0148, dtype=torch.float64)), (1227, tensor(-0.0148, dtype=torch.float64)), (2270, tensor(-0.0148, dtype=torch.float64)), (936, tensor(-0.0147, dtype=torch.float64)), (2052, tensor(-0.0147, dtype=torch.float64)), (1896, tensor(-0.0147, dtype=torch.float64)), (1983, tensor(-0.0147, dtype=torch.float64)), (1624, tensor(-0.0146, dtype=torch.float64)), (1115, tensor(-0.0146, dtype=torch.float64)), (1080, tensor(-0.0146, dtype=torch.float64)), (2098, tensor(-0.0146, dtype=torch.float64)), (2023, tensor(-0.0145, dtype=torch.float64)), (2176, tensor(-0.0145, dtype=torch.float64)), (1661, tensor(-0.0145, dtype=torch.float64)), (2723, tensor(-0.0145, dtype=torch.float64)), (2011, tensor(-0.0145, dtype=torch.float64)), (931, tensor(-0.0144, dtype=torch.float64)), (2743, tensor(-0.0144, dtype=torch.float64)), (1309, tensor(-0.0144, dtype=torch.float64)), (1859, tensor(-0.0143, dtype=torch.float64)), (2141, tensor(-0.0143, dtype=torch.float64)), (406, tensor(-0.0143, dtype=torch.float64)), (1146, tensor(-0.0143, dtype=torch.float64)), (853, tensor(-0.0143, dtype=torch.float64)), (1447, tensor(-0.0143, dtype=torch.float64)), (1130, tensor(-0.0143, dtype=torch.float64)), (940, tensor(-0.0143, dtype=torch.float64)), (1940, tensor(-0.0142, dtype=torch.float64)), (28, tensor(-0.0142, dtype=torch.float64)), (1650, tensor(-0.0142, dtype=torch.float64)), (2046, tensor(-0.0141, dtype=torch.float64)), (2242, tensor(-0.0141, dtype=torch.float64)), (644, tensor(-0.0141, dtype=torch.float64)), (117, tensor(-0.0141, dtype=torch.float64)), (839, tensor(-0.0140, dtype=torch.float64)), (1921, tensor(-0.0140, dtype=torch.float64)), (2780, tensor(-0.0140, dtype=torch.float64)), (2830, tensor(-0.0140, dtype=torch.float64)), (1225, tensor(-0.0140, dtype=torch.float64)), (342, tensor(-0.0139, dtype=torch.float64)), (625, tensor(-0.0139, dtype=torch.float64)), (2481, tensor(-0.0138, dtype=torch.float64)), (2715, tensor(-0.0138, dtype=torch.float64)), (128, tensor(-0.0138, dtype=torch.float64)), (192, tensor(-0.0138, dtype=torch.float64)), (421, tensor(-0.0138, dtype=torch.float64)), (796, tensor(-0.0137, dtype=torch.float64)), (1928, tensor(-0.0137, dtype=torch.float64)), (498, tensor(-0.0137, dtype=torch.float64)), (355, tensor(-0.0137, dtype=torch.float64)), (1191, tensor(-0.0137, dtype=torch.float64)), (1795, tensor(-0.0137, dtype=torch.float64)), (1610, tensor(-0.0136, dtype=torch.float64)), (2796, tensor(-0.0136, dtype=torch.float64)), (2857, tensor(-0.0136, dtype=torch.float64)), (1532, tensor(-0.0135, dtype=torch.float64)), (1257, tensor(-0.0135, dtype=torch.float64)), (899, tensor(-0.0135, dtype=torch.float64)), (409, tensor(-0.0135, dtype=torch.float64)), (1561, tensor(-0.0135, dtype=torch.float64)), (105, tensor(-0.0134, dtype=torch.float64)), (1507, tensor(-0.0134, dtype=torch.float64)), (1875, tensor(-0.0134, dtype=torch.float64)), (2180, tensor(-0.0134, dtype=torch.float64)), (262, tensor(-0.0133, dtype=torch.float64)), (2572, tensor(-0.0133, dtype=torch.float64)), (2692, tensor(-0.0133, dtype=torch.float64)), (1969, tensor(-0.0133, dtype=torch.float64)), (1355, tensor(-0.0133, dtype=torch.float64)), (826, tensor(-0.0133, dtype=torch.float64)), (2836, tensor(-0.0132, dtype=torch.float64)), (1526, tensor(-0.0132, dtype=torch.float64)), (2135, tensor(-0.0131, dtype=torch.float64)), (2114, tensor(-0.0131, dtype=torch.float64)), (1184, tensor(-0.0131, dtype=torch.float64)), (2055, tensor(-0.0130, dtype=torch.float64)), (1989, tensor(-0.0130, dtype=torch.float64)), (1623, tensor(-0.0130, dtype=torch.float64)), (2885, tensor(-0.0130, dtype=torch.float64)), (1964, tensor(-0.0129, dtype=torch.float64)), (1286, tensor(-0.0128, dtype=torch.float64)), (1250, tensor(-0.0128, dtype=torch.float64)), (2214, tensor(-0.0128, dtype=torch.float64)), (2158, tensor(-0.0128, dtype=torch.float64)), (926, tensor(-0.0128, dtype=torch.float64)), (2518, tensor(-0.0127, dtype=torch.float64)), (2785, tensor(-0.0127, dtype=torch.float64)), (1614, tensor(-0.0127, dtype=torch.float64)), (2653, tensor(-0.0127, dtype=torch.float64)), (2566, tensor(-0.0127, dtype=torch.float64)), (1129, tensor(-0.0127, dtype=torch.float64)), (1458, tensor(-0.0127, dtype=torch.float64)), (41, tensor(-0.0126, dtype=torch.float64)), (618, tensor(-0.0126, dtype=torch.float64)), (2651, tensor(-0.0126, dtype=torch.float64)), (1112, tensor(-0.0126, dtype=torch.float64)), (1955, tensor(-0.0126, dtype=torch.float64)), (746, tensor(-0.0125, dtype=torch.float64)), (174, tensor(-0.0125, dtype=torch.float64)), (592, tensor(-0.0125, dtype=torch.float64)), (1270, tensor(-0.0124, dtype=torch.float64)), (1925, tensor(-0.0124, dtype=torch.float64)), (918, tensor(-0.0124, dtype=torch.float64)), (683, tensor(-0.0124, dtype=torch.float64)), (629, tensor(-0.0124, dtype=torch.float64)), (1841, tensor(-0.0124, dtype=torch.float64)), (2533, tensor(-0.0124, dtype=torch.float64)), (2163, tensor(-0.0123, dtype=torch.float64)), (1895, tensor(-0.0123, dtype=torch.float64)), (2378, tensor(-0.0123, dtype=torch.float64)), (1490, tensor(-0.0123, dtype=torch.float64)), (2178, tensor(-0.0122, dtype=torch.float64)), (1883, tensor(-0.0122, dtype=torch.float64)), (1744, tensor(-0.0121, dtype=torch.float64)), (2600, tensor(-0.0121, dtype=torch.float64)), (448, tensor(-0.0121, dtype=torch.float64)), (1473, tensor(-0.0121, dtype=torch.float64)), (2292, tensor(-0.0121, dtype=torch.float64)), (1697, tensor(-0.0121, dtype=torch.float64)), (620, tensor(-0.0120, dtype=torch.float64)), (806, tensor(-0.0120, dtype=torch.float64)), (1558, tensor(-0.0120, dtype=torch.float64)), (1995, tensor(-0.0120, dtype=torch.float64)), (1168, tensor(-0.0120, dtype=torch.float64)), (2745, tensor(-0.0119, dtype=torch.float64)), (2354, tensor(-0.0119, dtype=torch.float64)), (2495, tensor(-0.0119, dtype=torch.float64)), (1092, tensor(-0.0119, dtype=torch.float64)), (2544, tensor(-0.0119, dtype=torch.float64)), (2431, tensor(-0.0118, dtype=torch.float64)), (2409, tensor(-0.0118, dtype=torch.float64)), (912, tensor(-0.0118, dtype=torch.float64)), (2025, tensor(-0.0118, dtype=torch.float64)), (1643, tensor(-0.0117, dtype=torch.float64)), (1732, tensor(-0.0116, dtype=torch.float64)), (44, tensor(-0.0116, dtype=torch.float64)), (1608, tensor(-0.0116, dtype=torch.float64)), (1666, tensor(-0.0116, dtype=torch.float64)), (2620, tensor(-0.0116, dtype=torch.float64)), (951, tensor(-0.0116, dtype=torch.float64)), (2797, tensor(-0.0115, dtype=torch.float64)), (1405, tensor(-0.0115, dtype=torch.float64)), (2852, tensor(-0.0115, dtype=torch.float64)), (1821, tensor(-0.0115, dtype=torch.float64)), (2323, tensor(-0.0115, dtype=torch.float64)), (2658, tensor(-0.0114, dtype=torch.float64)), (833, tensor(-0.0114, dtype=torch.float64)), (39, tensor(-0.0114, dtype=torch.float64)), (1317, tensor(-0.0113, dtype=torch.float64)), (641, tensor(-0.0113, dtype=torch.float64)), (1182, tensor(-0.0113, dtype=torch.float64)), (1280, tensor(-0.0113, dtype=torch.float64)), (2682, tensor(-0.0112, dtype=torch.float64)), (704, tensor(-0.0112, dtype=torch.float64)), (1244, tensor(-0.0111, dtype=torch.float64)), (2091, tensor(-0.0111, dtype=torch.float64)), (814, tensor(-0.0111, dtype=torch.float64)), (508, tensor(-0.0111, dtype=torch.float64)), (1885, tensor(-0.0111, dtype=torch.float64)), (2537, tensor(-0.0110, dtype=torch.float64)), (1565, tensor(-0.0110, dtype=torch.float64)), (2289, tensor(-0.0110, dtype=torch.float64)), (2196, tensor(-0.0109, dtype=torch.float64)), (904, tensor(-0.0109, dtype=torch.float64)), (2474, tensor(-0.0109, dtype=torch.float64)), (304, tensor(-0.0109, dtype=torch.float64)), (678, tensor(-0.0109, dtype=torch.float64)), (2237, tensor(-0.0108, dtype=torch.float64)), (958, tensor(-0.0108, dtype=torch.float64)), (1258, tensor(-0.0108, dtype=torch.float64)), (1004, tensor(-0.0108, dtype=torch.float64)), (2391, tensor(-0.0108, dtype=torch.float64)), (232, tensor(-0.0108, dtype=torch.float64)), (1698, tensor(-0.0108, dtype=torch.float64)), (492, tensor(-0.0107, dtype=torch.float64)), (1942, tensor(-0.0107, dtype=torch.float64)), (536, tensor(-0.0107, dtype=torch.float64)), (1818, tensor(-0.0107, dtype=torch.float64)), (31, tensor(-0.0106, dtype=torch.float64)), (665, tensor(-0.0106, dtype=torch.float64)), (907, tensor(-0.0106, dtype=torch.float64)), (2139, tensor(-0.0106, dtype=torch.float64)), (1381, tensor(-0.0105, dtype=torch.float64)), (1370, tensor(-0.0105, dtype=torch.float64)), (2615, tensor(-0.0104, dtype=torch.float64)), (1378, tensor(-0.0104, dtype=torch.float64)), (2834, tensor(-0.0104, dtype=torch.float64)), (330, tensor(-0.0103, dtype=torch.float64)), (1377, tensor(-0.0102, dtype=torch.float64)), (2246, tensor(-0.0102, dtype=torch.float64)), (712, tensor(-0.0102, dtype=torch.float64)), (1036, tensor(-0.0102, dtype=torch.float64)), (261, tensor(-0.0102, dtype=torch.float64)), (574, tensor(-0.0102, dtype=torch.float64)), (1687, tensor(-0.0101, dtype=torch.float64)), (1027, tensor(-0.0101, dtype=torch.float64)), (2120, tensor(-0.0101, dtype=torch.float64)), (2365, tensor(-0.0100, dtype=torch.float64)), (373, tensor(-0.0100, dtype=torch.float64)), (384, tensor(-0.0100, dtype=torch.float64)), (2362, tensor(-0.0100, dtype=torch.float64)), (2835, tensor(-0.0100, dtype=torch.float64)), (2379, tensor(-0.0100, dtype=torch.float64)), (599, tensor(-0.0100, dtype=torch.float64)), (2148, tensor(-0.0100, dtype=torch.float64)), (1050, tensor(-0.0100, dtype=torch.float64)), (1952, tensor(-0.0099, dtype=torch.float64)), (455, tensor(-0.0099, dtype=torch.float64)), (1105, tensor(-0.0099, dtype=torch.float64)), (1941, tensor(-0.0099, dtype=torch.float64)), (256, tensor(-0.0099, dtype=torch.float64)), (94, tensor(-0.0099, dtype=torch.float64)), (1796, tensor(-0.0098, dtype=torch.float64)), (510, tensor(-0.0098, dtype=torch.float64)), (2488, tensor(-0.0098, dtype=torch.float64)), (2736, tensor(-0.0098, dtype=torch.float64)), (2184, tensor(-0.0098, dtype=torch.float64)), (1157, tensor(-0.0098, dtype=torch.float64)), (4, tensor(-0.0098, dtype=torch.float64)), (1313, tensor(-0.0098, dtype=torch.float64)), (871, tensor(-0.0097, dtype=torch.float64)), (1109, tensor(-0.0097, dtype=torch.float64)), (193, tensor(-0.0097, dtype=torch.float64)), (2520, tensor(-0.0097, dtype=torch.float64)), (864, tensor(-0.0097, dtype=torch.float64)), (216, tensor(-0.0097, dtype=torch.float64)), (778, tensor(-0.0097, dtype=torch.float64)), (691, tensor(-0.0096, dtype=torch.float64)), (2202, tensor(-0.0096, dtype=torch.float64)), (2357, tensor(-0.0095, dtype=torch.float64)), (2326, tensor(-0.0095, dtype=torch.float64)), (2307, tensor(-0.0095, dtype=torch.float64)), (2056, tensor(-0.0094, dtype=torch.float64)), (1811, tensor(-0.0094, dtype=torch.float64)), (1171, tensor(-0.0094, dtype=torch.float64)), (1579, tensor(-0.0094, dtype=torch.float64)), (2239, tensor(-0.0094, dtype=torch.float64)), (2602, tensor(-0.0093, dtype=torch.float64)), (1, tensor(-0.0092, dtype=torch.float64)), (2559, tensor(-0.0092, dtype=torch.float64)), (114, tensor(-0.0092, dtype=torch.float64)), (1053, tensor(-0.0092, dtype=torch.float64)), (1571, tensor(-0.0091, dtype=torch.float64)), (1860, tensor(-0.0091, dtype=torch.float64)), (1714, tensor(-0.0091, dtype=torch.float64)), (2777, tensor(-0.0091, dtype=torch.float64)), (605, tensor(-0.0091, dtype=torch.float64)), (1348, tensor(-0.0091, dtype=torch.float64)), (557, tensor(-0.0091, dtype=torch.float64)), (2476, tensor(-0.0090, dtype=torch.float64)), (2463, tensor(-0.0090, dtype=torch.float64)), (306, tensor(-0.0090, dtype=torch.float64)), (467, tensor(-0.0090, dtype=torch.float64)), (2751, tensor(-0.0090, dtype=torch.float64)), (1828, tensor(-0.0090, dtype=torch.float64)), (2823, tensor(-0.0090, dtype=torch.float64)), (2179, tensor(-0.0090, dtype=torch.float64)), (2813, tensor(-0.0090, dtype=torch.float64)), (1312, tensor(-0.0089, dtype=torch.float64)), (2381, tensor(-0.0089, dtype=torch.float64)), (1792, tensor(-0.0089, dtype=torch.float64)), (1049, tensor(-0.0089, dtype=torch.float64)), (740, tensor(-0.0089, dtype=torch.float64)), (2241, tensor(-0.0089, dtype=torch.float64)), (2198, tensor(-0.0088, dtype=torch.float64)), (2677, tensor(-0.0088, dtype=torch.float64)), (2483, tensor(-0.0088, dtype=torch.float64)), (239, tensor(-0.0088, dtype=torch.float64)), (1249, tensor(-0.0088, dtype=torch.float64)), (143, tensor(-0.0087, dtype=torch.float64)), (1710, tensor(-0.0087, dtype=torch.float64)), (108, tensor(-0.0086, dtype=torch.float64)), (1208, tensor(-0.0085, dtype=torch.float64)), (1484, tensor(-0.0085, dtype=torch.float64)), (2070, tensor(-0.0084, dtype=torch.float64)), (1475, tensor(-0.0084, dtype=torch.float64)), (2547, tensor(-0.0084, dtype=torch.float64)), (1486, tensor(-0.0084, dtype=torch.float64)), (1119, tensor(-0.0083, dtype=torch.float64)), (1971, tensor(-0.0083, dtype=torch.float64)), (568, tensor(-0.0082, dtype=torch.float64)), (2349, tensor(-0.0082, dtype=torch.float64)), (2812, tensor(-0.0082, dtype=torch.float64)), (1190, tensor(-0.0082, dtype=torch.float64)), (2501, tensor(-0.0082, dtype=torch.float64)), (2016, tensor(-0.0082, dtype=torch.float64)), (2089, tensor(-0.0082, dtype=torch.float64)), (158, tensor(-0.0082, dtype=torch.float64)), (347, tensor(-0.0081, dtype=torch.float64)), (1994, tensor(-0.0081, dtype=torch.float64)), (2669, tensor(-0.0081, dtype=torch.float64)), (1398, tensor(-0.0081, dtype=torch.float64)), (2588, tensor(-0.0080, dtype=torch.float64)), (1636, tensor(-0.0080, dtype=torch.float64)), (272, tensor(-0.0080, dtype=torch.float64)), (2399, tensor(-0.0080, dtype=torch.float64)), (2767, tensor(-0.0080, dtype=torch.float64)), (1435, tensor(-0.0080, dtype=torch.float64)), (1127, tensor(-0.0079, dtype=torch.float64)), (2864, tensor(-0.0079, dtype=torch.float64)), (184, tensor(-0.0079, dtype=torch.float64)), (2573, tensor(-0.0079, dtype=torch.float64)), (1535, tensor(-0.0079, dtype=torch.float64)), (2210, tensor(-0.0078, dtype=torch.float64)), (2794, tensor(-0.0078, dtype=torch.float64)), (1436, tensor(-0.0078, dtype=torch.float64)), (1990, tensor(-0.0078, dtype=torch.float64)), (531, tensor(-0.0078, dtype=torch.float64)), (2744, tensor(-0.0078, dtype=torch.float64)), (365, tensor(-0.0077, dtype=torch.float64)), (19, tensor(-0.0076, dtype=torch.float64)), (1172, tensor(-0.0076, dtype=torch.float64)), (2793, tensor(-0.0076, dtype=torch.float64)), (1323, tensor(-0.0076, dtype=torch.float64)), (87, tensor(-0.0076, dtype=torch.float64)), (2493, tensor(-0.0076, dtype=torch.float64)), (754, tensor(-0.0076, dtype=torch.float64)), (2644, tensor(-0.0075, dtype=torch.float64)), (1299, tensor(-0.0075, dtype=torch.float64)), (2451, tensor(-0.0075, dtype=torch.float64)), (878, tensor(-0.0075, dtype=torch.float64)), (974, tensor(-0.0074, dtype=torch.float64)), (2144, tensor(-0.0074, dtype=torch.float64)), (1106, tensor(-0.0074, dtype=torch.float64)), (884, tensor(-0.0074, dtype=torch.float64)), (956, tensor(-0.0074, dtype=torch.float64)), (1202, tensor(-0.0074, dtype=torch.float64)), (2456, tensor(-0.0074, dtype=torch.float64)), (344, tensor(-0.0074, dtype=torch.float64)), (2695, tensor(-0.0074, dtype=torch.float64)), (1568, tensor(-0.0074, dtype=torch.float64)), (2471, tensor(-0.0074, dtype=torch.float64)), (840, tensor(-0.0073, dtype=torch.float64)), (2017, tensor(-0.0073, dtype=torch.float64)), (2007, tensor(-0.0073, dtype=torch.float64)), (1135, tensor(-0.0073, dtype=torch.float64)), (326, tensor(-0.0073, dtype=torch.float64)), (2808, tensor(-0.0073, dtype=torch.float64)), (2188, tensor(-0.0073, dtype=torch.float64)), (2640, tensor(-0.0073, dtype=torch.float64)), (415, tensor(-0.0072, dtype=torch.float64)), (2611, tensor(-0.0072, dtype=torch.float64)), (503, tensor(-0.0072, dtype=torch.float64)), (990, tensor(-0.0072, dtype=torch.float64)), (689, tensor(-0.0071, dtype=torch.float64)), (559, tensor(-0.0071, dtype=torch.float64)), (1852, tensor(-0.0070, dtype=torch.float64)), (924, tensor(-0.0070, dtype=torch.float64)), (1950, tensor(-0.0069, dtype=torch.float64)), (927, tensor(-0.0069, dtype=torch.float64)), (1326, tensor(-0.0069, dtype=torch.float64)), (758, tensor(-0.0069, dtype=torch.float64)), (2696, tensor(-0.0069, dtype=torch.float64)), (2061, tensor(-0.0069, dtype=torch.float64)), (729, tensor(-0.0068, dtype=torch.float64)), (1194, tensor(-0.0068, dtype=torch.float64)), (1511, tensor(-0.0068, dtype=torch.float64)), (2824, tensor(-0.0068, dtype=torch.float64)), (2174, tensor(-0.0068, dtype=torch.float64)), (2739, tensor(-0.0068, dtype=torch.float64)), (2101, tensor(-0.0067, dtype=torch.float64)), (1351, tensor(-0.0067, dtype=torch.float64)), (2782, tensor(-0.0067, dtype=torch.float64)), (2028, tensor(-0.0067, dtype=torch.float64)), (1104, tensor(-0.0067, dtype=torch.float64)), (337, tensor(-0.0066, dtype=torch.float64)), (390, tensor(-0.0066, dtype=torch.float64)), (1548, tensor(-0.0066, dtype=torch.float64)), (1805, tensor(-0.0066, dtype=torch.float64)), (1723, tensor(-0.0066, dtype=torch.float64)), (1440, tensor(-0.0066, dtype=torch.float64)), (2038, tensor(-0.0066, dtype=torch.float64)), (1058, tensor(-0.0066, dtype=torch.float64)), (2359, tensor(-0.0066, dtype=torch.float64)), (1070, tensor(-0.0066, dtype=torch.float64)), (1047, tensor(-0.0065, dtype=torch.float64)), (1676, tensor(-0.0065, dtype=torch.float64)), (472, tensor(-0.0065, dtype=torch.float64)), (471, tensor(-0.0065, dtype=torch.float64)), (1605, tensor(-0.0065, dtype=torch.float64)), (1584, tensor(-0.0065, dtype=torch.float64)), (1516, tensor(-0.0065, dtype=torch.float64)), (80, tensor(-0.0065, dtype=torch.float64)), (2309, tensor(-0.0065, dtype=torch.float64)), (2222, tensor(-0.0065, dtype=torch.float64)), (1577, tensor(-0.0064, dtype=torch.float64)), (1066, tensor(-0.0064, dtype=torch.float64)), (1639, tensor(-0.0064, dtype=torch.float64)), (1655, tensor(-0.0064, dtype=torch.float64)), (364, tensor(-0.0063, dtype=torch.float64)), (2146, tensor(-0.0063, dtype=torch.float64)), (1791, tensor(-0.0063, dtype=torch.float64)), (1845, tensor(-0.0063, dtype=torch.float64)), (1634, tensor(-0.0062, dtype=torch.float64)), (541, tensor(-0.0062, dtype=torch.float64)), (1771, tensor(-0.0062, dtype=torch.float64)), (2224, tensor(-0.0062, dtype=torch.float64)), (2068, tensor(-0.0061, dtype=torch.float64)), (2074, tensor(-0.0061, dtype=torch.float64)), (749, tensor(-0.0061, dtype=torch.float64)), (95, tensor(-0.0061, dtype=torch.float64)), (1677, tensor(-0.0061, dtype=torch.float64)), (708, tensor(-0.0061, dtype=torch.float64)), (275, tensor(-0.0060, dtype=torch.float64)), (380, tensor(-0.0060, dtype=torch.float64)), (371, tensor(-0.0060, dtype=torch.float64)), (1501, tensor(-0.0060, dtype=torch.float64)), (693, tensor(-0.0059, dtype=torch.float64)), (2218, tensor(-0.0059, dtype=torch.float64)), (782, tensor(-0.0059, dtype=torch.float64)), (2064, tensor(-0.0059, dtype=torch.float64)), (152, tensor(-0.0059, dtype=torch.float64)), (389, tensor(-0.0059, dtype=torch.float64)), (2333, tensor(-0.0059, dtype=torch.float64)), (2855, tensor(-0.0059, dtype=torch.float64)), (976, tensor(-0.0058, dtype=torch.float64)), (705, tensor(-0.0058, dtype=torch.float64)), (1776, tensor(-0.0058, dtype=torch.float64)), (856, tensor(-0.0058, dtype=torch.float64)), (69, tensor(-0.0058, dtype=torch.float64)), (1866, tensor(-0.0058, dtype=torch.float64)), (2008, tensor(-0.0058, dtype=torch.float64)), (1628, tensor(-0.0058, dtype=torch.float64)), (910, tensor(-0.0057, dtype=torch.float64)), (986, tensor(-0.0057, dtype=torch.float64)), (1683, tensor(-0.0057, dtype=torch.float64)), (1524, tensor(-0.0057, dtype=torch.float64)), (821, tensor(-0.0057, dtype=torch.float64)), (2769, tensor(-0.0057, dtype=torch.float64)), (634, tensor(-0.0057, dtype=torch.float64)), (2172, tensor(-0.0057, dtype=torch.float64)), (1899, tensor(-0.0057, dtype=torch.float64)), (2371, tensor(-0.0056, dtype=torch.float64)), (1562, tensor(-0.0056, dtype=torch.float64)), (983, tensor(-0.0056, dtype=torch.float64)), (2164, tensor(-0.0056, dtype=torch.float64)), (2408, tensor(-0.0056, dtype=torch.float64)), (2596, tensor(-0.0056, dtype=torch.float64)), (555, tensor(-0.0055, dtype=torch.float64)), (1806, tensor(-0.0055, dtype=torch.float64)), (1854, tensor(-0.0055, dtype=torch.float64)), (1736, tensor(-0.0055, dtype=torch.float64)), (1660, tensor(-0.0055, dtype=torch.float64)), (59, tensor(-0.0055, dtype=torch.float64)), (597, tensor(-0.0054, dtype=torch.float64)), (2149, tensor(-0.0054, dtype=torch.float64)), (2133, tensor(-0.0054, dtype=torch.float64)), (1328, tensor(-0.0053, dtype=torch.float64)), (898, tensor(-0.0053, dtype=torch.float64)), (1936, tensor(-0.0053, dtype=torch.float64)), (76, tensor(-0.0053, dtype=torch.float64)), (2672, tensor(-0.0053, dtype=torch.float64)), (2649, tensor(-0.0052, dtype=torch.float64)), (2297, tensor(-0.0052, dtype=torch.float64)), (2758, tensor(-0.0052, dtype=torch.float64)), (1240, tensor(-0.0052, dtype=torch.float64)), (1303, tensor(-0.0052, dtype=torch.float64)), (566, tensor(-0.0052, dtype=torch.float64)), (609, tensor(-0.0052, dtype=torch.float64)), (695, tensor(-0.0052, dtype=torch.float64)), (1439, tensor(-0.0052, dtype=torch.float64)), (408, tensor(-0.0052, dtype=torch.float64)), (1155, tensor(-0.0052, dtype=torch.float64)), (2535, tensor(-0.0052, dtype=torch.float64)), (258, tensor(-0.0052, dtype=torch.float64)), (423, tensor(-0.0052, dtype=torch.float64)), (1555, tensor(-0.0052, dtype=torch.float64)), (962, tensor(-0.0052, dtype=torch.float64)), (191, tensor(-0.0051, dtype=torch.float64)), (1975, tensor(-0.0051, dtype=torch.float64)), (13, tensor(-0.0051, dtype=torch.float64)), (1290, tensor(-0.0051, dtype=torch.float64)), (2541, tensor(-0.0051, dtype=torch.float64)), (922, tensor(-0.0050, dtype=torch.float64)), (900, tensor(-0.0050, dtype=torch.float64)), (397, tensor(-0.0050, dtype=torch.float64)), (1500, tensor(-0.0050, dtype=torch.float64)), (2698, tensor(-0.0050, dtype=torch.float64)), (36, tensor(-0.0050, dtype=torch.float64)), (2870, tensor(-0.0049, dtype=torch.float64)), (161, tensor(-0.0049, dtype=torch.float64)), (1388, tensor(-0.0049, dtype=torch.float64)), (2543, tensor(-0.0049, dtype=torch.float64)), (1376, tensor(-0.0049, dtype=torch.float64)), (921, tensor(-0.0048, dtype=torch.float64)), (109, tensor(-0.0048, dtype=torch.float64)), (2394, tensor(-0.0048, dtype=torch.float64)), (2670, tensor(-0.0048, dtype=torch.float64)), (1621, tensor(-0.0048, dtype=torch.float64)), (2521, tensor(-0.0048, dtype=torch.float64)), (291, tensor(-0.0048, dtype=torch.float64)), (2082, tensor(-0.0048, dtype=torch.float64)), (1159, tensor(-0.0047, dtype=torch.float64)), (869, tensor(-0.0047, dtype=torch.float64)), (207, tensor(-0.0047, dtype=torch.float64)), (1045, tensor(-0.0047, dtype=torch.float64)), (1349, tensor(-0.0047, dtype=torch.float64)), (879, tensor(-0.0047, dtype=torch.float64)), (581, tensor(-0.0046, dtype=torch.float64)), (1320, tensor(-0.0046, dtype=torch.float64)), (1827, tensor(-0.0046, dtype=torch.float64)), (1383, tensor(-0.0046, dtype=torch.float64)), (2598, tensor(-0.0045, dtype=torch.float64)), (2800, tensor(-0.0045, dtype=torch.float64)), (1640, tensor(-0.0045, dtype=torch.float64)), (1445, tensor(-0.0045, dtype=torch.float64)), (1014, tensor(-0.0045, dtype=torch.float64)), (1074, tensor(-0.0045, dtype=torch.float64)), (1167, tensor(-0.0044, dtype=torch.float64)), (2126, tensor(-0.0044, dtype=torch.float64)), (2136, tensor(-0.0044, dtype=torch.float64)), (144, tensor(-0.0044, dtype=torch.float64)), (1231, tensor(-0.0044, dtype=torch.float64)), (1247, tensor(-0.0044, dtype=torch.float64)), (906, tensor(-0.0043, dtype=torch.float64)), (1468, tensor(-0.0043, dtype=torch.float64)), (1797, tensor(-0.0043, dtype=torch.float64)), (2099, tensor(-0.0043, dtype=torch.float64)), (302, tensor(-0.0043, dtype=torch.float64)), (1481, tensor(-0.0043, dtype=torch.float64)), (2694, tensor(-0.0043, dtype=torch.float64)), (1808, tensor(-0.0043, dtype=torch.float64)), (1583, tensor(-0.0043, dtype=torch.float64)), (2675, tensor(-0.0042, dtype=torch.float64)), (2318, tensor(-0.0042, dtype=torch.float64)), (2665, tensor(-0.0042, dtype=torch.float64)), (2601, tensor(-0.0042, dtype=torch.float64)), (1600, tensor(-0.0042, dtype=torch.float64)), (985, tensor(-0.0042, dtype=torch.float64)), (2556, tensor(-0.0041, dtype=torch.float64)), (2386, tensor(-0.0041, dtype=torch.float64)), (1788, tensor(-0.0041, dtype=torch.float64)), (2169, tensor(-0.0041, dtype=torch.float64)), (404, tensor(-0.0041, dtype=torch.float64)), (2659, tensor(-0.0041, dtype=torch.float64)), (1870, tensor(-0.0041, dtype=torch.float64)), (1444, tensor(-0.0041, dtype=torch.float64)), (1924, tensor(-0.0040, dtype=torch.float64)), (1557, tensor(-0.0040, dtype=torch.float64)), (513, tensor(-0.0040, dtype=torch.float64)), (1534, tensor(-0.0040, dtype=torch.float64)), (582, tensor(-0.0040, dtype=torch.float64)), (2330, tensor(-0.0040, dtype=torch.float64)), (2085, tensor(-0.0040, dtype=torch.float64)), (535, tensor(-0.0040, dtype=torch.float64)), (1028, tensor(-0.0040, dtype=torch.float64)), (2327, tensor(-0.0040, dtype=torch.float64)), (751, tensor(-0.0040, dtype=torch.float64)), (418, tensor(-0.0039, dtype=torch.float64)), (944, tensor(-0.0039, dtype=torch.float64)), (2081, tensor(-0.0039, dtype=torch.float64)), (677, tensor(-0.0039, dtype=torch.float64)), (1273, tensor(-0.0038, dtype=torch.float64)), (1538, tensor(-0.0038, dtype=torch.float64)), (638, tensor(-0.0038, dtype=torch.float64)), (838, tensor(-0.0038, dtype=torch.float64)), (2368, tensor(-0.0038, dtype=torch.float64)), (1689, tensor(-0.0038, dtype=torch.float64)), (195, tensor(-0.0038, dtype=torch.float64)), (1263, tensor(-0.0038, dtype=torch.float64)), (2108, tensor(-0.0037, dtype=torch.float64)), (630, tensor(-0.0037, dtype=torch.float64)), (2749, tensor(-0.0037, dtype=torch.float64)), (640, tensor(-0.0037, dtype=torch.float64)), (490, tensor(-0.0037, dtype=torch.float64)), (2702, tensor(-0.0037, dtype=torch.float64)), (2532, tensor(-0.0036, dtype=torch.float64)), (125, tensor(-0.0036, dtype=torch.float64)), (2162, tensor(-0.0036, dtype=torch.float64)), (1586, tensor(-0.0036, dtype=torch.float64)), (2554, tensor(-0.0036, dtype=torch.float64)), (970, tensor(-0.0035, dtype=torch.float64)), (149, tensor(-0.0035, dtype=torch.float64)), (2667, tensor(-0.0035, dtype=torch.float64)), (546, tensor(-0.0035, dtype=torch.float64)), (2376, tensor(-0.0035, dtype=torch.float64)), (2177, tensor(-0.0035, dtype=torch.float64)), (739, tensor(-0.0035, dtype=torch.float64)), (142, tensor(-0.0035, dtype=torch.float64)), (2569, tensor(-0.0035, dtype=torch.float64)), (843, tensor(-0.0035, dtype=torch.float64)), (2175, tensor(-0.0034, dtype=torch.float64)), (254, tensor(-0.0034, dtype=torch.float64)), (46, tensor(-0.0034, dtype=torch.float64)), (515, tensor(-0.0034, dtype=torch.float64)), (64, tensor(-0.0034, dtype=torch.float64)), (2215, tensor(-0.0034, dtype=torch.float64)), (1476, tensor(-0.0033, dtype=torch.float64)), (1757, tensor(-0.0033, dtype=torch.float64)), (2429, tensor(-0.0033, dtype=torch.float64)), (1096, tensor(-0.0032, dtype=torch.float64)), (987, tensor(-0.0032, dtype=torch.float64)), (1078, tensor(-0.0032, dtype=torch.float64)), (1498, tensor(-0.0031, dtype=torch.float64)), (2097, tensor(-0.0031, dtype=torch.float64)), (363, tensor(-0.0031, dtype=torch.float64)), (1913, tensor(-0.0031, dtype=torch.float64)), (1201, tensor(-0.0031, dtype=torch.float64)), (1869, tensor(-0.0031, dtype=torch.float64)), (346, tensor(-0.0031, dtype=torch.float64)), (2298, tensor(-0.0030, dtype=torch.float64)), (1835, tensor(-0.0029, dtype=torch.float64)), (2759, tensor(-0.0029, dtype=torch.float64)), (2627, tensor(-0.0029, dtype=torch.float64)), (973, tensor(-0.0029, dtype=torch.float64)), (274, tensor(-0.0029, dtype=torch.float64)), (1429, tensor(-0.0029, dtype=torch.float64)), (1533, tensor(-0.0029, dtype=torch.float64)), (1394, tensor(-0.0028, dtype=torch.float64)), (2773, tensor(-0.0028, dtype=torch.float64)), (1523, tensor(-0.0028, dtype=torch.float64)), (1769, tensor(-0.0028, dtype=torch.float64)), (1637, tensor(-0.0028, dtype=torch.float64)), (1724, tensor(-0.0028, dtype=torch.float64)), (1346, tensor(-0.0028, dtype=torch.float64)), (1556, tensor(-0.0027, dtype=torch.float64)), (2286, tensor(-0.0027, dtype=torch.float64)), (616, tensor(-0.0027, dtype=torch.float64)), (2882, tensor(-0.0027, dtype=torch.float64)), (485, tensor(-0.0027, dtype=torch.float64)), (2459, tensor(-0.0027, dtype=torch.float64)), (2206, tensor(-0.0026, dtype=torch.float64)), (1363, tensor(-0.0026, dtype=torch.float64)), (271, tensor(-0.0026, dtype=torch.float64)), (1176, tensor(-0.0026, dtype=torch.float64)), (766, tensor(-0.0026, dtype=torch.float64)), (1337, tensor(-0.0026, dtype=torch.float64)), (1510, tensor(-0.0026, dtype=torch.float64)), (2418, tensor(-0.0025, dtype=torch.float64)), (2714, tensor(-0.0025, dtype=torch.float64)), (823, tensor(-0.0025, dtype=torch.float64)), (160, tensor(-0.0025, dtype=torch.float64)), (136, tensor(-0.0025, dtype=torch.float64)), (2029, tensor(-0.0025, dtype=torch.float64)), (696, tensor(-0.0025, dtype=torch.float64)), (2236, tensor(-0.0025, dtype=torch.float64)), (1359, tensor(-0.0024, dtype=torch.float64)), (1980, tensor(-0.0024, dtype=torch.float64)), (785, tensor(-0.0024, dtype=torch.float64)), (1594, tensor(-0.0024, dtype=torch.float64)), (1552, tensor(-0.0024, dtype=torch.float64)), (1314, tensor(-0.0023, dtype=torch.float64)), (1694, tensor(-0.0023, dtype=torch.float64)), (1358, tensor(-0.0023, dtype=torch.float64)), (836, tensor(-0.0023, dtype=torch.float64)), (181, tensor(-0.0023, dtype=torch.float64)), (2121, tensor(-0.0022, dtype=torch.float64)), (2639, tensor(-0.0022, dtype=torch.float64)), (2435, tensor(-0.0022, dtype=torch.float64)), (1596, tensor(-0.0022, dtype=torch.float64)), (1117, tensor(-0.0022, dtype=torch.float64)), (714, tensor(-0.0022, dtype=torch.float64)), (2733, tensor(-0.0022, dtype=torch.float64)), (2247, tensor(-0.0022, dtype=torch.float64)), (1764, tensor(-0.0022, dtype=torch.float64)), (396, tensor(-0.0022, dtype=torch.float64)), (290, tensor(-0.0022, dtype=torch.float64)), (2369, tensor(-0.0021, dtype=torch.float64)), (925, tensor(-0.0021, dtype=torch.float64)), (1046, tensor(-0.0021, dtype=torch.float64)), (2151, tensor(-0.0021, dtype=torch.float64)), (188, tensor(-0.0021, dtype=torch.float64)), (1960, tensor(-0.0021, dtype=torch.float64)), (2449, tensor(-0.0021, dtype=torch.float64)), (2817, tensor(-0.0021, dtype=torch.float64)), (2833, tensor(-0.0020, dtype=torch.float64)), (2774, tensor(-0.0020, dtype=torch.float64)), (2548, tensor(-0.0020, dtype=torch.float64)), (2874, tensor(-0.0020, dtype=torch.float64)), (681, tensor(-0.0020, dtype=torch.float64)), (1260, tensor(-0.0020, dtype=torch.float64)), (1461, tensor(-0.0020, dtype=torch.float64)), (2220, tensor(-0.0020, dtype=torch.float64)), (403, tensor(-0.0020, dtype=torch.float64)), (1701, tensor(-0.0020, dtype=torch.float64)), (1807, tensor(-0.0019, dtype=torch.float64)), (118, tensor(-0.0019, dtype=torch.float64)), (1005, tensor(-0.0019, dtype=torch.float64)), (2284, tensor(-0.0019, dtype=torch.float64)), (280, tensor(-0.0018, dtype=torch.float64)), (2192, tensor(-0.0018, dtype=torch.float64)), (1850, tensor(-0.0018, dtype=torch.float64)), (759, tensor(-0.0018, dtype=torch.float64)), (573, tensor(-0.0018, dtype=torch.float64)), (1528, tensor(-0.0018, dtype=torch.float64)), (1384, tensor(-0.0017, dtype=torch.float64)), (1863, tensor(-0.0017, dtype=torch.float64)), (2515, tensor(-0.0017, dtype=torch.float64)), (2440, tensor(-0.0017, dtype=torch.float64)), (249, tensor(-0.0016, dtype=torch.float64)), (1488, tensor(-0.0016, dtype=torch.float64)), (1908, tensor(-0.0016, dtype=torch.float64)), (1424, tensor(-0.0016, dtype=torch.float64)), (2661, tensor(-0.0015, dtype=torch.float64)), (1400, tensor(-0.0015, dtype=torch.float64)), (1116, tensor(-0.0015, dtype=torch.float64)), (71, tensor(-0.0015, dtype=torch.float64)), (2676, tensor(-0.0014, dtype=torch.float64)), (1963, tensor(-0.0014, dtype=torch.float64)), (966, tensor(-0.0014, dtype=torch.float64)), (651, tensor(-0.0013, dtype=torch.float64)), (413, tensor(-0.0013, dtype=torch.float64)), (632, tensor(-0.0013, dtype=torch.float64)), (1962, tensor(-0.0013, dtype=torch.float64)), (1319, tensor(-0.0012, dtype=torch.float64)), (867, tensor(-0.0012, dtype=torch.float64)), (1293, tensor(-0.0012, dtype=torch.float64)), (1453, tensor(-0.0012, dtype=torch.float64)), (2361, tensor(-0.0012, dtype=torch.float64)), (1090, tensor(-0.0012, dtype=torch.float64)), (1547, tensor(-0.0012, dtype=torch.float64)), (458, tensor(-0.0011, dtype=torch.float64)), (859, tensor(-0.0011, dtype=torch.float64)), (381, tensor(-0.0011, dtype=torch.float64)), (2523, tensor(-0.0011, dtype=torch.float64)), (298, tensor(-0.0011, dtype=torch.float64)), (2157, tensor(-0.0011, dtype=torch.float64)), (1984, tensor(-0.0010, dtype=torch.float64)), (831, tensor(-0.0010, dtype=torch.float64)), (1150, tensor(-0.0010, dtype=torch.float64)), (419, tensor(-0.0009, dtype=torch.float64)), (1091, tensor(-0.0008, dtype=torch.float64)), (1725, tensor(-0.0008, dtype=torch.float64)), (637, tensor(-0.0008, dtype=torch.float64)), (2032, tensor(-0.0008, dtype=torch.float64)), (32, tensor(-0.0007, dtype=torch.float64)), (214, tensor(-0.0007, dtype=torch.float64)), (507, tensor(-0.0007, dtype=torch.float64)), (534, tensor(-0.0007, dtype=torch.float64)), (2212, tensor(-0.0007, dtype=torch.float64)), (868, tensor(-0.0006, dtype=torch.float64)), (1865, tensor(-0.0005, dtype=torch.float64)), (733, tensor(-0.0005, dtype=torch.float64)), (1497, tensor(-0.0005, dtype=torch.float64)), (810, tensor(-0.0004, dtype=torch.float64)), (2258, tensor(-0.0004, dtype=torch.float64))]
annotated_samples_num: 800
unannotated_samples_num: 2744
update datapool!
annotated_samples_num: 800
unannotated_samples_num: 2744
iter: 4
annotated_samples_num: 800
unannotated_samples_num: 2744
Epoch [1/10], Batch [1/100], Loss: 4.4706
Epoch [1/10], Batch [2/100], Loss: 3.2410
Epoch [1/10], Batch [3/100], Loss: 2.5824
Epoch [1/10], Batch [4/100], Loss: 2.6542
Epoch [1/10], Batch [5/100], Loss: 2.0176
Epoch [1/10], Batch [6/100], Loss: 2.2618
Epoch [1/10], Batch [7/100], Loss: 1.5209
Epoch [1/10], Batch [8/100], Loss: 1.3187
Epoch [1/10], Batch [9/100], Loss: 0.9709
Epoch [1/10], Batch [10/100], Loss: 1.3723
Epoch [1/10], Batch [11/100], Loss: 0.8735
Epoch [1/10], Batch [12/100], Loss: 1.2571
Epoch [1/10], Batch [13/100], Loss: 1.3612
Epoch [1/10], Batch [14/100], Loss: 0.9345
Epoch [1/10], Batch [15/100], Loss: 0.4436
Epoch [1/10], Batch [16/100], Loss: 0.7401
Epoch [1/10], Batch [17/100], Loss: 0.5802
Epoch [1/10], Batch [18/100], Loss: 0.3789
Epoch [1/10], Batch [19/100], Loss: 0.4823
Epoch [1/10], Batch [20/100], Loss: 0.3379
Epoch [1/10], Batch [21/100], Loss: 0.6557
Epoch [1/10], Batch [22/100], Loss: 0.7693
Epoch [1/10], Batch [23/100], Loss: 0.4165
Epoch [1/10], Batch [24/100], Loss: 0.6941
Epoch [1/10], Batch [25/100], Loss: 0.3992
Epoch [1/10], Batch [26/100], Loss: 0.4349
Epoch [1/10], Batch [27/100], Loss: 0.3940
Epoch [1/10], Batch [28/100], Loss: 0.8368
Epoch [1/10], Batch [29/100], Loss: 0.4985
Epoch [1/10], Batch [30/100], Loss: 0.4263
Epoch [1/10], Batch [31/100], Loss: 0.3070
Epoch [1/10], Batch [32/100], Loss: 0.3687
Epoch [1/10], Batch [33/100], Loss: 0.5344
Epoch [1/10], Batch [34/100], Loss: 0.3865
Epoch [1/10], Batch [35/100], Loss: 0.6324
Epoch [1/10], Batch [36/100], Loss: 0.4671
Epoch [1/10], Batch [37/100], Loss: 0.4661
Epoch [1/10], Batch [38/100], Loss: 0.5638
Epoch [1/10], Batch [39/100], Loss: 0.3301
Epoch [1/10], Batch [40/100], Loss: 0.2773
Epoch [1/10], Batch [41/100], Loss: 0.7938
Epoch [1/10], Batch [42/100], Loss: 0.3775
Epoch [1/10], Batch [43/100], Loss: 0.4151
Epoch [1/10], Batch [44/100], Loss: 0.4583
Epoch [1/10], Batch [45/100], Loss: 0.4933
Epoch [1/10], Batch [46/100], Loss: 0.4919
Epoch [1/10], Batch [47/100], Loss: 0.4286
Epoch [1/10], Batch [48/100], Loss: 0.4584
Epoch [1/10], Batch [49/100], Loss: 0.3071
Epoch [1/10], Batch [50/100], Loss: 0.4403
Epoch [1/10], Batch [51/100], Loss: 0.4050
Epoch [1/10], Batch [52/100], Loss: 0.6525
Epoch [1/10], Batch [53/100], Loss: 0.3657
Epoch [1/10], Batch [54/100], Loss: 0.4282
Epoch [1/10], Batch [55/100], Loss: 0.3250
Epoch [1/10], Batch [56/100], Loss: 0.5877
Epoch [1/10], Batch [57/100], Loss: 0.5135
Epoch [1/10], Batch [58/100], Loss: 0.3691
Epoch [1/10], Batch [59/100], Loss: 0.4785
Epoch [1/10], Batch [60/100], Loss: 0.2409
Epoch [1/10], Batch [61/100], Loss: 0.2895
Epoch [1/10], Batch [62/100], Loss: 0.6827
Epoch [1/10], Batch [63/100], Loss: 0.5132
Epoch [1/10], Batch [64/100], Loss: 0.8686
Epoch [1/10], Batch [65/100], Loss: 0.2016
Epoch [1/10], Batch [66/100], Loss: 0.3860
Epoch [1/10], Batch [67/100], Loss: 0.5760
Epoch [1/10], Batch [68/100], Loss: 0.1904
Epoch [1/10], Batch [69/100], Loss: 0.3224
Epoch [1/10], Batch [70/100], Loss: 0.6270
Epoch [1/10], Batch [71/100], Loss: 0.2988
Epoch [1/10], Batch [72/100], Loss: 0.3713
Epoch [1/10], Batch [73/100], Loss: 0.2765
Epoch [1/10], Batch [74/100], Loss: 0.3981
Epoch [1/10], Batch [75/100], Loss: 0.1970
Epoch [1/10], Batch [76/100], Loss: 0.3429
Epoch [1/10], Batch [77/100], Loss: 0.4894
Epoch [1/10], Batch [78/100], Loss: 0.2679
Epoch [1/10], Batch [79/100], Loss: 0.3076
Epoch [1/10], Batch [80/100], Loss: 0.2396
Epoch [1/10], Batch [81/100], Loss: 0.3806
Epoch [1/10], Batch [82/100], Loss: 0.2470
Epoch [1/10], Batch [83/100], Loss: 0.3686
Epoch [1/10], Batch [84/100], Loss: 0.3919
Epoch [1/10], Batch [85/100], Loss: 0.2898
Epoch [1/10], Batch [86/100], Loss: 0.3227
Epoch [1/10], Batch [87/100], Loss: 0.7166
Epoch [1/10], Batch [88/100], Loss: 0.4733
Epoch [1/10], Batch [89/100], Loss: 0.4366
Epoch [1/10], Batch [90/100], Loss: 0.3319
Epoch [1/10], Batch [91/100], Loss: 0.3697
Epoch [1/10], Batch [92/100], Loss: 0.2710
Epoch [1/10], Batch [93/100], Loss: 0.3083
Epoch [1/10], Batch [94/100], Loss: 0.2461
Epoch [1/10], Batch [95/100], Loss: 0.4795
Epoch [1/10], Batch [96/100], Loss: 0.3621
Epoch [1/10], Batch [97/100], Loss: 0.2137
Epoch [1/10], Batch [98/100], Loss: 0.2684
Epoch [1/10], Batch [99/100], Loss: 0.3073
Epoch [1/10], Batch [100/100], Loss: 0.2963
Epoch [1/10], Average Loss: 0.6362
-----------------------------------------------------------
strategy: BEAM
iter: 4
epoch: 0
Test Loss: 0.2989
F1_overall: 0.5136
F1_AGENT: 0.6707
F1_TARGET: 0.3443
-----------------------------------------------------------
Epoch [2/10], Batch [1/100], Loss: 0.1811
Epoch [2/10], Batch [2/100], Loss: 0.5173
Epoch [2/10], Batch [3/100], Loss: 0.2801
Epoch [2/10], Batch [4/100], Loss: 0.3691
Epoch [2/10], Batch [5/100], Loss: 0.5201
Epoch [2/10], Batch [6/100], Loss: 0.2116
Epoch [2/10], Batch [7/100], Loss: 0.3821
Epoch [2/10], Batch [8/100], Loss: 0.3795
Epoch [2/10], Batch [9/100], Loss: 0.2294
Epoch [2/10], Batch [10/100], Loss: 0.2758
Epoch [2/10], Batch [11/100], Loss: 0.2167
Epoch [2/10], Batch [12/100], Loss: 0.1492
Epoch [2/10], Batch [13/100], Loss: 0.1946
Epoch [2/10], Batch [14/100], Loss: 0.1341
Epoch [2/10], Batch [15/100], Loss: 0.3176
Epoch [2/10], Batch [16/100], Loss: 0.2210
Epoch [2/10], Batch [17/100], Loss: 0.1831
Epoch [2/10], Batch [18/100], Loss: 0.1869
Epoch [2/10], Batch [19/100], Loss: 0.1554
Epoch [2/10], Batch [20/100], Loss: 0.2933
Epoch [2/10], Batch [21/100], Loss: 0.2050
Epoch [2/10], Batch [22/100], Loss: 0.5488
Epoch [2/10], Batch [23/100], Loss: 0.3004
Epoch [2/10], Batch [24/100], Loss: 0.1958
Epoch [2/10], Batch [25/100], Loss: 0.1729
Epoch [2/10], Batch [26/100], Loss: 0.3309
Epoch [2/10], Batch [27/100], Loss: 0.1994
Epoch [2/10], Batch [28/100], Loss: 0.2161
Epoch [2/10], Batch [29/100], Loss: 0.2514
Epoch [2/10], Batch [30/100], Loss: 0.3737
Epoch [2/10], Batch [31/100], Loss: 0.4492
Epoch [2/10], Batch [32/100], Loss: 0.1583
Epoch [2/10], Batch [33/100], Loss: 0.3339
Epoch [2/10], Batch [34/100], Loss: 0.6826
Epoch [2/10], Batch [35/100], Loss: 0.1210
Epoch [2/10], Batch [36/100], Loss: 0.2939
Epoch [2/10], Batch [37/100], Loss: 0.3582
Epoch [2/10], Batch [38/100], Loss: 0.1893
Epoch [2/10], Batch [39/100], Loss: 0.2500
Epoch [2/10], Batch [40/100], Loss: 0.1963
Epoch [2/10], Batch [41/100], Loss: 0.2615
Epoch [2/10], Batch [42/100], Loss: 0.1404
Epoch [2/10], Batch [43/100], Loss: 0.2048
Epoch [2/10], Batch [44/100], Loss: 0.1794
Epoch [2/10], Batch [45/100], Loss: 0.4580
Epoch [2/10], Batch [46/100], Loss: 0.4239
Epoch [2/10], Batch [47/100], Loss: 0.1552
Epoch [2/10], Batch [48/100], Loss: 0.2930
Epoch [2/10], Batch [49/100], Loss: 0.1524
Epoch [2/10], Batch [50/100], Loss: 0.3582
Epoch [2/10], Batch [51/100], Loss: 0.2381
Epoch [2/10], Batch [52/100], Loss: 0.1940
Epoch [2/10], Batch [53/100], Loss: 0.2890
Epoch [2/10], Batch [54/100], Loss: 0.2580
Epoch [2/10], Batch [55/100], Loss: 0.5277
Epoch [2/10], Batch [56/100], Loss: 0.2139
Epoch [2/10], Batch [57/100], Loss: 0.2630
Epoch [2/10], Batch [58/100], Loss: 0.3023
Epoch [2/10], Batch [59/100], Loss: 0.1876
Epoch [2/10], Batch [60/100], Loss: 0.2501
Epoch [2/10], Batch [61/100], Loss: 0.1798
Epoch [2/10], Batch [62/100], Loss: 0.1934
Epoch [2/10], Batch [63/100], Loss: 0.4418
Epoch [2/10], Batch [64/100], Loss: 0.2514
Epoch [2/10], Batch [65/100], Loss: 0.1697
Epoch [2/10], Batch [66/100], Loss: 0.2886
Epoch [2/10], Batch [67/100], Loss: 0.3004
Epoch [2/10], Batch [68/100], Loss: 0.1500
Epoch [2/10], Batch [69/100], Loss: 0.1704
Epoch [2/10], Batch [70/100], Loss: 0.4110
Epoch [2/10], Batch [71/100], Loss: 0.2458
Epoch [2/10], Batch [72/100], Loss: 0.1417
Epoch [2/10], Batch [73/100], Loss: 0.1886
Epoch [2/10], Batch [74/100], Loss: 0.1840
Epoch [2/10], Batch [75/100], Loss: 0.3144
Epoch [2/10], Batch [76/100], Loss: 0.2696
Epoch [2/10], Batch [77/100], Loss: 0.4589
Epoch [2/10], Batch [78/100], Loss: 0.2345
Epoch [2/10], Batch [79/100], Loss: 0.2791
Epoch [2/10], Batch [80/100], Loss: 0.2075
Epoch [2/10], Batch [81/100], Loss: 0.1443
Epoch [2/10], Batch [82/100], Loss: 0.1219
Epoch [2/10], Batch [83/100], Loss: 0.3259
Epoch [2/10], Batch [84/100], Loss: 0.2061
Epoch [2/10], Batch [85/100], Loss: 0.3491
Epoch [2/10], Batch [86/100], Loss: 0.3779
Epoch [2/10], Batch [87/100], Loss: 0.2041
Epoch [2/10], Batch [88/100], Loss: 0.2747
Epoch [2/10], Batch [89/100], Loss: 0.2441
Epoch [2/10], Batch [90/100], Loss: 0.3963
Epoch [2/10], Batch [91/100], Loss: 0.1630
Epoch [2/10], Batch [92/100], Loss: 0.3703
Epoch [2/10], Batch [93/100], Loss: 0.5457
Epoch [2/10], Batch [94/100], Loss: 0.1756
Epoch [2/10], Batch [95/100], Loss: 0.3445
Epoch [2/10], Batch [96/100], Loss: 0.1547
Epoch [2/10], Batch [97/100], Loss: 0.1963
Epoch [2/10], Batch [98/100], Loss: 0.4884
Epoch [2/10], Batch [99/100], Loss: 0.6595
Epoch [2/10], Batch [100/100], Loss: 0.2370
Epoch [2/10], Average Loss: 0.2764
-----------------------------------------------------------
strategy: BEAM
iter: 4
epoch: 1
Test Loss: 0.2893
F1_overall: 0.5576
F1_AGENT: 0.7003
F1_TARGET: 0.4194
-----------------------------------------------------------
Epoch [3/10], Batch [1/100], Loss: 0.1123
Epoch [3/10], Batch [2/100], Loss: 0.1593
Epoch [3/10], Batch [3/100], Loss: 0.2143
Epoch [3/10], Batch [4/100], Loss: 0.1801
Epoch [3/10], Batch [5/100], Loss: 0.1788
Epoch [3/10], Batch [6/100], Loss: 0.1103
Epoch [3/10], Batch [7/100], Loss: 0.1362
Epoch [3/10], Batch [8/100], Loss: 0.1407
Epoch [3/10], Batch [9/100], Loss: 0.2499
Epoch [3/10], Batch [10/100], Loss: 0.1174
Epoch [3/10], Batch [11/100], Loss: 0.1826
Epoch [3/10], Batch [12/100], Loss: 0.4239
Epoch [3/10], Batch [13/100], Loss: 0.2194
Epoch [3/10], Batch [14/100], Loss: 0.0799
Epoch [3/10], Batch [15/100], Loss: 0.1423
Epoch [3/10], Batch [16/100], Loss: 0.1327
Epoch [3/10], Batch [17/100], Loss: 0.1378
Epoch [3/10], Batch [18/100], Loss: 0.1911
Epoch [3/10], Batch [19/100], Loss: 0.1089
Epoch [3/10], Batch [20/100], Loss: 0.2705
Epoch [3/10], Batch [21/100], Loss: 0.2833
Epoch [3/10], Batch [22/100], Loss: 0.1078
Epoch [3/10], Batch [23/100], Loss: 0.1428
Epoch [3/10], Batch [24/100], Loss: 0.1429
Epoch [3/10], Batch [25/100], Loss: 0.1997
Epoch [3/10], Batch [26/100], Loss: 0.2348
Epoch [3/10], Batch [27/100], Loss: 0.1639
Epoch [3/10], Batch [28/100], Loss: 0.1238
Epoch [3/10], Batch [29/100], Loss: 0.1761
Epoch [3/10], Batch [30/100], Loss: 0.0887
Epoch [3/10], Batch [31/100], Loss: 0.1140
Epoch [3/10], Batch [32/100], Loss: 0.1202
Epoch [3/10], Batch [33/100], Loss: 0.0836
Epoch [3/10], Batch [34/100], Loss: 0.2984
Epoch [3/10], Batch [35/100], Loss: 0.0699
Epoch [3/10], Batch [36/100], Loss: 0.2359
Epoch [3/10], Batch [37/100], Loss: 0.1067
Epoch [3/10], Batch [38/100], Loss: 0.1167
Epoch [3/10], Batch [39/100], Loss: 0.1843
Epoch [3/10], Batch [40/100], Loss: 0.4684
Epoch [3/10], Batch [41/100], Loss: 0.2803
Epoch [3/10], Batch [42/100], Loss: 0.1386
Epoch [3/10], Batch [43/100], Loss: 0.1273
Epoch [3/10], Batch [44/100], Loss: 0.2549
Epoch [3/10], Batch [45/100], Loss: 0.2743
Epoch [3/10], Batch [46/100], Loss: 0.1916
Epoch [3/10], Batch [47/100], Loss: 0.1845
Epoch [3/10], Batch [48/100], Loss: 0.1157
Epoch [3/10], Batch [49/100], Loss: 0.2981
Epoch [3/10], Batch [50/100], Loss: 0.2046
Epoch [3/10], Batch [51/100], Loss: 0.2556
Epoch [3/10], Batch [52/100], Loss: 0.2433
Epoch [3/10], Batch [53/100], Loss: 0.1700
Epoch [3/10], Batch [54/100], Loss: 0.2620
Epoch [3/10], Batch [55/100], Loss: 0.3677
Epoch [3/10], Batch [56/100], Loss: 0.1256
Epoch [3/10], Batch [57/100], Loss: 0.2109
Epoch [3/10], Batch [58/100], Loss: 0.1147
Epoch [3/10], Batch [59/100], Loss: 0.1508
Epoch [3/10], Batch [60/100], Loss: 0.1281
Epoch [3/10], Batch [61/100], Loss: 0.0797
Epoch [3/10], Batch [62/100], Loss: 0.1764
Epoch [3/10], Batch [63/100], Loss: 0.2595
Epoch [3/10], Batch [64/100], Loss: 0.1208
Epoch [3/10], Batch [65/100], Loss: 0.1290
Epoch [3/10], Batch [66/100], Loss: 0.1036
Epoch [3/10], Batch [67/100], Loss: 0.2102
Epoch [3/10], Batch [68/100], Loss: 0.2357
Epoch [3/10], Batch [69/100], Loss: 0.1009
Epoch [3/10], Batch [70/100], Loss: 0.2203
Epoch [3/10], Batch [71/100], Loss: 0.1194
Epoch [3/10], Batch [72/100], Loss: 0.2293
Epoch [3/10], Batch [73/100], Loss: 0.1302
Epoch [3/10], Batch [74/100], Loss: 0.1272
Epoch [3/10], Batch [75/100], Loss: 0.1399
Epoch [3/10], Batch [76/100], Loss: 0.1034
Epoch [3/10], Batch [77/100], Loss: 0.2045
Epoch [3/10], Batch [78/100], Loss: 0.3437
Epoch [3/10], Batch [79/100], Loss: 0.2067
Epoch [3/10], Batch [80/100], Loss: 0.1193
Epoch [3/10], Batch [81/100], Loss: 0.3370
Epoch [3/10], Batch [82/100], Loss: 0.2568
Epoch [3/10], Batch [83/100], Loss: 0.1496
Epoch [3/10], Batch [84/100], Loss: 0.1551
Epoch [3/10], Batch [85/100], Loss: 0.0946
Epoch [3/10], Batch [86/100], Loss: 0.2394
Epoch [3/10], Batch [87/100], Loss: 0.3443
Epoch [3/10], Batch [88/100], Loss: 0.1814
Epoch [3/10], Batch [89/100], Loss: 0.1410
Epoch [3/10], Batch [90/100], Loss: 0.3221
Epoch [3/10], Batch [91/100], Loss: 0.1286
Epoch [3/10], Batch [92/100], Loss: 0.0751
Epoch [3/10], Batch [93/100], Loss: 0.1513
Epoch [3/10], Batch [94/100], Loss: 0.2415
Epoch [3/10], Batch [95/100], Loss: 0.3431
Epoch [3/10], Batch [96/100], Loss: 0.2557
Epoch [3/10], Batch [97/100], Loss: 0.2303
Epoch [3/10], Batch [98/100], Loss: 0.2686
Epoch [3/10], Batch [99/100], Loss: 0.1507
Epoch [3/10], Batch [100/100], Loss: 0.1303
Epoch [3/10], Average Loss: 0.1860
-----------------------------------------------------------
strategy: BEAM
iter: 4
epoch: 2
Test Loss: 0.3253
F1_overall: 0.5451
F1_AGENT: 0.6842
F1_TARGET: 0.4168
-----------------------------------------------------------
Epoch [4/10], Batch [1/100], Loss: 0.0993
Epoch [4/10], Batch [2/100], Loss: 0.1841
Epoch [4/10], Batch [3/100], Loss: 0.1231
Epoch [4/10], Batch [4/100], Loss: 0.0769
Epoch [4/10], Batch [5/100], Loss: 0.1686
Epoch [4/10], Batch [6/100], Loss: 0.1716
Epoch [4/10], Batch [7/100], Loss: 0.2136
Epoch [4/10], Batch [8/100], Loss: 0.2049
Epoch [4/10], Batch [9/100], Loss: 0.2601
Epoch [4/10], Batch [10/100], Loss: 0.1565
Epoch [4/10], Batch [11/100], Loss: 0.0909
Epoch [4/10], Batch [12/100], Loss: 0.1730
Epoch [4/10], Batch [13/100], Loss: 0.1038
Epoch [4/10], Batch [14/100], Loss: 0.1299
Epoch [4/10], Batch [15/100], Loss: 0.0962
Epoch [4/10], Batch [16/100], Loss: 0.0815
Epoch [4/10], Batch [17/100], Loss: 0.2131
Epoch [4/10], Batch [18/100], Loss: 0.1572
Epoch [4/10], Batch [19/100], Loss: 0.0512
Epoch [4/10], Batch [20/100], Loss: 0.2245
Epoch [4/10], Batch [21/100], Loss: 0.2044
Epoch [4/10], Batch [22/100], Loss: 0.1179
Epoch [4/10], Batch [23/100], Loss: 0.0928
Epoch [4/10], Batch [24/100], Loss: 0.2445
Epoch [4/10], Batch [25/100], Loss: 0.1389
Epoch [4/10], Batch [26/100], Loss: 0.0923
Epoch [4/10], Batch [27/100], Loss: 0.2041
Epoch [4/10], Batch [28/100], Loss: 0.1448
Epoch [4/10], Batch [29/100], Loss: 0.1628
Epoch [4/10], Batch [30/100], Loss: 0.0756
Epoch [4/10], Batch [31/100], Loss: 0.1005
Epoch [4/10], Batch [32/100], Loss: 0.1069
Epoch [4/10], Batch [33/100], Loss: 0.0821
Epoch [4/10], Batch [34/100], Loss: 0.0734
Epoch [4/10], Batch [35/100], Loss: 0.4896
Epoch [4/10], Batch [36/100], Loss: 0.0934
Epoch [4/10], Batch [37/100], Loss: 0.1305
Epoch [4/10], Batch [38/100], Loss: 0.1428
Epoch [4/10], Batch [39/100], Loss: 0.1923
Epoch [4/10], Batch [40/100], Loss: 0.1331
Epoch [4/10], Batch [41/100], Loss: 0.0918
Epoch [4/10], Batch [42/100], Loss: 0.0759
Epoch [4/10], Batch [43/100], Loss: 0.2260
Epoch [4/10], Batch [44/100], Loss: 0.0837
Epoch [4/10], Batch [45/100], Loss: 0.0703
Epoch [4/10], Batch [46/100], Loss: 0.1230
Epoch [4/10], Batch [47/100], Loss: 0.1621
Epoch [4/10], Batch [48/100], Loss: 0.0977
Epoch [4/10], Batch [49/100], Loss: 0.1702
Epoch [4/10], Batch [50/100], Loss: 0.1409
Epoch [4/10], Batch [51/100], Loss: 0.3841
Epoch [4/10], Batch [52/100], Loss: 0.0908
Epoch [4/10], Batch [53/100], Loss: 0.2046
Epoch [4/10], Batch [54/100], Loss: 0.3220
Epoch [4/10], Batch [55/100], Loss: 0.0600
Epoch [4/10], Batch [56/100], Loss: 0.1089
Epoch [4/10], Batch [57/100], Loss: 0.1747
Epoch [4/10], Batch [58/100], Loss: 0.3049
Epoch [4/10], Batch [59/100], Loss: 0.1269
Epoch [4/10], Batch [60/100], Loss: 0.1139
Epoch [4/10], Batch [61/100], Loss: 0.1782
Epoch [4/10], Batch [62/100], Loss: 0.1788
Epoch [4/10], Batch [63/100], Loss: 0.1754
Epoch [4/10], Batch [64/100], Loss: 0.2936
Epoch [4/10], Batch [65/100], Loss: 0.1247
Epoch [4/10], Batch [66/100], Loss: 0.1318
Epoch [4/10], Batch [67/100], Loss: 0.2569
Epoch [4/10], Batch [68/100], Loss: 0.2132
Epoch [4/10], Batch [69/100], Loss: 0.0750
Epoch [4/10], Batch [70/100], Loss: 0.0779
Epoch [4/10], Batch [71/100], Loss: 0.0658
Epoch [4/10], Batch [72/100], Loss: 0.1046
Epoch [4/10], Batch [73/100], Loss: 0.0907
Epoch [4/10], Batch [74/100], Loss: 0.2751
Epoch [4/10], Batch [75/100], Loss: 0.0825
Epoch [4/10], Batch [76/100], Loss: 0.1141
Epoch [4/10], Batch [77/100], Loss: 0.0916
Epoch [4/10], Batch [78/100], Loss: 0.1216
Epoch [4/10], Batch [79/100], Loss: 0.1663
Epoch [4/10], Batch [80/100], Loss: 0.1836
Epoch [4/10], Batch [81/100], Loss: 0.1320
Epoch [4/10], Batch [82/100], Loss: 0.2296
Epoch [4/10], Batch [83/100], Loss: 0.1606
Epoch [4/10], Batch [84/100], Loss: 0.2768
Epoch [4/10], Batch [85/100], Loss: 0.1779
Epoch [4/10], Batch [86/100], Loss: 0.1871
Epoch [4/10], Batch [87/100], Loss: 0.1705
Epoch [4/10], Batch [88/100], Loss: 0.0977
Epoch [4/10], Batch [89/100], Loss: 0.0706
Epoch [4/10], Batch [90/100], Loss: 0.0592
Epoch [4/10], Batch [91/100], Loss: 0.1722
Epoch [4/10], Batch [92/100], Loss: 0.1795
Epoch [4/10], Batch [93/100], Loss: 0.1748
Epoch [4/10], Batch [94/100], Loss: 0.0893
Epoch [4/10], Batch [95/100], Loss: 0.1214
Epoch [4/10], Batch [96/100], Loss: 0.1192
Epoch [4/10], Batch [97/100], Loss: 0.1122
Epoch [4/10], Batch [98/100], Loss: 0.1451
Epoch [4/10], Batch [99/100], Loss: 0.0603
Epoch [4/10], Batch [100/100], Loss: 0.0906
Epoch [4/10], Average Loss: 0.1496
-----------------------------------------------------------
strategy: BEAM
iter: 4
epoch: 3
Test Loss: 0.3387
F1_overall: 0.5746
F1_AGENT: 0.7378
F1_TARGET: 0.4000
-----------------------------------------------------------
Epoch [5/10], Batch [1/100], Loss: 0.1239
Epoch [5/10], Batch [2/100], Loss: 0.1193
Epoch [5/10], Batch [3/100], Loss: 0.0163
Epoch [5/10], Batch [4/100], Loss: 0.0659
Epoch [5/10], Batch [5/100], Loss: 0.1146
Epoch [5/10], Batch [6/100], Loss: 0.0304
Epoch [5/10], Batch [7/100], Loss: 0.1341
Epoch [5/10], Batch [8/100], Loss: 0.0668
Epoch [5/10], Batch [9/100], Loss: 0.0997
Epoch [5/10], Batch [10/100], Loss: 0.0784
Epoch [5/10], Batch [11/100], Loss: 0.0287
Epoch [5/10], Batch [12/100], Loss: 0.0392
Epoch [5/10], Batch [13/100], Loss: 0.0555
Epoch [5/10], Batch [14/100], Loss: 0.1384
Epoch [5/10], Batch [15/100], Loss: 0.0678
Epoch [5/10], Batch [16/100], Loss: 0.0871
Epoch [5/10], Batch [17/100], Loss: 0.0919
Epoch [5/10], Batch [18/100], Loss: 0.1399
Epoch [5/10], Batch [19/100], Loss: 0.1044
Epoch [5/10], Batch [20/100], Loss: 0.0602
Epoch [5/10], Batch [21/100], Loss: 0.0430
Epoch [5/10], Batch [22/100], Loss: 0.0390
Epoch [5/10], Batch [23/100], Loss: 0.0392
Epoch [5/10], Batch [24/100], Loss: 0.4326
Epoch [5/10], Batch [25/100], Loss: 0.0234
Epoch [5/10], Batch [26/100], Loss: 0.0514
Epoch [5/10], Batch [27/100], Loss: 0.0227
Epoch [5/10], Batch [28/100], Loss: 0.0512
Epoch [5/10], Batch [29/100], Loss: 0.0890
Epoch [5/10], Batch [30/100], Loss: 0.0492
Epoch [5/10], Batch [31/100], Loss: 0.5584
Epoch [5/10], Batch [32/100], Loss: 0.0570
Epoch [5/10], Batch [33/100], Loss: 0.0500
Epoch [5/10], Batch [34/100], Loss: 0.1196
Epoch [5/10], Batch [35/100], Loss: 0.2191
Epoch [5/10], Batch [36/100], Loss: 0.0973
Epoch [5/10], Batch [37/100], Loss: 0.0774
Epoch [5/10], Batch [38/100], Loss: 0.1151
Epoch [5/10], Batch [39/100], Loss: 0.0939
Epoch [5/10], Batch [40/100], Loss: 0.1753
Epoch [5/10], Batch [41/100], Loss: 0.0791
Epoch [5/10], Batch [42/100], Loss: 0.1389
Epoch [5/10], Batch [43/100], Loss: 0.1087
Epoch [5/10], Batch [44/100], Loss: 0.1132
Epoch [5/10], Batch [45/100], Loss: 0.1131
Epoch [5/10], Batch [46/100], Loss: 0.1116
Epoch [5/10], Batch [47/100], Loss: 0.1175
Epoch [5/10], Batch [48/100], Loss: 0.0682
Epoch [5/10], Batch [49/100], Loss: 0.1006
Epoch [5/10], Batch [50/100], Loss: 0.0891
Epoch [5/10], Batch [51/100], Loss: 0.1178
Epoch [5/10], Batch [52/100], Loss: 0.0490
Epoch [5/10], Batch [53/100], Loss: 0.2549
Epoch [5/10], Batch [54/100], Loss: 0.0595
Epoch [5/10], Batch [55/100], Loss: 0.0508
Epoch [5/10], Batch [56/100], Loss: 0.0854
Epoch [5/10], Batch [57/100], Loss: 0.1136
Epoch [5/10], Batch [58/100], Loss: 0.1293
Epoch [5/10], Batch [59/100], Loss: 0.0887
Epoch [5/10], Batch [60/100], Loss: 0.1014
Epoch [5/10], Batch [61/100], Loss: 0.0660
Epoch [5/10], Batch [62/100], Loss: 0.1303
Epoch [5/10], Batch [63/100], Loss: 0.1700
Epoch [5/10], Batch [64/100], Loss: 0.1565
Epoch [5/10], Batch [65/100], Loss: 0.1414
Epoch [5/10], Batch [66/100], Loss: 0.0553
Epoch [5/10], Batch [67/100], Loss: 0.0654
Epoch [5/10], Batch [68/100], Loss: 0.1146
Epoch [5/10], Batch [69/100], Loss: 0.1805
Epoch [5/10], Batch [70/100], Loss: 0.2431
Epoch [5/10], Batch [71/100], Loss: 0.1782
Epoch [5/10], Batch [72/100], Loss: 0.1797
Epoch [5/10], Batch [73/100], Loss: 0.2068
Epoch [5/10], Batch [74/100], Loss: 0.2105
Epoch [5/10], Batch [75/100], Loss: 0.0431
Epoch [5/10], Batch [76/100], Loss: 0.1116
Epoch [5/10], Batch [77/100], Loss: 0.0408
Epoch [5/10], Batch [78/100], Loss: 0.0628
Epoch [5/10], Batch [79/100], Loss: 0.1061
Epoch [5/10], Batch [80/100], Loss: 0.1410
Epoch [5/10], Batch [81/100], Loss: 0.1105
Epoch [5/10], Batch [82/100], Loss: 0.1408
Epoch [5/10], Batch [83/100], Loss: 0.0777
Epoch [5/10], Batch [84/100], Loss: 0.1185
Epoch [5/10], Batch [85/100], Loss: 0.0709
Epoch [5/10], Batch [86/100], Loss: 0.1117
Epoch [5/10], Batch [87/100], Loss: 0.1355
Epoch [5/10], Batch [88/100], Loss: 0.1627
Epoch [5/10], Batch [89/100], Loss: 0.0368
Epoch [5/10], Batch [90/100], Loss: 0.2024
Epoch [5/10], Batch [91/100], Loss: 0.2742
Epoch [5/10], Batch [92/100], Loss: 0.0813
Epoch [5/10], Batch [93/100], Loss: 0.0399
Epoch [5/10], Batch [94/100], Loss: 0.0577
Epoch [5/10], Batch [95/100], Loss: 0.0379
Epoch [5/10], Batch [96/100], Loss: 0.1624
Epoch [5/10], Batch [97/100], Loss: 0.1401
Epoch [5/10], Batch [98/100], Loss: 0.0852
Epoch [5/10], Batch [99/100], Loss: 0.2250
Epoch [5/10], Batch [100/100], Loss: 0.1078
Epoch [5/10], Average Loss: 0.1114
-----------------------------------------------------------
strategy: BEAM
iter: 4
epoch: 4
Test Loss: 0.3588
F1_overall: 0.5677
F1_AGENT: 0.7279
F1_TARGET: 0.4060
-----------------------------------------------------------
Epoch [6/10], Batch [1/100], Loss: 0.0910
Epoch [6/10], Batch [2/100], Loss: 0.0668
Epoch [6/10], Batch [3/100], Loss: 0.2000
Epoch [6/10], Batch [4/100], Loss: 0.0275
Epoch [6/10], Batch [5/100], Loss: 0.0290
Epoch [6/10], Batch [6/100], Loss: 0.0881
Epoch [6/10], Batch [7/100], Loss: 0.2361
Epoch [6/10], Batch [8/100], Loss: 0.1144
Epoch [6/10], Batch [9/100], Loss: 0.0463
Epoch [6/10], Batch [10/100], Loss: 0.0292
Epoch [6/10], Batch [11/100], Loss: 0.0958
Epoch [6/10], Batch [12/100], Loss: 0.1461
Epoch [6/10], Batch [13/100], Loss: 0.1278
Epoch [6/10], Batch [14/100], Loss: 0.0244
Epoch [6/10], Batch [15/100], Loss: 0.0359
Epoch [6/10], Batch [16/100], Loss: 0.1762
Epoch [6/10], Batch [17/100], Loss: 0.2159
Epoch [6/10], Batch [18/100], Loss: 0.0631
Epoch [6/10], Batch [19/100], Loss: 0.0627
Epoch [6/10], Batch [20/100], Loss: 0.0467
Epoch [6/10], Batch [21/100], Loss: 0.0712
Epoch [6/10], Batch [22/100], Loss: 0.1680
Epoch [6/10], Batch [23/100], Loss: 0.0276
Epoch [6/10], Batch [24/100], Loss: 0.0700
Epoch [6/10], Batch [25/100], Loss: 0.0545
Epoch [6/10], Batch [26/100], Loss: 0.0953
Epoch [6/10], Batch [27/100], Loss: 0.0637
Epoch [6/10], Batch [28/100], Loss: 0.0846
Epoch [6/10], Batch [29/100], Loss: 0.0727
Epoch [6/10], Batch [30/100], Loss: 0.0391
Epoch [6/10], Batch [31/100], Loss: 0.0746
Epoch [6/10], Batch [32/100], Loss: 0.0573
Epoch [6/10], Batch [33/100], Loss: 0.0800
Epoch [6/10], Batch [34/100], Loss: 0.0327
Epoch [6/10], Batch [35/100], Loss: 0.1475
Epoch [6/10], Batch [36/100], Loss: 0.3440
Epoch [6/10], Batch [37/100], Loss: 0.1164
Epoch [6/10], Batch [38/100], Loss: 0.0606
Epoch [6/10], Batch [39/100], Loss: 0.0675
Epoch [6/10], Batch [40/100], Loss: 0.0524
Epoch [6/10], Batch [41/100], Loss: 0.0455
Epoch [6/10], Batch [42/100], Loss: 0.0859
Epoch [6/10], Batch [43/100], Loss: 0.0781
Epoch [6/10], Batch [44/100], Loss: 0.1071
Epoch [6/10], Batch [45/100], Loss: 0.0170
Epoch [6/10], Batch [46/100], Loss: 0.0444
Epoch [6/10], Batch [47/100], Loss: 0.0637
Epoch [6/10], Batch [48/100], Loss: 0.1903
Epoch [6/10], Batch [49/100], Loss: 0.0772
Epoch [6/10], Batch [50/100], Loss: 0.1469
Epoch [6/10], Batch [51/100], Loss: 0.0566
Epoch [6/10], Batch [52/100], Loss: 0.1453
Epoch [6/10], Batch [53/100], Loss: 0.1504
Epoch [6/10], Batch [54/100], Loss: 0.0255
Epoch [6/10], Batch [55/100], Loss: 0.1140
Epoch [6/10], Batch [56/100], Loss: 0.0491
Epoch [6/10], Batch [57/100], Loss: 0.2119
Epoch [6/10], Batch [58/100], Loss: 0.0171
Epoch [6/10], Batch [59/100], Loss: 0.0310
Epoch [6/10], Batch [60/100], Loss: 0.0440
Epoch [6/10], Batch [61/100], Loss: 0.0399
Epoch [6/10], Batch [62/100], Loss: 0.0403
Epoch [6/10], Batch [63/100], Loss: 0.0668
Epoch [6/10], Batch [64/100], Loss: 0.1817
Epoch [6/10], Batch [65/100], Loss: 0.4882
Epoch [6/10], Batch [66/100], Loss: 0.0216
Epoch [6/10], Batch [67/100], Loss: 0.0145
Epoch [6/10], Batch [68/100], Loss: 0.0687
Epoch [6/10], Batch [69/100], Loss: 0.1183
Epoch [6/10], Batch [70/100], Loss: 0.0524
Epoch [6/10], Batch [71/100], Loss: 0.0802
Epoch [6/10], Batch [72/100], Loss: 0.2852
Epoch [6/10], Batch [73/100], Loss: 0.0974
Epoch [6/10], Batch [74/100], Loss: 0.0732
Epoch [6/10], Batch [75/100], Loss: 0.0433
Epoch [6/10], Batch [76/100], Loss: 0.0652
Epoch [6/10], Batch [77/100], Loss: 0.0913
Epoch [6/10], Batch [78/100], Loss: 0.0220
Epoch [6/10], Batch [79/100], Loss: 0.0192
Epoch [6/10], Batch [80/100], Loss: 0.0984
Epoch [6/10], Batch [81/100], Loss: 0.0656
Epoch [6/10], Batch [82/100], Loss: 0.1428
Epoch [6/10], Batch [83/100], Loss: 0.0635
Epoch [6/10], Batch [84/100], Loss: 0.1327
Epoch [6/10], Batch [85/100], Loss: 0.1490
Epoch [6/10], Batch [86/100], Loss: 0.0307
Epoch [6/10], Batch [87/100], Loss: 0.0611
Epoch [6/10], Batch [88/100], Loss: 0.0764
Epoch [6/10], Batch [89/100], Loss: 0.0900
Epoch [6/10], Batch [90/100], Loss: 0.0114
Epoch [6/10], Batch [91/100], Loss: 0.0471
Epoch [6/10], Batch [92/100], Loss: 0.0886
Epoch [6/10], Batch [93/100], Loss: 0.1163
Epoch [6/10], Batch [94/100], Loss: 0.0405
Epoch [6/10], Batch [95/100], Loss: 0.0258
Epoch [6/10], Batch [96/100], Loss: 0.1496
Epoch [6/10], Batch [97/100], Loss: 0.3678
Epoch [6/10], Batch [98/100], Loss: 0.0359
Epoch [6/10], Batch [99/100], Loss: 0.0596
Epoch [6/10], Batch [100/100], Loss: 0.0823
Epoch [6/10], Average Loss: 0.0921
-----------------------------------------------------------
strategy: BEAM
iter: 4
epoch: 5
Test Loss: 0.3840
F1_overall: 0.5768
F1_AGENT: 0.7123
F1_TARGET: 0.4352
-----------------------------------------------------------
Epoch [7/10], Batch [1/100], Loss: 0.0258
Epoch [7/10], Batch [2/100], Loss: 0.0248
Epoch [7/10], Batch [3/100], Loss: 0.0345
Epoch [7/10], Batch [4/100], Loss: 0.0119
Epoch [7/10], Batch [5/100], Loss: 0.1197
Epoch [7/10], Batch [6/100], Loss: 0.0359
Epoch [7/10], Batch [7/100], Loss: 0.1323
Epoch [7/10], Batch [8/100], Loss: 0.0832
Epoch [7/10], Batch [9/100], Loss: 0.0596
Epoch [7/10], Batch [10/100], Loss: 0.0832
Epoch [7/10], Batch [11/100], Loss: 0.0290
Epoch [7/10], Batch [12/100], Loss: 0.1612
Epoch [7/10], Batch [13/100], Loss: 0.0331
Epoch [7/10], Batch [14/100], Loss: 0.1075
Epoch [7/10], Batch [15/100], Loss: 0.0819
Epoch [7/10], Batch [16/100], Loss: 0.0497
Epoch [7/10], Batch [17/100], Loss: 0.0310
Epoch [7/10], Batch [18/100], Loss: 0.0998
Epoch [7/10], Batch [19/100], Loss: 0.4263
Epoch [7/10], Batch [20/100], Loss: 0.0914
Epoch [7/10], Batch [21/100], Loss: 0.0356
Epoch [7/10], Batch [22/100], Loss: 0.0831
Epoch [7/10], Batch [23/100], Loss: 0.0423
Epoch [7/10], Batch [24/100], Loss: 0.1067
Epoch [7/10], Batch [25/100], Loss: 0.1034
Epoch [7/10], Batch [26/100], Loss: 0.0301
Epoch [7/10], Batch [27/100], Loss: 0.0423
Epoch [7/10], Batch [28/100], Loss: 0.0307
Epoch [7/10], Batch [29/100], Loss: 0.0383
Epoch [7/10], Batch [30/100], Loss: 0.0319
Epoch [7/10], Batch [31/100], Loss: 0.0331
Epoch [7/10], Batch [32/100], Loss: 0.0733
Epoch [7/10], Batch [33/100], Loss: 0.0366
Epoch [7/10], Batch [34/100], Loss: 0.0127
Epoch [7/10], Batch [35/100], Loss: 0.0322
Epoch [7/10], Batch [36/100], Loss: 0.0097
Epoch [7/10], Batch [37/100], Loss: 0.0421
Epoch [7/10], Batch [38/100], Loss: 0.3397
Epoch [7/10], Batch [39/100], Loss: 0.0710
Epoch [7/10], Batch [40/100], Loss: 0.0525
Epoch [7/10], Batch [41/100], Loss: 0.0212
Epoch [7/10], Batch [42/100], Loss: 0.1967
Epoch [7/10], Batch [43/100], Loss: 0.1176
Epoch [7/10], Batch [44/100], Loss: 0.0410
Epoch [7/10], Batch [45/100], Loss: 0.1617
Epoch [7/10], Batch [46/100], Loss: 0.0461
Epoch [7/10], Batch [47/100], Loss: 0.0310
Epoch [7/10], Batch [48/100], Loss: 0.0155
Epoch [7/10], Batch [49/100], Loss: 0.0255
Epoch [7/10], Batch [50/100], Loss: 0.0611
Epoch [7/10], Batch [51/100], Loss: 0.0485
Epoch [7/10], Batch [52/100], Loss: 0.1602
Epoch [7/10], Batch [53/100], Loss: 0.1109
Epoch [7/10], Batch [54/100], Loss: 0.1489
Epoch [7/10], Batch [55/100], Loss: 0.0111
Epoch [7/10], Batch [56/100], Loss: 0.0607
Epoch [7/10], Batch [57/100], Loss: 0.0787
Epoch [7/10], Batch [58/100], Loss: 0.0464
Epoch [7/10], Batch [59/100], Loss: 0.0505
Epoch [7/10], Batch [60/100], Loss: 0.0443
Epoch [7/10], Batch [61/100], Loss: 0.3402
Epoch [7/10], Batch [62/100], Loss: 0.1062
Epoch [7/10], Batch [63/100], Loss: 0.1279
Epoch [7/10], Batch [64/100], Loss: 0.0981
Epoch [7/10], Batch [65/100], Loss: 0.0185
Epoch [7/10], Batch [66/100], Loss: 0.0384
Epoch [7/10], Batch [67/100], Loss: 0.0962
Epoch [7/10], Batch [68/100], Loss: 0.0690
Epoch [7/10], Batch [69/100], Loss: 0.0307
Epoch [7/10], Batch [70/100], Loss: 0.0738
Epoch [7/10], Batch [71/100], Loss: 0.0494
Epoch [7/10], Batch [72/100], Loss: 0.0622
Epoch [7/10], Batch [73/100], Loss: 0.0393
Epoch [7/10], Batch [74/100], Loss: 0.1208
Epoch [7/10], Batch [75/100], Loss: 0.0595
Epoch [7/10], Batch [76/100], Loss: 0.0155
Epoch [7/10], Batch [77/100], Loss: 0.0319
Epoch [7/10], Batch [78/100], Loss: 0.0559
Epoch [7/10], Batch [79/100], Loss: 0.0661
Epoch [7/10], Batch [80/100], Loss: 0.0697
Epoch [7/10], Batch [81/100], Loss: 0.0213
Epoch [7/10], Batch [82/100], Loss: 0.0713
Epoch [7/10], Batch [83/100], Loss: 0.0229
Epoch [7/10], Batch [84/100], Loss: 0.0089
Epoch [7/10], Batch [85/100], Loss: 0.0293
Epoch [7/10], Batch [86/100], Loss: 0.1132
Epoch [7/10], Batch [87/100], Loss: 0.1275
Epoch [7/10], Batch [88/100], Loss: 0.0408
Epoch [7/10], Batch [89/100], Loss: 0.0325
Epoch [7/10], Batch [90/100], Loss: 0.0290
Epoch [7/10], Batch [91/100], Loss: 0.0155
Epoch [7/10], Batch [92/100], Loss: 0.0332
Epoch [7/10], Batch [93/100], Loss: 0.0542
Epoch [7/10], Batch [94/100], Loss: 0.0451
Epoch [7/10], Batch [95/100], Loss: 0.0449
Epoch [7/10], Batch [96/100], Loss: 0.1231
Epoch [7/10], Batch [97/100], Loss: 0.0273
Epoch [7/10], Batch [98/100], Loss: 0.0398
Epoch [7/10], Batch [99/100], Loss: 0.0553
Epoch [7/10], Batch [100/100], Loss: 0.0416
Epoch [7/10], Average Loss: 0.0699
-----------------------------------------------------------
strategy: BEAM
iter: 4
epoch: 6
Test Loss: 0.4046
F1_overall: 0.5790
F1_AGENT: 0.7358
F1_TARGET: 0.4200
-----------------------------------------------------------
Epoch [8/10], Batch [1/100], Loss: 0.0051
Epoch [8/10], Batch [2/100], Loss: 0.0135
Epoch [8/10], Batch [3/100], Loss: 0.0533
Epoch [8/10], Batch [4/100], Loss: 0.0102
Epoch [8/10], Batch [5/100], Loss: 0.0714
Epoch [8/10], Batch [6/100], Loss: 0.0102
Epoch [8/10], Batch [7/100], Loss: 0.0092
Epoch [8/10], Batch [8/100], Loss: 0.0391
Epoch [8/10], Batch [9/100], Loss: 0.0270
Epoch [8/10], Batch [10/100], Loss: 0.0055
Epoch [8/10], Batch [11/100], Loss: 0.0409
Epoch [8/10], Batch [12/100], Loss: 0.0388
Epoch [8/10], Batch [13/100], Loss: 0.0781
Epoch [8/10], Batch [14/100], Loss: 0.0200
Epoch [8/10], Batch [15/100], Loss: 0.0831
Epoch [8/10], Batch [16/100], Loss: 0.0510
Epoch [8/10], Batch [17/100], Loss: 0.0078
Epoch [8/10], Batch [18/100], Loss: 0.0370
Epoch [8/10], Batch [19/100], Loss: 0.0103
Epoch [8/10], Batch [20/100], Loss: 0.0717
Epoch [8/10], Batch [21/100], Loss: 0.3083
Epoch [8/10], Batch [22/100], Loss: 0.0080
Epoch [8/10], Batch [23/100], Loss: 0.0078
Epoch [8/10], Batch [24/100], Loss: 0.0293
Epoch [8/10], Batch [25/100], Loss: 0.0275
Epoch [8/10], Batch [26/100], Loss: 0.1237
Epoch [8/10], Batch [27/100], Loss: 0.1545
Epoch [8/10], Batch [28/100], Loss: 0.1275
Epoch [8/10], Batch [29/100], Loss: 0.0073
Epoch [8/10], Batch [30/100], Loss: 0.0169
Epoch [8/10], Batch [31/100], Loss: 0.0540
Epoch [8/10], Batch [32/100], Loss: 0.1604
Epoch [8/10], Batch [33/100], Loss: 0.0089
Epoch [8/10], Batch [34/100], Loss: 0.0427
Epoch [8/10], Batch [35/100], Loss: 0.0357
Epoch [8/10], Batch [36/100], Loss: 0.1401
Epoch [8/10], Batch [37/100], Loss: 0.0325
Epoch [8/10], Batch [38/100], Loss: 0.0112
Epoch [8/10], Batch [39/100], Loss: 0.0078
Epoch [8/10], Batch [40/100], Loss: 0.0286
Epoch [8/10], Batch [41/100], Loss: 0.0172
Epoch [8/10], Batch [42/100], Loss: 0.0489
Epoch [8/10], Batch [43/100], Loss: 0.0297
Epoch [8/10], Batch [44/100], Loss: 0.1118
Epoch [8/10], Batch [45/100], Loss: 0.0301
Epoch [8/10], Batch [46/100], Loss: 0.0172
Epoch [8/10], Batch [47/100], Loss: 0.0128
Epoch [8/10], Batch [48/100], Loss: 0.0535
Epoch [8/10], Batch [49/100], Loss: 0.0610
Epoch [8/10], Batch [50/100], Loss: 0.0981
Epoch [8/10], Batch [51/100], Loss: 0.0250
Epoch [8/10], Batch [52/100], Loss: 0.0453
Epoch [8/10], Batch [53/100], Loss: 0.0132
Epoch [8/10], Batch [54/100], Loss: 0.0241
Epoch [8/10], Batch [55/100], Loss: 0.1014
Epoch [8/10], Batch [56/100], Loss: 0.0171
Epoch [8/10], Batch [57/100], Loss: 0.0268
Epoch [8/10], Batch [58/100], Loss: 0.2952
Epoch [8/10], Batch [59/100], Loss: 0.0219
Epoch [8/10], Batch [60/100], Loss: 0.0467
Epoch [8/10], Batch [61/100], Loss: 0.0077
Epoch [8/10], Batch [62/100], Loss: 0.0708
Epoch [8/10], Batch [63/100], Loss: 0.0140
Epoch [8/10], Batch [64/100], Loss: 0.1222
Epoch [8/10], Batch [65/100], Loss: 0.1506
Epoch [8/10], Batch [66/100], Loss: 0.0384
Epoch [8/10], Batch [67/100], Loss: 0.0288
Epoch [8/10], Batch [68/100], Loss: 0.0115
Epoch [8/10], Batch [69/100], Loss: 0.0141
Epoch [8/10], Batch [70/100], Loss: 0.0460
Epoch [8/10], Batch [71/100], Loss: 0.0212
Epoch [8/10], Batch [72/100], Loss: 0.0128
Epoch [8/10], Batch [73/100], Loss: 0.0525
Epoch [8/10], Batch [74/100], Loss: 0.0540
Epoch [8/10], Batch [75/100], Loss: 0.0353
Epoch [8/10], Batch [76/100], Loss: 0.0261
Epoch [8/10], Batch [77/100], Loss: 0.0288
Epoch [8/10], Batch [78/100], Loss: 0.0946
Epoch [8/10], Batch [79/100], Loss: 0.0278
Epoch [8/10], Batch [80/100], Loss: 0.0289
Epoch [8/10], Batch [81/100], Loss: 0.1025
Epoch [8/10], Batch [82/100], Loss: 0.0116
Epoch [8/10], Batch [83/100], Loss: 0.0291
Epoch [8/10], Batch [84/100], Loss: 0.0182
Epoch [8/10], Batch [85/100], Loss: 0.0189
Epoch [8/10], Batch [86/100], Loss: 0.1680
Epoch [8/10], Batch [87/100], Loss: 0.0336
Epoch [8/10], Batch [88/100], Loss: 0.1211
Epoch [8/10], Batch [89/100], Loss: 0.0709
Epoch [8/10], Batch [90/100], Loss: 0.1009
Epoch [8/10], Batch [91/100], Loss: 0.0164
Epoch [8/10], Batch [92/100], Loss: 0.0101
Epoch [8/10], Batch [93/100], Loss: 0.0100
Epoch [8/10], Batch [94/100], Loss: 0.0207
Epoch [8/10], Batch [95/100], Loss: 0.0137
Epoch [8/10], Batch [96/100], Loss: 0.0693
Epoch [8/10], Batch [97/100], Loss: 0.0547
Epoch [8/10], Batch [98/100], Loss: 0.0258
Epoch [8/10], Batch [99/100], Loss: 0.0409
Epoch [8/10], Batch [100/100], Loss: 0.0429
Epoch [8/10], Average Loss: 0.0498
-----------------------------------------------------------
strategy: BEAM
iter: 4
epoch: 7
Test Loss: 0.4130
F1_overall: 0.5889
F1_AGENT: 0.7414
F1_TARGET: 0.4286
-----------------------------------------------------------
Epoch [9/10], Batch [1/100], Loss: 0.0117
Epoch [9/10], Batch [2/100], Loss: 0.0508
Epoch [9/10], Batch [3/100], Loss: 0.0678
Epoch [9/10], Batch [4/100], Loss: 0.0096
Epoch [9/10], Batch [5/100], Loss: 0.0443
Epoch [9/10], Batch [6/100], Loss: 0.0082
Epoch [9/10], Batch [7/100], Loss: 0.0142
Epoch [9/10], Batch [8/100], Loss: 0.0175
Epoch [9/10], Batch [9/100], Loss: 0.0115
Epoch [9/10], Batch [10/100], Loss: 0.0152
Epoch [9/10], Batch [11/100], Loss: 0.0608
Epoch [9/10], Batch [12/100], Loss: 0.0066
Epoch [9/10], Batch [13/100], Loss: 0.0493
Epoch [9/10], Batch [14/100], Loss: 0.0061
Epoch [9/10], Batch [15/100], Loss: 0.0581
Epoch [9/10], Batch [16/100], Loss: 0.0104
Epoch [9/10], Batch [17/100], Loss: 0.0330
Epoch [9/10], Batch [18/100], Loss: 0.0161
Epoch [9/10], Batch [19/100], Loss: 0.0207
Epoch [9/10], Batch [20/100], Loss: 0.0585
Epoch [9/10], Batch [21/100], Loss: 0.1398
Epoch [9/10], Batch [22/100], Loss: 0.0271
Epoch [9/10], Batch [23/100], Loss: 0.0147
Epoch [9/10], Batch [24/100], Loss: 0.0491
Epoch [9/10], Batch [25/100], Loss: 0.1774
Epoch [9/10], Batch [26/100], Loss: 0.0757
Epoch [9/10], Batch [27/100], Loss: 0.0133
Epoch [9/10], Batch [28/100], Loss: 0.0039
Epoch [9/10], Batch [29/100], Loss: 0.0148
Epoch [9/10], Batch [30/100], Loss: 0.0326
Epoch [9/10], Batch [31/100], Loss: 0.2837
Epoch [9/10], Batch [32/100], Loss: 0.0265
Epoch [9/10], Batch [33/100], Loss: 0.0082
Epoch [9/10], Batch [34/100], Loss: 0.0938
Epoch [9/10], Batch [35/100], Loss: 0.0840
Epoch [9/10], Batch [36/100], Loss: 0.0268
Epoch [9/10], Batch [37/100], Loss: 0.0358
Epoch [9/10], Batch [38/100], Loss: 0.0110
Epoch [9/10], Batch [39/100], Loss: 0.0049
Epoch [9/10], Batch [40/100], Loss: 0.0104
Epoch [9/10], Batch [41/100], Loss: 0.0316
Epoch [9/10], Batch [42/100], Loss: 0.0307
Epoch [9/10], Batch [43/100], Loss: 0.0289
Epoch [9/10], Batch [44/100], Loss: 0.0236
Epoch [9/10], Batch [45/100], Loss: 0.0066
Epoch [9/10], Batch [46/100], Loss: 0.0381
Epoch [9/10], Batch [47/100], Loss: 0.0175
Epoch [9/10], Batch [48/100], Loss: 0.0789
Epoch [9/10], Batch [49/100], Loss: 0.0217
Epoch [9/10], Batch [50/100], Loss: 0.0231
Epoch [9/10], Batch [51/100], Loss: 0.0068
Epoch [9/10], Batch [52/100], Loss: 0.0161
Epoch [9/10], Batch [53/100], Loss: 0.0168
Epoch [9/10], Batch [54/100], Loss: 0.1897
Epoch [9/10], Batch [55/100], Loss: 0.0061
Epoch [9/10], Batch [56/100], Loss: 0.0068
Epoch [9/10], Batch [57/100], Loss: 0.0623
Epoch [9/10], Batch [58/100], Loss: 0.0195
Epoch [9/10], Batch [59/100], Loss: 0.0216
Epoch [9/10], Batch [60/100], Loss: 0.0128
Epoch [9/10], Batch [61/100], Loss: 0.0756
Epoch [9/10], Batch [62/100], Loss: 0.0099
Epoch [9/10], Batch [63/100], Loss: 0.0278
Epoch [9/10], Batch [64/100], Loss: 0.1212
Epoch [9/10], Batch [65/100], Loss: 0.0256
Epoch [9/10], Batch [66/100], Loss: 0.0489
Epoch [9/10], Batch [67/100], Loss: 0.0875
Epoch [9/10], Batch [68/100], Loss: 0.0346
Epoch [9/10], Batch [69/100], Loss: 0.0073
Epoch [9/10], Batch [70/100], Loss: 0.0474
Epoch [9/10], Batch [71/100], Loss: 0.2221
Epoch [9/10], Batch [72/100], Loss: 0.0522
Epoch [9/10], Batch [73/100], Loss: 0.0380
Epoch [9/10], Batch [74/100], Loss: 0.0468
Epoch [9/10], Batch [75/100], Loss: 0.0307
Epoch [9/10], Batch [76/100], Loss: 0.0587
Epoch [9/10], Batch [77/100], Loss: 0.0801
Epoch [9/10], Batch [78/100], Loss: 0.0469
Epoch [9/10], Batch [79/100], Loss: 0.0092
Epoch [9/10], Batch [80/100], Loss: 0.0138
Epoch [9/10], Batch [81/100], Loss: 0.0620
Epoch [9/10], Batch [82/100], Loss: 0.0087
Epoch [9/10], Batch [83/100], Loss: 0.0754
Epoch [9/10], Batch [84/100], Loss: 0.0869
Epoch [9/10], Batch [85/100], Loss: 0.0126
Epoch [9/10], Batch [86/100], Loss: 0.0443
Epoch [9/10], Batch [87/100], Loss: 0.0673
Epoch [9/10], Batch [88/100], Loss: 0.0072
Epoch [9/10], Batch [89/100], Loss: 0.1036
Epoch [9/10], Batch [90/100], Loss: 0.0084
Epoch [9/10], Batch [91/100], Loss: 0.0143
Epoch [9/10], Batch [92/100], Loss: 0.0055
Epoch [9/10], Batch [93/100], Loss: 0.0107
Epoch [9/10], Batch [94/100], Loss: 0.0636
Epoch [9/10], Batch [95/100], Loss: 0.0286
Epoch [9/10], Batch [96/100], Loss: 0.0923
Epoch [9/10], Batch [97/100], Loss: 0.0188
Epoch [9/10], Batch [98/100], Loss: 0.0332
Epoch [9/10], Batch [99/100], Loss: 0.1205
Epoch [9/10], Batch [100/100], Loss: 0.2585
Epoch [9/10], Average Loss: 0.0457
-----------------------------------------------------------
strategy: BEAM
iter: 4
epoch: 8
Test Loss: 0.4566
F1_overall: 0.5724
F1_AGENT: 0.7170
F1_TARGET: 0.4319
-----------------------------------------------------------
Epoch [10/10], Batch [1/100], Loss: 0.0773
Epoch [10/10], Batch [2/100], Loss: 0.0601
Epoch [10/10], Batch [3/100], Loss: 0.0420
Epoch [10/10], Batch [4/100], Loss: 0.0400
Epoch [10/10], Batch [5/100], Loss: 0.0270
Epoch [10/10], Batch [6/100], Loss: 0.0306
Epoch [10/10], Batch [7/100], Loss: 0.0291
Epoch [10/10], Batch [8/100], Loss: 0.0876
Epoch [10/10], Batch [9/100], Loss: 0.0198
Epoch [10/10], Batch [10/100], Loss: 0.0063
Epoch [10/10], Batch [11/100], Loss: 0.0210
Epoch [10/10], Batch [12/100], Loss: 0.0258
Epoch [10/10], Batch [13/100], Loss: 0.0765
Epoch [10/10], Batch [14/100], Loss: 0.0078
Epoch [10/10], Batch [15/100], Loss: 0.0056
Epoch [10/10], Batch [16/100], Loss: 0.0332
Epoch [10/10], Batch [17/100], Loss: 0.0451
Epoch [10/10], Batch [18/100], Loss: 0.0326
Epoch [10/10], Batch [19/100], Loss: 0.0335
Epoch [10/10], Batch [20/100], Loss: 0.0068
Epoch [10/10], Batch [21/100], Loss: 0.0510
Epoch [10/10], Batch [22/100], Loss: 0.0245
Epoch [10/10], Batch [23/100], Loss: 0.0155
Epoch [10/10], Batch [24/100], Loss: 0.0246
Epoch [10/10], Batch [25/100], Loss: 0.0054
Epoch [10/10], Batch [26/100], Loss: 0.0102
Epoch [10/10], Batch [27/100], Loss: 0.1713
Epoch [10/10], Batch [28/100], Loss: 0.0383
Epoch [10/10], Batch [29/100], Loss: 0.0306
Epoch [10/10], Batch [30/100], Loss: 0.0069
Epoch [10/10], Batch [31/100], Loss: 0.0548
Epoch [10/10], Batch [32/100], Loss: 0.0513
Epoch [10/10], Batch [33/100], Loss: 0.0234
Epoch [10/10], Batch [34/100], Loss: 0.1415
Epoch [10/10], Batch [35/100], Loss: 0.0094
Epoch [10/10], Batch [36/100], Loss: 0.0562
Epoch [10/10], Batch [37/100], Loss: 0.0544
Epoch [10/10], Batch [38/100], Loss: 0.0516
Epoch [10/10], Batch [39/100], Loss: 0.0218
Epoch [10/10], Batch [40/100], Loss: 0.0081
Epoch [10/10], Batch [41/100], Loss: 0.0096
Epoch [10/10], Batch [42/100], Loss: 0.0345
Epoch [10/10], Batch [43/100], Loss: 0.0170
Epoch [10/10], Batch [44/100], Loss: 0.0237
Epoch [10/10], Batch [45/100], Loss: 0.0115
Epoch [10/10], Batch [46/100], Loss: 0.0855
Epoch [10/10], Batch [47/100], Loss: 0.0090
Epoch [10/10], Batch [48/100], Loss: 0.0087
Epoch [10/10], Batch [49/100], Loss: 0.0183
Epoch [10/10], Batch [50/100], Loss: 0.0977
Epoch [10/10], Batch [51/100], Loss: 0.0399
Epoch [10/10], Batch [52/100], Loss: 0.1387
Epoch [10/10], Batch [53/100], Loss: 0.0110
Epoch [10/10], Batch [54/100], Loss: 0.0864
Epoch [10/10], Batch [55/100], Loss: 0.0191
Epoch [10/10], Batch [56/100], Loss: 0.0087
Epoch [10/10], Batch [57/100], Loss: 0.0387
Epoch [10/10], Batch [58/100], Loss: 0.0229
Epoch [10/10], Batch [59/100], Loss: 0.0041
Epoch [10/10], Batch [60/100], Loss: 0.0058
Epoch [10/10], Batch [61/100], Loss: 0.0761
Epoch [10/10], Batch [62/100], Loss: 0.0336
Epoch [10/10], Batch [63/100], Loss: 0.0091
Epoch [10/10], Batch [64/100], Loss: 0.0148
Epoch [10/10], Batch [65/100], Loss: 0.0387
Epoch [10/10], Batch [66/100], Loss: 0.0321
Epoch [10/10], Batch [67/100], Loss: 0.0216
Epoch [10/10], Batch [68/100], Loss: 0.0802
Epoch [10/10], Batch [69/100], Loss: 0.0587
Epoch [10/10], Batch [70/100], Loss: 0.0169
Epoch [10/10], Batch [71/100], Loss: 0.0306
Epoch [10/10], Batch [72/100], Loss: 0.0108
Epoch [10/10], Batch [73/100], Loss: 0.0396
Epoch [10/10], Batch [74/100], Loss: 0.0044
Epoch [10/10], Batch [75/100], Loss: 0.0371
Epoch [10/10], Batch [76/100], Loss: 0.0556
Epoch [10/10], Batch [77/100], Loss: 0.0055
Epoch [10/10], Batch [78/100], Loss: 0.0411
Epoch [10/10], Batch [79/100], Loss: 0.0636
Epoch [10/10], Batch [80/100], Loss: 0.0253
Epoch [10/10], Batch [81/100], Loss: 0.0110
Epoch [10/10], Batch [82/100], Loss: 0.0070
Epoch [10/10], Batch [83/100], Loss: 0.0073
Epoch [10/10], Batch [84/100], Loss: 0.0064
Epoch [10/10], Batch [85/100], Loss: 0.0189
Epoch [10/10], Batch [86/100], Loss: 0.0074
Epoch [10/10], Batch [87/100], Loss: 0.0110
Epoch [10/10], Batch [88/100], Loss: 0.0073
Epoch [10/10], Batch [89/100], Loss: 0.0295
Epoch [10/10], Batch [90/100], Loss: 0.0048
Epoch [10/10], Batch [91/100], Loss: 0.0238
Epoch [10/10], Batch [92/100], Loss: 0.1282
Epoch [10/10], Batch [93/100], Loss: 0.0782
Epoch [10/10], Batch [94/100], Loss: 0.0280
Epoch [10/10], Batch [95/100], Loss: 0.0193
Epoch [10/10], Batch [96/100], Loss: 0.0237
Epoch [10/10], Batch [97/100], Loss: 0.1024
Epoch [10/10], Batch [98/100], Loss: 0.0588
Epoch [10/10], Batch [99/100], Loss: 0.0234
Epoch [10/10], Batch [100/100], Loss: 0.0636
Epoch [10/10], Average Loss: 0.0360
-----------------------------------------------------------
strategy: BEAM
iter: 4
epoch: 9
Test Loss: 0.4706
F1_overall: 0.5797
F1_AGENT: 0.7181
F1_TARGET: 0.4443
-----------------------------------------------------------
sorted_beam_scores: [(680, tensor(-0.3797, dtype=torch.float64)), (237, tensor(-0.2889, dtype=torch.float64)), (2722, tensor(-0.2778, dtype=torch.float64)), (1102, tensor(-0.2565, dtype=torch.float64)), (2233, tensor(-0.2487, dtype=torch.float64)), (2581, tensor(-0.2486, dtype=torch.float64)), (1725, tensor(-0.2468, dtype=torch.float64)), (1486, tensor(-0.2412, dtype=torch.float64)), (238, tensor(-0.2342, dtype=torch.float64)), (108, tensor(-0.2261, dtype=torch.float64)), (213, tensor(-0.2110, dtype=torch.float64)), (1371, tensor(-0.2106, dtype=torch.float64)), (315, tensor(-0.2010, dtype=torch.float64)), (2091, tensor(-0.2005, dtype=torch.float64)), (1905, tensor(-0.1997, dtype=torch.float64)), (2614, tensor(-0.1989, dtype=torch.float64)), (250, tensor(-0.1963, dtype=torch.float64)), (1323, tensor(-0.1939, dtype=torch.float64)), (1505, tensor(-0.1938, dtype=torch.float64)), (1866, tensor(-0.1843, dtype=torch.float64)), (1346, tensor(-0.1840, dtype=torch.float64)), (2202, tensor(-0.1830, dtype=torch.float64)), (115, tensor(-0.1827, dtype=torch.float64)), (2407, tensor(-0.1820, dtype=torch.float64)), (1017, tensor(-0.1802, dtype=torch.float64)), (224, tensor(-0.1793, dtype=torch.float64)), (761, tensor(-0.1759, dtype=torch.float64)), (2298, tensor(-0.1756, dtype=torch.float64)), (881, tensor(-0.1746, dtype=torch.float64)), (71, tensor(-0.1746, dtype=torch.float64)), (316, tensor(-0.1724, dtype=torch.float64)), (511, tensor(-0.1707, dtype=torch.float64)), (291, tensor(-0.1706, dtype=torch.float64)), (392, tensor(-0.1700, dtype=torch.float64)), (1356, tensor(-0.1688, dtype=torch.float64)), (109, tensor(-0.1657, dtype=torch.float64)), (554, tensor(-0.1646, dtype=torch.float64)), (304, tensor(-0.1644, dtype=torch.float64)), (842, tensor(-0.1637, dtype=torch.float64)), (1362, tensor(-0.1636, dtype=torch.float64)), (1673, tensor(-0.1624, dtype=torch.float64)), (830, tensor(-0.1614, dtype=torch.float64)), (60, tensor(-0.1597, dtype=torch.float64)), (690, tensor(-0.1582, dtype=torch.float64)), (1264, tensor(-0.1578, dtype=torch.float64)), (1785, tensor(-0.1577, dtype=torch.float64)), (877, tensor(-0.1576, dtype=torch.float64)), (1313, tensor(-0.1573, dtype=torch.float64)), (2630, tensor(-0.1571, dtype=torch.float64)), (912, tensor(-0.1562, dtype=torch.float64)), (2402, tensor(-0.1535, dtype=torch.float64)), (2208, tensor(-0.1525, dtype=torch.float64)), (114, tensor(-0.1524, dtype=torch.float64)), (1793, tensor(-0.1520, dtype=torch.float64)), (2076, tensor(-0.1519, dtype=torch.float64)), (1807, tensor(-0.1500, dtype=torch.float64)), (2019, tensor(-0.1494, dtype=torch.float64)), (231, tensor(-0.1491, dtype=torch.float64)), (636, tensor(-0.1490, dtype=torch.float64)), (1402, tensor(-0.1474, dtype=torch.float64)), (873, tensor(-0.1473, dtype=torch.float64)), (1409, tensor(-0.1463, dtype=torch.float64)), (10, tensor(-0.1443, dtype=torch.float64)), (662, tensor(-0.1426, dtype=torch.float64)), (129, tensor(-0.1414, dtype=torch.float64)), (2147, tensor(-0.1403, dtype=torch.float64)), (2190, tensor(-0.1389, dtype=torch.float64)), (2508, tensor(-0.1381, dtype=torch.float64)), (2561, tensor(-0.1371, dtype=torch.float64)), (834, tensor(-0.1371, dtype=torch.float64)), (2469, tensor(-0.1370, dtype=torch.float64)), (2294, tensor(-0.1368, dtype=torch.float64)), (1956, tensor(-0.1360, dtype=torch.float64)), (1463, tensor(-0.1359, dtype=torch.float64)), (1120, tensor(-0.1350, dtype=torch.float64)), (296, tensor(-0.1345, dtype=torch.float64)), (895, tensor(-0.1341, dtype=torch.float64)), (2528, tensor(-0.1334, dtype=torch.float64)), (2673, tensor(-0.1328, dtype=torch.float64)), (499, tensor(-0.1327, dtype=torch.float64)), (211, tensor(-0.1319, dtype=torch.float64)), (1297, tensor(-0.1315, dtype=torch.float64)), (1788, tensor(-0.1311, dtype=torch.float64)), (578, tensor(-0.1303, dtype=torch.float64)), (149, tensor(-0.1275, dtype=torch.float64)), (780, tensor(-0.1273, dtype=torch.float64)), (627, tensor(-0.1265, dtype=torch.float64)), (1241, tensor(-0.1264, dtype=torch.float64)), (1247, tensor(-0.1260, dtype=torch.float64)), (1025, tensor(-0.1260, dtype=torch.float64)), (1834, tensor(-0.1260, dtype=torch.float64)), (2032, tensor(-0.1258, dtype=torch.float64)), (1343, tensor(-0.1252, dtype=torch.float64)), (1503, tensor(-0.1249, dtype=torch.float64)), (1697, tensor(-0.1240, dtype=torch.float64)), (1912, tensor(-0.1239, dtype=torch.float64)), (1380, tensor(-0.1234, dtype=torch.float64)), (934, tensor(-0.1230, dtype=torch.float64)), (2506, tensor(-0.1226, dtype=torch.float64)), (1048, tensor(-0.1217, dtype=torch.float64)), (853, tensor(-0.1216, dtype=torch.float64)), (2094, tensor(-0.1215, dtype=torch.float64)), (1086, tensor(-0.1210, dtype=torch.float64)), (1561, tensor(-0.1190, dtype=torch.float64)), (1084, tensor(-0.1177, dtype=torch.float64)), (1187, tensor(-0.1176, dtype=torch.float64)), (1858, tensor(-0.1160, dtype=torch.float64)), (1534, tensor(-0.1153, dtype=torch.float64)), (832, tensor(-0.1148, dtype=torch.float64)), (52, tensor(-0.1144, dtype=torch.float64)), (1126, tensor(-0.1140, dtype=torch.float64)), (542, tensor(-0.1140, dtype=torch.float64)), (2396, tensor(-0.1133, dtype=torch.float64)), (1531, tensor(-0.1133, dtype=torch.float64)), (79, tensor(-0.1130, dtype=torch.float64)), (1867, tensor(-0.1126, dtype=torch.float64)), (2014, tensor(-0.1126, dtype=torch.float64)), (1744, tensor(-0.1123, dtype=torch.float64)), (898, tensor(-0.1121, dtype=torch.float64)), (978, tensor(-0.1116, dtype=torch.float64)), (1096, tensor(-0.1112, dtype=torch.float64)), (628, tensor(-0.1101, dtype=torch.float64)), (383, tensor(-0.1100, dtype=torch.float64)), (2174, tensor(-0.1099, dtype=torch.float64)), (2665, tensor(-0.1099, dtype=torch.float64)), (785, tensor(-0.1099, dtype=torch.float64)), (475, tensor(-0.1096, dtype=torch.float64)), (413, tensor(-0.1094, dtype=torch.float64)), (125, tensor(-0.1091, dtype=torch.float64)), (845, tensor(-0.1085, dtype=torch.float64)), (1560, tensor(-0.1083, dtype=torch.float64)), (1083, tensor(-0.1083, dtype=torch.float64)), (1320, tensor(-0.1082, dtype=torch.float64)), (1464, tensor(-0.1072, dtype=torch.float64)), (198, tensor(-0.1068, dtype=torch.float64)), (751, tensor(-0.1068, dtype=torch.float64)), (2243, tensor(-0.1066, dtype=torch.float64)), (2151, tensor(-0.1066, dtype=torch.float64)), (2281, tensor(-0.1062, dtype=torch.float64)), (278, tensor(-0.1060, dtype=torch.float64)), (808, tensor(-0.1057, dtype=torch.float64)), (2657, tensor(-0.1053, dtype=torch.float64)), (193, tensor(-0.1051, dtype=torch.float64)), (1687, tensor(-0.1049, dtype=torch.float64)), (1462, tensor(-0.1047, dtype=torch.float64)), (2275, tensor(-0.1042, dtype=torch.float64)), (1900, tensor(-0.1040, dtype=torch.float64)), (1419, tensor(-0.1039, dtype=torch.float64)), (2730, tensor(-0.1036, dtype=torch.float64)), (1945, tensor(-0.1035, dtype=torch.float64)), (1728, tensor(-0.1035, dtype=torch.float64)), (191, tensor(-0.1034, dtype=torch.float64)), (208, tensor(-0.1034, dtype=torch.float64)), (1034, tensor(-0.1032, dtype=torch.float64)), (955, tensor(-0.1032, dtype=torch.float64)), (234, tensor(-0.1031, dtype=torch.float64)), (2607, tensor(-0.1031, dtype=torch.float64)), (1042, tensor(-0.1031, dtype=torch.float64)), (1433, tensor(-0.1030, dtype=torch.float64)), (100, tensor(-0.1028, dtype=torch.float64)), (65, tensor(-0.1023, dtype=torch.float64)), (1054, tensor(-0.1022, dtype=torch.float64)), (795, tensor(-0.1017, dtype=torch.float64)), (1176, tensor(-0.1017, dtype=torch.float64)), (1594, tensor(-0.1012, dtype=torch.float64)), (277, tensor(-0.1008, dtype=torch.float64)), (80, tensor(-0.1007, dtype=torch.float64)), (386, tensor(-0.1004, dtype=torch.float64)), (1548, tensor(-0.1002, dtype=torch.float64)), (1068, tensor(-0.0999, dtype=torch.float64)), (1873, tensor(-0.0996, dtype=torch.float64)), (545, tensor(-0.0996, dtype=torch.float64)), (2308, tensor(-0.0996, dtype=torch.float64)), (2472, tensor(-0.0995, dtype=torch.float64)), (1230, tensor(-0.0994, dtype=torch.float64)), (1266, tensor(-0.0990, dtype=torch.float64)), (887, tensor(-0.0989, dtype=torch.float64)), (1828, tensor(-0.0973, dtype=torch.float64)), (1970, tensor(-0.0973, dtype=torch.float64)), (1940, tensor(-0.0970, dtype=torch.float64)), (2685, tensor(-0.0966, dtype=torch.float64)), (479, tensor(-0.0966, dtype=torch.float64)), (926, tensor(-0.0966, dtype=torch.float64)), (2081, tensor(-0.0964, dtype=torch.float64)), (1592, tensor(-0.0964, dtype=torch.float64)), (1016, tensor(-0.0963, dtype=torch.float64)), (2099, tensor(-0.0963, dtype=torch.float64)), (2135, tensor(-0.0962, dtype=torch.float64)), (199, tensor(-0.0957, dtype=torch.float64)), (1219, tensor(-0.0954, dtype=torch.float64)), (1038, tensor(-0.0953, dtype=torch.float64)), (76, tensor(-0.0952, dtype=torch.float64)), (2688, tensor(-0.0952, dtype=torch.float64)), (904, tensor(-0.0951, dtype=torch.float64)), (540, tensor(-0.0949, dtype=torch.float64)), (1816, tensor(-0.0949, dtype=torch.float64)), (1455, tensor(-0.0949, dtype=torch.float64)), (1886, tensor(-0.0948, dtype=torch.float64)), (1953, tensor(-0.0947, dtype=torch.float64)), (1541, tensor(-0.0945, dtype=torch.float64)), (2262, tensor(-0.0945, dtype=torch.float64)), (1868, tensor(-0.0942, dtype=torch.float64)), (1688, tensor(-0.0941, dtype=torch.float64)), (207, tensor(-0.0935, dtype=torch.float64)), (1743, tensor(-0.0934, dtype=torch.float64)), (532, tensor(-0.0933, dtype=torch.float64)), (2435, tensor(-0.0932, dtype=torch.float64)), (142, tensor(-0.0932, dtype=torch.float64)), (2569, tensor(-0.0931, dtype=torch.float64)), (752, tensor(-0.0929, dtype=torch.float64)), (1703, tensor(-0.0929, dtype=torch.float64)), (590, tensor(-0.0928, dtype=torch.float64)), (1352, tensor(-0.0927, dtype=torch.float64)), (2013, tensor(-0.0923, dtype=torch.float64)), (937, tensor(-0.0922, dtype=torch.float64)), (336, tensor(-0.0921, dtype=torch.float64)), (492, tensor(-0.0918, dtype=torch.float64)), (2200, tensor(-0.0917, dtype=torch.float64)), (2239, tensor(-0.0917, dtype=torch.float64)), (1730, tensor(-0.0917, dtype=torch.float64)), (402, tensor(-0.0913, dtype=torch.float64)), (1332, tensor(-0.0910, dtype=torch.float64)), (2440, tensor(-0.0909, dtype=torch.float64)), (2729, tensor(-0.0908, dtype=torch.float64)), (67, tensor(-0.0907, dtype=torch.float64)), (1718, tensor(-0.0906, dtype=torch.float64)), (2231, tensor(-0.0906, dtype=torch.float64)), (583, tensor(-0.0906, dtype=torch.float64)), (2622, tensor(-0.0904, dtype=torch.float64)), (2062, tensor(-0.0902, dtype=torch.float64)), (728, tensor(-0.0900, dtype=torch.float64)), (706, tensor(-0.0899, dtype=torch.float64)), (1680, tensor(-0.0897, dtype=torch.float64)), (1060, tensor(-0.0891, dtype=torch.float64)), (1989, tensor(-0.0889, dtype=torch.float64)), (591, tensor(-0.0888, dtype=torch.float64)), (1261, tensor(-0.0887, dtype=torch.float64)), (1113, tensor(-0.0887, dtype=torch.float64)), (2533, tensor(-0.0885, dtype=torch.float64)), (1820, tensor(-0.0885, dtype=torch.float64)), (2389, tensor(-0.0885, dtype=torch.float64)), (858, tensor(-0.0885, dtype=torch.float64)), (544, tensor(-0.0885, dtype=torch.float64)), (2544, tensor(-0.0883, dtype=torch.float64)), (930, tensor(-0.0882, dtype=torch.float64)), (438, tensor(-0.0881, dtype=torch.float64)), (1717, tensor(-0.0880, dtype=torch.float64)), (516, tensor(-0.0879, dtype=torch.float64)), (1925, tensor(-0.0879, dtype=torch.float64)), (1305, tensor(-0.0877, dtype=torch.float64)), (663, tensor(-0.0877, dtype=torch.float64)), (414, tensor(-0.0877, dtype=torch.float64)), (1240, tensor(-0.0876, dtype=torch.float64)), (580, tensor(-0.0875, dtype=torch.float64)), (1062, tensor(-0.0875, dtype=torch.float64)), (1119, tensor(-0.0874, dtype=torch.float64)), (1617, tensor(-0.0867, dtype=torch.float64)), (2301, tensor(-0.0865, dtype=torch.float64)), (970, tensor(-0.0864, dtype=torch.float64)), (1141, tensor(-0.0864, dtype=torch.float64)), (361, tensor(-0.0862, dtype=torch.float64)), (2350, tensor(-0.0859, dtype=torch.float64)), (743, tensor(-0.0859, dtype=torch.float64)), (1197, tensor(-0.0857, dtype=torch.float64)), (2290, tensor(-0.0856, dtype=torch.float64)), (557, tensor(-0.0853, dtype=torch.float64)), (547, tensor(-0.0852, dtype=torch.float64)), (22, tensor(-0.0852, dtype=torch.float64)), (2452, tensor(-0.0852, dtype=torch.float64)), (1544, tensor(-0.0851, dtype=torch.float64)), (2334, tensor(-0.0848, dtype=torch.float64)), (2329, tensor(-0.0847, dtype=torch.float64)), (1707, tensor(-0.0845, dtype=torch.float64)), (2499, tensor(-0.0845, dtype=torch.float64)), (176, tensor(-0.0843, dtype=torch.float64)), (1046, tensor(-0.0842, dtype=torch.float64)), (2443, tensor(-0.0841, dtype=torch.float64)), (2504, tensor(-0.0841, dtype=torch.float64)), (1251, tensor(-0.0840, dtype=torch.float64)), (2546, tensor(-0.0839, dtype=torch.float64)), (1413, tensor(-0.0836, dtype=torch.float64)), (2011, tensor(-0.0835, dtype=torch.float64)), (107, tensor(-0.0834, dtype=torch.float64)), (2558, tensor(-0.0834, dtype=torch.float64)), (2303, tensor(-0.0834, dtype=torch.float64)), (1709, tensor(-0.0832, dtype=torch.float64)), (359, tensor(-0.0832, dtype=torch.float64)), (2651, tensor(-0.0832, dtype=torch.float64)), (196, tensor(-0.0831, dtype=torch.float64)), (725, tensor(-0.0831, dtype=torch.float64)), (571, tensor(-0.0829, dtype=torch.float64)), (1128, tensor(-0.0828, dtype=torch.float64)), (2519, tensor(-0.0825, dtype=torch.float64)), (2603, tensor(-0.0825, dtype=torch.float64)), (1623, tensor(-0.0824, dtype=torch.float64)), (400, tensor(-0.0824, dtype=torch.float64)), (796, tensor(-0.0823, dtype=torch.float64)), (1741, tensor(-0.0821, dtype=torch.float64)), (1874, tensor(-0.0821, dtype=torch.float64)), (2392, tensor(-0.0821, dtype=torch.float64)), (23, tensor(-0.0820, dtype=torch.float64)), (147, tensor(-0.0817, dtype=torch.float64)), (26, tensor(-0.0817, dtype=torch.float64)), (288, tensor(-0.0817, dtype=torch.float64)), (1150, tensor(-0.0817, dtype=torch.float64)), (416, tensor(-0.0813, dtype=torch.float64)), (2404, tensor(-0.0813, dtype=torch.float64)), (209, tensor(-0.0812, dtype=torch.float64)), (432, tensor(-0.0811, dtype=torch.float64)), (1628, tensor(-0.0811, dtype=torch.float64)), (462, tensor(-0.0811, dtype=torch.float64)), (2007, tensor(-0.0809, dtype=torch.float64)), (85, tensor(-0.0804, dtype=torch.float64)), (2573, tensor(-0.0804, dtype=torch.float64)), (102, tensor(-0.0804, dtype=torch.float64)), (2360, tensor(-0.0802, dtype=torch.float64)), (2259, tensor(-0.0802, dtype=torch.float64)), (2121, tensor(-0.0802, dtype=torch.float64)), (2093, tensor(-0.0801, dtype=torch.float64)), (1629, tensor(-0.0800, dtype=torch.float64)), (1586, tensor(-0.0798, dtype=torch.float64)), (1605, tensor(-0.0797, dtype=torch.float64)), (622, tensor(-0.0796, dtype=torch.float64)), (1289, tensor(-0.0794, dtype=torch.float64)), (1822, tensor(-0.0793, dtype=torch.float64)), (1857, tensor(-0.0793, dtype=torch.float64)), (1466, tensor(-0.0792, dtype=torch.float64)), (2543, tensor(-0.0787, dtype=torch.float64)), (1738, tensor(-0.0787, dtype=torch.float64)), (1434, tensor(-0.0786, dtype=torch.float64)), (1293, tensor(-0.0785, dtype=torch.float64)), (368, tensor(-0.0785, dtype=torch.float64)), (2661, tensor(-0.0785, dtype=torch.float64)), (1143, tensor(-0.0782, dtype=torch.float64)), (2425, tensor(-0.0781, dtype=torch.float64)), (110, tensor(-0.0780, dtype=torch.float64)), (2071, tensor(-0.0778, dtype=torch.float64)), (2199, tensor(-0.0777, dtype=torch.float64)), (1155, tensor(-0.0775, dtype=torch.float64)), (385, tensor(-0.0774, dtype=torch.float64)), (2112, tensor(-0.0774, dtype=torch.float64)), (2474, tensor(-0.0773, dtype=torch.float64)), (374, tensor(-0.0773, dtype=torch.float64)), (64, tensor(-0.0771, dtype=torch.float64)), (1272, tensor(-0.0771, dtype=torch.float64)), (1192, tensor(-0.0769, dtype=torch.float64)), (1943, tensor(-0.0767, dtype=torch.float64)), (2304, tensor(-0.0767, dtype=torch.float64)), (1246, tensor(-0.0764, dtype=torch.float64)), (1009, tensor(-0.0764, dtype=torch.float64)), (2113, tensor(-0.0764, dtype=torch.float64)), (152, tensor(-0.0763, dtype=torch.float64)), (2458, tensor(-0.0763, dtype=torch.float64)), (2316, tensor(-0.0761, dtype=torch.float64)), (1317, tensor(-0.0756, dtype=torch.float64)), (1454, tensor(-0.0755, dtype=torch.float64)), (440, tensor(-0.0752, dtype=torch.float64)), (2179, tensor(-0.0752, dtype=torch.float64)), (1814, tensor(-0.0751, dtype=torch.float64)), (2707, tensor(-0.0750, dtype=torch.float64)), (883, tensor(-0.0750, dtype=torch.float64)), (1679, tensor(-0.0750, dtype=torch.float64)), (1152, tensor(-0.0747, dtype=torch.float64)), (2282, tensor(-0.0747, dtype=torch.float64)), (1234, tensor(-0.0746, dtype=torch.float64)), (2364, tensor(-0.0746, dtype=torch.float64)), (2132, tensor(-0.0745, dtype=torch.float64)), (1011, tensor(-0.0745, dtype=torch.float64)), (758, tensor(-0.0744, dtype=torch.float64)), (297, tensor(-0.0743, dtype=torch.float64)), (659, tensor(-0.0743, dtype=torch.float64)), (1748, tensor(-0.0743, dtype=torch.float64)), (1357, tensor(-0.0742, dtype=torch.float64)), (2245, tensor(-0.0741, dtype=torch.float64)), (156, tensor(-0.0739, dtype=torch.float64)), (2107, tensor(-0.0737, dtype=torch.float64)), (1859, tensor(-0.0736, dtype=torch.float64)), (457, tensor(-0.0735, dtype=torch.float64)), (2379, tensor(-0.0734, dtype=torch.float64)), (2658, tensor(-0.0733, dtype=torch.float64)), (2312, tensor(-0.0731, dtype=torch.float64)), (1965, tensor(-0.0729, dtype=torch.float64)), (1044, tensor(-0.0728, dtype=torch.float64)), (2703, tensor(-0.0728, dtype=torch.float64)), (2310, tensor(-0.0727, dtype=torch.float64)), (1294, tensor(-0.0726, dtype=torch.float64)), (2608, tensor(-0.0725, dtype=torch.float64)), (1398, tensor(-0.0724, dtype=torch.float64)), (1569, tensor(-0.0724, dtype=torch.float64)), (2489, tensor(-0.0724, dtype=torch.float64)), (1931, tensor(-0.0724, dtype=torch.float64)), (173, tensor(-0.0721, dtype=torch.float64)), (348, tensor(-0.0718, dtype=torch.float64)), (1263, tensor(-0.0716, dtype=torch.float64)), (357, tensor(-0.0716, dtype=torch.float64)), (83, tensor(-0.0715, dtype=torch.float64)), (63, tensor(-0.0714, dtype=torch.float64)), (584, tensor(-0.0714, dtype=torch.float64)), (1904, tensor(-0.0713, dtype=torch.float64)), (551, tensor(-0.0713, dtype=torch.float64)), (1893, tensor(-0.0712, dtype=torch.float64)), (1795, tensor(-0.0710, dtype=torch.float64)), (1698, tensor(-0.0710, dtype=torch.float64)), (509, tensor(-0.0709, dtype=torch.float64)), (1073, tensor(-0.0708, dtype=torch.float64)), (1532, tensor(-0.0708, dtype=torch.float64)), (444, tensor(-0.0707, dtype=torch.float64)), (2583, tensor(-0.0707, dtype=torch.float64)), (1214, tensor(-0.0706, dtype=torch.float64)), (1631, tensor(-0.0706, dtype=torch.float64)), (2531, tensor(-0.0706, dtype=torch.float64)), (2167, tensor(-0.0705, dtype=torch.float64)), (232, tensor(-0.0705, dtype=torch.float64)), (876, tensor(-0.0705, dtype=torch.float64)), (431, tensor(-0.0704, dtype=torch.float64)), (615, tensor(-0.0703, dtype=torch.float64)), (2666, tensor(-0.0702, dtype=torch.float64)), (570, tensor(-0.0701, dtype=torch.float64)), (1059, tensor(-0.0699, dtype=torch.float64)), (2033, tensor(-0.0699, dtype=torch.float64)), (700, tensor(-0.0697, dtype=torch.float64)), (669, tensor(-0.0697, dtype=torch.float64)), (371, tensor(-0.0696, dtype=torch.float64)), (2439, tensor(-0.0695, dtype=torch.float64)), (451, tensor(-0.0694, dtype=torch.float64)), (1590, tensor(-0.0694, dtype=torch.float64)), (2154, tensor(-0.0692, dtype=torch.float64)), (223, tensor(-0.0692, dtype=torch.float64)), (1070, tensor(-0.0688, dtype=torch.float64)), (1134, tensor(-0.0688, dtype=torch.float64)), (2022, tensor(-0.0685, dtype=torch.float64)), (983, tensor(-0.0685, dtype=torch.float64)), (950, tensor(-0.0684, dtype=torch.float64)), (134, tensor(-0.0683, dtype=torch.float64)), (1536, tensor(-0.0679, dtype=torch.float64)), (863, tensor(-0.0678, dtype=torch.float64)), (1842, tensor(-0.0677, dtype=torch.float64)), (170, tensor(-0.0677, dtype=torch.float64)), (2296, tensor(-0.0676, dtype=torch.float64)), (1451, tensor(-0.0674, dtype=torch.float64)), (1222, tensor(-0.0673, dtype=torch.float64)), (1177, tensor(-0.0672, dtype=torch.float64)), (2409, tensor(-0.0671, dtype=torch.float64)), (1089, tensor(-0.0669, dtype=torch.float64)), (128, tensor(-0.0669, dtype=torch.float64)), (295, tensor(-0.0667, dtype=torch.float64)), (2268, tensor(-0.0666, dtype=torch.float64)), (1582, tensor(-0.0664, dtype=torch.float64)), (360, tensor(-0.0664, dtype=torch.float64)), (964, tensor(-0.0661, dtype=torch.float64)), (1147, tensor(-0.0660, dtype=torch.float64)), (1736, tensor(-0.0658, dtype=torch.float64)), (1916, tensor(-0.0658, dtype=torch.float64)), (2574, tensor(-0.0656, dtype=torch.float64)), (1472, tensor(-0.0656, dtype=torch.float64)), (2701, tensor(-0.0656, dtype=torch.float64)), (2520, tensor(-0.0655, dtype=torch.float64)), (2142, tensor(-0.0654, dtype=torch.float64)), (2650, tensor(-0.0653, dtype=torch.float64)), (574, tensor(-0.0653, dtype=torch.float64)), (235, tensor(-0.0653, dtype=torch.float64)), (2451, tensor(-0.0652, dtype=torch.float64)), (2468, tensor(-0.0652, dtype=torch.float64)), (708, tensor(-0.0651, dtype=torch.float64)), (2412, tensor(-0.0651, dtype=torch.float64)), (611, tensor(-0.0651, dtype=torch.float64)), (1159, tensor(-0.0651, dtype=torch.float64)), (1862, tensor(-0.0650, dtype=torch.float64)), (1683, tensor(-0.0650, dtype=torch.float64)), (2038, tensor(-0.0649, dtype=torch.float64)), (219, tensor(-0.0648, dtype=torch.float64)), (2541, tensor(-0.0647, dtype=torch.float64)), (2002, tensor(-0.0646, dtype=torch.float64)), (1259, tensor(-0.0645, dtype=torch.float64)), (906, tensor(-0.0644, dtype=torch.float64)), (709, tensor(-0.0644, dtype=torch.float64)), (1817, tensor(-0.0643, dtype=torch.float64)), (2739, tensor(-0.0643, dtype=torch.float64)), (1481, tensor(-0.0642, dtype=torch.float64)), (1865, tensor(-0.0642, dtype=torch.float64)), (2482, tensor(-0.0641, dtype=torch.float64)), (1559, tensor(-0.0640, dtype=torch.float64)), (1228, tensor(-0.0639, dtype=torch.float64)), (974, tensor(-0.0639, dtype=torch.float64)), (1050, tensor(-0.0638, dtype=torch.float64)), (2712, tensor(-0.0637, dtype=torch.float64)), (1639, tensor(-0.0636, dtype=torch.float64)), (132, tensor(-0.0636, dtype=torch.float64)), (495, tensor(-0.0635, dtype=torch.float64)), (1373, tensor(-0.0635, dtype=torch.float64)), (744, tensor(-0.0634, dtype=torch.float64)), (538, tensor(-0.0632, dtype=torch.float64)), (186, tensor(-0.0631, dtype=torch.float64)), (837, tensor(-0.0630, dtype=torch.float64)), (1061, tensor(-0.0629, dtype=torch.float64)), (1608, tensor(-0.0627, dtype=torch.float64)), (389, tensor(-0.0623, dtype=torch.float64)), (899, tensor(-0.0622, dtype=torch.float64)), (2621, tensor(-0.0621, dtype=torch.float64)), (810, tensor(-0.0621, dtype=torch.float64)), (2578, tensor(-0.0620, dtype=torch.float64)), (349, tensor(-0.0620, dtype=torch.float64)), (1103, tensor(-0.0618, dtype=torch.float64)), (825, tensor(-0.0618, dtype=torch.float64)), (2323, tensor(-0.0617, dtype=torch.float64)), (768, tensor(-0.0617, dtype=torch.float64)), (2123, tensor(-0.0615, dtype=torch.float64)), (2255, tensor(-0.0614, dtype=torch.float64)), (2335, tensor(-0.0613, dtype=torch.float64)), (1664, tensor(-0.0613, dtype=torch.float64)), (681, tensor(-0.0612, dtype=torch.float64)), (2495, tensor(-0.0612, dtype=torch.float64)), (380, tensor(-0.0611, dtype=torch.float64)), (340, tensor(-0.0611, dtype=torch.float64)), (1199, tensor(-0.0611, dtype=torch.float64)), (16, tensor(-0.0611, dtype=torch.float64)), (2639, tensor(-0.0611, dtype=torch.float64)), (1281, tensor(-0.0611, dtype=torch.float64)), (144, tensor(-0.0610, dtype=torch.float64)), (1448, tensor(-0.0610, dtype=torch.float64)), (2342, tensor(-0.0610, dtype=torch.float64)), (456, tensor(-0.0609, dtype=torch.float64)), (78, tensor(-0.0608, dtype=torch.float64)), (442, tensor(-0.0608, dtype=torch.float64)), (924, tensor(-0.0607, dtype=torch.float64)), (2371, tensor(-0.0606, dtype=torch.float64)), (58, tensor(-0.0605, dtype=torch.float64)), (2491, tensor(-0.0604, dtype=torch.float64)), (1921, tensor(-0.0604, dtype=torch.float64)), (2442, tensor(-0.0604, dtype=torch.float64)), (459, tensor(-0.0603, dtype=torch.float64)), (1933, tensor(-0.0602, dtype=torch.float64)), (2331, tensor(-0.0602, dtype=torch.float64)), (2456, tensor(-0.0602, dtype=torch.float64)), (813, tensor(-0.0602, dtype=torch.float64)), (742, tensor(-0.0602, dtype=torch.float64)), (298, tensor(-0.0601, dtype=torch.float64)), (1786, tensor(-0.0600, dtype=torch.float64)), (1850, tensor(-0.0599, dtype=torch.float64)), (573, tensor(-0.0598, dtype=torch.float64)), (716, tensor(-0.0596, dtype=torch.float64)), (222, tensor(-0.0595, dtype=torch.float64)), (1618, tensor(-0.0594, dtype=torch.float64)), (549, tensor(-0.0594, dtype=torch.float64)), (308, tensor(-0.0594, dtype=torch.float64)), (201, tensor(-0.0594, dtype=torch.float64)), (1057, tensor(-0.0594, dtype=torch.float64)), (2318, tensor(-0.0594, dtype=torch.float64)), (1100, tensor(-0.0593, dtype=torch.float64)), (864, tensor(-0.0593, dtype=torch.float64)), (2600, tensor(-0.0593, dtype=torch.float64)), (2462, tensor(-0.0591, dtype=torch.float64)), (667, tensor(-0.0591, dtype=torch.float64)), (535, tensor(-0.0590, dtype=torch.float64)), (1077, tensor(-0.0590, dtype=torch.float64)), (521, tensor(-0.0589, dtype=torch.float64)), (598, tensor(-0.0588, dtype=torch.float64)), (1882, tensor(-0.0588, dtype=torch.float64)), (985, tensor(-0.0588, dtype=torch.float64)), (1190, tensor(-0.0588, dtype=torch.float64)), (2700, tensor(-0.0588, dtype=torch.float64)), (2139, tensor(-0.0585, dtype=torch.float64)), (1768, tensor(-0.0585, dtype=torch.float64)), (630, tensor(-0.0585, dtype=torch.float64)), (138, tensor(-0.0584, dtype=torch.float64)), (197, tensor(-0.0584, dtype=torch.float64)), (2637, tensor(-0.0582, dtype=torch.float64)), (718, tensor(-0.0582, dtype=torch.float64)), (2551, tensor(-0.0581, dtype=torch.float64)), (2601, tensor(-0.0580, dtype=torch.float64)), (707, tensor(-0.0580, dtype=torch.float64)), (1138, tensor(-0.0580, dtype=torch.float64)), (1135, tensor(-0.0579, dtype=torch.float64)), (1436, tensor(-0.0579, dtype=torch.float64)), (1747, tensor(-0.0578, dtype=torch.float64)), (763, tensor(-0.0578, dtype=torch.float64)), (1911, tensor(-0.0576, dtype=torch.float64)), (2362, tensor(-0.0575, dtype=torch.float64)), (609, tensor(-0.0575, dtype=torch.float64)), (2175, tensor(-0.0574, dtype=torch.float64)), (1771, tensor(-0.0574, dtype=torch.float64)), (1468, tensor(-0.0574, dtype=torch.float64)), (450, tensor(-0.0573, dtype=torch.float64)), (1279, tensor(-0.0573, dtype=torch.float64)), (469, tensor(-0.0571, dtype=torch.float64)), (1936, tensor(-0.0571, dtype=torch.float64)), (1473, tensor(-0.0571, dtype=torch.float64)), (722, tensor(-0.0570, dtype=torch.float64)), (86, tensor(-0.0570, dtype=torch.float64)), (1699, tensor(-0.0569, dtype=torch.float64)), (2566, tensor(-0.0569, dtype=torch.float64)), (1578, tensor(-0.0568, dtype=torch.float64)), (2646, tensor(-0.0568, dtype=torch.float64)), (1811, tensor(-0.0568, dtype=torch.float64)), (496, tensor(-0.0567, dtype=torch.float64)), (453, tensor(-0.0566, dtype=torch.float64)), (2677, tensor(-0.0566, dtype=torch.float64)), (1529, tensor(-0.0566, dtype=torch.float64)), (2675, tensor(-0.0565, dtype=torch.float64)), (324, tensor(-0.0563, dtype=torch.float64)), (1596, tensor(-0.0562, dtype=torch.float64)), (2460, tensor(-0.0562, dtype=torch.float64)), (1136, tensor(-0.0562, dtype=torch.float64)), (705, tensor(-0.0561, dtype=torch.float64)), (1671, tensor(-0.0561, dtype=torch.float64)), (2595, tensor(-0.0560, dtype=torch.float64)), (478, tensor(-0.0560, dtype=torch.float64)), (900, tensor(-0.0559, dtype=torch.float64)), (1888, tensor(-0.0559, dtype=torch.float64)), (1946, tensor(-0.0558, dtype=torch.float64)), (1172, tensor(-0.0558, dtype=torch.float64)), (2124, tensor(-0.0558, dtype=torch.float64)), (2736, tensor(-0.0557, dtype=torch.float64)), (2240, tensor(-0.0557, dtype=torch.float64)), (1167, tensor(-0.0557, dtype=torch.float64)), (2576, tensor(-0.0557, dtype=torch.float64)), (1274, tensor(-0.0556, dtype=torch.float64)), (1277, tensor(-0.0556, dtype=torch.float64)), (1909, tensor(-0.0555, dtype=torch.float64)), (1300, tensor(-0.0555, dtype=torch.float64)), (2181, tensor(-0.0555, dtype=torch.float64)), (2737, tensor(-0.0555, dtype=torch.float64)), (553, tensor(-0.0554, dtype=torch.float64)), (293, tensor(-0.0554, dtype=torch.float64)), (1327, tensor(-0.0552, dtype=torch.float64)), (1465, tensor(-0.0551, dtype=torch.float64)), (2438, tensor(-0.0549, dtype=torch.float64)), (2356, tensor(-0.0548, dtype=torch.float64)), (920, tensor(-0.0548, dtype=torch.float64)), (1825, tensor(-0.0548, dtype=torch.float64)), (175, tensor(-0.0548, dtype=torch.float64)), (2165, tensor(-0.0548, dtype=torch.float64)), (2726, tensor(-0.0547, dtype=torch.float64)), (1375, tensor(-0.0546, dtype=torch.float64)), (2432, tensor(-0.0545, dtype=torch.float64)), (1952, tensor(-0.0545, dtype=torch.float64)), (1302, tensor(-0.0545, dtype=torch.float64)), (879, tensor(-0.0544, dtype=torch.float64)), (263, tensor(-0.0544, dtype=torch.float64)), (1168, tensor(-0.0543, dtype=torch.float64)), (1185, tensor(-0.0543, dtype=torch.float64)), (927, tensor(-0.0543, dtype=torch.float64)), (1432, tensor(-0.0542, dtype=torch.float64)), (646, tensor(-0.0541, dtype=torch.float64)), (736, tensor(-0.0540, dtype=torch.float64)), (77, tensor(-0.0540, dtype=torch.float64)), (2536, tensor(-0.0539, dtype=torch.float64)), (1708, tensor(-0.0538, dtype=torch.float64)), (2567, tensor(-0.0537, dtype=torch.float64)), (1690, tensor(-0.0536, dtype=torch.float64)), (1004, tensor(-0.0536, dtype=torch.float64)), (2623, tensor(-0.0535, dtype=torch.float64)), (811, tensor(-0.0535, dtype=torch.float64)), (1153, tensor(-0.0535, dtype=torch.float64)), (2118, tensor(-0.0535, dtype=torch.float64)), (1831, tensor(-0.0533, dtype=torch.float64)), (320, tensor(-0.0533, dtype=torch.float64)), (127, tensor(-0.0533, dtype=torch.float64)), (1469, tensor(-0.0532, dtype=torch.float64)), (1203, tensor(-0.0531, dtype=torch.float64)), (2238, tensor(-0.0531, dtype=torch.float64)), (720, tensor(-0.0531, dtype=torch.float64)), (1610, tensor(-0.0531, dtype=torch.float64)), (698, tensor(-0.0531, dtype=torch.float64)), (1235, tensor(-0.0531, dtype=torch.float64)), (986, tensor(-0.0530, dtype=torch.float64)), (1897, tensor(-0.0530, dtype=torch.float64)), (2441, tensor(-0.0530, dtype=torch.float64)), (19, tensor(-0.0529, dtype=torch.float64)), (1205, tensor(-0.0528, dtype=torch.float64)), (1260, tensor(-0.0528, dtype=torch.float64)), (1296, tensor(-0.0528, dtype=torch.float64)), (935, tensor(-0.0528, dtype=torch.float64)), (1333, tensor(-0.0527, dtype=torch.float64)), (943, tensor(-0.0527, dtype=torch.float64)), (378, tensor(-0.0526, dtype=torch.float64)), (2395, tensor(-0.0525, dtype=torch.float64)), (2416, tensor(-0.0524, dtype=torch.float64)), (513, tensor(-0.0524, dtype=torch.float64)), (430, tensor(-0.0523, dtype=torch.float64)), (1216, tensor(-0.0522, dtype=torch.float64)), (1200, tensor(-0.0521, dtype=torch.float64)), (1523, tensor(-0.0521, dtype=torch.float64)), (1318, tensor(-0.0520, dtype=torch.float64)), (2352, tensor(-0.0519, dtype=torch.float64)), (1681, tensor(-0.0519, dtype=torch.float64)), (2697, tensor(-0.0519, dtype=torch.float64)), (1826, tensor(-0.0519, dtype=torch.float64)), (1295, tensor(-0.0518, dtype=torch.float64)), (455, tensor(-0.0518, dtype=torch.float64)), (2376, tensor(-0.0517, dtype=torch.float64)), (2596, tensor(-0.0516, dtype=torch.float64)), (1696, tensor(-0.0514, dtype=torch.float64)), (245, tensor(-0.0514, dtype=torch.float64)), (1871, tensor(-0.0514, dtype=torch.float64)), (2711, tensor(-0.0513, dtype=torch.float64)), (2422, tensor(-0.0513, dtype=torch.float64)), (1957, tensor(-0.0512, dtype=torch.float64)), (897, tensor(-0.0512, dtype=torch.float64)), (1007, tensor(-0.0511, dtype=torch.float64)), (1426, tensor(-0.0511, dtype=torch.float64)), (1161, tensor(-0.0511, dtype=torch.float64)), (2049, tensor(-0.0510, dtype=torch.float64)), (2236, tensor(-0.0510, dtype=torch.float64)), (1423, tensor(-0.0510, dtype=torch.float64)), (649, tensor(-0.0509, dtype=torch.float64)), (2403, tensor(-0.0509, dtype=torch.float64)), (1243, tensor(-0.0509, dtype=torch.float64)), (2598, tensor(-0.0508, dtype=torch.float64)), (2314, tensor(-0.0507, dtype=torch.float64)), (861, tensor(-0.0507, dtype=torch.float64)), (2602, tensor(-0.0507, dtype=torch.float64)), (1657, tensor(-0.0506, dtype=torch.float64)), (309, tensor(-0.0505, dtype=torch.float64)), (1111, tensor(-0.0505, dtype=torch.float64)), (2467, tensor(-0.0504, dtype=torch.float64)), (1781, tensor(-0.0503, dtype=torch.float64)), (588, tensor(-0.0503, dtype=torch.float64)), (1833, tensor(-0.0503, dtype=torch.float64)), (1780, tensor(-0.0503, dtype=torch.float64)), (2127, tensor(-0.0502, dtype=torch.float64)), (1379, tensor(-0.0502, dtype=torch.float64)), (1194, tensor(-0.0501, dtype=torch.float64)), (760, tensor(-0.0499, dtype=torch.float64)), (2232, tensor(-0.0499, dtype=torch.float64)), (1245, tensor(-0.0499, dtype=torch.float64)), (595, tensor(-0.0499, dtype=torch.float64)), (1772, tensor(-0.0499, dtype=torch.float64)), (1659, tensor(-0.0498, dtype=torch.float64)), (647, tensor(-0.0498, dtype=torch.float64)), (945, tensor(-0.0498, dtype=torch.float64)), (70, tensor(-0.0496, dtype=torch.float64)), (2594, tensor(-0.0496, dtype=torch.float64)), (2652, tensor(-0.0496, dtype=torch.float64)), (1971, tensor(-0.0496, dtype=torch.float64)), (2641, tensor(-0.0496, dtype=torch.float64)), (1980, tensor(-0.0495, dtype=torch.float64)), (486, tensor(-0.0493, dtype=torch.float64)), (1984, tensor(-0.0493, dtype=torch.float64)), (2089, tensor(-0.0492, dtype=torch.float64)), (526, tensor(-0.0492, dtype=torch.float64)), (1630, tensor(-0.0491, dtype=torch.float64)), (2420, tensor(-0.0490, dtype=torch.float64)), (104, tensor(-0.0490, dtype=torch.float64)), (1336, tensor(-0.0490, dtype=torch.float64)), (7, tensor(-0.0490, dtype=torch.float64)), (2411, tensor(-0.0489, dtype=torch.float64)), (2305, tensor(-0.0489, dtype=torch.float64)), (2126, tensor(-0.0489, dtype=torch.float64)), (520, tensor(-0.0488, dtype=torch.float64)), (1188, tensor(-0.0488, dtype=torch.float64)), (2101, tensor(-0.0487, dtype=torch.float64)), (695, tensor(-0.0487, dtype=torch.float64)), (717, tensor(-0.0487, dtype=torch.float64)), (2662, tensor(-0.0485, dtype=torch.float64)), (841, tensor(-0.0485, dtype=torch.float64)), (1218, tensor(-0.0485, dtype=torch.float64)), (1998, tensor(-0.0485, dtype=torch.float64)), (713, tensor(-0.0484, dtype=torch.float64)), (1770, tensor(-0.0483, dtype=torch.float64)), (480, tensor(-0.0483, dtype=torch.float64)), (1079, tensor(-0.0482, dtype=torch.float64)), (2155, tensor(-0.0482, dtype=torch.float64)), (874, tensor(-0.0481, dtype=torch.float64)), (24, tensor(-0.0480, dtype=torch.float64)), (2133, tensor(-0.0479, dtype=torch.float64)), (1761, tensor(-0.0479, dtype=torch.float64)), (2695, tensor(-0.0478, dtype=torch.float64)), (1923, tensor(-0.0478, dtype=torch.float64)), (1071, tensor(-0.0477, dtype=torch.float64)), (405, tensor(-0.0477, dtype=torch.float64)), (1891, tensor(-0.0476, dtype=torch.float64)), (1832, tensor(-0.0476, dtype=torch.float64)), (2153, tensor(-0.0475, dtype=torch.float64)), (454, tensor(-0.0474, dtype=torch.float64)), (781, tensor(-0.0474, dtype=torch.float64)), (2421, tensor(-0.0473, dtype=torch.float64)), (2066, tensor(-0.0472, dtype=torch.float64)), (1667, tensor(-0.0471, dtype=torch.float64)), (27, tensor(-0.0471, dtype=torch.float64)), (2455, tensor(-0.0471, dtype=torch.float64)), (136, tensor(-0.0471, dtype=torch.float64)), (2445, tensor(-0.0471, dtype=torch.float64)), (2347, tensor(-0.0470, dtype=torch.float64)), (1055, tensor(-0.0470, dtype=torch.float64)), (1878, tensor(-0.0470, dtype=torch.float64)), (685, tensor(-0.0470, dtype=torch.float64)), (1303, tensor(-0.0469, dtype=torch.float64)), (2524, tensor(-0.0469, dtype=torch.float64)), (508, tensor(-0.0469, dtype=torch.float64)), (1749, tensor(-0.0469, dtype=torch.float64)), (1913, tensor(-0.0468, dtype=torch.float64)), (292, tensor(-0.0467, dtype=torch.float64)), (501, tensor(-0.0467, dtype=torch.float64)), (367, tensor(-0.0467, dtype=torch.float64)), (822, tensor(-0.0466, dtype=torch.float64)), (1367, tensor(-0.0466, dtype=torch.float64)), (2475, tensor(-0.0465, dtype=torch.float64)), (1121, tensor(-0.0465, dtype=torch.float64)), (2605, tensor(-0.0465, dtype=torch.float64)), (2719, tensor(-0.0465, dtype=torch.float64)), (1087, tensor(-0.0464, dtype=torch.float64)), (1208, tensor(-0.0464, dtype=torch.float64)), (1315, tensor(-0.0463, dtype=torch.float64)), (676, tensor(-0.0463, dtype=torch.float64)), (491, tensor(-0.0463, dtype=torch.float64)), (21, tensor(-0.0463, dtype=torch.float64)), (1737, tensor(-0.0462, dtype=torch.float64)), (921, tensor(-0.0462, dtype=torch.float64)), (1381, tensor(-0.0462, dtype=torch.float64)), (905, tensor(-0.0461, dtype=torch.float64)), (1283, tensor(-0.0459, dtype=torch.float64)), (92, tensor(-0.0459, dtype=torch.float64)), (2253, tensor(-0.0459, dtype=torch.float64)), (356, tensor(-0.0459, dtype=torch.float64)), (1482, tensor(-0.0458, dtype=torch.float64)), (2511, tensor(-0.0457, dtype=torch.float64)), (1649, tensor(-0.0456, dtype=torch.float64)), (1171, tensor(-0.0454, dtype=torch.float64)), (1520, tensor(-0.0454, dtype=torch.float64)), (641, tensor(-0.0453, dtype=torch.float64)), (1475, tensor(-0.0453, dtype=torch.float64)), (1271, tensor(-0.0452, dtype=torch.float64)), (1892, tensor(-0.0452, dtype=torch.float64)), (1962, tensor(-0.0452, dtype=torch.float64)), (1597, tensor(-0.0451, dtype=torch.float64)), (2464, tensor(-0.0451, dtype=torch.float64)), (967, tensor(-0.0451, dtype=torch.float64)), (2611, tensor(-0.0451, dtype=torch.float64)), (354, tensor(-0.0450, dtype=torch.float64)), (17, tensor(-0.0449, dtype=torch.float64)), (991, tensor(-0.0449, dtype=torch.float64)), (1558, tensor(-0.0448, dtype=torch.float64)), (13, tensor(-0.0448, dtype=torch.float64)), (913, tensor(-0.0448, dtype=torch.float64)), (2633, tensor(-0.0447, dtype=torch.float64)), (2143, tensor(-0.0447, dtype=torch.float64)), (2592, tensor(-0.0447, dtype=torch.float64)), (2088, tensor(-0.0447, dtype=torch.float64)), (1291, tensor(-0.0446, dtype=torch.float64)), (2004, tensor(-0.0446, dtype=torch.float64)), (2354, tensor(-0.0446, dtype=torch.float64)), (914, tensor(-0.0446, dtype=torch.float64)), (2104, tensor(-0.0445, dtype=torch.float64)), (670, tensor(-0.0444, dtype=torch.float64)), (2575, tensor(-0.0444, dtype=torch.float64)), (195, tensor(-0.0444, dtype=torch.float64)), (2433, tensor(-0.0443, dtype=torch.float64)), (313, tensor(-0.0443, dtype=torch.float64)), (893, tensor(-0.0442, dtype=torch.float64)), (2545, tensor(-0.0442, dtype=torch.float64)), (1231, tensor(-0.0441, dtype=torch.float64)), (55, tensor(-0.0441, dtype=torch.float64)), (312, tensor(-0.0441, dtype=torch.float64)), (1633, tensor(-0.0440, dtype=torch.float64)), (677, tensor(-0.0440, dtype=torch.float64)), (1619, tensor(-0.0440, dtype=torch.float64)), (2648, tensor(-0.0439, dtype=torch.float64)), (1710, tensor(-0.0439, dtype=torch.float64)), (1641, tensor(-0.0439, dtype=torch.float64)), (2470, tensor(-0.0439, dtype=torch.float64)), (896, tensor(-0.0438, dtype=torch.float64)), (581, tensor(-0.0438, dtype=torch.float64)), (2265, tensor(-0.0438, dtype=torch.float64)), (2640, tensor(-0.0437, dtype=torch.float64)), (515, tensor(-0.0437, dtype=torch.float64)), (1524, tensor(-0.0437, dtype=torch.float64)), (1389, tensor(-0.0437, dtype=torch.float64)), (1456, tensor(-0.0437, dtype=torch.float64)), (1967, tensor(-0.0436, dtype=torch.float64)), (2718, tensor(-0.0436, dtype=torch.float64)), (1663, tensor(-0.0436, dtype=torch.float64)), (968, tensor(-0.0435, dtype=torch.float64)), (1723, tensor(-0.0434, dtype=torch.float64)), (2047, tensor(-0.0434, dtype=torch.float64)), (1999, tensor(-0.0433, dtype=torch.float64)), (284, tensor(-0.0432, dtype=torch.float64)), (1805, tensor(-0.0432, dtype=torch.float64)), (482, tensor(-0.0431, dtype=torch.float64)), (1154, tensor(-0.0431, dtype=torch.float64)), (1620, tensor(-0.0431, dtype=torch.float64)), (757, tensor(-0.0431, dtype=torch.float64)), (242, tensor(-0.0431, dtype=torch.float64)), (2068, tensor(-0.0430, dtype=torch.float64)), (2160, tensor(-0.0430, dtype=torch.float64)), (856, tensor(-0.0429, dtype=torch.float64)), (582, tensor(-0.0428, dtype=torch.float64)), (1841, tensor(-0.0428, dtype=torch.float64)), (1349, tensor(-0.0427, dtype=torch.float64)), (839, tensor(-0.0427, dtype=torch.float64)), (317, tensor(-0.0425, dtype=torch.float64)), (249, tensor(-0.0425, dtype=torch.float64)), (2384, tensor(-0.0424, dtype=torch.float64)), (1802, tensor(-0.0424, dtype=torch.float64)), (473, tensor(-0.0423, dtype=torch.float64)), (2481, tensor(-0.0423, dtype=torch.float64)), (2040, tensor(-0.0422, dtype=torch.float64)), (372, tensor(-0.0421, dtype=torch.float64)), (1587, tensor(-0.0420, dtype=torch.float64)), (880, tensor(-0.0420, dtype=torch.float64)), (489, tensor(-0.0419, dtype=torch.float64)), (1467, tensor(-0.0419, dtype=torch.float64)), (163, tensor(-0.0419, dtype=torch.float64)), (1459, tensor(-0.0419, dtype=torch.float64)), (1556, tensor(-0.0418, dtype=torch.float64)), (1458, tensor(-0.0417, dtype=torch.float64)), (181, tensor(-0.0417, dtype=torch.float64)), (121, tensor(-0.0417, dtype=torch.float64)), (62, tensor(-0.0416, dtype=torch.float64)), (2483, tensor(-0.0415, dtype=torch.float64)), (1032, tensor(-0.0415, dtype=torch.float64)), (30, tensor(-0.0414, dtype=torch.float64)), (429, tensor(-0.0414, dtype=torch.float64)), (1347, tensor(-0.0413, dtype=torch.float64)), (1702, tensor(-0.0413, dtype=torch.float64)), (1165, tensor(-0.0413, dtype=torch.float64)), (941, tensor(-0.0412, dtype=torch.float64)), (1442, tensor(-0.0412, dtype=torch.float64)), (472, tensor(-0.0412, dtype=torch.float64)), (2473, tensor(-0.0411, dtype=torch.float64)), (2229, tensor(-0.0411, dtype=torch.float64)), (1722, tensor(-0.0411, dtype=torch.float64)), (410, tensor(-0.0411, dtype=torch.float64)), (1361, tensor(-0.0411, dtype=torch.float64)), (1720, tensor(-0.0410, dtype=torch.float64)), (220, tensor(-0.0410, dtype=torch.float64)), (1576, tensor(-0.0409, dtype=torch.float64)), (1670, tensor(-0.0409, dtype=torch.float64)), (2493, tensor(-0.0408, dtype=torch.float64)), (2030, tensor(-0.0408, dtype=torch.float64)), (2428, tensor(-0.0408, dtype=torch.float64)), (1202, tensor(-0.0407, dtype=torch.float64)), (97, tensor(-0.0407, dtype=torch.float64)), (886, tensor(-0.0407, dtype=torch.float64)), (2663, tensor(-0.0407, dtype=torch.float64)), (1049, tensor(-0.0406, dtype=torch.float64)), (1031, tensor(-0.0406, dtype=torch.float64)), (1787, tensor(-0.0405, dtype=torch.float64)), (218, tensor(-0.0405, dtype=torch.float64)), (2514, tensor(-0.0404, dtype=torch.float64)), (1939, tensor(-0.0404, dtype=torch.float64)), (1012, tensor(-0.0404, dtype=torch.float64)), (753, tensor(-0.0403, dtype=torch.float64)), (539, tensor(-0.0403, dtype=torch.float64)), (412, tensor(-0.0403, dtype=torch.float64)), (133, tensor(-0.0402, dtype=torch.float64)), (938, tensor(-0.0402, dtype=torch.float64)), (1082, tensor(-0.0401, dtype=torch.float64)), (993, tensor(-0.0401, dtype=torch.float64)), (711, tensor(-0.0401, dtype=torch.float64)), (2723, tensor(-0.0401, dtype=torch.float64)), (216, tensor(-0.0400, dtype=torch.float64)), (323, tensor(-0.0400, dtype=torch.float64)), (2679, tensor(-0.0400, dtype=torch.float64)), (1638, tensor(-0.0400, dtype=torch.float64)), (2150, tensor(-0.0400, dtype=torch.float64)), (2063, tensor(-0.0399, dtype=torch.float64)), (766, tensor(-0.0399, dtype=torch.float64)), (2571, tensor(-0.0398, dtype=torch.float64)), (2216, tensor(-0.0397, dtype=torch.float64)), (2026, tensor(-0.0397, dtype=torch.float64)), (1555, tensor(-0.0397, dtype=torch.float64)), (2256, tensor(-0.0397, dtype=torch.float64)), (1003, tensor(-0.0396, dtype=torch.float64)), (1439, tensor(-0.0396, dtype=torch.float64)), (2332, tensor(-0.0396, dtype=torch.float64)), (992, tensor(-0.0396, dtype=torch.float64)), (1144, tensor(-0.0396, dtype=torch.float64)), (2383, tensor(-0.0396, dtype=torch.float64)), (59, tensor(-0.0395, dtype=torch.float64)), (2480, tensor(-0.0395, dtype=torch.float64)), (908, tensor(-0.0395, dtype=torch.float64)), (1496, tensor(-0.0394, dtype=torch.float64)), (483, tensor(-0.0394, dtype=torch.float64)), (1360, tensor(-0.0393, dtype=torch.float64)), (1674, tensor(-0.0393, dtype=torch.float64)), (1810, tensor(-0.0392, dtype=torch.float64)), (1290, tensor(-0.0391, dtype=torch.float64)), (470, tensor(-0.0391, dtype=torch.float64)), (788, tensor(-0.0390, dtype=torch.float64)), (421, tensor(-0.0389, dtype=torch.float64)), (1682, tensor(-0.0389, dtype=torch.float64)), (2454, tensor(-0.0389, dtype=torch.float64)), (445, tensor(-0.0389, dtype=torch.float64)), (1677, tensor(-0.0388, dtype=torch.float64)), (776, tensor(-0.0388, dtype=torch.float64)), (777, tensor(-0.0388, dtype=torch.float64)), (1157, tensor(-0.0387, dtype=torch.float64)), (1996, tensor(-0.0387, dtype=torch.float64)), (1449, tensor(-0.0387, dtype=torch.float64)), (2615, tensor(-0.0386, dtype=torch.float64)), (1236, tensor(-0.0385, dtype=torch.float64)), (2285, tensor(-0.0385, dtype=torch.float64)), (1764, tensor(-0.0384, dtype=torch.float64)), (1714, tensor(-0.0384, dtype=torch.float64)), (2008, tensor(-0.0384, dtype=torch.float64)), (428, tensor(-0.0383, dtype=torch.float64)), (2535, tensor(-0.0383, dtype=torch.float64)), (1908, tensor(-0.0382, dtype=torch.float64)), (1672, tensor(-0.0382, dtype=torch.float64)), (1491, tensor(-0.0382, dtype=torch.float64)), (1997, tensor(-0.0382, dtype=torch.float64)), (2343, tensor(-0.0381, dtype=torch.float64)), (2346, tensor(-0.0381, dtype=torch.float64)), (419, tensor(-0.0380, dtype=torch.float64)), (1990, tensor(-0.0380, dtype=torch.float64)), (1322, tensor(-0.0379, dtype=torch.float64)), (1151, tensor(-0.0379, dtype=torch.float64)), (2478, tensor(-0.0379, dtype=torch.float64)), (178, tensor(-0.0379, dtype=torch.float64)), (28, tensor(-0.0379, dtype=torch.float64)), (644, tensor(-0.0378, dtype=torch.float64)), (471, tensor(-0.0377, dtype=torch.float64)), (922, tensor(-0.0376, dtype=torch.float64)), (2131, tensor(-0.0376, dtype=torch.float64)), (307, tensor(-0.0375, dtype=torch.float64)), (2570, tensor(-0.0374, dtype=torch.float64)), (1430, tensor(-0.0374, dtype=torch.float64)), (1445, tensor(-0.0374, dtype=torch.float64)), (1982, tensor(-0.0374, dtype=torch.float64)), (2271, tensor(-0.0373, dtype=torch.float64)), (2487, tensor(-0.0373, dtype=torch.float64)), (458, tensor(-0.0373, dtype=torch.float64)), (1278, tensor(-0.0372, dtype=torch.float64)), (259, tensor(-0.0372, dtype=torch.float64)), (2479, tensor(-0.0372, dtype=torch.float64)), (439, tensor(-0.0371, dtype=torch.float64)), (272, tensor(-0.0371, dtype=torch.float64)), (2398, tensor(-0.0371, dtype=torch.float64)), (1405, tensor(-0.0371, dtype=torch.float64)), (399, tensor(-0.0370, dtype=torch.float64)), (1384, tensor(-0.0370, dtype=torch.float64)), (614, tensor(-0.0370, dtype=torch.float64)), (683, tensor(-0.0370, dtype=torch.float64)), (1713, tensor(-0.0370, dtype=torch.float64)), (1286, tensor(-0.0369, dtype=torch.float64)), (541, tensor(-0.0369, dtype=torch.float64)), (2325, tensor(-0.0369, dtype=torch.float64)), (838, tensor(-0.0368, dtype=torch.float64)), (351, tensor(-0.0368, dtype=torch.float64)), (2341, tensor(-0.0368, dtype=torch.float64)), (1875, tensor(-0.0368, dtype=torch.float64)), (2191, tensor(-0.0368, dtype=torch.float64)), (2207, tensor(-0.0368, dtype=torch.float64)), (592, tensor(-0.0367, dtype=torch.float64)), (2449, tensor(-0.0367, dtype=torch.float64)), (851, tensor(-0.0367, dtype=torch.float64)), (2355, tensor(-0.0366, dtype=torch.float64)), (1334, tensor(-0.0366, dtype=torch.float64)), (2386, tensor(-0.0366, dtype=torch.float64)), (2211, tensor(-0.0366, dtype=torch.float64)), (679, tensor(-0.0366, dtype=torch.float64)), (2241, tensor(-0.0365, dtype=torch.float64)), (2426, tensor(-0.0363, dtype=torch.float64)), (261, tensor(-0.0363, dtype=torch.float64)), (1776, tensor(-0.0363, dtype=torch.float64)), (2724, tensor(-0.0363, dtype=torch.float64)), (2176, tensor(-0.0363, dtype=torch.float64)), (464, tensor(-0.0363, dtype=torch.float64)), (2593, tensor(-0.0363, dtype=torch.float64)), (1733, tensor(-0.0362, dtype=torch.float64)), (1495, tensor(-0.0362, dtype=torch.float64)), (2252, tensor(-0.0362, dtype=torch.float64)), (369, tensor(-0.0361, dtype=torch.float64)), (1133, tensor(-0.0361, dtype=torch.float64)), (558, tensor(-0.0361, dtype=torch.float64)), (1142, tensor(-0.0361, dtype=torch.float64)), (833, tensor(-0.0361, dtype=torch.float64)), (1242, tensor(-0.0360, dtype=torch.float64)), (2141, tensor(-0.0360, dtype=torch.float64)), (771, tensor(-0.0360, dtype=torch.float64)), (550, tensor(-0.0360, dtype=torch.float64)), (1023, tensor(-0.0359, dtype=torch.float64)), (2540, tensor(-0.0359, dtype=torch.float64)), (626, tensor(-0.0359, dtype=torch.float64)), (2447, tensor(-0.0359, dtype=torch.float64)), (826, tensor(-0.0359, dtype=torch.float64)), (617, tensor(-0.0358, dtype=torch.float64)), (2516, tensor(-0.0358, dtype=torch.float64)), (2740, tensor(-0.0358, dtype=torch.float64)), (1644, tensor(-0.0357, dtype=torch.float64)), (1651, tensor(-0.0356, dtype=torch.float64)), (665, tensor(-0.0356, dtype=torch.float64)), (1184, tensor(-0.0356, dtype=torch.float64)), (862, tensor(-0.0356, dtype=torch.float64)), (1853, tensor(-0.0356, dtype=torch.float64)), (182, tensor(-0.0355, dtype=torch.float64)), (1935, tensor(-0.0355, dtype=torch.float64)), (1340, tensor(-0.0355, dtype=torch.float64)), (1391, tensor(-0.0355, dtype=torch.float64)), (2627, tensor(-0.0355, dtype=torch.float64)), (2280, tensor(-0.0354, dtype=torch.float64)), (177, tensor(-0.0354, dtype=torch.float64)), (1351, tensor(-0.0353, dtype=torch.float64)), (1005, tensor(-0.0353, dtype=torch.float64)), (1883, tensor(-0.0352, dtype=torch.float64)), (1364, tensor(-0.0352, dtype=torch.float64)), (1353, tensor(-0.0352, dtype=torch.float64)), (1932, tensor(-0.0352, dtype=torch.float64)), (2671, tensor(-0.0351, dtype=torch.float64)), (1995, tensor(-0.0351, dtype=torch.float64)), (613, tensor(-0.0351, dtype=torch.float64)), (2156, tensor(-0.0351, dtype=torch.float64)), (1131, tensor(-0.0351, dtype=torch.float64)), (1535, tensor(-0.0351, dtype=torch.float64)), (1344, tensor(-0.0351, dtype=torch.float64)), (1575, tensor(-0.0350, dtype=torch.float64)), (1765, tensor(-0.0350, dtype=torch.float64)), (33, tensor(-0.0350, dtype=torch.float64)), (1757, tensor(-0.0350, dtype=torch.float64)), (1182, tensor(-0.0349, dtype=torch.float64)), (564, tensor(-0.0349, dtype=torch.float64)), (1528, tensor(-0.0349, dtype=torch.float64)), (1564, tensor(-0.0348, dtype=torch.float64)), (604, tensor(-0.0348, dtype=torch.float64)), (1584, tensor(-0.0348, dtype=torch.float64)), (1546, tensor(-0.0347, dtype=torch.float64)), (531, tensor(-0.0347, dtype=torch.float64)), (953, tensor(-0.0346, dtype=torch.float64)), (638, tensor(-0.0346, dtype=torch.float64)), (1693, tensor(-0.0346, dtype=torch.float64)), (2188, tensor(-0.0346, dtype=torch.float64)), (2110, tensor(-0.0345, dtype=torch.float64)), (258, tensor(-0.0344, dtype=torch.float64)), (364, tensor(-0.0344, dtype=torch.float64)), (2177, tensor(-0.0344, dtype=torch.float64)), (671, tensor(-0.0343, dtype=torch.float64)), (1416, tensor(-0.0343, dtype=torch.float64)), (828, tensor(-0.0342, dtype=torch.float64)), (57, tensor(-0.0342, dtype=torch.float64)), (793, tensor(-0.0342, dtype=torch.float64)), (48, tensor(-0.0342, dtype=torch.float64)), (260, tensor(-0.0341, dtype=torch.float64)), (69, tensor(-0.0340, dtype=torch.float64)), (2713, tensor(-0.0340, dtype=torch.float64)), (525, tensor(-0.0339, dtype=torch.float64)), (11, tensor(-0.0339, dtype=torch.float64)), (1487, tensor(-0.0339, dtype=torch.float64)), (2077, tensor(-0.0339, dtype=torch.float64)), (269, tensor(-0.0339, dtype=torch.float64)), (355, tensor(-0.0338, dtype=torch.float64)), (1924, tensor(-0.0338, dtype=torch.float64)), (2098, tensor(-0.0337, dtype=torch.float64)), (962, tensor(-0.0337, dtype=torch.float64)), (2264, tensor(-0.0337, dtype=torch.float64)), (1848, tensor(-0.0337, dtype=torch.float64)), (2733, tensor(-0.0337, dtype=torch.float64)), (1403, tensor(-0.0336, dtype=torch.float64)), (452, tensor(-0.0336, dtype=torch.float64)), (155, tensor(-0.0336, dtype=torch.float64)), (1762, tensor(-0.0336, dtype=torch.float64)), (1254, tensor(-0.0335, dtype=torch.float64)), (423, tensor(-0.0335, dtype=torch.float64)), (686, tensor(-0.0335, dtype=torch.float64)), (1348, tensor(-0.0335, dtype=torch.float64)), (2645, tensor(-0.0335, dtype=torch.float64)), (2512, tensor(-0.0335, dtype=torch.float64)), (407, tensor(-0.0334, dtype=torch.float64)), (255, tensor(-0.0334, dtype=torch.float64)), (1646, tensor(-0.0334, dtype=torch.float64)), (120, tensor(-0.0333, dtype=torch.float64)), (790, tensor(-0.0333, dtype=torch.float64)), (618, tensor(-0.0331, dtype=torch.float64)), (214, tensor(-0.0331, dtype=torch.float64)), (1107, tensor(-0.0331, dtype=torch.float64)), (827, tensor(-0.0331, dtype=torch.float64)), (2317, tensor(-0.0331, dtype=torch.float64)), (1030, tensor(-0.0331, dtype=torch.float64)), (1849, tensor(-0.0330, dtype=torch.float64)), (2106, tensor(-0.0330, dtype=torch.float64)), (43, tensor(-0.0329, dtype=torch.float64)), (769, tensor(-0.0328, dtype=torch.float64)), (1484, tensor(-0.0328, dtype=torch.float64)), (640, tensor(-0.0328, dtype=torch.float64)), (2273, tensor(-0.0327, dtype=torch.float64)), (1306, tensor(-0.0327, dtype=torch.float64)), (675, tensor(-0.0327, dtype=torch.float64)), (2295, tensor(-0.0327, dtype=torch.float64)), (1215, tensor(-0.0327, dtype=torch.float64)), (2201, tensor(-0.0326, dtype=torch.float64)), (2263, tensor(-0.0326, dtype=torch.float64)), (2699, tensor(-0.0326, dtype=torch.float64)), (2554, tensor(-0.0325, dtype=torch.float64)), (1609, tensor(-0.0325, dtype=torch.float64)), (2120, tensor(-0.0325, dtype=torch.float64)), (2058, tensor(-0.0325, dtype=torch.float64)), (1579, tensor(-0.0324, dtype=torch.float64)), (1497, tensor(-0.0323, dtype=torch.float64)), (1766, tensor(-0.0323, dtype=torch.float64)), (2159, tensor(-0.0323, dtype=torch.float64)), (465, tensor(-0.0322, dtype=torch.float64)), (1180, tensor(-0.0321, dtype=torch.float64)), (996, tensor(-0.0321, dtype=torch.float64)), (1130, tensor(-0.0321, dtype=torch.float64)), (1002, tensor(-0.0321, dtype=torch.float64)), (2369, tensor(-0.0321, dtype=torch.float64)), (2498, tensor(-0.0321, dtype=torch.float64)), (2448, tensor(-0.0320, dtype=torch.float64)), (907, tensor(-0.0318, dtype=torch.float64)), (1525, tensor(-0.0318, dtype=torch.float64)), (2709, tensor(-0.0318, dtype=torch.float64)), (674, tensor(-0.0317, dtype=torch.float64)), (984, tensor(-0.0317, dtype=torch.float64)), (1632, tensor(-0.0315, dtype=torch.float64)), (546, tensor(-0.0314, dtype=torch.float64)), (2, tensor(-0.0314, dtype=torch.float64)), (2183, tensor(-0.0314, dtype=torch.float64)), (286, tensor(-0.0314, dtype=torch.float64)), (1861, tensor(-0.0314, dtype=torch.float64)), (66, tensor(-0.0313, dtype=torch.float64)), (318, tensor(-0.0313, dtype=torch.float64)), (403, tensor(-0.0313, dtype=torch.float64)), (2370, tensor(-0.0313, dtype=torch.float64)), (497, tensor(-0.0313, dtype=torch.float64)), (529, tensor(-0.0313, dtype=torch.float64)), (1879, tensor(-0.0313, dtype=torch.float64)), (894, tensor(-0.0312, dtype=torch.float64)), (1359, tensor(-0.0311, dtype=torch.float64)), (2500, tensor(-0.0311, dtype=torch.float64)), (2311, tensor(-0.0311, dtype=torch.float64)), (285, tensor(-0.0311, dtype=torch.float64)), (1282, tensor(-0.0310, dtype=torch.float64)), (230, tensor(-0.0310, dtype=torch.float64)), (446, tensor(-0.0309, dtype=torch.float64)), (1418, tensor(-0.0309, dtype=torch.float64)), (2721, tensor(-0.0309, dtype=torch.float64)), (1101, tensor(-0.0308, dtype=torch.float64)), (1063, tensor(-0.0308, dtype=torch.float64)), (2315, tensor(-0.0308, dtype=torch.float64)), (1132, tensor(-0.0308, dtype=torch.float64)), (205, tensor(-0.0308, dtype=torch.float64)), (2012, tensor(-0.0308, dtype=torch.float64)), (1388, tensor(-0.0308, dtype=torch.float64)), (2086, tensor(-0.0308, dtype=torch.float64)), (2604, tensor(-0.0308, dtype=torch.float64)), (1324, tensor(-0.0307, dtype=torch.float64)), (866, tensor(-0.0307, dtype=torch.float64)), (1735, tensor(-0.0307, dtype=torch.float64)), (666, tensor(-0.0307, dtype=torch.float64)), (1616, tensor(-0.0307, dtype=torch.float64)), (977, tensor(-0.0307, dtype=torch.float64)), (980, tensor(-0.0306, dtype=torch.float64)), (1232, tensor(-0.0306, dtype=torch.float64)), (957, tensor(-0.0306, dtype=torch.float64)), (1066, tensor(-0.0305, dtype=torch.float64)), (1662, tensor(-0.0305, dtype=torch.float64)), (1225, tensor(-0.0305, dtype=torch.float64)), (362, tensor(-0.0305, dtype=torch.float64)), (1872, tensor(-0.0305, dtype=torch.float64)), (89, tensor(-0.0304, dtype=torch.float64)), (961, tensor(-0.0304, dtype=torch.float64)), (2292, tensor(-0.0304, dtype=torch.float64)), (2358, tensor(-0.0303, dtype=torch.float64)), (931, tensor(-0.0303, dtype=torch.float64)), (1950, tensor(-0.0302, dtype=torch.float64)), (2624, tensor(-0.0302, dtype=torch.float64)), (562, tensor(-0.0302, dtype=torch.float64)), (1446, tensor(-0.0302, dtype=torch.float64)), (559, tensor(-0.0301, dtype=torch.float64)), (1309, tensor(-0.0301, dtype=torch.float64)), (759, tensor(-0.0301, dtype=torch.float64)), (1530, tensor(-0.0300, dtype=torch.float64)), (1065, tensor(-0.0300, dtype=torch.float64)), (1903, tensor(-0.0300, dtype=torch.float64)), (1104, tensor(-0.0300, dtype=torch.float64)), (422, tensor(-0.0299, dtype=torch.float64)), (1204, tensor(-0.0299, dtype=torch.float64)), (1692, tensor(-0.0298, dtype=torch.float64)), (206, tensor(-0.0298, dtype=torch.float64)), (2655, tensor(-0.0298, dtype=torch.float64)), (2244, tensor(-0.0298, dtype=torch.float64)), (969, tensor(-0.0298, dtype=torch.float64)), (1778, tensor(-0.0297, dtype=torch.float64)), (2085, tensor(-0.0297, dtype=torch.float64)), (282, tensor(-0.0297, dtype=torch.float64)), (2045, tensor(-0.0297, dtype=torch.float64)), (1164, tensor(-0.0295, dtype=torch.float64)), (2060, tensor(-0.0294, dtype=torch.float64)), (844, tensor(-0.0294, dtype=torch.float64)), (831, tensor(-0.0294, dtype=torch.float64)), (836, tensor(-0.0294, dtype=torch.float64)), (1441, tensor(-0.0294, dtype=torch.float64)), (467, tensor(-0.0293, dtype=torch.float64)), (704, tensor(-0.0293, dtype=torch.float64)), (1239, tensor(-0.0293, dtype=torch.float64)), (948, tensor(-0.0291, dtype=torch.float64)), (441, tensor(-0.0291, dtype=torch.float64)), (256, tensor(-0.0291, dtype=torch.float64)), (1117, tensor(-0.0291, dtype=torch.float64)), (616, tensor(-0.0290, dtype=torch.float64)), (972, tensor(-0.0290, dtype=torch.float64)), (1511, tensor(-0.0290, dtype=torch.float64)), (2610, tensor(-0.0288, dtype=torch.float64)), (1895, tensor(-0.0288, dtype=torch.float64)), (2005, tensor(-0.0288, dtype=torch.float64)), (2237, tensor(-0.0288, dtype=torch.float64)), (2072, tensor(-0.0288, dtype=torch.float64)), (130, tensor(-0.0287, dtype=torch.float64)), (2198, tensor(-0.0287, dtype=torch.float64)), (162, tensor(-0.0286, dtype=torch.float64)), (2228, tensor(-0.0286, dtype=torch.float64)), (724, tensor(-0.0286, dtype=torch.float64)), (2579, tensor(-0.0286, dtype=torch.float64)), (122, tensor(-0.0285, dtype=torch.float64)), (2023, tensor(-0.0284, dtype=torch.float64)), (290, tensor(-0.0284, dtype=torch.float64)), (730, tensor(-0.0284, dtype=torch.float64)), (1494, tensor(-0.0284, dtype=torch.float64)), (2024, tensor(-0.0283, dtype=torch.float64)), (1593, tensor(-0.0283, dtype=torch.float64)), (2387, tensor(-0.0283, dtype=torch.float64)), (463, tensor(-0.0283, dtype=torch.float64)), (160, tensor(-0.0283, dtype=torch.float64)), (123, tensor(-0.0282, dtype=torch.float64)), (2423, tensor(-0.0281, dtype=torch.float64)), (2117, tensor(-0.0281, dtype=torch.float64)), (846, tensor(-0.0281, dtype=torch.float64)), (1565, tensor(-0.0281, dtype=torch.float64)), (1175, tensor(-0.0281, dtype=torch.float64)), (2297, tensor(-0.0281, dtype=torch.float64)), (958, tensor(-0.0280, dtype=torch.float64)), (2381, tensor(-0.0280, dtype=torch.float64)), (1726, tensor(-0.0280, dtype=torch.float64)), (1552, tensor(-0.0279, dtype=torch.float64)), (1112, tensor(-0.0279, dtype=torch.float64)), (139, tensor(-0.0279, dtype=torch.float64)), (253, tensor(-0.0279, dtype=torch.float64)), (560, tensor(-0.0279, dtype=torch.float64)), (1626, tensor(-0.0278, dtype=torch.float64)), (1307, tensor(-0.0277, dtype=torch.float64)), (2235, tensor(-0.0277, dtype=torch.float64)), (821, tensor(-0.0276, dtype=torch.float64)), (2388, tensor(-0.0276, dtype=torch.float64)), (1273, tensor(-0.0276, dtype=torch.float64)), (72, tensor(-0.0276, dtype=torch.float64)), (2591, tensor(-0.0276, dtype=torch.float64)), (656, tensor(-0.0276, dtype=torch.float64)), (2321, tensor(-0.0276, dtype=torch.float64)), (2224, tensor(-0.0275, dtype=torch.float64)), (1700, tensor(-0.0275, dtype=torch.float64)), (1408, tensor(-0.0275, dtype=torch.float64)), (2359, tensor(-0.0275, dtype=torch.float64)), (1186, tensor(-0.0274, dtype=torch.float64)), (1253, tensor(-0.0274, dtype=torch.float64)), (251, tensor(-0.0274, dtype=torch.float64)), (2568, tensor(-0.0273, dtype=torch.float64)), (1640, tensor(-0.0273, dtype=torch.float64)), (585, tensor(-0.0272, dtype=torch.float64)), (1178, tensor(-0.0272, dtype=torch.float64)), (869, tensor(-0.0272, dtype=torch.float64)), (2453, tensor(-0.0271, dtype=torch.float64)), (2164, tensor(-0.0271, dtype=torch.float64)), (750, tensor(-0.0271, dtype=torch.float64)), (373, tensor(-0.0270, dtype=torch.float64)), (1756, tensor(-0.0270, dtype=torch.float64)), (1533, tensor(-0.0270, dtype=torch.float64)), (2417, tensor(-0.0269, dtype=torch.float64)), (2006, tensor(-0.0269, dtype=torch.float64)), (1064, tensor(-0.0269, dtype=torch.float64)), (2647, tensor(-0.0269, dtype=torch.float64)), (1457, tensor(-0.0269, dtype=torch.float64)), (2257, tensor(-0.0268, dtype=torch.float64)), (2599, tensor(-0.0268, dtype=torch.float64)), (1047, tensor(-0.0268, dtype=torch.float64)), (2251, tensor(-0.0268, dtype=torch.float64)), (2399, tensor(-0.0268, dtype=torch.float64)), (352, tensor(-0.0267, dtype=torch.float64)), (257, tensor(-0.0267, dtype=torch.float64)), (346, tensor(-0.0267, dtype=torch.float64)), (116, tensor(-0.0267, dtype=torch.float64)), (2044, tensor(-0.0267, dtype=torch.float64)), (14, tensor(-0.0267, dtype=torch.float64)), (151, tensor(-0.0266, dtype=torch.float64)), (141, tensor(-0.0265, dtype=torch.float64)), (859, tensor(-0.0263, dtype=torch.float64)), (1189, tensor(-0.0263, dtype=torch.float64)), (739, tensor(-0.0263, dtype=torch.float64)), (184, tensor(-0.0263, dtype=torch.float64)), (2550, tensor(-0.0262, dtype=torch.float64)), (915, tensor(-0.0262, dtype=torch.float64)), (911, tensor(-0.0262, dtype=torch.float64)), (1139, tensor(-0.0261, dtype=torch.float64)), (741, tensor(-0.0261, dtype=torch.float64)), (426, tensor(-0.0260, dtype=torch.float64)), (1983, tensor(-0.0260, dtype=torch.float64)), (593, tensor(-0.0260, dtype=torch.float64)), (2080, tensor(-0.0260, dtype=torch.float64)), (1635, tensor(-0.0260, dtype=torch.float64)), (493, tensor(-0.0260, dtype=torch.float64)), (1791, tensor(-0.0259, dtype=torch.float64)), (1992, tensor(-0.0259, dtype=torch.float64)), (1742, tensor(-0.0258, dtype=torch.float64)), (606, tensor(-0.0258, dtype=torch.float64)), (2590, tensor(-0.0257, dtype=torch.float64)), (748, tensor(-0.0256, dtype=torch.float64)), (1684, tensor(-0.0256, dtype=torch.float64)), (53, tensor(-0.0256, dtype=torch.float64)), (2105, tensor(-0.0256, dtype=torch.float64)), (502, tensor(-0.0255, dtype=torch.float64)), (2705, tensor(-0.0255, dtype=torch.float64)), (1549, tensor(-0.0255, dtype=torch.float64)), (1146, tensor(-0.0255, dtype=torch.float64)), (633, tensor(-0.0255, dtype=torch.float64)), (375, tensor(-0.0255, dtype=torch.float64)), (91, tensor(-0.0254, dtype=torch.float64)), (1201, tensor(-0.0254, dtype=torch.float64)), (2413, tensor(-0.0254, dtype=torch.float64)), (1926, tensor(-0.0253, dtype=torch.float64)), (395, tensor(-0.0253, dtype=torch.float64)), (217, tensor(-0.0253, dtype=torch.float64)), (678, tensor(-0.0252, dtype=torch.float64)), (2465, tensor(-0.0252, dtype=torch.float64)), (2437, tensor(-0.0252, dtype=torch.float64)), (697, tensor(-0.0252, dtype=torch.float64)), (2138, tensor(-0.0251, dtype=torch.float64)), (2390, tensor(-0.0251, dtype=torch.float64)), (1, tensor(-0.0251, dtype=torch.float64)), (334, tensor(-0.0251, dtype=torch.float64)), (1601, tensor(-0.0251, dtype=torch.float64)), (126, tensor(-0.0249, dtype=torch.float64)), (2247, tensor(-0.0249, dtype=torch.float64)), (1581, tensor(-0.0249, dtype=torch.float64)), (2277, tensor(-0.0249, dtype=torch.float64)), (2180, tensor(-0.0249, dtype=torch.float64)), (1417, tensor(-0.0249, dtype=torch.float64)), (1870, tensor(-0.0249, dtype=torch.float64)), (625, tensor(-0.0248, dtype=torch.float64)), (1080, tensor(-0.0248, dtype=torch.float64)), (756, tensor(-0.0248, dtype=torch.float64)), (2145, tensor(-0.0247, dtype=torch.float64)), (1339, tensor(-0.0246, dtype=torch.float64)), (1209, tensor(-0.0246, dtype=torch.float64)), (1763, tensor(-0.0246, dtype=torch.float64)), (274, tensor(-0.0246, dtype=torch.float64)), (1607, tensor(-0.0246, dtype=torch.float64)), (1614, tensor(-0.0245, dtype=torch.float64)), (460, tensor(-0.0245, dtype=torch.float64)), (287, tensor(-0.0244, dtype=torch.float64)), (179, tensor(-0.0244, dtype=torch.float64)), (2157, tensor(-0.0244, dtype=torch.float64)), (1777, tensor(-0.0244, dtype=torch.float64)), (265, tensor(-0.0244, dtype=torch.float64)), (2406, tensor(-0.0243, dtype=torch.float64)), (117, tensor(-0.0243, dtype=torch.float64)), (1538, tensor(-0.0243, dtype=torch.float64)), (1621, tensor(-0.0243, dtype=torch.float64)), (1650, tensor(-0.0242, dtype=torch.float64)), (1027, tensor(-0.0242, dtype=torch.float64)), (112, tensor(-0.0242, dtype=torch.float64)), (956, tensor(-0.0242, dtype=torch.float64)), (1114, tensor(-0.0242, dtype=torch.float64)), (1460, tensor(-0.0242, dtype=torch.float64)), (2320, tensor(-0.0241, dtype=torch.float64)), (800, tensor(-0.0241, dtype=torch.float64)), (1237, tensor(-0.0240, dtype=torch.float64)), (1944, tensor(-0.0240, dtype=torch.float64)), (2716, tensor(-0.0240, dtype=torch.float64)), (747, tensor(-0.0240, dtype=torch.float64)), (388, tensor(-0.0240, dtype=torch.float64)), (31, tensor(-0.0239, dtype=torch.float64)), (572, tensor(-0.0239, dtype=torch.float64)), (664, tensor(-0.0239, dtype=torch.float64)), (1540, tensor(-0.0239, dtype=torch.float64)), (2140, tensor(-0.0239, dtype=torch.float64)), (2357, tensor(-0.0239, dtype=torch.float64)), (596, tensor(-0.0239, dtype=torch.float64)), (1265, tensor(-0.0238, dtype=torch.float64)), (702, tensor(-0.0238, dtype=torch.float64)), (673, tensor(-0.0238, dtype=torch.float64)), (936, tensor(-0.0237, dtype=torch.float64)), (124, tensor(-0.0237, dtype=torch.float64)), (158, tensor(-0.0235, dtype=torch.float64)), (726, tensor(-0.0235, dtype=torch.float64)), (106, tensor(-0.0235, dtype=torch.float64)), (1015, tensor(-0.0235, dtype=torch.float64)), (302, tensor(-0.0235, dtype=torch.float64)), (1328, tensor(-0.0235, dtype=torch.float64)), (1801, tensor(-0.0234, dtype=torch.float64)), (2269, tensor(-0.0234, dtype=torch.float64)), (1792, tensor(-0.0234, dtype=torch.float64)), (404, tensor(-0.0234, dtype=torch.float64)), (2096, tensor(-0.0234, dtype=torch.float64)), (101, tensor(-0.0234, dtype=torch.float64)), (2631, tensor(-0.0234, dtype=torch.float64)), (868, tensor(-0.0234, dtype=torch.float64)), (1731, tensor(-0.0233, dtype=torch.float64)), (820, tensor(-0.0233, dtype=torch.float64)), (415, tensor(-0.0233, dtype=torch.float64)), (2306, tensor(-0.0232, dtype=torch.float64)), (1987, tensor(-0.0232, dtype=torch.float64)), (2690, tensor(-0.0232, dtype=torch.float64)), (2111, tensor(-0.0232, dtype=torch.float64)), (1365, tensor(-0.0232, dtype=torch.float64)), (658, tensor(-0.0232, dtype=torch.float64)), (594, tensor(-0.0231, dtype=torch.float64)), (153, tensor(-0.0230, dtype=torch.float64)), (2496, tensor(-0.0229, dtype=torch.float64)), (1372, tensor(-0.0229, dtype=torch.float64)), (517, tensor(-0.0229, dtype=torch.float64)), (1934, tensor(-0.0229, dtype=torch.float64)), (2054, tensor(-0.0228, dtype=torch.float64)), (420, tensor(-0.0228, dtype=torch.float64)), (2109, tensor(-0.0228, dtype=torch.float64)), (1078, tensor(-0.0227, dtype=torch.float64)), (1105, tensor(-0.0227, dtype=torch.float64)), (2161, tensor(-0.0227, dtype=torch.float64)), (1790, tensor(-0.0227, dtype=torch.float64)), (1806, tensor(-0.0226, dtype=torch.float64)), (522, tensor(-0.0226, dtype=torch.float64)), (299, tensor(-0.0226, dtype=torch.float64)), (2418, tensor(-0.0226, dtype=torch.float64)), (1342, tensor(-0.0226, dtype=torch.float64)), (1414, tensor(-0.0226, dtype=torch.float64)), (823, tensor(-0.0225, dtype=torch.float64)), (2503, tensor(-0.0225, dtype=torch.float64)), (2525, tensor(-0.0225, dtype=torch.float64)), (2530, tensor(-0.0225, dtype=torch.float64)), (2353, tensor(-0.0224, dtype=torch.float64)), (2328, tensor(-0.0224, dtype=torch.float64)), (1625, tensor(-0.0224, dtype=torch.float64)), (2222, tensor(-0.0224, dtype=torch.float64)), (1715, tensor(-0.0224, dtype=torch.float64)), (952, tensor(-0.0223, dtype=torch.float64)), (1994, tensor(-0.0223, dtype=torch.float64)), (94, tensor(-0.0223, dtype=torch.float64)), (1421, tensor(-0.0223, dtype=torch.float64)), (406, tensor(-0.0223, dtype=torch.float64)), (2042, tensor(-0.0222, dtype=torch.float64)), (688, tensor(-0.0222, dtype=torch.float64)), (1363, tensor(-0.0222, dtype=torch.float64)), (1889, tensor(-0.0222, dtype=torch.float64)), (2137, tensor(-0.0222, dtype=torch.float64)), (1821, tensor(-0.0221, dtype=torch.float64)), (1435, tensor(-0.0221, dtype=torch.float64)), (494, tensor(-0.0221, dtype=torch.float64)), (1376, tensor(-0.0221, dtype=torch.float64)), (194, tensor(-0.0221, dtype=torch.float64)), (233, tensor(-0.0221, dtype=torch.float64)), (273, tensor(-0.0220, dtype=torch.float64)), (2680, tensor(-0.0220, dtype=torch.float64)), (2170, tensor(-0.0220, dtype=torch.float64)), (1406, tensor(-0.0220, dtype=torch.float64)), (814, tensor(-0.0219, dtype=torch.float64)), (867, tensor(-0.0219, dtype=torch.float64)), (2158, tensor(-0.0219, dtype=torch.float64)), (1598, tensor(-0.0219, dtype=torch.float64)), (1338, tensor(-0.0219, dtype=torch.float64)), (1966, tensor(-0.0219, dtype=torch.float64)), (1501, tensor(-0.0219, dtype=torch.float64)), (1675, tensor(-0.0219, dtype=torch.float64)), (2672, tensor(-0.0218, dtype=torch.float64)), (1276, tensor(-0.0218, dtype=torch.float64)), (1106, tensor(-0.0218, dtype=torch.float64)), (925, tensor(-0.0218, dtype=torch.float64)), (2394, tensor(-0.0218, dtype=torch.float64)), (2552, tensor(-0.0218, dtype=torch.float64)), (1010, tensor(-0.0215, dtype=torch.float64)), (1013, tensor(-0.0215, dtype=torch.float64)), (9, tensor(-0.0215, dtype=torch.float64)), (2597, tensor(-0.0215, dtype=torch.float64)), (774, tensor(-0.0215, dtype=torch.float64)), (1210, tensor(-0.0215, dtype=torch.float64)), (262, tensor(-0.0214, dtype=torch.float64)), (330, tensor(-0.0214, dtype=torch.float64)), (1819, tensor(-0.0214, dtype=torch.float64)), (1508, tensor(-0.0213, dtype=torch.float64)), (2162, tensor(-0.0213, dtype=torch.float64)), (1221, tensor(-0.0212, dtype=torch.float64)), (966, tensor(-0.0212, dtype=torch.float64)), (2001, tensor(-0.0212, dtype=torch.float64)), (1796, tensor(-0.0211, dtype=torch.float64)), (2582, tensor(-0.0210, dtype=torch.float64)), (732, tensor(-0.0210, dtype=torch.float64)), (2029, tensor(-0.0210, dtype=torch.float64)), (1097, tensor(-0.0210, dtype=torch.float64)), (1158, tensor(-0.0210, dtype=torch.float64)), (918, tensor(-0.0210, dtype=torch.float64)), (2059, tensor(-0.0210, dtype=torch.float64)), (770, tensor(-0.0210, dtype=torch.float64)), (608, tensor(-0.0210, dtype=torch.float64)), (1634, tensor(-0.0209, dtype=torch.float64)), (1885, tensor(-0.0209, dtype=torch.float64)), (1081, tensor(-0.0209, dtype=torch.float64)), (2017, tensor(-0.0209, dtype=torch.float64)), (1316, tensor(-0.0209, dtype=torch.float64)), (264, tensor(-0.0208, dtype=torch.float64)), (2505, tensor(-0.0208, dtype=torch.float64)), (575, tensor(-0.0208, dtype=torch.float64)), (1783, tensor(-0.0208, dtype=torch.float64)), (377, tensor(-0.0208, dtype=torch.float64)), (135, tensor(-0.0207, dtype=torch.float64)), (1869, tensor(-0.0207, dtype=torch.float64)), (1284, tensor(-0.0207, dtype=torch.float64)), (1213, tensor(-0.0206, dtype=torch.float64)), (1170, tensor(-0.0206, dtype=torch.float64)), (443, tensor(-0.0206, dtype=torch.float64)), (2270, tensor(-0.0206, dtype=torch.float64)), (140, tensor(-0.0206, dtype=torch.float64)), (1695, tensor(-0.0206, dtype=torch.float64)), (2286, tensor(-0.0206, dtype=torch.float64)), (1642, tensor(-0.0206, dtype=torch.float64)), (1093, tensor(-0.0206, dtype=torch.float64)), (159, tensor(-0.0205, dtype=torch.float64)), (1606, tensor(-0.0205, dtype=torch.float64)), (1981, tensor(-0.0205, dtype=torch.float64)), (119, tensor(-0.0205, dtype=torch.float64)), (1753, tensor(-0.0204, dtype=torch.float64)), (2532, tensor(-0.0204, dtype=torch.float64)), (2584, tensor(-0.0204, dtype=torch.float64)), (437, tensor(-0.0203, dtype=torch.float64)), (1660, tensor(-0.0203, dtype=torch.float64)), (2414, tensor(-0.0203, dtype=torch.float64)), (2307, tensor(-0.0202, dtype=torch.float64)), (82, tensor(-0.0202, dtype=torch.float64)), (1881, tensor(-0.0202, dtype=torch.float64)), (227, tensor(-0.0201, dtype=torch.float64)), (1122, tensor(-0.0201, dtype=torch.float64)), (2717, tensor(-0.0201, dtype=torch.float64)), (1949, tensor(-0.0200, dtype=torch.float64)), (954, tensor(-0.0200, dtype=torch.float64)), (188, tensor(-0.0200, dtype=torch.float64)), (1863, tensor(-0.0200, dtype=torch.float64)), (999, tensor(-0.0199, dtype=torch.float64)), (2291, tensor(-0.0199, dtype=torch.float64)), (812, tensor(-0.0199, dtype=torch.float64)), (782, tensor(-0.0198, dtype=torch.float64)), (2612, tensor(-0.0198, dtype=torch.float64)), (2048, tensor(-0.0198, dtype=torch.float64)), (848, tensor(-0.0198, dtype=torch.float64)), (1029, tensor(-0.0197, dtype=torch.float64)), (280, tensor(-0.0197, dtype=torch.float64)), (1393, tensor(-0.0197, dtype=torch.float64)), (75, tensor(-0.0196, dtype=torch.float64)), (2374, tensor(-0.0196, dtype=torch.float64)), (2185, tensor(-0.0195, dtype=torch.float64)), (448, tensor(-0.0195, dtype=torch.float64)), (174, tensor(-0.0195, dtype=torch.float64)), (794, tensor(-0.0195, dtype=torch.float64)), (1198, tensor(-0.0194, dtype=torch.float64)), (2518, tensor(-0.0194, dtype=torch.float64)), (1091, tensor(-0.0194, dtype=torch.float64)), (2272, tensor(-0.0194, dtype=torch.float64)), (1602, tensor(-0.0194, dtype=torch.float64)), (90, tensor(-0.0193, dtype=torch.float64)), (569, tensor(-0.0193, dtype=torch.float64)), (1018, tensor(-0.0193, dtype=torch.float64)), (2065, tensor(-0.0193, dtype=torch.float64)), (2419, tensor(-0.0193, dtype=torch.float64)), (1661, tensor(-0.0192, dtype=torch.float64)), (1803, tensor(-0.0192, dtype=torch.float64)), (358, tensor(-0.0192, dtype=torch.float64)), (2513, tensor(-0.0192, dtype=torch.float64)), (252, tensor(-0.0192, dtype=torch.float64)), (1794, tensor(-0.0191, dtype=torch.float64)), (1645, tensor(-0.0191, dtype=torch.float64)), (81, tensor(-0.0191, dtype=torch.float64)), (2653, tensor(-0.0191, dtype=torch.float64)), (2226, tensor(-0.0191, dtype=torch.float64)), (2214, tensor(-0.0190, dtype=torch.float64)), (1145, tensor(-0.0190, dtype=torch.float64)), (1169, tensor(-0.0189, dtype=torch.float64)), (1477, tensor(-0.0189, dtype=torch.float64)), (1665, tensor(-0.0189, dtype=torch.float64)), (746, tensor(-0.0189, dtype=torch.float64)), (1369, tensor(-0.0189, dtype=torch.float64)), (187, tensor(-0.0189, dtype=torch.float64)), (1257, tensor(-0.0189, dtype=torch.float64)), (803, tensor(-0.0188, dtype=torch.float64)), (2083, tensor(-0.0187, dtype=torch.float64)), (331, tensor(-0.0187, dtype=torch.float64)), (734, tensor(-0.0187, dtype=torch.float64)), (1636, tensor(-0.0187, dtype=torch.float64)), (878, tensor(-0.0186, dtype=torch.float64)), (2036, tensor(-0.0186, dtype=torch.float64)), (84, tensor(-0.0186, dtype=torch.float64)), (2349, tensor(-0.0185, dtype=torch.float64)), (484, tensor(-0.0185, dtype=torch.float64)), (995, tensor(-0.0185, dtype=torch.float64)), (1835, tensor(-0.0185, dtype=torch.float64)), (2100, tensor(-0.0185, dtype=torch.float64)), (1453, tensor(-0.0185, dtype=torch.float64)), (1941, tensor(-0.0185, dtype=torch.float64)), (498, tensor(-0.0185, dtype=torch.float64)), (118, tensor(-0.0184, dtype=torch.float64)), (1233, tensor(-0.0184, dtype=torch.float64)), (1991, tensor(-0.0184, dtype=torch.float64)), (2670, tensor(-0.0183, dtype=torch.float64)), (2061, tensor(-0.0183, dtype=torch.float64)), (815, tensor(-0.0183, dtype=torch.float64)), (721, tensor(-0.0183, dtype=torch.float64)), (434, tensor(-0.0183, dtype=torch.float64)), (637, tensor(-0.0183, dtype=torch.float64)), (2230, tensor(-0.0182, dtype=torch.float64)), (2079, tensor(-0.0182, dtype=torch.float64)), (1711, tensor(-0.0182, dtype=torch.float64)), (1123, tensor(-0.0181, dtype=torch.float64)), (145, tensor(-0.0181, dtype=torch.float64)), (2046, tensor(-0.0181, dtype=torch.float64)), (2056, tensor(-0.0181, dtype=torch.float64)), (2144, tensor(-0.0181, dtype=torch.float64)), (1350, tensor(-0.0180, dtype=torch.float64)), (1072, tensor(-0.0180, dtype=torch.float64)), (1896, tensor(-0.0180, dtype=torch.float64)), (1604, tensor(-0.0180, dtype=torch.float64)), (343, tensor(-0.0179, dtype=torch.float64)), (696, tensor(-0.0179, dtype=torch.float64)), (244, tensor(-0.0179, dtype=torch.float64)), (328, tensor(-0.0179, dtype=torch.float64)), (1689, tensor(-0.0179, dtype=torch.float64)), (816, tensor(-0.0179, dtype=torch.float64)), (2372, tensor(-0.0177, dtype=torch.float64)), (840, tensor(-0.0177, dtype=torch.float64)), (347, tensor(-0.0177, dtype=torch.float64)), (807, tensor(-0.0177, dtype=torch.float64)), (396, tensor(-0.0177, dtype=torch.float64)), (1427, tensor(-0.0176, dtype=torch.float64)), (2348, tensor(-0.0176, dtype=torch.float64)), (890, tensor(-0.0176, dtype=torch.float64)), (1948, tensor(-0.0176, dtype=torch.float64)), (2572, tensor(-0.0175, dtype=torch.float64)), (882, tensor(-0.0175, dtype=torch.float64)), (1115, tensor(-0.0175, dtype=torch.float64)), (1321, tensor(-0.0175, dtype=torch.float64)), (1506, tensor(-0.0174, dtype=torch.float64)), (204, tensor(-0.0174, dtype=torch.float64)), (2606, tensor(-0.0174, dtype=torch.float64)), (2250, tensor(-0.0174, dtype=torch.float64)), (765, tensor(-0.0173, dtype=torch.float64)), (2163, tensor(-0.0173, dtype=torch.float64)), (2405, tensor(-0.0173, dtype=torch.float64)), (932, tensor(-0.0172, dtype=torch.float64)), (1845, tensor(-0.0171, dtype=torch.float64)), (1898, tensor(-0.0171, dtype=torch.float64)), (1020, tensor(-0.0171, dtype=torch.float64)), (1678, tensor(-0.0170, dtype=torch.float64)), (1387, tensor(-0.0170, dtype=torch.float64)), (2260, tensor(-0.0170, dtype=torch.float64)), (668, tensor(-0.0170, dtype=torch.float64)), (1108, tensor(-0.0170, dtype=torch.float64)), (1429, tensor(-0.0170, dtype=torch.float64)), (1207, tensor(-0.0170, dtype=torch.float64)), (762, tensor(-0.0170, dtype=torch.float64)), (1746, tensor(-0.0169, dtype=torch.float64)), (335, tensor(-0.0169, dtype=torch.float64)), (987, tensor(-0.0168, dtype=torch.float64)), (1396, tensor(-0.0168, dtype=torch.float64)), (1515, tensor(-0.0168, dtype=torch.float64)), (1470, tensor(-0.0167, dtype=torch.float64)), (146, tensor(-0.0167, dtype=torch.float64)), (1125, tensor(-0.0166, dtype=torch.float64)), (2654, tensor(-0.0166, dtype=torch.float64)), (2638, tensor(-0.0166, dtype=torch.float64)), (2102, tensor(-0.0166, dtype=torch.float64)), (2720, tensor(-0.0165, dtype=torch.float64)), (267, tensor(-0.0165, dtype=torch.float64)), (749, tensor(-0.0165, dtype=torch.float64)), (229, tensor(-0.0165, dtype=torch.float64)), (2734, tensor(-0.0165, dtype=torch.float64)), (919, tensor(-0.0165, dtype=torch.float64)), (353, tensor(-0.0164, dtype=torch.float64)), (1173, tensor(-0.0164, dtype=torch.float64)), (2115, tensor(-0.0163, dtype=torch.float64)), (1752, tensor(-0.0163, dtype=torch.float64)), (2587, tensor(-0.0163, dtype=torch.float64)), (1837, tensor(-0.0163, dtype=torch.float64)), (2678, tensor(-0.0162, dtype=torch.float64)), (1127, tensor(-0.0161, dtype=torch.float64)), (1545, tensor(-0.0161, dtype=torch.float64)), (1407, tensor(-0.0161, dtype=torch.float64)), (1959, tensor(-0.0161, dtype=torch.float64)), (338, tensor(-0.0160, dtype=torch.float64)), (1410, tensor(-0.0160, dtype=torch.float64)), (527, tensor(-0.0159, dtype=torch.float64)), (2034, tensor(-0.0159, dtype=torch.float64)), (154, tensor(-0.0159, dtype=torch.float64)), (2497, tensor(-0.0159, dtype=torch.float64)), (1268, tensor(-0.0159, dtype=torch.float64)), (1355, tensor(-0.0158, dtype=torch.float64)), (605, tensor(-0.0158, dtype=torch.float64)), (2689, tensor(-0.0158, dtype=torch.float64)), (2510, tensor(-0.0158, dtype=torch.float64)), (1972, tensor(-0.0158, dtype=torch.float64)), (543, tensor(-0.0158, dtype=torch.float64)), (503, tensor(-0.0157, dtype=torch.float64)), (2254, tensor(-0.0157, dtype=torch.float64)), (1537, tensor(-0.0157, dtype=torch.float64)), (1397, tensor(-0.0156, dtype=torch.float64)), (2215, tensor(-0.0156, dtype=torch.float64)), (2340, tensor(-0.0156, dtype=torch.float64)), (485, tensor(-0.0155, dtype=torch.float64)), (51, tensor(-0.0155, dtype=torch.float64)), (131, tensor(-0.0155, dtype=torch.float64)), (2522, tensor(-0.0155, dtype=torch.float64)), (653, tensor(-0.0155, dtype=torch.float64)), (892, tensor(-0.0154, dtype=torch.float64)), (2284, tensor(-0.0154, dtype=torch.float64)), (875, tensor(-0.0154, dtype=torch.float64)), (1377, tensor(-0.0154, dtype=torch.float64)), (2223, tensor(-0.0154, dtype=torch.float64)), (2025, tensor(-0.0153, dtype=torch.float64)), (1124, tensor(-0.0153, dtype=torch.float64)), (2234, tensor(-0.0153, dtype=torch.float64)), (597, tensor(-0.0152, dtype=torch.float64)), (528, tensor(-0.0152, dtype=torch.float64)), (648, tensor(-0.0152, dtype=torch.float64)), (168, tensor(-0.0152, dtype=torch.float64)), (1554, tensor(-0.0152, dtype=torch.float64)), (289, tensor(-0.0152, dtype=torch.float64)), (1734, tensor(-0.0152, dtype=torch.float64)), (603, tensor(-0.0152, dtype=torch.float64)), (1035, tensor(-0.0151, dtype=torch.float64)), (2698, tensor(-0.0151, dtype=torch.float64)), (1224, tensor(-0.0151, dtype=torch.float64)), (1800, tensor(-0.0151, dtype=torch.float64)), (1937, tensor(-0.0150, dtype=torch.float64)), (871, tensor(-0.0150, dtype=torch.float64)), (824, tensor(-0.0150, dtype=torch.float64)), (2461, tensor(-0.0150, dtype=torch.float64)), (1615, tensor(-0.0150, dtype=torch.float64)), (891, tensor(-0.0150, dtype=torch.float64)), (1827, tensor(-0.0150, dtype=torch.float64)), (1227, tensor(-0.0150, dtype=torch.float64)), (929, tensor(-0.0149, dtype=torch.float64)), (192, tensor(-0.0149, dtype=torch.float64)), (2168, tensor(-0.0149, dtype=torch.float64)), (161, tensor(-0.0148, dtype=torch.float64)), (1906, tensor(-0.0148, dtype=torch.float64)), (639, tensor(-0.0148, dtype=torch.float64)), (2378, tensor(-0.0148, dtype=torch.float64)), (2676, tensor(-0.0148, dtype=torch.float64)), (1656, tensor(-0.0148, dtype=torch.float64)), (1488, tensor(-0.0148, dtype=torch.float64)), (643, tensor(-0.0147, dtype=torch.float64)), (855, tensor(-0.0147, dtype=torch.float64)), (2741, tensor(-0.0147, dtype=torch.float64)), (1450, tensor(-0.0147, dtype=torch.float64)), (2345, tensor(-0.0147, dtype=torch.float64)), (2564, tensor(-0.0147, dtype=torch.float64)), (2365, tensor(-0.0147, dtype=torch.float64)), (738, tensor(-0.0147, dtype=torch.float64)), (2742, tensor(-0.0147, dtype=torch.float64)), (1654, tensor(-0.0147, dtype=torch.float64)), (634, tensor(-0.0147, dtype=torch.float64)), (1109, tensor(-0.0147, dtype=torch.float64)), (565, tensor(-0.0146, dtype=torch.float64)), (2184, tensor(-0.0146, dtype=torch.float64)), (2324, tensor(-0.0146, dtype=torch.float64)), (2375, tensor(-0.0146, dtype=torch.float64)), (1415, tensor(-0.0146, dtype=torch.float64)), (860, tensor(-0.0146, dtype=torch.float64)), (1899, tensor(-0.0145, dtype=torch.float64)), (1799, tensor(-0.0145, dtype=torch.float64)), (2706, tensor(-0.0145, dtype=torch.float64)), (1624, tensor(-0.0144, dtype=torch.float64)), (2338, tensor(-0.0144, dtype=torch.float64)), (1567, tensor(-0.0143, dtype=torch.float64)), (998, tensor(-0.0143, dtype=torch.float64)), (504, tensor(-0.0143, dtype=torch.float64)), (1383, tensor(-0.0143, dtype=torch.float64)), (2018, tensor(-0.0143, dtype=torch.float64)), (949, tensor(-0.0143, dtype=torch.float64)), (1248, tensor(-0.0143, dtype=torch.float64)), (2382, tensor(-0.0142, dtype=torch.float64)), (1368, tensor(-0.0142, dtype=torch.float64)), (1037, tensor(-0.0142, dtype=torch.float64)), (1024, tensor(-0.0142, dtype=torch.float64)), (2010, tensor(-0.0142, dtype=torch.float64)), (226, tensor(-0.0142, dtype=torch.float64)), (1595, tensor(-0.0142, dtype=torch.float64)), (103, tensor(-0.0142, dtype=torch.float64)), (1008, tensor(-0.0142, dtype=torch.float64)), (1836, tensor(-0.0141, dtype=torch.float64)), (247, tensor(-0.0141, dtype=torch.float64)), (2649, tensor(-0.0141, dtype=torch.float64)), (300, tensor(-0.0140, dtype=torch.float64)), (1570, tensor(-0.0140, dtype=torch.float64)), (2457, tensor(-0.0139, dtype=torch.float64)), (701, tensor(-0.0139, dtype=torch.float64)), (321, tensor(-0.0139, dtype=torch.float64)), (1653, tensor(-0.0139, dtype=torch.float64)), (2431, tensor(-0.0138, dtype=torch.float64)), (523, tensor(-0.0138, dtype=torch.float64)), (1329, tensor(-0.0138, dtype=torch.float64)), (2517, tensor(-0.0137, dtype=torch.float64)), (1652, tensor(-0.0137, dtype=torch.float64)), (783, tensor(-0.0137, dtype=torch.float64)), (1676, tensor(-0.0137, dtype=torch.float64)), (2169, tensor(-0.0137, dtype=torch.float64)), (2626, tensor(-0.0136, dtype=torch.float64)), (339, tensor(-0.0136, dtype=torch.float64)), (74, tensor(-0.0136, dtype=torch.float64)), (2501, tensor(-0.0135, dtype=torch.float64)), (408, tensor(-0.0135, dtype=torch.float64)), (2619, tensor(-0.0135, dtype=torch.float64)), (1986, tensor(-0.0135, dtype=torch.float64)), (773, tensor(-0.0135, dtype=torch.float64)), (1425, tensor(-0.0134, dtype=torch.float64)), (631, tensor(-0.0134, dtype=torch.float64)), (2217, tensor(-0.0134, dtype=torch.float64)), (143, tensor(-0.0134, dtype=torch.float64)), (1910, tensor(-0.0134, dtype=torch.float64)), (872, tensor(-0.0134, dtype=torch.float64)), (600, tensor(-0.0133, dtype=torch.float64)), (2152, tensor(-0.0133, dtype=torch.float64)), (2380, tensor(-0.0133, dtype=torch.float64)), (2635, tensor(-0.0132, dtype=torch.float64)), (1603, tensor(-0.0132, dtype=torch.float64)), (2562, tensor(-0.0132, dtype=torch.float64)), (2534, tensor(-0.0132, dtype=torch.float64)), (1551, tensor(-0.0132, dtype=torch.float64)), (387, tensor(-0.0132, dtype=torch.float64)), (268, tensor(-0.0131, dtype=torch.float64)), (2192, tensor(-0.0131, dtype=torch.float64)), (798, tensor(-0.0130, dtype=torch.float64)), (1255, tensor(-0.0130, dtype=torch.float64)), (602, tensor(-0.0130, dtype=torch.float64)), (1267, tensor(-0.0130, dtype=torch.float64)), (1775, tensor(-0.0129, dtype=torch.float64)), (376, tensor(-0.0129, dtype=torch.float64)), (2210, tensor(-0.0129, dtype=torch.float64)), (587, tensor(-0.0128, dtype=torch.float64)), (2287, tensor(-0.0128, dtype=torch.float64)), (745, tensor(-0.0128, dtype=torch.float64)), (2563, tensor(-0.0127, dtype=torch.float64)), (2743, tensor(-0.0127, dtype=torch.float64)), (2463, tensor(-0.0127, dtype=torch.float64)), (1922, tensor(-0.0127, dtype=torch.float64)), (1510, tensor(-0.0127, dtype=torch.float64)), (363, tensor(-0.0126, dtype=torch.float64)), (2052, tensor(-0.0126, dtype=torch.float64)), (185, tensor(-0.0126, dtype=torch.float64)), (1502, tensor(-0.0125, dtype=torch.float64)), (566, tensor(-0.0125, dtype=torch.float64)), (2715, tensor(-0.0125, dtype=torch.float64)), (1474, tensor(-0.0125, dtype=torch.float64)), (2636, tensor(-0.0125, dtype=torch.float64)), (901, tensor(-0.0125, dtype=torch.float64)), (1098, tensor(-0.0125, dtype=torch.float64)), (2361, tensor(-0.0125, dtype=torch.float64)), (461, tensor(-0.0124, dtype=torch.float64)), (779, tensor(-0.0124, dtype=torch.float64)), (2218, tensor(-0.0124, dtype=torch.float64)), (1476, tensor(-0.0124, dtype=torch.float64)), (212, tensor(-0.0124, dtype=torch.float64)), (642, tensor(-0.0123, dtype=torch.float64)), (1704, tensor(-0.0123, dtype=torch.float64)), (1823, tensor(-0.0123, dtype=torch.float64)), (767, tensor(-0.0123, dtype=torch.float64)), (2114, tensor(-0.0123, dtype=torch.float64)), (1543, tensor(-0.0122, dtype=torch.float64)), (620, tensor(-0.0122, dtype=torch.float64)), (1847, tensor(-0.0122, dtype=torch.float64)), (2326, tensor(-0.0122, dtype=torch.float64)), (651, tensor(-0.0122, dtype=torch.float64)), (2173, tensor(-0.0122, dtype=torch.float64)), (806, tensor(-0.0122, dtype=torch.float64)), (1249, tensor(-0.0121, dtype=torch.float64)), (2031, tensor(-0.0121, dtype=torch.float64)), (632, tensor(-0.0121, dtype=torch.float64)), (200, tensor(-0.0121, dtype=torch.float64)), (1960, tensor(-0.0120, dtype=torch.float64)), (1527, tensor(-0.0120, dtype=torch.float64)), (2542, tensor(-0.0119, dtype=torch.float64)), (393, tensor(-0.0119, dtype=torch.float64)), (1512, tensor(-0.0119, dtype=torch.float64)), (1039, tensor(-0.0119, dtype=torch.float64)), (1843, tensor(-0.0119, dtype=torch.float64)), (703, tensor(-0.0118, dtype=torch.float64)), (1954, tensor(-0.0118, dtype=torch.float64)), (1798, tensor(-0.0118, dtype=torch.float64)), (2206, tensor(-0.0118, dtype=torch.float64)), (1969, tensor(-0.0118, dtype=torch.float64)), (12, tensor(-0.0117, dtype=torch.float64)), (105, tensor(-0.0117, dtype=torch.float64)), (466, tensor(-0.0117, dtype=torch.float64)), (2471, tensor(-0.0117, dtype=torch.float64)), (2035, tensor(-0.0117, dtype=torch.float64)), (1754, tensor(-0.0117, dtype=torch.float64)), (476, tensor(-0.0117, dtype=torch.float64)), (169, tensor(-0.0117, dtype=torch.float64)), (1901, tensor(-0.0116, dtype=torch.float64)), (1514, tensor(-0.0116, dtype=torch.float64)), (799, tensor(-0.0116, dtype=torch.float64)), (1985, tensor(-0.0116, dtype=torch.float64)), (1118, tensor(-0.0116, dtype=torch.float64)), (1058, tensor(-0.0115, dtype=torch.float64)), (672, tensor(-0.0115, dtype=torch.float64)), (971, tensor(-0.0115, dtype=torch.float64)), (2258, tensor(-0.0115, dtype=torch.float64)), (341, tensor(-0.0115, dtype=torch.float64)), (689, tensor(-0.0113, dtype=torch.float64)), (1193, tensor(-0.0113, dtype=torch.float64)), (1516, tensor(-0.0113, dtype=torch.float64)), (699, tensor(-0.0113, dtype=torch.float64)), (433, tensor(-0.0113, dtype=torch.float64)), (2196, tensor(-0.0113, dtype=torch.float64)), (1471, tensor(-0.0113, dtype=torch.float64)), (2684, tensor(-0.0113, dtype=torch.float64)), (1758, tensor(-0.0112, dtype=torch.float64)), (468, tensor(-0.0112, dtype=torch.float64)), (889, tensor(-0.0112, dtype=torch.float64)), (1839, tensor(-0.0111, dtype=torch.float64)), (2538, tensor(-0.0111, dtype=torch.float64)), (1485, tensor(-0.0111, dtype=torch.float64)), (660, tensor(-0.0111, dtype=torch.float64)), (2108, tensor(-0.0111, dtype=torch.float64)), (1287, tensor(-0.0111, dtype=torch.float64)), (1902, tensor(-0.0110, dtype=torch.float64)), (979, tensor(-0.0110, dtype=torch.float64)), (2466, tensor(-0.0110, dtype=torch.float64)), (1812, tensor(-0.0110, dtype=torch.float64)), (1001, tensor(-0.0109, dtype=torch.float64)), (1947, tensor(-0.0109, dtype=torch.float64)), (804, tensor(-0.0109, dtype=torch.float64)), (2629, tensor(-0.0109, dtype=torch.float64)), (2642, tensor(-0.0109, dtype=torch.float64)), (2559, tensor(-0.0109, dtype=torch.float64)), (1056, tensor(-0.0109, dtype=torch.float64)), (49, tensor(-0.0109, dtype=torch.float64)), (1075, tensor(-0.0108, dtype=torch.float64)), (903, tensor(-0.0108, dtype=torch.float64)), (1539, tensor(-0.0108, dtype=torch.float64)), (772, tensor(-0.0108, dtype=torch.float64)), (1374, tensor(-0.0107, dtype=torch.float64)), (1588, tensor(-0.0107, dtype=torch.float64)), (1181, tensor(-0.0107, dtype=torch.float64)), (682, tensor(-0.0106, dtype=torch.float64)), (398, tensor(-0.0106, dtype=torch.float64)), (2565, tensor(-0.0106, dtype=torch.float64)), (2686, tensor(-0.0105, dtype=torch.float64)), (1719, tensor(-0.0105, dtype=torch.float64)), (2189, tensor(-0.0105, dtype=torch.float64)), (47, tensor(-0.0105, dtype=torch.float64)), (505, tensor(-0.0105, dtype=torch.float64)), (1162, tensor(-0.0104, dtype=torch.float64)), (319, tensor(-0.0104, dtype=torch.float64)), (202, tensor(-0.0104, dtype=torch.float64)), (1137, tensor(-0.0104, dtype=torch.float64)), (2683, tensor(-0.0103, dtype=torch.float64)), (1195, tensor(-0.0102, dtype=torch.float64)), (563, tensor(-0.0102, dtype=torch.float64)), (165, tensor(-0.0102, dtype=torch.float64)), (2242, tensor(-0.0102, dtype=torch.float64)), (333, tensor(-0.0102, dtype=torch.float64)), (148, tensor(-0.0102, dtype=torch.float64)), (1074, tensor(-0.0101, dtype=torch.float64)), (850, tensor(-0.0101, dtype=torch.float64)), (2634, tensor(-0.0101, dtype=torch.float64)), (1976, tensor(-0.0101, dtype=torch.float64)), (755, tensor(-0.0101, dtype=torch.float64)), (1280, tensor(-0.0100, dtype=torch.float64)), (1942, tensor(-0.0100, dtype=torch.float64)), (2427, tensor(-0.0100, dtype=torch.float64)), (2656, tensor(-0.0100, dtype=torch.float64)), (95, tensor(-0.0099, dtype=torch.float64)), (427, tensor(-0.0099, dtype=torch.float64)), (997, tensor(-0.0099, dtype=torch.float64)), (1521, tensor(-0.0099, dtype=torch.float64)), (1759, tensor(-0.0098, dtype=torch.float64)), (1655, tensor(-0.0098, dtype=torch.float64)), (1550, tensor(-0.0098, dtype=torch.float64)), (1085, tensor(-0.0098, dtype=torch.float64)), (1424, tensor(-0.0098, dtype=torch.float64)), (2171, tensor(-0.0098, dtype=torch.float64)), (183, tensor(-0.0097, dtype=torch.float64)), (940, tensor(-0.0097, dtype=torch.float64)), (2450, tensor(-0.0097, dtype=torch.float64)), (1686, tensor(-0.0097, dtype=torch.float64)), (723, tensor(-0.0097, dtype=torch.float64)), (1782, tensor(-0.0097, dtype=torch.float64)), (488, tensor(-0.0097, dtype=torch.float64)), (2327, tensor(-0.0097, dtype=torch.float64)), (1428, tensor(-0.0097, dtype=torch.float64)), (2246, tensor(-0.0096, dtype=torch.float64)), (225, tensor(-0.0096, dtype=torch.float64)), (2617, tensor(-0.0096, dtype=torch.float64)), (2344, tensor(-0.0096, dtype=torch.float64)), (254, tensor(-0.0095, dtype=torch.float64)), (1051, tensor(-0.0095, dtype=torch.float64)), (1750, tensor(-0.0095, dtype=torch.float64)), (1499, tensor(-0.0095, dtype=torch.float64)), (1394, tensor(-0.0095, dtype=torch.float64)), (973, tensor(-0.0094, dtype=torch.float64)), (2221, tensor(-0.0094, dtype=torch.float64)), (534, tensor(-0.0094, dtype=torch.float64)), (1420, tensor(-0.0094, dtype=torch.float64)), (1773, tensor(-0.0094, dtype=torch.float64)), (2082, tensor(-0.0094, dtype=torch.float64)), (2486, tensor(-0.0093, dtype=torch.float64)), (2436, tensor(-0.0093, dtype=torch.float64)), (2669, tensor(-0.0093, dtype=torch.float64)), (1129, tensor(-0.0093, dtype=torch.float64)), (1813, tensor(-0.0093, dtype=torch.float64)), (2020, tensor(-0.0093, dtype=torch.float64)), (2178, tensor(-0.0093, dtype=torch.float64)), (1979, tensor(-0.0092, dtype=torch.float64)), (976, tensor(-0.0092, dtype=torch.float64)), (568, tensor(-0.0092, dtype=torch.float64)), (2130, tensor(-0.0091, dtype=torch.float64)), (1069, tensor(-0.0091, dtype=torch.float64)), (623, tensor(-0.0091, dtype=torch.float64)), (1739, tensor(-0.0091, dtype=torch.float64)), (2434, tensor(-0.0091, dtype=torch.float64)), (655, tensor(-0.0091, dtype=torch.float64)), (694, tensor(-0.0091, dtype=torch.float64)), (2028, tensor(-0.0091, dtype=torch.float64)), (552, tensor(-0.0090, dtype=torch.float64)), (29, tensor(-0.0089, dtype=torch.float64)), (5, tensor(-0.0089, dtype=torch.float64)), (1399, tensor(-0.0089, dtype=torch.float64)), (1366, tensor(-0.0089, dtype=torch.float64)), (44, tensor(-0.0089, dtype=torch.float64)), (215, tensor(-0.0088, dtype=torch.float64)), (2681, tensor(-0.0088, dtype=torch.float64)), (960, tensor(-0.0087, dtype=torch.float64)), (1252, tensor(-0.0086, dtype=torch.float64)), (2078, tensor(-0.0086, dtype=torch.float64)), (1325, tensor(-0.0086, dtype=torch.float64)), (1270, tensor(-0.0086, dtype=torch.float64)), (1489, tensor(-0.0086, dtype=torch.float64)), (946, tensor(-0.0086, dtype=torch.float64)), (1196, tensor(-0.0085, dtype=torch.float64)), (2507, tensor(-0.0084, dtype=torch.float64)), (1585, tensor(-0.0084, dtype=torch.float64)), (379, tensor(-0.0084, dtype=torch.float64)), (1174, tensor(-0.0084, dtype=torch.float64)), (36, tensor(-0.0083, dtype=torch.float64)), (712, tensor(-0.0083, dtype=torch.float64)), (729, tensor(-0.0083, dtype=torch.float64)), (2521, tensor(-0.0083, dtype=torch.float64)), (1392, tensor(-0.0083, dtype=torch.float64)), (2682, tensor(-0.0083, dtype=torch.float64)), (2313, tensor(-0.0083, dtype=torch.float64)), (1401, tensor(-0.0082, dtype=torch.float64)), (1443, tensor(-0.0082, dtype=torch.float64)), (737, tensor(-0.0082, dtype=torch.float64)), (576, tensor(-0.0082, dtype=torch.float64)), (524, tensor(-0.0082, dtype=torch.float64)), (2074, tensor(-0.0082, dtype=torch.float64)), (2728, tensor(-0.0081, dtype=torch.float64)), (1308, tensor(-0.0081, dtype=torch.float64)), (1331, tensor(-0.0081, dtype=torch.float64)), (1589, tensor(-0.0081, dtype=torch.float64)), (1685, tensor(-0.0081, dtype=torch.float64)), (1975, tensor(-0.0080, dtype=torch.float64)), (917, tensor(-0.0080, dtype=torch.float64)), (8, tensor(-0.0080, dtype=torch.float64)), (1519, tensor(-0.0080, dtype=torch.float64)), (2625, tensor(-0.0080, dtype=torch.float64)), (2424, tensor(-0.0080, dtype=torch.float64)), (2710, tensor(-0.0080, dtype=torch.float64)), (2204, tensor(-0.0080, dtype=torch.float64)), (657, tensor(-0.0079, dtype=torch.float64)), (693, tensor(-0.0079, dtype=torch.float64)), (2523, tensor(-0.0079, dtype=torch.float64)), (42, tensor(-0.0079, dtype=torch.float64)), (99, tensor(-0.0079, dtype=torch.float64)), (167, tensor(-0.0078, dtype=torch.float64)), (1507, tensor(-0.0078, dtype=torch.float64)), (2288, tensor(-0.0078, dtype=torch.float64)), (2336, tensor(-0.0078, dtype=torch.float64)), (2015, tensor(-0.0078, dtype=torch.float64)), (1591, tensor(-0.0078, dtype=torch.float64)), (1779, tensor(-0.0078, dtype=torch.float64)), (1938, tensor(-0.0077, dtype=torch.float64)), (2485, tensor(-0.0077, dtype=torch.float64)), (1019, tensor(-0.0077, dtype=torch.float64)), (1755, tensor(-0.0077, dtype=torch.float64)), (1973, tensor(-0.0077, dtype=torch.float64)), (2119, tensor(-0.0076, dtype=torch.float64)), (2267, tensor(-0.0076, dtype=torch.float64)), (1877, tensor(-0.0076, dtype=torch.float64)), (1562, tensor(-0.0075, dtype=torch.float64)), (1262, tensor(-0.0075, dtype=torch.float64)), (1724, tensor(-0.0075, dtype=torch.float64)), (240, tensor(-0.0075, dtype=torch.float64)), (518, tensor(-0.0075, dtype=torch.float64)), (577, tensor(-0.0075, dtype=torch.float64)), (865, tensor(-0.0075, dtype=torch.float64)), (2067, tensor(-0.0074, dtype=torch.float64)), (2363, tensor(-0.0074, dtype=torch.float64)), (2090, tensor(-0.0074, dtype=torch.float64)), (1547, tensor(-0.0074, dtype=torch.float64)), (2393, tensor(-0.0074, dtype=torch.float64)), (2193, tensor(-0.0074, dtype=torch.float64)), (2274, tensor(-0.0074, dtype=torch.float64)), (2097, tensor(-0.0074, dtype=torch.float64)), (1370, tensor(-0.0074, dtype=torch.float64)), (1095, tensor(-0.0073, dtype=torch.float64)), (514, tensor(-0.0073, dtype=torch.float64)), (1518, tensor(-0.0073, dtype=torch.float64)), (2727, tensor(-0.0073, dtype=torch.float64)), (436, tensor(-0.0073, dtype=torch.float64)), (2337, tensor(-0.0072, dtype=torch.float64)), (1480, tensor(-0.0072, dtype=torch.float64)), (326, tensor(-0.0072, dtype=torch.float64)), (39, tensor(-0.0072, dtype=torch.float64)), (2586, tensor(-0.0072, dtype=torch.float64)), (645, tensor(-0.0072, dtype=torch.float64)), (654, tensor(-0.0072, dtype=torch.float64)), (1854, tensor(-0.0071, dtype=torch.float64)), (241, tensor(-0.0071, dtype=torch.float64)), (2249, tensor(-0.0071, dtype=torch.float64)), (778, tensor(-0.0071, dtype=torch.float64)), (1179, tensor(-0.0071, dtype=torch.float64)), (1669, tensor(-0.0071, dtype=torch.float64)), (2195, tensor(-0.0071, dtype=torch.float64)), (35, tensor(-0.0071, dtype=torch.float64)), (1490, tensor(-0.0070, dtype=torch.float64)), (1256, tensor(-0.0070, dtype=torch.float64)), (2194, tensor(-0.0070, dtype=torch.float64)), (849, tensor(-0.0070, dtype=torch.float64)), (1563, tensor(-0.0070, dtype=torch.float64)), (579, tensor(-0.0070, dtype=torch.float64)), (6, tensor(-0.0069, dtype=torch.float64)), (1974, tensor(-0.0069, dtype=torch.float64)), (2430, tensor(-0.0069, dtype=torch.float64)), (2410, tensor(-0.0069, dtype=torch.float64)), (2557, tensor(-0.0069, dtype=torch.float64)), (180, tensor(-0.0069, dtype=torch.float64)), (1691, tensor(-0.0069, dtype=torch.float64)), (847, tensor(-0.0069, dtype=torch.float64)), (1217, tensor(-0.0069, dtype=torch.float64)), (621, tensor(-0.0069, dtype=torch.float64)), (2103, tensor(-0.0068, dtype=torch.float64)), (1727, tensor(-0.0068, dtype=torch.float64)), (942, tensor(-0.0068, dtype=torch.float64)), (784, tensor(-0.0068, dtype=torch.float64)), (2694, tensor(-0.0068, dtype=torch.float64)), (271, tensor(-0.0067, dtype=torch.float64)), (2400, tensor(-0.0067, dtype=torch.float64)), (2693, tensor(-0.0067, dtype=torch.float64)), (1838, tensor(-0.0067, dtype=torch.float64)), (2577, tensor(-0.0067, dtype=torch.float64)), (2146, tensor(-0.0067, dtype=torch.float64)), (1694, tensor(-0.0066, dtype=torch.float64)), (536, tensor(-0.0066, dtype=torch.float64)), (2527, tensor(-0.0066, dtype=torch.float64)), (424, tensor(-0.0066, dtype=torch.float64)), (2373, tensor(-0.0066, dtype=torch.float64)), (1330, tensor(-0.0065, dtype=torch.float64)), (1829, tensor(-0.0065, dtype=torch.float64)), (2484, tensor(-0.0065, dtype=torch.float64)), (635, tensor(-0.0065, dtype=torch.float64)), (2643, tensor(-0.0065, dtype=torch.float64)), (2391, tensor(-0.0065, dtype=torch.float64)), (1345, tensor(-0.0064, dtype=torch.float64)), (805, tensor(-0.0064, dtype=torch.float64)), (1583, tensor(-0.0064, dtype=torch.float64)), (2261, tensor(-0.0064, dtype=torch.float64)), (2289, tensor(-0.0064, dtype=torch.float64)), (727, tensor(-0.0064, dtype=torch.float64)), (1919, tensor(-0.0064, dtype=torch.float64)), (275, tensor(-0.0064, dtype=torch.float64)), (4, tensor(-0.0063, dtype=torch.float64)), (1647, tensor(-0.0063, dtype=torch.float64)), (2616, tensor(-0.0063, dtype=torch.float64)), (951, tensor(-0.0062, dtype=torch.float64)), (965, tensor(-0.0062, dtype=torch.float64)), (41, tensor(-0.0062, dtype=torch.float64)), (350, tensor(-0.0062, dtype=torch.float64)), (1092, tensor(-0.0062, dtype=torch.float64)), (1341, tensor(-0.0061, dtype=torch.float64)), (2556, tensor(-0.0061, dtype=torch.float64)), (1666, tensor(-0.0061, dtype=torch.float64)), (1818, tensor(-0.0061, dtype=torch.float64)), (2213, tensor(-0.0061, dtype=torch.float64)), (2186, tensor(-0.0061, dtype=torch.float64)), (2136, tensor(-0.0061, dtype=torch.float64)), (381, tensor(-0.0060, dtype=torch.float64)), (1437, tensor(-0.0060, dtype=torch.float64)), (2502, tensor(-0.0060, dtype=torch.float64)), (337, tensor(-0.0060, dtype=torch.float64)), (852, tensor(-0.0060, dtype=torch.float64)), (1211, tensor(-0.0060, dtype=torch.float64)), (1390, tensor(-0.0060, dtype=torch.float64)), (1378, tensor(-0.0060, dtype=torch.float64)), (1444, tensor(-0.0060, dtype=torch.float64)), (425, tensor(-0.0060, dtype=torch.float64)), (959, tensor(-0.0059, dtype=torch.float64)), (417, tensor(-0.0059, dtype=torch.float64)), (1701, tensor(-0.0058, dtype=torch.float64)), (1784, tensor(-0.0058, dtype=torch.float64)), (2351, tensor(-0.0058, dtype=torch.float64)), (2197, tensor(-0.0058, dtype=torch.float64)), (270, tensor(-0.0058, dtype=torch.float64)), (519, tensor(-0.0058, dtype=torch.float64)), (2302, tensor(-0.0057, dtype=torch.float64)), (397, tensor(-0.0057, dtype=torch.float64)), (2368, tensor(-0.0057, dtype=torch.float64)), (1110, tensor(-0.0057, dtype=torch.float64)), (2203, tensor(-0.0057, dtype=torch.float64)), (1613, tensor(-0.0057, dtype=torch.float64)), (530, tensor(-0.0056, dtype=torch.float64)), (1658, tensor(-0.0056, dtype=torch.float64)), (692, tensor(-0.0056, dtype=torch.float64)), (684, tensor(-0.0056, dtype=torch.float64)), (1513, tensor(-0.0056, dtype=torch.float64)), (1043, tensor(-0.0056, dtype=torch.float64)), (1014, tensor(-0.0056, dtype=torch.float64)), (1668, tensor(-0.0055, dtype=torch.float64)), (370, tensor(-0.0055, dtype=torch.float64)), (1461, tensor(-0.0055, dtype=torch.float64)), (401, tensor(-0.0055, dtype=torch.float64)), (1914, tensor(-0.0055, dtype=torch.float64)), (1067, tensor(-0.0055, dtype=torch.float64)), (1299, tensor(-0.0055, dtype=torch.float64)), (2588, tensor(-0.0054, dtype=torch.float64)), (246, tensor(-0.0054, dtype=torch.float64)), (1036, tensor(-0.0054, dtype=torch.float64)), (1148, tensor(-0.0054, dtype=torch.float64)), (607, tensor(-0.0054, dtype=torch.float64)), (1301, tensor(-0.0054, dtype=torch.float64)), (928, tensor(-0.0054, dtype=torch.float64)), (2725, tensor(-0.0053, dtype=torch.float64)), (843, tensor(-0.0053, dtype=torch.float64)), (740, tensor(-0.0053, dtype=torch.float64)), (610, tensor(-0.0053, dtype=torch.float64)), (435, tensor(-0.0053, dtype=torch.float64)), (1385, tensor(-0.0053, dtype=torch.float64)), (166, tensor(-0.0052, dtype=torch.float64)), (1285, tensor(-0.0052, dtype=torch.float64)), (687, tensor(-0.0052, dtype=torch.float64)), (1876, tensor(-0.0052, dtype=torch.float64)), (1851, tensor(-0.0052, dtype=torch.float64)), (988, tensor(-0.0052, dtype=torch.float64)), (1600, tensor(-0.0052, dtype=torch.float64)), (1855, tensor(-0.0052, dtype=torch.float64)), (2628, tensor(-0.0052, dtype=torch.float64)), (314, tensor(-0.0052, dtype=torch.float64)), (325, tensor(-0.0052, dtype=torch.float64)), (294, tensor(-0.0052, dtype=torch.float64)), (2397, tensor(-0.0051, dtype=torch.float64)), (1526, tensor(-0.0051, dtype=torch.float64)), (1824, tensor(-0.0051, dtype=torch.float64)), (619, tensor(-0.0051, dtype=torch.float64)), (870, tensor(-0.0051, dtype=torch.float64)), (1337, tensor(-0.0050, dtype=torch.float64)), (2057, tensor(-0.0050, dtype=torch.float64)), (474, tensor(-0.0050, dtype=torch.float64)), (2330, tensor(-0.0050, dtype=torch.float64)), (1864, tensor(-0.0050, dtype=torch.float64)), (1915, tensor(-0.0049, dtype=torch.float64)), (50, tensor(-0.0049, dtype=torch.float64)), (281, tensor(-0.0049, dtype=torch.float64)), (2704, tensor(-0.0049, dtype=torch.float64)), (916, tensor(-0.0049, dtype=torch.float64)), (1156, tensor(-0.0049, dtype=torch.float64)), (1622, tensor(-0.0049, dtype=torch.float64)), (2366, tensor(-0.0048, dtype=torch.float64)), (797, tensor(-0.0048, dtype=torch.float64)), (38, tensor(-0.0048, dtype=torch.float64)), (449, tensor(-0.0048, dtype=torch.float64)), (111, tensor(-0.0047, dtype=torch.float64)), (710, tensor(-0.0047, dtype=torch.float64)), (885, tensor(-0.0047, dtype=torch.float64)), (305, tensor(-0.0047, dtype=torch.float64)), (15, tensor(-0.0047, dtype=torch.float64)), (1386, tensor(-0.0047, dtype=torch.float64)), (409, tensor(-0.0046, dtype=torch.float64)), (411, tensor(-0.0046, dtype=torch.float64)), (1310, tensor(-0.0046, dtype=torch.float64)), (2064, tensor(-0.0046, dtype=torch.float64)), (963, tensor(-0.0046, dtype=torch.float64)), (2041, tensor(-0.0046, dtype=torch.float64)), (2476, tensor(-0.0046, dtype=torch.float64)), (1732, tensor(-0.0046, dtype=torch.float64)), (801, tensor(-0.0046, dtype=torch.float64)), (1928, tensor(-0.0046, dtype=torch.float64)), (650, tensor(-0.0045, dtype=torch.float64)), (2187, tensor(-0.0045, dtype=torch.float64)), (190, tensor(-0.0045, dtype=torch.float64)), (786, tensor(-0.0045, dtype=torch.float64)), (764, tensor(-0.0045, dtype=torch.float64)), (854, tensor(-0.0045, dtype=torch.float64)), (2166, tensor(-0.0045, dtype=torch.float64)), (332, tensor(-0.0045, dtype=torch.float64)), (239, tensor(-0.0044, dtype=torch.float64)), (1574, tensor(-0.0044, dtype=torch.float64)), (2182, tensor(-0.0044, dtype=torch.float64)), (512, tensor(-0.0044, dtype=torch.float64)), (947, tensor(-0.0044, dtype=torch.float64)), (537, tensor(-0.0044, dtype=torch.float64)), (1573, tensor(-0.0043, dtype=torch.float64)), (1958, tensor(-0.0043, dtype=torch.float64)), (1099, tensor(-0.0043, dtype=torch.float64)), (96, tensor(-0.0043, dtype=torch.float64)), (2039, tensor(-0.0043, dtype=torch.float64)), (2539, tensor(-0.0043, dtype=torch.float64)), (1890, tensor(-0.0043, dtype=torch.float64)), (37, tensor(-0.0043, dtype=torch.float64)), (1627, tensor(-0.0043, dtype=torch.float64)), (203, tensor(-0.0042, dtype=torch.float64)), (1917, tensor(-0.0042, dtype=torch.float64)), (561, tensor(-0.0042, dtype=torch.float64)), (490, tensor(-0.0042, dtype=torch.float64)), (1447, tensor(-0.0042, dtype=torch.float64)), (2037, tensor(-0.0042, dtype=torch.float64)), (34, tensor(-0.0041, dtype=torch.float64)), (1094, tensor(-0.0041, dtype=torch.float64)), (555, tensor(-0.0041, dtype=torch.float64)), (2070, tensor(-0.0041, dtype=torch.float64)), (714, tensor(-0.0041, dtype=torch.float64)), (2613, tensor(-0.0041, dtype=torch.float64)), (1844, tensor(-0.0040, dtype=torch.float64)), (384, tensor(-0.0040, dtype=torch.float64)), (301, tensor(-0.0040, dtype=torch.float64)), (1951, tensor(-0.0040, dtype=torch.float64)), (1557, tensor(-0.0040, dtype=torch.float64)), (1292, tensor(-0.0040, dtype=torch.float64)), (731, tensor(-0.0039, dtype=torch.float64)), (818, tensor(-0.0039, dtype=torch.float64)), (1509, tensor(-0.0039, dtype=torch.float64)), (944, tensor(-0.0039, dtype=torch.float64)), (975, tensor(-0.0039, dtype=torch.float64)), (2055, tensor(-0.0039, dtype=torch.float64)), (248, tensor(-0.0039, dtype=torch.float64)), (2319, tensor(-0.0039, dtype=torch.float64)), (344, tensor(-0.0039, dtype=torch.float64)), (1022, tensor(-0.0039, dtype=torch.float64)), (1238, tensor(-0.0039, dtype=torch.float64)), (2668, tensor(-0.0038, dtype=torch.float64)), (345, tensor(-0.0038, dtype=torch.float64)), (2415, tensor(-0.0038, dtype=torch.float64)), (1431, tensor(-0.0038, dtype=torch.float64)), (809, tensor(-0.0038, dtype=torch.float64)), (2459, tensor(-0.0038, dtype=torch.float64)), (25, tensor(-0.0038, dtype=torch.float64)), (994, tensor(-0.0038, dtype=torch.float64)), (2148, tensor(-0.0038, dtype=torch.float64)), (418, tensor(-0.0038, dtype=torch.float64)), (1542, tensor(-0.0037, dtype=torch.float64)), (652, tensor(-0.0037, dtype=torch.float64)), (164, tensor(-0.0037, dtype=torch.float64)), (2043, tensor(-0.0037, dtype=torch.float64)), (1964, tensor(-0.0037, dtype=torch.float64)), (88, tensor(-0.0037, dtype=torch.float64)), (2092, tensor(-0.0037, dtype=torch.float64)), (2339, tensor(-0.0037, dtype=torch.float64)), (20, tensor(-0.0037, dtype=torch.float64)), (1229, tensor(-0.0037, dtype=torch.float64)), (2555, tensor(-0.0037, dtype=torch.float64)), (236, tensor(-0.0037, dtype=torch.float64)), (2300, tensor(-0.0036, dtype=torch.float64)), (1250, tensor(-0.0036, dtype=torch.float64)), (1452, tensor(-0.0036, dtype=torch.float64)), (2492, tensor(-0.0036, dtype=torch.float64)), (172, tensor(-0.0036, dtype=torch.float64)), (1599, tensor(-0.0036, dtype=torch.float64)), (1918, tensor(-0.0036, dtype=torch.float64)), (1411, tensor(-0.0036, dtype=torch.float64)), (1052, tensor(-0.0036, dtype=torch.float64)), (2408, tensor(-0.0035, dtype=torch.float64)), (1493, tensor(-0.0035, dtype=torch.float64)), (1500, tensor(-0.0034, dtype=torch.float64)), (629, tensor(-0.0034, dtype=torch.float64)), (1226, tensor(-0.0034, dtype=torch.float64)), (1840, tensor(-0.0034, dtype=torch.float64)), (1000, tensor(-0.0034, dtype=torch.float64)), (1860, tensor(-0.0034, dtype=torch.float64)), (2377, tensor(-0.0034, dtype=torch.float64)), (1571, tensor(-0.0034, dtype=torch.float64)), (1977, tensor(-0.0033, dtype=torch.float64)), (2537, tensor(-0.0033, dtype=torch.float64)), (2446, tensor(-0.0033, dtype=torch.float64)), (884, tensor(-0.0033, dtype=torch.float64)), (902, tensor(-0.0033, dtype=torch.float64)), (1612, tensor(-0.0033, dtype=torch.float64)), (792, tensor(-0.0033, dtype=torch.float64)), (1312, tensor(-0.0032, dtype=torch.float64)), (1326, tensor(-0.0032, dtype=torch.float64)), (329, tensor(-0.0032, dtype=torch.float64)), (2016, tensor(-0.0032, dtype=torch.float64)), (1040, tensor(-0.0032, dtype=torch.float64)), (279, tensor(-0.0031, dtype=torch.float64)), (2731, tensor(-0.0031, dtype=torch.float64)), (1580, tensor(-0.0031, dtype=torch.float64)), (857, tensor(-0.0031, dtype=torch.float64)), (835, tensor(-0.0031, dtype=torch.float64)), (2674, tensor(-0.0031, dtype=torch.float64)), (2309, tensor(-0.0031, dtype=torch.float64)), (1269, tensor(-0.0031, dtype=torch.float64)), (73, tensor(-0.0031, dtype=torch.float64)), (2691, tensor(-0.0031, dtype=torch.float64)), (1978, tensor(-0.0031, dtype=torch.float64)), (137, tensor(-0.0030, dtype=torch.float64)), (1522, tensor(-0.0030, dtype=torch.float64)), (366, tensor(-0.0030, dtype=torch.float64)), (1400, tensor(-0.0030, dtype=torch.float64)), (2322, tensor(-0.0030, dtype=torch.float64)), (1021, tensor(-0.0030, dtype=torch.float64)), (228, tensor(-0.0030, dtype=torch.float64)), (1440, tensor(-0.0029, dtype=torch.float64)), (2122, tensor(-0.0029, dtype=torch.float64)), (2276, tensor(-0.0029, dtype=torch.float64)), (210, tensor(-0.0029, dtype=torch.float64)), (990, tensor(-0.0029, dtype=torch.float64)), (2075, tensor(-0.0029, dtype=torch.float64)), (2087, tensor(-0.0029, dtype=torch.float64)), (1311, tensor(-0.0028, dtype=torch.float64)), (1808, tensor(-0.0028, dtype=torch.float64)), (2401, tensor(-0.0028, dtype=torch.float64)), (0, tensor(-0.0028, dtype=torch.float64)), (1745, tensor(-0.0028, dtype=torch.float64)), (1729, tensor(-0.0028, dtype=torch.float64)), (1852, tensor(-0.0028, dtype=torch.float64)), (150, tensor(-0.0028, dtype=torch.float64)), (2696, tensor(-0.0028, dtype=torch.float64)), (1116, tensor(-0.0028, dtype=torch.float64)), (2385, tensor(-0.0028, dtype=torch.float64)), (1637, tensor(-0.0028, dtype=torch.float64)), (1028, tensor(-0.0028, dtype=torch.float64)), (735, tensor(-0.0027, dtype=torch.float64)), (715, tensor(-0.0027, dtype=torch.float64)), (2149, tensor(-0.0027, dtype=torch.float64)), (789, tensor(-0.0027, dtype=torch.float64)), (1887, tensor(-0.0027, dtype=torch.float64)), (989, tensor(-0.0027, dtype=torch.float64)), (2515, tensor(-0.0026, dtype=torch.float64)), (1382, tensor(-0.0026, dtype=torch.float64)), (1572, tensor(-0.0026, dtype=torch.float64)), (46, tensor(-0.0026, dtype=torch.float64)), (2128, tensor(-0.0026, dtype=torch.float64)), (1006, tensor(-0.0026, dtype=torch.float64)), (1160, tensor(-0.0026, dtype=torch.float64)), (1483, tensor(-0.0026, dtype=torch.float64)), (506, tensor(-0.0026, dtype=torch.float64)), (2490, tensor(-0.0026, dtype=torch.float64)), (982, tensor(-0.0026, dtype=torch.float64)), (1045, tensor(-0.0026, dtype=torch.float64)), (1927, tensor(-0.0025, dtype=torch.float64)), (1478, tensor(-0.0025, dtype=torch.float64)), (93, tensor(-0.0025, dtype=torch.float64)), (2644, tensor(-0.0025, dtype=torch.float64)), (1988, tensor(-0.0025, dtype=torch.float64)), (2134, tensor(-0.0025, dtype=torch.float64)), (2580, tensor(-0.0025, dtype=torch.float64)), (2129, tensor(-0.0025, dtype=torch.float64)), (1314, tensor(-0.0024, dtype=torch.float64)), (2477, tensor(-0.0024, dtype=torch.float64)), (2585, tensor(-0.0024, dtype=torch.float64)), (817, tensor(-0.0024, dtype=torch.float64)), (1797, tensor(-0.0024, dtype=torch.float64)), (2660, tensor(-0.0024, dtype=torch.float64)), (1907, tensor(-0.0024, dtype=torch.float64)), (2278, tensor(-0.0024, dtype=torch.float64)), (888, tensor(-0.0023, dtype=torch.float64)), (1191, tensor(-0.0023, dtype=torch.float64)), (394, tensor(-0.0023, dtype=torch.float64)), (533, tensor(-0.0023, dtype=torch.float64)), (2692, tensor(-0.0023, dtype=torch.float64)), (2609, tensor(-0.0023, dtype=torch.float64)), (1041, tensor(-0.0023, dtype=torch.float64)), (2702, tensor(-0.0022, dtype=torch.float64)), (1412, tensor(-0.0022, dtype=torch.float64)), (54, tensor(-0.0022, dtype=torch.float64)), (1076, tensor(-0.0022, dtype=torch.float64)), (1438, tensor(-0.0022, dtype=torch.float64)), (447, tensor(-0.0022, dtype=torch.float64)), (1815, tensor(-0.0022, dtype=torch.float64)), (2548, tensor(-0.0022, dtype=torch.float64)), (2444, tensor(-0.0022, dtype=torch.float64)), (61, tensor(-0.0022, dtype=torch.float64)), (342, tensor(-0.0022, dtype=torch.float64)), (2509, tensor(-0.0022, dtype=torch.float64)), (157, tensor(-0.0022, dtype=torch.float64)), (2266, tensor(-0.0021, dtype=torch.float64)), (1149, tensor(-0.0021, dtype=torch.float64)), (1088, tensor(-0.0021, dtype=torch.float64)), (2050, tensor(-0.0021, dtype=torch.float64)), (1712, tensor(-0.0021, dtype=torch.float64)), (1220, tensor(-0.0021, dtype=torch.float64)), (1880, tensor(-0.0021, dtype=torch.float64)), (1395, tensor(-0.0021, dtype=torch.float64)), (2209, tensor(-0.0021, dtype=torch.float64)), (2000, tensor(-0.0021, dtype=torch.float64)), (2205, tensor(-0.0020, dtype=torch.float64)), (365, tensor(-0.0020, dtype=torch.float64)), (1894, tensor(-0.0020, dtype=torch.float64)), (599, tensor(-0.0020, dtype=torch.float64)), (2735, tensor(-0.0020, dtype=torch.float64)), (2620, tensor(-0.0020, dtype=torch.float64)), (487, tensor(-0.0020, dtype=torch.float64)), (1335, tensor(-0.0020, dtype=torch.float64)), (1760, tensor(-0.0019, dtype=torch.float64)), (1288, tensor(-0.0019, dtype=torch.float64)), (477, tensor(-0.0019, dtype=torch.float64)), (171, tensor(-0.0019, dtype=torch.float64)), (1183, tensor(-0.0019, dtype=torch.float64)), (2279, tensor(-0.0019, dtype=torch.float64)), (548, tensor(-0.0019, dtype=torch.float64)), (601, tensor(-0.0019, dtype=torch.float64)), (1856, tensor(-0.0019, dtype=torch.float64)), (1648, tensor(-0.0019, dtype=torch.float64)), (1643, tensor(-0.0019, dtype=torch.float64)), (2009, tensor(-0.0019, dtype=torch.float64)), (2116, tensor(-0.0019, dtype=torch.float64)), (1846, tensor(-0.0018, dtype=torch.float64)), (3, tensor(-0.0018, dtype=torch.float64)), (2225, tensor(-0.0018, dtype=torch.float64)), (1319, tensor(-0.0018, dtype=torch.float64)), (310, tensor(-0.0018, dtype=torch.float64)), (2708, tensor(-0.0018, dtype=torch.float64)), (2553, tensor(-0.0018, dtype=torch.float64)), (306, tensor(-0.0017, dtype=torch.float64)), (507, tensor(-0.0017, dtype=torch.float64)), (2738, tensor(-0.0017, dtype=torch.float64)), (45, tensor(-0.0017, dtype=torch.float64)), (2212, tensor(-0.0017, dtype=torch.float64)), (2069, tensor(-0.0017, dtype=torch.float64)), (2293, tensor(-0.0017, dtype=torch.float64)), (1258, tensor(-0.0017, dtype=torch.float64)), (303, tensor(-0.0017, dtype=torch.float64)), (1774, tensor(-0.0017, dtype=torch.float64)), (2299, tensor(-0.0017, dtype=torch.float64)), (1789, tensor(-0.0016, dtype=torch.float64)), (1929, tensor(-0.0016, dtype=torch.float64)), (283, tensor(-0.0016, dtype=torch.float64)), (556, tensor(-0.0016, dtype=torch.float64)), (733, tensor(-0.0016, dtype=torch.float64)), (2003, tensor(-0.0016, dtype=torch.float64)), (1706, tensor(-0.0016, dtype=torch.float64)), (2073, tensor(-0.0016, dtype=torch.float64)), (612, tensor(-0.0016, dtype=torch.float64)), (2659, tensor(-0.0016, dtype=torch.float64)), (1716, tensor(-0.0015, dtype=torch.float64)), (1275, tensor(-0.0015, dtype=torch.float64)), (1809, tensor(-0.0015, dtype=torch.float64)), (1577, tensor(-0.0015, dtype=torch.float64)), (1492, tensor(-0.0015, dtype=torch.float64)), (2494, tensor(-0.0015, dtype=torch.float64)), (2667, tensor(-0.0015, dtype=torch.float64)), (68, tensor(-0.0015, dtype=torch.float64)), (775, tensor(-0.0015, dtype=torch.float64)), (1404, tensor(-0.0015, dtype=torch.float64)), (1033, tensor(-0.0014, dtype=torch.float64)), (1705, tensor(-0.0014, dtype=torch.float64)), (276, tensor(-0.0014, dtype=torch.float64)), (500, tensor(-0.0014, dtype=torch.float64)), (1961, tensor(-0.0014, dtype=torch.float64)), (2547, tensor(-0.0014, dtype=torch.float64)), (2220, tensor(-0.0014, dtype=torch.float64)), (2526, tensor(-0.0014, dtype=torch.float64)), (2429, tensor(-0.0014, dtype=torch.float64)), (2219, tensor(-0.0014, dtype=torch.float64)), (1479, tensor(-0.0014, dtype=torch.float64)), (243, tensor(-0.0014, dtype=torch.float64)), (2053, tensor(-0.0014, dtype=torch.float64)), (2560, tensor(-0.0014, dtype=torch.float64)), (1721, tensor(-0.0014, dtype=torch.float64)), (1166, tensor(-0.0014, dtype=torch.float64)), (56, tensor(-0.0013, dtype=torch.float64)), (910, tensor(-0.0013, dtype=torch.float64)), (1769, tensor(-0.0013, dtype=torch.float64)), (1163, tensor(-0.0013, dtype=torch.float64)), (221, tensor(-0.0013, dtype=torch.float64)), (322, tensor(-0.0013, dtype=torch.float64)), (1884, tensor(-0.0013, dtype=torch.float64)), (2333, tensor(-0.0012, dtype=torch.float64)), (2714, tensor(-0.0012, dtype=torch.float64)), (1298, tensor(-0.0012, dtype=torch.float64)), (2732, tensor(-0.0012, dtype=torch.float64)), (1422, tensor(-0.0012, dtype=torch.float64)), (1223, tensor(-0.0012, dtype=torch.float64)), (661, tensor(-0.0012, dtype=torch.float64)), (189, tensor(-0.0012, dtype=torch.float64)), (327, tensor(-0.0012, dtype=torch.float64)), (1804, tensor(-0.0012, dtype=torch.float64)), (2529, tensor(-0.0012, dtype=torch.float64)), (1504, tensor(-0.0011, dtype=torch.float64)), (1993, tensor(-0.0011, dtype=torch.float64)), (2664, tensor(-0.0011, dtype=torch.float64)), (939, tensor(-0.0011, dtype=torch.float64)), (510, tensor(-0.0011, dtype=torch.float64)), (2589, tensor(-0.0011, dtype=torch.float64)), (266, tensor(-0.0011, dtype=torch.float64)), (1568, tensor(-0.0011, dtype=torch.float64)), (1244, tensor(-0.0011, dtype=torch.float64)), (1740, tensor(-0.0011, dtype=torch.float64)), (32, tensor(-0.0011, dtype=torch.float64)), (981, tensor(-0.0011, dtype=torch.float64)), (40, tensor(-0.0010, dtype=torch.float64)), (18, tensor(-0.0010, dtype=torch.float64)), (1212, tensor(-0.0010, dtype=torch.float64)), (1963, tensor(-0.0010, dtype=torch.float64)), (98, tensor(-0.0010, dtype=torch.float64)), (754, tensor(-0.0010, dtype=torch.float64)), (311, tensor(-0.0010, dtype=torch.float64)), (2027, tensor(-0.0010, dtype=torch.float64)), (923, tensor(-0.0009, dtype=torch.float64)), (390, tensor(-0.0009, dtype=torch.float64)), (1140, tensor(-0.0009, dtype=torch.float64)), (1566, tensor(-0.0009, dtype=torch.float64)), (589, tensor(-0.0009, dtype=torch.float64)), (2095, tensor(-0.0009, dtype=torch.float64)), (2632, tensor(-0.0009, dtype=torch.float64)), (1358, tensor(-0.0009, dtype=torch.float64)), (787, tensor(-0.0009, dtype=torch.float64)), (2488, tensor(-0.0009, dtype=torch.float64)), (1767, tensor(-0.0008, dtype=torch.float64)), (1968, tensor(-0.0008, dtype=torch.float64)), (2367, tensor(-0.0008, dtype=torch.float64)), (87, tensor(-0.0008, dtype=torch.float64)), (1090, tensor(-0.0008, dtype=torch.float64)), (2248, tensor(-0.0008, dtype=torch.float64)), (567, tensor(-0.0008, dtype=torch.float64)), (624, tensor(-0.0008, dtype=torch.float64)), (691, tensor(-0.0008, dtype=torch.float64)), (933, tensor(-0.0007, dtype=torch.float64)), (2227, tensor(-0.0007, dtype=torch.float64)), (382, tensor(-0.0007, dtype=torch.float64)), (1930, tensor(-0.0007, dtype=torch.float64)), (2084, tensor(-0.0007, dtype=torch.float64)), (1053, tensor(-0.0007, dtype=torch.float64)), (802, tensor(-0.0007, dtype=torch.float64)), (2549, tensor(-0.0007, dtype=torch.float64)), (2125, tensor(-0.0007, dtype=torch.float64)), (1026, tensor(-0.0007, dtype=torch.float64)), (586, tensor(-0.0006, dtype=torch.float64)), (2618, tensor(-0.0006, dtype=torch.float64)), (2051, tensor(-0.0006, dtype=torch.float64)), (1751, tensor(-0.0006, dtype=torch.float64)), (1920, tensor(-0.0006, dtype=torch.float64)), (819, tensor(-0.0006, dtype=torch.float64)), (113, tensor(-0.0005, dtype=torch.float64)), (791, tensor(-0.0005, dtype=torch.float64)), (2021, tensor(-0.0005, dtype=torch.float64)), (481, tensor(-0.0005, dtype=torch.float64)), (2283, tensor(-0.0005, dtype=torch.float64)), (1498, tensor(-0.0005, dtype=torch.float64)), (1517, tensor(-0.0005, dtype=torch.float64)), (829, tensor(-0.0005, dtype=torch.float64)), (1304, tensor(-0.0004, dtype=torch.float64)), (2172, tensor(-0.0004, dtype=torch.float64)), (909, tensor(-0.0004, dtype=torch.float64)), (1830, tensor(-0.0004, dtype=torch.float64)), (1611, tensor(-0.0004, dtype=torch.float64)), (1354, tensor(-0.0003, dtype=torch.float64)), (1206, tensor(-0.0003, dtype=torch.float64)), (1553, tensor(-0.0003, dtype=torch.float64)), (2687, tensor(-0.0003, dtype=torch.float64)), (719, tensor(-0.0002, dtype=torch.float64)), (391, tensor(-0.0002, dtype=torch.float64)), (1955, tensor(-5.5121e-05, dtype=torch.float64))]
annotated_samples_num: 937
unannotated_samples_num: 2607
update datapool!
annotated_samples_num: 937
unannotated_samples_num: 2607
iter: 5
annotated_samples_num: 937
unannotated_samples_num: 2607
Epoch [1/10], Batch [1/117], Loss: 3.6662
Epoch [1/10], Batch [2/117], Loss: 2.8552
Epoch [1/10], Batch [3/117], Loss: 3.0601
Epoch [1/10], Batch [4/117], Loss: 2.4631
Epoch [1/10], Batch [5/117], Loss: 1.7862
Epoch [1/10], Batch [6/117], Loss: 1.6165
Epoch [1/10], Batch [7/117], Loss: 1.2041
Epoch [1/10], Batch [8/117], Loss: 0.9851
Epoch [1/10], Batch [9/117], Loss: 0.9949
Epoch [1/10], Batch [10/117], Loss: 0.6565
Epoch [1/10], Batch [11/117], Loss: 1.4079
Epoch [1/10], Batch [12/117], Loss: 0.8921
Epoch [1/10], Batch [13/117], Loss: 0.6497
Epoch [1/10], Batch [14/117], Loss: 0.5674
Epoch [1/10], Batch [15/117], Loss: 0.6291
Epoch [1/10], Batch [16/117], Loss: 0.4713
Epoch [1/10], Batch [17/117], Loss: 0.7136
Epoch [1/10], Batch [18/117], Loss: 0.3657
Epoch [1/10], Batch [19/117], Loss: 0.8593
Epoch [1/10], Batch [20/117], Loss: 0.5361
Epoch [1/10], Batch [21/117], Loss: 0.5040
Epoch [1/10], Batch [22/117], Loss: 0.7057
Epoch [1/10], Batch [23/117], Loss: 0.3213
Epoch [1/10], Batch [24/117], Loss: 0.3429
Epoch [1/10], Batch [25/117], Loss: 0.4543
Epoch [1/10], Batch [26/117], Loss: 0.6081
Epoch [1/10], Batch [27/117], Loss: 0.5500
Epoch [1/10], Batch [28/117], Loss: 0.2835
Epoch [1/10], Batch [29/117], Loss: 0.2945
Epoch [1/10], Batch [30/117], Loss: 0.5470
Epoch [1/10], Batch [31/117], Loss: 0.4477
Epoch [1/10], Batch [32/117], Loss: 0.6210
Epoch [1/10], Batch [33/117], Loss: 0.7930
Epoch [1/10], Batch [34/117], Loss: 0.3732
Epoch [1/10], Batch [35/117], Loss: 0.3742
Epoch [1/10], Batch [36/117], Loss: 0.7460
Epoch [1/10], Batch [37/117], Loss: 0.4499
Epoch [1/10], Batch [38/117], Loss: 0.4080
Epoch [1/10], Batch [39/117], Loss: 0.3992
Epoch [1/10], Batch [40/117], Loss: 0.4302
Epoch [1/10], Batch [41/117], Loss: 0.7611
Epoch [1/10], Batch [42/117], Loss: 0.7089
Epoch [1/10], Batch [43/117], Loss: 0.5913
Epoch [1/10], Batch [44/117], Loss: 0.6175
Epoch [1/10], Batch [45/117], Loss: 0.3653
Epoch [1/10], Batch [46/117], Loss: 0.3858
Epoch [1/10], Batch [47/117], Loss: 0.3540
Epoch [1/10], Batch [48/117], Loss: 0.6531
Epoch [1/10], Batch [49/117], Loss: 0.2450
Epoch [1/10], Batch [50/117], Loss: 0.5307
Epoch [1/10], Batch [51/117], Loss: 0.3440
Epoch [1/10], Batch [52/117], Loss: 0.2941
Epoch [1/10], Batch [53/117], Loss: 0.3422
Epoch [1/10], Batch [54/117], Loss: 0.3317
Epoch [1/10], Batch [55/117], Loss: 0.5186
Epoch [1/10], Batch [56/117], Loss: 0.3882
Epoch [1/10], Batch [57/117], Loss: 0.2350
Epoch [1/10], Batch [58/117], Loss: 0.6300
Epoch [1/10], Batch [59/117], Loss: 0.4812
Epoch [1/10], Batch [60/117], Loss: 0.2773
Epoch [1/10], Batch [61/117], Loss: 0.3561
Epoch [1/10], Batch [62/117], Loss: 0.2890
Epoch [1/10], Batch [63/117], Loss: 0.4193
Epoch [1/10], Batch [64/117], Loss: 0.3231
Epoch [1/10], Batch [65/117], Loss: 0.3465
Epoch [1/10], Batch [66/117], Loss: 0.3743
Epoch [1/10], Batch [67/117], Loss: 0.2001
Epoch [1/10], Batch [68/117], Loss: 0.3004
Epoch [1/10], Batch [69/117], Loss: 0.1894
Epoch [1/10], Batch [70/117], Loss: 0.4783
Epoch [1/10], Batch [71/117], Loss: 0.4304
Epoch [1/10], Batch [72/117], Loss: 0.5513
Epoch [1/10], Batch [73/117], Loss: 0.3244
Epoch [1/10], Batch [74/117], Loss: 0.4124
Epoch [1/10], Batch [75/117], Loss: 0.3288
Epoch [1/10], Batch [76/117], Loss: 0.3376
Epoch [1/10], Batch [77/117], Loss: 0.2812
Epoch [1/10], Batch [78/117], Loss: 0.3540
Epoch [1/10], Batch [79/117], Loss: 0.2914
Epoch [1/10], Batch [80/117], Loss: 0.3530
Epoch [1/10], Batch [81/117], Loss: 0.4043
Epoch [1/10], Batch [82/117], Loss: 0.2956
Epoch [1/10], Batch [83/117], Loss: 0.2746
Epoch [1/10], Batch [84/117], Loss: 0.4110
Epoch [1/10], Batch [85/117], Loss: 0.4975
Epoch [1/10], Batch [86/117], Loss: 0.2629
Epoch [1/10], Batch [87/117], Loss: 0.2253
Epoch [1/10], Batch [88/117], Loss: 0.2896
Epoch [1/10], Batch [89/117], Loss: 0.7159
Epoch [1/10], Batch [90/117], Loss: 0.4686
Epoch [1/10], Batch [91/117], Loss: 0.5904
Epoch [1/10], Batch [92/117], Loss: 0.4046
Epoch [1/10], Batch [93/117], Loss: 0.3425
Epoch [1/10], Batch [94/117], Loss: 0.3860
Epoch [1/10], Batch [95/117], Loss: 0.3690
Epoch [1/10], Batch [96/117], Loss: 0.2403
Epoch [1/10], Batch [97/117], Loss: 0.3534
Epoch [1/10], Batch [98/117], Loss: 0.4732
Epoch [1/10], Batch [99/117], Loss: 0.2733
Epoch [1/10], Batch [100/117], Loss: 0.3748
Epoch [1/10], Batch [101/117], Loss: 0.4326
Epoch [1/10], Batch [102/117], Loss: 0.1876
Epoch [1/10], Batch [103/117], Loss: 0.4910
Epoch [1/10], Batch [104/117], Loss: 0.3544
Epoch [1/10], Batch [105/117], Loss: 0.3360
Epoch [1/10], Batch [106/117], Loss: 0.1992
Epoch [1/10], Batch [107/117], Loss: 0.4751
Epoch [1/10], Batch [108/117], Loss: 0.5867
Epoch [1/10], Batch [109/117], Loss: 0.6474
Epoch [1/10], Batch [110/117], Loss: 0.3059
Epoch [1/10], Batch [111/117], Loss: 0.2409
Epoch [1/10], Batch [112/117], Loss: 0.3160
Epoch [1/10], Batch [113/117], Loss: 0.6045
Epoch [1/10], Batch [114/117], Loss: 0.5317
Epoch [1/10], Batch [115/117], Loss: 0.6084
Epoch [1/10], Batch [116/117], Loss: 0.2426
Epoch [1/10], Batch [117/117], Loss: 0.4170
Epoch [1/10], Average Loss: 0.5697
-----------------------------------------------------------
strategy: BEAM
iter: 5
epoch: 0
Test Loss: 0.2875
F1_overall: 0.5206
F1_AGENT: 0.6704
F1_TARGET: 0.3502
-----------------------------------------------------------
Epoch [2/10], Batch [1/117], Loss: 0.3246
Epoch [2/10], Batch [2/117], Loss: 0.2517
Epoch [2/10], Batch [3/117], Loss: 0.2074
Epoch [2/10], Batch [4/117], Loss: 0.1387
Epoch [2/10], Batch [5/117], Loss: 0.2037
Epoch [2/10], Batch [6/117], Loss: 0.3265
Epoch [2/10], Batch [7/117], Loss: 0.3091
Epoch [2/10], Batch [8/117], Loss: 0.5403
Epoch [2/10], Batch [9/117], Loss: 0.3862
Epoch [2/10], Batch [10/117], Loss: 0.4762
Epoch [2/10], Batch [11/117], Loss: 0.4596
Epoch [2/10], Batch [12/117], Loss: 0.4107
Epoch [2/10], Batch [13/117], Loss: 0.3650
Epoch [2/10], Batch [14/117], Loss: 0.1623
Epoch [2/10], Batch [15/117], Loss: 0.2204
Epoch [2/10], Batch [16/117], Loss: 0.3244
Epoch [2/10], Batch [17/117], Loss: 0.2892
Epoch [2/10], Batch [18/117], Loss: 0.1844
Epoch [2/10], Batch [19/117], Loss: 0.2653
Epoch [2/10], Batch [20/117], Loss: 0.2038
Epoch [2/10], Batch [21/117], Loss: 0.2178
Epoch [2/10], Batch [22/117], Loss: 0.2933
Epoch [2/10], Batch [23/117], Loss: 0.3290
Epoch [2/10], Batch [24/117], Loss: 0.5067
Epoch [2/10], Batch [25/117], Loss: 0.3284
Epoch [2/10], Batch [26/117], Loss: 0.1708
Epoch [2/10], Batch [27/117], Loss: 0.1327
Epoch [2/10], Batch [28/117], Loss: 0.1333
Epoch [2/10], Batch [29/117], Loss: 0.2004
Epoch [2/10], Batch [30/117], Loss: 0.2363
Epoch [2/10], Batch [31/117], Loss: 0.1312
Epoch [2/10], Batch [32/117], Loss: 0.2103
Epoch [2/10], Batch [33/117], Loss: 0.0949
Epoch [2/10], Batch [34/117], Loss: 0.1952
Epoch [2/10], Batch [35/117], Loss: 0.1494
Epoch [2/10], Batch [36/117], Loss: 0.1449
Epoch [2/10], Batch [37/117], Loss: 0.4594
Epoch [2/10], Batch [38/117], Loss: 0.2639
Epoch [2/10], Batch [39/117], Loss: 0.2544
Epoch [2/10], Batch [40/117], Loss: 0.4422
Epoch [2/10], Batch [41/117], Loss: 0.3595
Epoch [2/10], Batch [42/117], Loss: 0.2010
Epoch [2/10], Batch [43/117], Loss: 0.2551
Epoch [2/10], Batch [44/117], Loss: 0.3096
Epoch [2/10], Batch [45/117], Loss: 0.4369
Epoch [2/10], Batch [46/117], Loss: 0.3146
Epoch [2/10], Batch [47/117], Loss: 0.2595
Epoch [2/10], Batch [48/117], Loss: 0.3800
Epoch [2/10], Batch [49/117], Loss: 0.2988
Epoch [2/10], Batch [50/117], Loss: 0.4215
Epoch [2/10], Batch [51/117], Loss: 0.2025
Epoch [2/10], Batch [52/117], Loss: 0.2182
Epoch [2/10], Batch [53/117], Loss: 0.2171
Epoch [2/10], Batch [54/117], Loss: 0.2670
Epoch [2/10], Batch [55/117], Loss: 0.2198
Epoch [2/10], Batch [56/117], Loss: 0.2792
Epoch [2/10], Batch [57/117], Loss: 0.2900
Epoch [2/10], Batch [58/117], Loss: 0.2677
Epoch [2/10], Batch [59/117], Loss: 0.2872
Epoch [2/10], Batch [60/117], Loss: 0.2966
Epoch [2/10], Batch [61/117], Loss: 0.1341
Epoch [2/10], Batch [62/117], Loss: 0.2047
Epoch [2/10], Batch [63/117], Loss: 0.2285
Epoch [2/10], Batch [64/117], Loss: 0.2732
Epoch [2/10], Batch [65/117], Loss: 0.1666
Epoch [2/10], Batch [66/117], Loss: 0.2767
Epoch [2/10], Batch [67/117], Loss: 0.1104
Epoch [2/10], Batch [68/117], Loss: 0.5457
Epoch [2/10], Batch [69/117], Loss: 0.3722
Epoch [2/10], Batch [70/117], Loss: 0.2889
Epoch [2/10], Batch [71/117], Loss: 0.1669
Epoch [2/10], Batch [72/117], Loss: 0.4373
Epoch [2/10], Batch [73/117], Loss: 0.2055
Epoch [2/10], Batch [74/117], Loss: 0.2995
Epoch [2/10], Batch [75/117], Loss: 0.2669
Epoch [2/10], Batch [76/117], Loss: 0.2735
Epoch [2/10], Batch [77/117], Loss: 0.2497
Epoch [2/10], Batch [78/117], Loss: 0.2504
Epoch [2/10], Batch [79/117], Loss: 0.3862
Epoch [2/10], Batch [80/117], Loss: 0.4587
Epoch [2/10], Batch [81/117], Loss: 0.1693
Epoch [2/10], Batch [82/117], Loss: 0.2177
Epoch [2/10], Batch [83/117], Loss: 0.2067
Epoch [2/10], Batch [84/117], Loss: 0.2815
Epoch [2/10], Batch [85/117], Loss: 0.2625
Epoch [2/10], Batch [86/117], Loss: 0.1861
Epoch [2/10], Batch [87/117], Loss: 0.4263
Epoch [2/10], Batch [88/117], Loss: 0.3505
Epoch [2/10], Batch [89/117], Loss: 0.5832
Epoch [2/10], Batch [90/117], Loss: 0.1398
Epoch [2/10], Batch [91/117], Loss: 0.1165
Epoch [2/10], Batch [92/117], Loss: 0.2454
Epoch [2/10], Batch [93/117], Loss: 0.3455
Epoch [2/10], Batch [94/117], Loss: 0.3060
Epoch [2/10], Batch [95/117], Loss: 0.2786
Epoch [2/10], Batch [96/117], Loss: 0.2389
Epoch [2/10], Batch [97/117], Loss: 0.3004
Epoch [2/10], Batch [98/117], Loss: 0.3432
Epoch [2/10], Batch [99/117], Loss: 0.2826
Epoch [2/10], Batch [100/117], Loss: 0.2489
Epoch [2/10], Batch [101/117], Loss: 0.1908
Epoch [2/10], Batch [102/117], Loss: 0.1558
Epoch [2/10], Batch [103/117], Loss: 0.2339
Epoch [2/10], Batch [104/117], Loss: 0.2097
Epoch [2/10], Batch [105/117], Loss: 0.1831
Epoch [2/10], Batch [106/117], Loss: 0.1749
Epoch [2/10], Batch [107/117], Loss: 0.3654
Epoch [2/10], Batch [108/117], Loss: 0.2066
Epoch [2/10], Batch [109/117], Loss: 0.2082
Epoch [2/10], Batch [110/117], Loss: 0.6594
Epoch [2/10], Batch [111/117], Loss: 0.3157
Epoch [2/10], Batch [112/117], Loss: 0.2286
Epoch [2/10], Batch [113/117], Loss: 0.1960
Epoch [2/10], Batch [114/117], Loss: 0.4456
Epoch [2/10], Batch [115/117], Loss: 0.3345
Epoch [2/10], Batch [116/117], Loss: 0.2485
Epoch [2/10], Batch [117/117], Loss: 0.2515
Epoch [2/10], Average Loss: 0.2774
-----------------------------------------------------------
strategy: BEAM
iter: 5
epoch: 1
Test Loss: 0.2925
F1_overall: 0.5760
F1_AGENT: 0.7160
F1_TARGET: 0.4400
-----------------------------------------------------------
Epoch [3/10], Batch [1/117], Loss: 0.1994
Epoch [3/10], Batch [2/117], Loss: 0.1678
Epoch [3/10], Batch [3/117], Loss: 0.1421
Epoch [3/10], Batch [4/117], Loss: 0.2705
Epoch [3/10], Batch [5/117], Loss: 0.1487
Epoch [3/10], Batch [6/117], Loss: 0.1514
Epoch [3/10], Batch [7/117], Loss: 0.1210
Epoch [3/10], Batch [8/117], Loss: 0.1183
Epoch [3/10], Batch [9/117], Loss: 0.2901
Epoch [3/10], Batch [10/117], Loss: 0.1517
Epoch [3/10], Batch [11/117], Loss: 0.1105
Epoch [3/10], Batch [12/117], Loss: 0.0639
Epoch [3/10], Batch [13/117], Loss: 0.1163
Epoch [3/10], Batch [14/117], Loss: 0.1397
Epoch [3/10], Batch [15/117], Loss: 0.3727
Epoch [3/10], Batch [16/117], Loss: 0.0775
Epoch [3/10], Batch [17/117], Loss: 0.2193
Epoch [3/10], Batch [18/117], Loss: 0.1808
Epoch [3/10], Batch [19/117], Loss: 0.1626
Epoch [3/10], Batch [20/117], Loss: 0.2703
Epoch [3/10], Batch [21/117], Loss: 0.1763
Epoch [3/10], Batch [22/117], Loss: 0.1621
Epoch [3/10], Batch [23/117], Loss: 0.2791
Epoch [3/10], Batch [24/117], Loss: 0.2734
Epoch [3/10], Batch [25/117], Loss: 0.1408
Epoch [3/10], Batch [26/117], Loss: 0.2531
Epoch [3/10], Batch [27/117], Loss: 0.1060
Epoch [3/10], Batch [28/117], Loss: 0.1280
Epoch [3/10], Batch [29/117], Loss: 0.1047
Epoch [3/10], Batch [30/117], Loss: 0.1378
Epoch [3/10], Batch [31/117], Loss: 0.1638
Epoch [3/10], Batch [32/117], Loss: 0.1181
Epoch [3/10], Batch [33/117], Loss: 0.1832
Epoch [3/10], Batch [34/117], Loss: 0.1448
Epoch [3/10], Batch [35/117], Loss: 0.2813
Epoch [3/10], Batch [36/117], Loss: 0.1385
Epoch [3/10], Batch [37/117], Loss: 0.1881
Epoch [3/10], Batch [38/117], Loss: 0.2186
Epoch [3/10], Batch [39/117], Loss: 0.4028
Epoch [3/10], Batch [40/117], Loss: 0.1189
Epoch [3/10], Batch [41/117], Loss: 0.2118
Epoch [3/10], Batch [42/117], Loss: 0.2145
Epoch [3/10], Batch [43/117], Loss: 0.1500
Epoch [3/10], Batch [44/117], Loss: 0.1833
Epoch [3/10], Batch [45/117], Loss: 0.2010
Epoch [3/10], Batch [46/117], Loss: 0.1999
Epoch [3/10], Batch [47/117], Loss: 0.2759
Epoch [3/10], Batch [48/117], Loss: 0.1275
Epoch [3/10], Batch [49/117], Loss: 0.1053
Epoch [3/10], Batch [50/117], Loss: 0.1483
Epoch [3/10], Batch [51/117], Loss: 0.1440
Epoch [3/10], Batch [52/117], Loss: 0.1332
Epoch [3/10], Batch [53/117], Loss: 0.2446
Epoch [3/10], Batch [54/117], Loss: 0.1287
Epoch [3/10], Batch [55/117], Loss: 0.2131
Epoch [3/10], Batch [56/117], Loss: 0.1722
Epoch [3/10], Batch [57/117], Loss: 0.1578
Epoch [3/10], Batch [58/117], Loss: 0.1469
Epoch [3/10], Batch [59/117], Loss: 0.0658
Epoch [3/10], Batch [60/117], Loss: 0.2504
Epoch [3/10], Batch [61/117], Loss: 0.2555
Epoch [3/10], Batch [62/117], Loss: 0.1678
Epoch [3/10], Batch [63/117], Loss: 0.1231
Epoch [3/10], Batch [64/117], Loss: 0.1264
Epoch [3/10], Batch [65/117], Loss: 0.2401
Epoch [3/10], Batch [66/117], Loss: 0.2315
Epoch [3/10], Batch [67/117], Loss: 0.2379
Epoch [3/10], Batch [68/117], Loss: 0.2279
Epoch [3/10], Batch [69/117], Loss: 0.3365
Epoch [3/10], Batch [70/117], Loss: 0.1426
Epoch [3/10], Batch [71/117], Loss: 0.2108
Epoch [3/10], Batch [72/117], Loss: 0.1355
Epoch [3/10], Batch [73/117], Loss: 0.2033
Epoch [3/10], Batch [74/117], Loss: 0.1953
Epoch [3/10], Batch [75/117], Loss: 0.1025
Epoch [3/10], Batch [76/117], Loss: 0.1635
Epoch [3/10], Batch [77/117], Loss: 0.1956
Epoch [3/10], Batch [78/117], Loss: 0.1776
Epoch [3/10], Batch [79/117], Loss: 0.2071
Epoch [3/10], Batch [80/117], Loss: 0.1925
Epoch [3/10], Batch [81/117], Loss: 0.0955
Epoch [3/10], Batch [82/117], Loss: 0.0755
Epoch [3/10], Batch [83/117], Loss: 0.1793
Epoch [3/10], Batch [84/117], Loss: 0.1251
Epoch [3/10], Batch [85/117], Loss: 0.1453
Epoch [3/10], Batch [86/117], Loss: 0.4926
Epoch [3/10], Batch [87/117], Loss: 0.1416
Epoch [3/10], Batch [88/117], Loss: 0.1357
Epoch [3/10], Batch [89/117], Loss: 0.2287
Epoch [3/10], Batch [90/117], Loss: 0.3129
Epoch [3/10], Batch [91/117], Loss: 0.2884
Epoch [3/10], Batch [92/117], Loss: 0.1341
Epoch [3/10], Batch [93/117], Loss: 0.3592
Epoch [3/10], Batch [94/117], Loss: 0.1016
Epoch [3/10], Batch [95/117], Loss: 0.2469
Epoch [3/10], Batch [96/117], Loss: 0.2554
Epoch [3/10], Batch [97/117], Loss: 0.1352
Epoch [3/10], Batch [98/117], Loss: 0.1817
Epoch [3/10], Batch [99/117], Loss: 0.2170
Epoch [3/10], Batch [100/117], Loss: 0.2110
Epoch [3/10], Batch [101/117], Loss: 0.1641
Epoch [3/10], Batch [102/117], Loss: 0.1718
Epoch [3/10], Batch [103/117], Loss: 0.1735
Epoch [3/10], Batch [104/117], Loss: 0.1883
Epoch [3/10], Batch [105/117], Loss: 0.2529
Epoch [3/10], Batch [106/117], Loss: 0.2709
Epoch [3/10], Batch [107/117], Loss: 0.1448
Epoch [3/10], Batch [108/117], Loss: 0.2287
Epoch [3/10], Batch [109/117], Loss: 0.2149
Epoch [3/10], Batch [110/117], Loss: 0.1184
Epoch [3/10], Batch [111/117], Loss: 0.1472
Epoch [3/10], Batch [112/117], Loss: 0.3010
Epoch [3/10], Batch [113/117], Loss: 0.1820
Epoch [3/10], Batch [114/117], Loss: 0.2326
Epoch [3/10], Batch [115/117], Loss: 0.2030
Epoch [3/10], Batch [116/117], Loss: 0.1826
Epoch [3/10], Batch [117/117], Loss: 0.1354
Epoch [3/10], Average Loss: 0.1873
-----------------------------------------------------------
strategy: BEAM
iter: 5
epoch: 2
Test Loss: 0.2839
F1_overall: 0.5820
F1_AGENT: 0.7140
F1_TARGET: 0.4486
-----------------------------------------------------------
Epoch [4/10], Batch [1/117], Loss: 0.1458
Epoch [4/10], Batch [2/117], Loss: 0.1726
Epoch [4/10], Batch [3/117], Loss: 0.0386
Epoch [4/10], Batch [4/117], Loss: 0.1220
Epoch [4/10], Batch [5/117], Loss: 0.0635
Epoch [4/10], Batch [6/117], Loss: 0.1133
Epoch [4/10], Batch [7/117], Loss: 0.1493
Epoch [4/10], Batch [8/117], Loss: 0.3048
Epoch [4/10], Batch [9/117], Loss: 0.1980
Epoch [4/10], Batch [10/117], Loss: 0.1894
Epoch [4/10], Batch [11/117], Loss: 0.0894
Epoch [4/10], Batch [12/117], Loss: 0.0331
Epoch [4/10], Batch [13/117], Loss: 0.1902
Epoch [4/10], Batch [14/117], Loss: 0.1053
Epoch [4/10], Batch [15/117], Loss: 0.0642
Epoch [4/10], Batch [16/117], Loss: 0.0681
Epoch [4/10], Batch [17/117], Loss: 0.1189
Epoch [4/10], Batch [18/117], Loss: 0.2747
Epoch [4/10], Batch [19/117], Loss: 0.0904
Epoch [4/10], Batch [20/117], Loss: 0.0818
Epoch [4/10], Batch [21/117], Loss: 0.1186
Epoch [4/10], Batch [22/117], Loss: 0.0720
Epoch [4/10], Batch [23/117], Loss: 0.0763
Epoch [4/10], Batch [24/117], Loss: 0.1605
Epoch [4/10], Batch [25/117], Loss: 0.0789
Epoch [4/10], Batch [26/117], Loss: 0.2250
Epoch [4/10], Batch [27/117], Loss: 0.2422
Epoch [4/10], Batch [28/117], Loss: 0.1241
Epoch [4/10], Batch [29/117], Loss: 0.1717
Epoch [4/10], Batch [30/117], Loss: 0.3316
Epoch [4/10], Batch [31/117], Loss: 0.0963
Epoch [4/10], Batch [32/117], Loss: 0.1588
Epoch [4/10], Batch [33/117], Loss: 0.1032
Epoch [4/10], Batch [34/117], Loss: 0.0776
Epoch [4/10], Batch [35/117], Loss: 0.1198
Epoch [4/10], Batch [36/117], Loss: 0.1400
Epoch [4/10], Batch [37/117], Loss: 0.1047
Epoch [4/10], Batch [38/117], Loss: 0.0963
Epoch [4/10], Batch [39/117], Loss: 0.1457
Epoch [4/10], Batch [40/117], Loss: 0.0720
Epoch [4/10], Batch [41/117], Loss: 0.1159
Epoch [4/10], Batch [42/117], Loss: 0.0775
Epoch [4/10], Batch [43/117], Loss: 0.1419
Epoch [4/10], Batch [44/117], Loss: 0.2110
Epoch [4/10], Batch [45/117], Loss: 0.2166
Epoch [4/10], Batch [46/117], Loss: 0.1731
Epoch [4/10], Batch [47/117], Loss: 0.0544
Epoch [4/10], Batch [48/117], Loss: 0.3343
Epoch [4/10], Batch [49/117], Loss: 0.1530
Epoch [4/10], Batch [50/117], Loss: 0.1266
Epoch [4/10], Batch [51/117], Loss: 0.1394
Epoch [4/10], Batch [52/117], Loss: 0.0976
Epoch [4/10], Batch [53/117], Loss: 0.0874
Epoch [4/10], Batch [54/117], Loss: 0.0610
Epoch [4/10], Batch [55/117], Loss: 0.1695
Epoch [4/10], Batch [56/117], Loss: 0.1020
Epoch [4/10], Batch [57/117], Loss: 0.0375
Epoch [4/10], Batch [58/117], Loss: 0.0740
Epoch [4/10], Batch [59/117], Loss: 0.1062
Epoch [4/10], Batch [60/117], Loss: 0.0461
Epoch [4/10], Batch [61/117], Loss: 0.1267
Epoch [4/10], Batch [62/117], Loss: 0.2557
Epoch [4/10], Batch [63/117], Loss: 0.1091
Epoch [4/10], Batch [64/117], Loss: 0.0886
Epoch [4/10], Batch [65/117], Loss: 0.1509
Epoch [4/10], Batch [66/117], Loss: 0.0854
Epoch [4/10], Batch [67/117], Loss: 0.1740
Epoch [4/10], Batch [68/117], Loss: 0.2098
Epoch [4/10], Batch [69/117], Loss: 0.0644
Epoch [4/10], Batch [70/117], Loss: 0.1468
Epoch [4/10], Batch [71/117], Loss: 0.1436
Epoch [4/10], Batch [72/117], Loss: 0.1080
Epoch [4/10], Batch [73/117], Loss: 0.1387
Epoch [4/10], Batch [74/117], Loss: 0.0835
Epoch [4/10], Batch [75/117], Loss: 0.1087
Epoch [4/10], Batch [76/117], Loss: 0.0685
Epoch [4/10], Batch [77/117], Loss: 0.0805
Epoch [4/10], Batch [78/117], Loss: 0.0579
Epoch [4/10], Batch [79/117], Loss: 0.3563
Epoch [4/10], Batch [80/117], Loss: 0.2733
Epoch [4/10], Batch [81/117], Loss: 0.2715
Epoch [4/10], Batch [82/117], Loss: 0.1130
Epoch [4/10], Batch [83/117], Loss: 0.0944
Epoch [4/10], Batch [84/117], Loss: 0.2372
Epoch [4/10], Batch [85/117], Loss: 0.1804
Epoch [4/10], Batch [86/117], Loss: 0.0871
Epoch [4/10], Batch [87/117], Loss: 0.0958
Epoch [4/10], Batch [88/117], Loss: 0.1364
Epoch [4/10], Batch [89/117], Loss: 0.1123
Epoch [4/10], Batch [90/117], Loss: 0.0857
Epoch [4/10], Batch [91/117], Loss: 0.1351
Epoch [4/10], Batch [92/117], Loss: 0.0861
Epoch [4/10], Batch [93/117], Loss: 0.3451
Epoch [4/10], Batch [94/117], Loss: 0.1418
Epoch [4/10], Batch [95/117], Loss: 0.1128
Epoch [4/10], Batch [96/117], Loss: 0.0622
Epoch [4/10], Batch [97/117], Loss: 0.1357
Epoch [4/10], Batch [98/117], Loss: 0.0826
Epoch [4/10], Batch [99/117], Loss: 0.1988
Epoch [4/10], Batch [100/117], Loss: 0.1452
Epoch [4/10], Batch [101/117], Loss: 0.1506
Epoch [4/10], Batch [102/117], Loss: 0.0849
Epoch [4/10], Batch [103/117], Loss: 0.1503
Epoch [4/10], Batch [104/117], Loss: 0.1449
Epoch [4/10], Batch [105/117], Loss: 0.0872
Epoch [4/10], Batch [106/117], Loss: 0.1193
Epoch [4/10], Batch [107/117], Loss: 0.1134
Epoch [4/10], Batch [108/117], Loss: 0.2242
Epoch [4/10], Batch [109/117], Loss: 0.1619
Epoch [4/10], Batch [110/117], Loss: 0.1463
Epoch [4/10], Batch [111/117], Loss: 0.2973
Epoch [4/10], Batch [112/117], Loss: 0.1992
Epoch [4/10], Batch [113/117], Loss: 0.0603
Epoch [4/10], Batch [114/117], Loss: 0.2229
Epoch [4/10], Batch [115/117], Loss: 0.0820
Epoch [4/10], Batch [116/117], Loss: 0.1890
Epoch [4/10], Batch [117/117], Loss: 0.2246
Epoch [4/10], Average Loss: 0.1385
-----------------------------------------------------------
strategy: BEAM
iter: 5
epoch: 3
Test Loss: 0.3161
F1_overall: 0.5568
F1_AGENT: 0.7094
F1_TARGET: 0.3976
-----------------------------------------------------------
Epoch [5/10], Batch [1/117], Loss: 0.0995
Epoch [5/10], Batch [2/117], Loss: 0.1841
Epoch [5/10], Batch [3/117], Loss: 0.1588
Epoch [5/10], Batch [4/117], Loss: 0.0552
Epoch [5/10], Batch [5/117], Loss: 0.1434
Epoch [5/10], Batch [6/117], Loss: 0.1336
Epoch [5/10], Batch [7/117], Loss: 0.2162
Epoch [5/10], Batch [8/117], Loss: 0.0930
Epoch [5/10], Batch [9/117], Loss: 0.0366
Epoch [5/10], Batch [10/117], Loss: 0.0995
Epoch [5/10], Batch [11/117], Loss: 0.1244
Epoch [5/10], Batch [12/117], Loss: 0.1011
Epoch [5/10], Batch [13/117], Loss: 0.0968
Epoch [5/10], Batch [14/117], Loss: 0.1945
Epoch [5/10], Batch [15/117], Loss: 0.0582
Epoch [5/10], Batch [16/117], Loss: 0.0869
Epoch [5/10], Batch [17/117], Loss: 0.0344
Epoch [5/10], Batch [18/117], Loss: 0.1105
Epoch [5/10], Batch [19/117], Loss: 0.2072
Epoch [5/10], Batch [20/117], Loss: 0.1959
Epoch [5/10], Batch [21/117], Loss: 0.1336
Epoch [5/10], Batch [22/117], Loss: 0.0713
Epoch [5/10], Batch [23/117], Loss: 0.0627
Epoch [5/10], Batch [24/117], Loss: 0.1693
Epoch [5/10], Batch [25/117], Loss: 0.0363
Epoch [5/10], Batch [26/117], Loss: 0.1347
Epoch [5/10], Batch [27/117], Loss: 0.0949
Epoch [5/10], Batch [28/117], Loss: 0.1090
Epoch [5/10], Batch [29/117], Loss: 0.0402
Epoch [5/10], Batch [30/117], Loss: 0.1001
Epoch [5/10], Batch [31/117], Loss: 0.1191
Epoch [5/10], Batch [32/117], Loss: 0.0487
Epoch [5/10], Batch [33/117], Loss: 0.1010
Epoch [5/10], Batch [34/117], Loss: 0.0823
Epoch [5/10], Batch [35/117], Loss: 0.1259
Epoch [5/10], Batch [36/117], Loss: 0.0986
Epoch [5/10], Batch [37/117], Loss: 0.1025
Epoch [5/10], Batch [38/117], Loss: 0.2212
Epoch [5/10], Batch [39/117], Loss: 0.0644
Epoch [5/10], Batch [40/117], Loss: 0.0805
Epoch [5/10], Batch [41/117], Loss: 0.1534
Epoch [5/10], Batch [42/117], Loss: 0.1738
Epoch [5/10], Batch [43/117], Loss: 0.0975
Epoch [5/10], Batch [44/117], Loss: 0.0705
Epoch [5/10], Batch [45/117], Loss: 0.0477
Epoch [5/10], Batch [46/117], Loss: 0.1307
Epoch [5/10], Batch [47/117], Loss: 0.0943
Epoch [5/10], Batch [48/117], Loss: 0.0746
Epoch [5/10], Batch [49/117], Loss: 0.0862
Epoch [5/10], Batch [50/117], Loss: 0.1303
Epoch [5/10], Batch [51/117], Loss: 0.0675
Epoch [5/10], Batch [52/117], Loss: 0.0630
Epoch [5/10], Batch [53/117], Loss: 0.0362
Epoch [5/10], Batch [54/117], Loss: 0.0849
Epoch [5/10], Batch [55/117], Loss: 0.0449
Epoch [5/10], Batch [56/117], Loss: 0.0572
Epoch [5/10], Batch [57/117], Loss: 0.1229
Epoch [5/10], Batch [58/117], Loss: 0.0854
Epoch [5/10], Batch [59/117], Loss: 0.2202
Epoch [5/10], Batch [60/117], Loss: 0.1482
Epoch [5/10], Batch [61/117], Loss: 0.0865
Epoch [5/10], Batch [62/117], Loss: 0.1243
Epoch [5/10], Batch [63/117], Loss: 0.1797
Epoch [5/10], Batch [64/117], Loss: 0.1651
Epoch [5/10], Batch [65/117], Loss: 0.0557
Epoch [5/10], Batch [66/117], Loss: 0.1089
Epoch [5/10], Batch [67/117], Loss: 0.0934
Epoch [5/10], Batch [68/117], Loss: 0.0947
Epoch [5/10], Batch [69/117], Loss: 0.2312
Epoch [5/10], Batch [70/117], Loss: 0.0699
Epoch [5/10], Batch [71/117], Loss: 0.1956
Epoch [5/10], Batch [72/117], Loss: 0.1070
Epoch [5/10], Batch [73/117], Loss: 0.1552
Epoch [5/10], Batch [74/117], Loss: 0.1844
Epoch [5/10], Batch [75/117], Loss: 0.0756
Epoch [5/10], Batch [76/117], Loss: 0.0640
Epoch [5/10], Batch [77/117], Loss: 0.0800
Epoch [5/10], Batch [78/117], Loss: 0.0776
Epoch [5/10], Batch [79/117], Loss: 0.0835
Epoch [5/10], Batch [80/117], Loss: 0.0632
Epoch [5/10], Batch [81/117], Loss: 0.1149
Epoch [5/10], Batch [82/117], Loss: 0.2141
Epoch [5/10], Batch [83/117], Loss: 0.1202
Epoch [5/10], Batch [84/117], Loss: 0.1251
Epoch [5/10], Batch [85/117], Loss: 0.1310
Epoch [5/10], Batch [86/117], Loss: 0.2225
Epoch [5/10], Batch [87/117], Loss: 0.1033
Epoch [5/10], Batch [88/117], Loss: 0.1287
Epoch [5/10], Batch [89/117], Loss: 0.1365
Epoch [5/10], Batch [90/117], Loss: 0.1747
Epoch [5/10], Batch [91/117], Loss: 0.0904
Epoch [5/10], Batch [92/117], Loss: 0.0463
Epoch [5/10], Batch [93/117], Loss: 0.1465
Epoch [5/10], Batch [94/117], Loss: 0.1064
Epoch [5/10], Batch [95/117], Loss: 0.0360
Epoch [5/10], Batch [96/117], Loss: 0.0842
Epoch [5/10], Batch [97/117], Loss: 0.1681
Epoch [5/10], Batch [98/117], Loss: 0.1299
Epoch [5/10], Batch [99/117], Loss: 0.2382
Epoch [5/10], Batch [100/117], Loss: 0.0984
Epoch [5/10], Batch [101/117], Loss: 0.0412
Epoch [5/10], Batch [102/117], Loss: 0.1401
Epoch [5/10], Batch [103/117], Loss: 0.0969
Epoch [5/10], Batch [104/117], Loss: 0.1594
Epoch [5/10], Batch [105/117], Loss: 0.1140
Epoch [5/10], Batch [106/117], Loss: 0.0804
Epoch [5/10], Batch [107/117], Loss: 0.0610
Epoch [5/10], Batch [108/117], Loss: 0.0623
Epoch [5/10], Batch [109/117], Loss: 0.1644
Epoch [5/10], Batch [110/117], Loss: 0.0973
Epoch [5/10], Batch [111/117], Loss: 0.0741
Epoch [5/10], Batch [112/117], Loss: 0.0834
Epoch [5/10], Batch [113/117], Loss: 0.0971
Epoch [5/10], Batch [114/117], Loss: 0.0942
Epoch [5/10], Batch [115/117], Loss: 0.1301
Epoch [5/10], Batch [116/117], Loss: 0.1065
Epoch [5/10], Batch [117/117], Loss: 0.1826
Epoch [5/10], Average Loss: 0.1121
-----------------------------------------------------------
strategy: BEAM
iter: 5
epoch: 4
Test Loss: 0.3552
F1_overall: 0.5415
F1_AGENT: 0.6782
F1_TARGET: 0.4189
-----------------------------------------------------------
Epoch [6/10], Batch [1/117], Loss: 0.1356
Epoch [6/10], Batch [2/117], Loss: 0.1153
Epoch [6/10], Batch [3/117], Loss: 0.1026
Epoch [6/10], Batch [4/117], Loss: 0.1028
Epoch [6/10], Batch [5/117], Loss: 0.0731
Epoch [6/10], Batch [6/117], Loss: 0.0448
Epoch [6/10], Batch [7/117], Loss: 0.0967
Epoch [6/10], Batch [8/117], Loss: 0.0766
Epoch [6/10], Batch [9/117], Loss: 0.1419
Epoch [6/10], Batch [10/117], Loss: 0.1059
Epoch [6/10], Batch [11/117], Loss: 0.0712
Epoch [6/10], Batch [12/117], Loss: 0.0707
Epoch [6/10], Batch [13/117], Loss: 0.2051
Epoch [6/10], Batch [14/117], Loss: 0.1430
Epoch [6/10], Batch [15/117], Loss: 0.0389
Epoch [6/10], Batch [16/117], Loss: 0.0627
Epoch [6/10], Batch [17/117], Loss: 0.1054
Epoch [6/10], Batch [18/117], Loss: 0.0621
Epoch [6/10], Batch [19/117], Loss: 0.1038
Epoch [6/10], Batch [20/117], Loss: 0.0531
Epoch [6/10], Batch [21/117], Loss: 0.2298
Epoch [6/10], Batch [22/117], Loss: 0.0611
Epoch [6/10], Batch [23/117], Loss: 0.0675
Epoch [6/10], Batch [24/117], Loss: 0.0662
Epoch [6/10], Batch [25/117], Loss: 0.1051
Epoch [6/10], Batch [26/117], Loss: 0.0813
Epoch [6/10], Batch [27/117], Loss: 0.0612
Epoch [6/10], Batch [28/117], Loss: 0.0384
Epoch [6/10], Batch [29/117], Loss: 0.0887
Epoch [6/10], Batch [30/117], Loss: 0.0278
Epoch [6/10], Batch [31/117], Loss: 0.0480
Epoch [6/10], Batch [32/117], Loss: 0.0249
Epoch [6/10], Batch [33/117], Loss: 0.0243
Epoch [6/10], Batch [34/117], Loss: 0.0459
Epoch [6/10], Batch [35/117], Loss: 0.0551
Epoch [6/10], Batch [36/117], Loss: 0.1535
Epoch [6/10], Batch [37/117], Loss: 0.0784
Epoch [6/10], Batch [38/117], Loss: 0.0920
Epoch [6/10], Batch [39/117], Loss: 0.1048
Epoch [6/10], Batch [40/117], Loss: 0.0269
Epoch [6/10], Batch [41/117], Loss: 0.0330
Epoch [6/10], Batch [42/117], Loss: 0.0593
Epoch [6/10], Batch [43/117], Loss: 0.0477
Epoch [6/10], Batch [44/117], Loss: 0.0485
Epoch [6/10], Batch [45/117], Loss: 0.0208
Epoch [6/10], Batch [46/117], Loss: 0.0331
Epoch [6/10], Batch [47/117], Loss: 0.1104
Epoch [6/10], Batch [48/117], Loss: 0.2099
Epoch [6/10], Batch [49/117], Loss: 0.3793
Epoch [6/10], Batch [50/117], Loss: 0.1762
Epoch [6/10], Batch [51/117], Loss: 0.0258
Epoch [6/10], Batch [52/117], Loss: 0.0261
Epoch [6/10], Batch [53/117], Loss: 0.0679
Epoch [6/10], Batch [54/117], Loss: 0.0860
Epoch [6/10], Batch [55/117], Loss: 0.0863
Epoch [6/10], Batch [56/117], Loss: 0.0494
Epoch [6/10], Batch [57/117], Loss: 0.0404
Epoch [6/10], Batch [58/117], Loss: 0.5893
Epoch [6/10], Batch [59/117], Loss: 0.0564
Epoch [6/10], Batch [60/117], Loss: 0.1925
Epoch [6/10], Batch [61/117], Loss: 0.0456
Epoch [6/10], Batch [62/117], Loss: 0.1704
Epoch [6/10], Batch [63/117], Loss: 0.1032
Epoch [6/10], Batch [64/117], Loss: 0.0940
Epoch [6/10], Batch [65/117], Loss: 0.0472
Epoch [6/10], Batch [66/117], Loss: 0.0368
Epoch [6/10], Batch [67/117], Loss: 0.0713
Epoch [6/10], Batch [68/117], Loss: 0.0616
Epoch [6/10], Batch [69/117], Loss: 0.0801
Epoch [6/10], Batch [70/117], Loss: 0.0650
Epoch [6/10], Batch [71/117], Loss: 0.1411
Epoch [6/10], Batch [72/117], Loss: 0.0517
Epoch [6/10], Batch [73/117], Loss: 0.1869
Epoch [6/10], Batch [74/117], Loss: 0.1413
Epoch [6/10], Batch [75/117], Loss: 0.0344
Epoch [6/10], Batch [76/117], Loss: 0.0445
Epoch [6/10], Batch [77/117], Loss: 0.0912
Epoch [6/10], Batch [78/117], Loss: 0.0440
Epoch [6/10], Batch [79/117], Loss: 0.1098
Epoch [6/10], Batch [80/117], Loss: 0.1046
Epoch [6/10], Batch [81/117], Loss: 0.0546
Epoch [6/10], Batch [82/117], Loss: 0.0287
Epoch [6/10], Batch [83/117], Loss: 0.0196
Epoch [6/10], Batch [84/117], Loss: 0.0900
Epoch [6/10], Batch [85/117], Loss: 0.0635
Epoch [6/10], Batch [86/117], Loss: 0.0913
Epoch [6/10], Batch [87/117], Loss: 0.0784
Epoch [6/10], Batch [88/117], Loss: 0.0332
Epoch [6/10], Batch [89/117], Loss: 0.0242
Epoch [6/10], Batch [90/117], Loss: 0.0340
Epoch [6/10], Batch [91/117], Loss: 0.0115
Epoch [6/10], Batch [92/117], Loss: 0.0895
Epoch [6/10], Batch [93/117], Loss: 0.1710
Epoch [6/10], Batch [94/117], Loss: 0.0437
Epoch [6/10], Batch [95/117], Loss: 0.0214
Epoch [6/10], Batch [96/117], Loss: 0.0528
Epoch [6/10], Batch [97/117], Loss: 0.0422
Epoch [6/10], Batch [98/117], Loss: 0.0707
Epoch [6/10], Batch [99/117], Loss: 0.1067
Epoch [6/10], Batch [100/117], Loss: 0.0605
Epoch [6/10], Batch [101/117], Loss: 0.0233
Epoch [6/10], Batch [102/117], Loss: 0.0810
Epoch [6/10], Batch [103/117], Loss: 0.1412
Epoch [6/10], Batch [104/117], Loss: 0.1025
Epoch [6/10], Batch [105/117], Loss: 0.0465
Epoch [6/10], Batch [106/117], Loss: 0.0371
Epoch [6/10], Batch [107/117], Loss: 0.0498
Epoch [6/10], Batch [108/117], Loss: 0.0870
Epoch [6/10], Batch [109/117], Loss: 0.0552
Epoch [6/10], Batch [110/117], Loss: 0.0417
Epoch [6/10], Batch [111/117], Loss: 0.0558
Epoch [6/10], Batch [112/117], Loss: 0.1228
Epoch [6/10], Batch [113/117], Loss: 0.0604
Epoch [6/10], Batch [114/117], Loss: 0.0565
Epoch [6/10], Batch [115/117], Loss: 0.0588
Epoch [6/10], Batch [116/117], Loss: 0.0886
Epoch [6/10], Batch [117/117], Loss: 0.0877
Epoch [6/10], Average Loss: 0.0841
-----------------------------------------------------------
strategy: BEAM
iter: 5
epoch: 5
Test Loss: 0.3570
F1_overall: 0.5587
F1_AGENT: 0.7018
F1_TARGET: 0.4211
-----------------------------------------------------------
Epoch [7/10], Batch [1/117], Loss: 0.0275
Epoch [7/10], Batch [2/117], Loss: 0.0380
Epoch [7/10], Batch [3/117], Loss: 0.0316
Epoch [7/10], Batch [4/117], Loss: 0.1558
Epoch [7/10], Batch [5/117], Loss: 0.0621
Epoch [7/10], Batch [6/117], Loss: 0.0363
Epoch [7/10], Batch [7/117], Loss: 0.0111
Epoch [7/10], Batch [8/117], Loss: 0.0612
Epoch [7/10], Batch [9/117], Loss: 0.1208
Epoch [7/10], Batch [10/117], Loss: 0.0152
Epoch [7/10], Batch [11/117], Loss: 0.0160
Epoch [7/10], Batch [12/117], Loss: 0.0565
Epoch [7/10], Batch [13/117], Loss: 0.0266
Epoch [7/10], Batch [14/117], Loss: 0.1679
Epoch [7/10], Batch [15/117], Loss: 0.0565
Epoch [7/10], Batch [16/117], Loss: 0.0347
Epoch [7/10], Batch [17/117], Loss: 0.0352
Epoch [7/10], Batch [18/117], Loss: 0.2674
Epoch [7/10], Batch [19/117], Loss: 0.0353
Epoch [7/10], Batch [20/117], Loss: 0.0676
Epoch [7/10], Batch [21/117], Loss: 0.1303
Epoch [7/10], Batch [22/117], Loss: 0.0251
Epoch [7/10], Batch [23/117], Loss: 0.0227
Epoch [7/10], Batch [24/117], Loss: 0.0119
Epoch [7/10], Batch [25/117], Loss: 0.0320
Epoch [7/10], Batch [26/117], Loss: 0.0254
Epoch [7/10], Batch [27/117], Loss: 0.0939
Epoch [7/10], Batch [28/117], Loss: 0.0404
Epoch [7/10], Batch [29/117], Loss: 0.0346
Epoch [7/10], Batch [30/117], Loss: 0.0266
Epoch [7/10], Batch [31/117], Loss: 0.0401
Epoch [7/10], Batch [32/117], Loss: 0.0230
Epoch [7/10], Batch [33/117], Loss: 0.0258
Epoch [7/10], Batch [34/117], Loss: 0.0457
Epoch [7/10], Batch [35/117], Loss: 0.0393
Epoch [7/10], Batch [36/117], Loss: 0.0710
Epoch [7/10], Batch [37/117], Loss: 0.0829
Epoch [7/10], Batch [38/117], Loss: 0.0862
Epoch [7/10], Batch [39/117], Loss: 0.1153
Epoch [7/10], Batch [40/117], Loss: 0.0744
Epoch [7/10], Batch [41/117], Loss: 0.0780
Epoch [7/10], Batch [42/117], Loss: 0.0268
Epoch [7/10], Batch [43/117], Loss: 0.0525
Epoch [7/10], Batch [44/117], Loss: 0.0308
Epoch [7/10], Batch [45/117], Loss: 0.0411
Epoch [7/10], Batch [46/117], Loss: 0.0087
Epoch [7/10], Batch [47/117], Loss: 0.0192
Epoch [7/10], Batch [48/117], Loss: 0.0151
Epoch [7/10], Batch [49/117], Loss: 0.0366
Epoch [7/10], Batch [50/117], Loss: 0.0088
Epoch [7/10], Batch [51/117], Loss: 0.0551
Epoch [7/10], Batch [52/117], Loss: 0.1300
Epoch [7/10], Batch [53/117], Loss: 0.0517
Epoch [7/10], Batch [54/117], Loss: 0.0275
Epoch [7/10], Batch [55/117], Loss: 0.0113
Epoch [7/10], Batch [56/117], Loss: 0.0213
Epoch [7/10], Batch [57/117], Loss: 0.1326
Epoch [7/10], Batch [58/117], Loss: 0.0580
Epoch [7/10], Batch [59/117], Loss: 0.0226
Epoch [7/10], Batch [60/117], Loss: 0.0081
Epoch [7/10], Batch [61/117], Loss: 0.0268
Epoch [7/10], Batch [62/117], Loss: 0.0598
Epoch [7/10], Batch [63/117], Loss: 0.0191
Epoch [7/10], Batch [64/117], Loss: 0.0531
Epoch [7/10], Batch [65/117], Loss: 0.0371
Epoch [7/10], Batch [66/117], Loss: 0.0172
Epoch [7/10], Batch [67/117], Loss: 0.0607
Epoch [7/10], Batch [68/117], Loss: 0.0704
Epoch [7/10], Batch [69/117], Loss: 0.1133
Epoch [7/10], Batch [70/117], Loss: 0.0777
Epoch [7/10], Batch [71/117], Loss: 0.1330
Epoch [7/10], Batch [72/117], Loss: 0.0990
Epoch [7/10], Batch [73/117], Loss: 0.0636
Epoch [7/10], Batch [74/117], Loss: 0.0630
Epoch [7/10], Batch [75/117], Loss: 0.0187
Epoch [7/10], Batch [76/117], Loss: 0.0133
Epoch [7/10], Batch [77/117], Loss: 0.0289
Epoch [7/10], Batch [78/117], Loss: 0.0212
Epoch [7/10], Batch [79/117], Loss: 0.0103
Epoch [7/10], Batch [80/117], Loss: 0.0848
Epoch [7/10], Batch [81/117], Loss: 0.0172
Epoch [7/10], Batch [82/117], Loss: 0.0543
Epoch [7/10], Batch [83/117], Loss: 0.0051
Epoch [7/10], Batch [84/117], Loss: 0.3091
Epoch [7/10], Batch [85/117], Loss: 0.1259
Epoch [7/10], Batch [86/117], Loss: 0.0150
Epoch [7/10], Batch [87/117], Loss: 0.0472
Epoch [7/10], Batch [88/117], Loss: 0.1780
Epoch [7/10], Batch [89/117], Loss: 0.1027
Epoch [7/10], Batch [90/117], Loss: 0.0113
Epoch [7/10], Batch [91/117], Loss: 0.0249
Epoch [7/10], Batch [92/117], Loss: 0.0340
Epoch [7/10], Batch [93/117], Loss: 0.0255
Epoch [7/10], Batch [94/117], Loss: 0.0286
Epoch [7/10], Batch [95/117], Loss: 0.0403
Epoch [7/10], Batch [96/117], Loss: 0.0370
Epoch [7/10], Batch [97/117], Loss: 0.0338
Epoch [7/10], Batch [98/117], Loss: 0.1331
Epoch [7/10], Batch [99/117], Loss: 0.0183
Epoch [7/10], Batch [100/117], Loss: 0.1906
Epoch [7/10], Batch [101/117], Loss: 0.2857
Epoch [7/10], Batch [102/117], Loss: 0.1692
Epoch [7/10], Batch [103/117], Loss: 0.0354
Epoch [7/10], Batch [104/117], Loss: 0.0157
Epoch [7/10], Batch [105/117], Loss: 0.0621
Epoch [7/10], Batch [106/117], Loss: 0.0552
Epoch [7/10], Batch [107/117], Loss: 0.0759
Epoch [7/10], Batch [108/117], Loss: 0.0988
Epoch [7/10], Batch [109/117], Loss: 0.0604
Epoch [7/10], Batch [110/117], Loss: 0.1476
Epoch [7/10], Batch [111/117], Loss: 0.0132
Epoch [7/10], Batch [112/117], Loss: 0.0138
Epoch [7/10], Batch [113/117], Loss: 0.0751
Epoch [7/10], Batch [114/117], Loss: 0.0353
Epoch [7/10], Batch [115/117], Loss: 0.0617
Epoch [7/10], Batch [116/117], Loss: 0.0276
Epoch [7/10], Batch [117/117], Loss: 0.0726
Epoch [7/10], Average Loss: 0.0599
-----------------------------------------------------------
strategy: BEAM
iter: 5
epoch: 6
Test Loss: 0.4004
F1_overall: 0.5856
F1_AGENT: 0.7228
F1_TARGET: 0.4497
-----------------------------------------------------------
Epoch [8/10], Batch [1/117], Loss: 0.0510
Epoch [8/10], Batch [2/117], Loss: 0.0243
Epoch [8/10], Batch [3/117], Loss: 0.0326
Epoch [8/10], Batch [4/117], Loss: 0.0527
Epoch [8/10], Batch [5/117], Loss: 0.0208
Epoch [8/10], Batch [6/117], Loss: 0.0172
Epoch [8/10], Batch [7/117], Loss: 0.0503
Epoch [8/10], Batch [8/117], Loss: 0.0259
Epoch [8/10], Batch [9/117], Loss: 0.1345
Epoch [8/10], Batch [10/117], Loss: 0.1506
Epoch [8/10], Batch [11/117], Loss: 0.1122
Epoch [8/10], Batch [12/117], Loss: 0.0106
Epoch [8/10], Batch [13/117], Loss: 0.0612
Epoch [8/10], Batch [14/117], Loss: 0.0051
Epoch [8/10], Batch [15/117], Loss: 0.0855
Epoch [8/10], Batch [16/117], Loss: 0.1003
Epoch [8/10], Batch [17/117], Loss: 0.0411
Epoch [8/10], Batch [18/117], Loss: 0.0770
Epoch [8/10], Batch [19/117], Loss: 0.0360
Epoch [8/10], Batch [20/117], Loss: 0.0152
Epoch [8/10], Batch [21/117], Loss: 0.0138
Epoch [8/10], Batch [22/117], Loss: 0.0162
Epoch [8/10], Batch [23/117], Loss: 0.0480
Epoch [8/10], Batch [24/117], Loss: 0.2243
Epoch [8/10], Batch [25/117], Loss: 0.0414
Epoch [8/10], Batch [26/117], Loss: 0.0228
Epoch [8/10], Batch [27/117], Loss: 0.0133
Epoch [8/10], Batch [28/117], Loss: 0.1144
Epoch [8/10], Batch [29/117], Loss: 0.0497
Epoch [8/10], Batch [30/117], Loss: 0.0709
Epoch [8/10], Batch [31/117], Loss: 0.0047
Epoch [8/10], Batch [32/117], Loss: 0.0346
Epoch [8/10], Batch [33/117], Loss: 0.0191
Epoch [8/10], Batch [34/117], Loss: 0.0207
Epoch [8/10], Batch [35/117], Loss: 0.1135
Epoch [8/10], Batch [36/117], Loss: 0.0737
Epoch [8/10], Batch [37/117], Loss: 0.0210
Epoch [8/10], Batch [38/117], Loss: 0.0922
Epoch [8/10], Batch [39/117], Loss: 0.1036
Epoch [8/10], Batch [40/117], Loss: 0.0149
Epoch [8/10], Batch [41/117], Loss: 0.0358
Epoch [8/10], Batch [42/117], Loss: 0.0111
Epoch [8/10], Batch [43/117], Loss: 0.0316
Epoch [8/10], Batch [44/117], Loss: 0.0085
Epoch [8/10], Batch [45/117], Loss: 0.0291
Epoch [8/10], Batch [46/117], Loss: 0.0562
Epoch [8/10], Batch [47/117], Loss: 0.0600
Epoch [8/10], Batch [48/117], Loss: 0.0260
Epoch [8/10], Batch [49/117], Loss: 0.0105
Epoch [8/10], Batch [50/117], Loss: 0.0223
Epoch [8/10], Batch [51/117], Loss: 0.0182
Epoch [8/10], Batch [52/117], Loss: 0.0279
Epoch [8/10], Batch [53/117], Loss: 0.0129
Epoch [8/10], Batch [54/117], Loss: 0.0616
Epoch [8/10], Batch [55/117], Loss: 0.0538
Epoch [8/10], Batch [56/117], Loss: 0.0418
Epoch [8/10], Batch [57/117], Loss: 0.0384
Epoch [8/10], Batch [58/117], Loss: 0.0986
Epoch [8/10], Batch [59/117], Loss: 0.0432
Epoch [8/10], Batch [60/117], Loss: 0.0661
Epoch [8/10], Batch [61/117], Loss: 0.0328
Epoch [8/10], Batch [62/117], Loss: 0.0351
Epoch [8/10], Batch [63/117], Loss: 0.0618
Epoch [8/10], Batch [64/117], Loss: 0.0271
Epoch [8/10], Batch [65/117], Loss: 0.0274
Epoch [8/10], Batch [66/117], Loss: 0.1246
Epoch [8/10], Batch [67/117], Loss: 0.1346
Epoch [8/10], Batch [68/117], Loss: 0.0410
Epoch [8/10], Batch [69/117], Loss: 0.0331
Epoch [8/10], Batch [70/117], Loss: 0.0578
Epoch [8/10], Batch [71/117], Loss: 0.0754
Epoch [8/10], Batch [72/117], Loss: 0.0240
Epoch [8/10], Batch [73/117], Loss: 0.0944
Epoch [8/10], Batch [74/117], Loss: 0.0701
Epoch [8/10], Batch [75/117], Loss: 0.0587
Epoch [8/10], Batch [76/117], Loss: 0.0565
Epoch [8/10], Batch [77/117], Loss: 0.0133
Epoch [8/10], Batch [78/117], Loss: 0.0386
Epoch [8/10], Batch [79/117], Loss: 0.0944
Epoch [8/10], Batch [80/117], Loss: 0.0116
Epoch [8/10], Batch [81/117], Loss: 0.0574
Epoch [8/10], Batch [82/117], Loss: 0.0995
Epoch [8/10], Batch [83/117], Loss: 0.0138
Epoch [8/10], Batch [84/117], Loss: 0.0195
Epoch [8/10], Batch [85/117], Loss: 0.0296
Epoch [8/10], Batch [86/117], Loss: 0.0100
Epoch [8/10], Batch [87/117], Loss: 0.0340
Epoch [8/10], Batch [88/117], Loss: 0.0285
Epoch [8/10], Batch [89/117], Loss: 0.0796
Epoch [8/10], Batch [90/117], Loss: 0.0913
Epoch [8/10], Batch [91/117], Loss: 0.0745
Epoch [8/10], Batch [92/117], Loss: 0.0190
Epoch [8/10], Batch [93/117], Loss: 0.0436
Epoch [8/10], Batch [94/117], Loss: 0.0518
Epoch [8/10], Batch [95/117], Loss: 0.0111
Epoch [8/10], Batch [96/117], Loss: 0.0283
Epoch [8/10], Batch [97/117], Loss: 0.0367
Epoch [8/10], Batch [98/117], Loss: 0.2213
Epoch [8/10], Batch [99/117], Loss: 0.0501
Epoch [8/10], Batch [100/117], Loss: 0.0104
Epoch [8/10], Batch [101/117], Loss: 0.0052
Epoch [8/10], Batch [102/117], Loss: 0.0821
Epoch [8/10], Batch [103/117], Loss: 0.0625
Epoch [8/10], Batch [104/117], Loss: 0.0538
Epoch [8/10], Batch [105/117], Loss: 0.0701
Epoch [8/10], Batch [106/117], Loss: 0.1321
Epoch [8/10], Batch [107/117], Loss: 0.0684
Epoch [8/10], Batch [108/117], Loss: 0.1154
Epoch [8/10], Batch [109/117], Loss: 0.1193
Epoch [8/10], Batch [110/117], Loss: 0.0822
Epoch [8/10], Batch [111/117], Loss: 0.0228
Epoch [8/10], Batch [112/117], Loss: 0.0256
Epoch [8/10], Batch [113/117], Loss: 0.0844
Epoch [8/10], Batch [114/117], Loss: 0.0328
Epoch [8/10], Batch [115/117], Loss: 0.0304
Epoch [8/10], Batch [116/117], Loss: 0.1018
Epoch [8/10], Batch [117/117], Loss: 0.0246
Epoch [8/10], Average Loss: 0.0530
-----------------------------------------------------------
strategy: BEAM
iter: 5
epoch: 7
Test Loss: 0.4022
F1_overall: 0.5753
F1_AGENT: 0.7107
F1_TARGET: 0.4467
-----------------------------------------------------------
Epoch [9/10], Batch [1/117], Loss: 0.0135
Epoch [9/10], Batch [2/117], Loss: 0.0471
Epoch [9/10], Batch [3/117], Loss: 0.0373
Epoch [9/10], Batch [4/117], Loss: 0.0158
Epoch [9/10], Batch [5/117], Loss: 0.0219
Epoch [9/10], Batch [6/117], Loss: 0.0082
Epoch [9/10], Batch [7/117], Loss: 0.0106
Epoch [9/10], Batch [8/117], Loss: 0.0527
Epoch [9/10], Batch [9/117], Loss: 0.0092
Epoch [9/10], Batch [10/117], Loss: 0.0085
Epoch [9/10], Batch [11/117], Loss: 0.0405
Epoch [9/10], Batch [12/117], Loss: 0.0175
Epoch [9/10], Batch [13/117], Loss: 0.0534
Epoch [9/10], Batch [14/117], Loss: 0.0078
Epoch [9/10], Batch [15/117], Loss: 0.0932
Epoch [9/10], Batch [16/117], Loss: 0.0500
Epoch [9/10], Batch [17/117], Loss: 0.0221
Epoch [9/10], Batch [18/117], Loss: 0.0161
Epoch [9/10], Batch [19/117], Loss: 0.0647
Epoch [9/10], Batch [20/117], Loss: 0.0232
Epoch [9/10], Batch [21/117], Loss: 0.0149
Epoch [9/10], Batch [22/117], Loss: 0.0180
Epoch [9/10], Batch [23/117], Loss: 0.0296
Epoch [9/10], Batch [24/117], Loss: 0.0030
Epoch [9/10], Batch [25/117], Loss: 0.0171
Epoch [9/10], Batch [26/117], Loss: 0.0105
Epoch [9/10], Batch [27/117], Loss: 0.0478
Epoch [9/10], Batch [28/117], Loss: 0.0226
Epoch [9/10], Batch [29/117], Loss: 0.0267
Epoch [9/10], Batch [30/117], Loss: 0.0726
Epoch [9/10], Batch [31/117], Loss: 0.0107
Epoch [9/10], Batch [32/117], Loss: 0.0104
Epoch [9/10], Batch [33/117], Loss: 0.0565
Epoch [9/10], Batch [34/117], Loss: 0.0057
Epoch [9/10], Batch [35/117], Loss: 0.0085
Epoch [9/10], Batch [36/117], Loss: 0.0080
Epoch [9/10], Batch [37/117], Loss: 0.0244
Epoch [9/10], Batch [38/117], Loss: 0.0121
Epoch [9/10], Batch [39/117], Loss: 0.0345
Epoch [9/10], Batch [40/117], Loss: 0.0113
Epoch [9/10], Batch [41/117], Loss: 0.0325
Epoch [9/10], Batch [42/117], Loss: 0.0020
Epoch [9/10], Batch [43/117], Loss: 0.0092
Epoch [9/10], Batch [44/117], Loss: 0.0583
Epoch [9/10], Batch [45/117], Loss: 0.0079
Epoch [9/10], Batch [46/117], Loss: 0.0050
Epoch [9/10], Batch [47/117], Loss: 0.0366
Epoch [9/10], Batch [48/117], Loss: 0.0157
Epoch [9/10], Batch [49/117], Loss: 0.0319
Epoch [9/10], Batch [50/117], Loss: 0.0356
Epoch [9/10], Batch [51/117], Loss: 0.0423
Epoch [9/10], Batch [52/117], Loss: 0.1133
Epoch [9/10], Batch [53/117], Loss: 0.0086
Epoch [9/10], Batch [54/117], Loss: 0.0094
Epoch [9/10], Batch [55/117], Loss: 0.0434
Epoch [9/10], Batch [56/117], Loss: 0.0062
Epoch [9/10], Batch [57/117], Loss: 0.0249
Epoch [9/10], Batch [58/117], Loss: 0.0091
Epoch [9/10], Batch [59/117], Loss: 0.0102
Epoch [9/10], Batch [60/117], Loss: 0.0420
Epoch [9/10], Batch [61/117], Loss: 0.0141
Epoch [9/10], Batch [62/117], Loss: 0.0262
Epoch [9/10], Batch [63/117], Loss: 0.0277
Epoch [9/10], Batch [64/117], Loss: 0.0132
Epoch [9/10], Batch [65/117], Loss: 0.0403
Epoch [9/10], Batch [66/117], Loss: 0.2068
Epoch [9/10], Batch [67/117], Loss: 0.0299
Epoch [9/10], Batch [68/117], Loss: 0.0167
Epoch [9/10], Batch [69/117], Loss: 0.0349
Epoch [9/10], Batch [70/117], Loss: 0.0750
Epoch [9/10], Batch [71/117], Loss: 0.0327
Epoch [9/10], Batch [72/117], Loss: 0.0619
Epoch [9/10], Batch [73/117], Loss: 0.0294
Epoch [9/10], Batch [74/117], Loss: 0.0248
Epoch [9/10], Batch [75/117], Loss: 0.0254
Epoch [9/10], Batch [76/117], Loss: 0.0106
Epoch [9/10], Batch [77/117], Loss: 0.1079
Epoch [9/10], Batch [78/117], Loss: 0.0058
Epoch [9/10], Batch [79/117], Loss: 0.0166
Epoch [9/10], Batch [80/117], Loss: 0.0109
Epoch [9/10], Batch [81/117], Loss: 0.0176
Epoch [9/10], Batch [82/117], Loss: 0.0342
Epoch [9/10], Batch [83/117], Loss: 0.0466
Epoch [9/10], Batch [84/117], Loss: 0.0090
Epoch [9/10], Batch [85/117], Loss: 0.0167
Epoch [9/10], Batch [86/117], Loss: 0.0975
Epoch [9/10], Batch [87/117], Loss: 0.0099
Epoch [9/10], Batch [88/117], Loss: 0.0258
Epoch [9/10], Batch [89/117], Loss: 0.0105
Epoch [9/10], Batch [90/117], Loss: 0.0270
Epoch [9/10], Batch [91/117], Loss: 0.0728
Epoch [9/10], Batch [92/117], Loss: 0.0310
Epoch [9/10], Batch [93/117], Loss: 0.0563
Epoch [9/10], Batch [94/117], Loss: 0.0878
Epoch [9/10], Batch [95/117], Loss: 0.1608
Epoch [9/10], Batch [96/117], Loss: 0.1124
Epoch [9/10], Batch [97/117], Loss: 0.0339
Epoch [9/10], Batch [98/117], Loss: 0.0533
Epoch [9/10], Batch [99/117], Loss: 0.1562
Epoch [9/10], Batch [100/117], Loss: 0.0447
Epoch [9/10], Batch [101/117], Loss: 0.0224
Epoch [9/10], Batch [102/117], Loss: 0.0053
Epoch [9/10], Batch [103/117], Loss: 0.0240
Epoch [9/10], Batch [104/117], Loss: 0.0102
Epoch [9/10], Batch [105/117], Loss: 0.0045
Epoch [9/10], Batch [106/117], Loss: 0.0223
Epoch [9/10], Batch [107/117], Loss: 0.0571
Epoch [9/10], Batch [108/117], Loss: 0.0951
Epoch [9/10], Batch [109/117], Loss: 0.0794
Epoch [9/10], Batch [110/117], Loss: 0.0365
Epoch [9/10], Batch [111/117], Loss: 0.0098
Epoch [9/10], Batch [112/117], Loss: 0.0050
Epoch [9/10], Batch [113/117], Loss: 0.0450
Epoch [9/10], Batch [114/117], Loss: 0.0198
Epoch [9/10], Batch [115/117], Loss: 0.0614
Epoch [9/10], Batch [116/117], Loss: 0.0893
Epoch [9/10], Batch [117/117], Loss: 0.0929
Epoch [9/10], Average Loss: 0.0359
-----------------------------------------------------------
strategy: BEAM
iter: 5
epoch: 8
Test Loss: 0.4358
F1_overall: 0.5830
F1_AGENT: 0.7216
F1_TARGET: 0.4454
-----------------------------------------------------------
Epoch [10/10], Batch [1/117], Loss: 0.0077
Epoch [10/10], Batch [2/117], Loss: 0.0086
Epoch [10/10], Batch [3/117], Loss: 0.0052
Epoch [10/10], Batch [4/117], Loss: 0.0102
Epoch [10/10], Batch [5/117], Loss: 0.0216
Epoch [10/10], Batch [6/117], Loss: 0.0131
Epoch [10/10], Batch [7/117], Loss: 0.0215
Epoch [10/10], Batch [8/117], Loss: 0.0030
Epoch [10/10], Batch [9/117], Loss: 0.0192
Epoch [10/10], Batch [10/117], Loss: 0.0331
Epoch [10/10], Batch [11/117], Loss: 0.0331
Epoch [10/10], Batch [12/117], Loss: 0.0300
Epoch [10/10], Batch [13/117], Loss: 0.0100
Epoch [10/10], Batch [14/117], Loss: 0.0115
Epoch [10/10], Batch [15/117], Loss: 0.0484
Epoch [10/10], Batch [16/117], Loss: 0.0660
Epoch [10/10], Batch [17/117], Loss: 0.0038
Epoch [10/10], Batch [18/117], Loss: 0.0212
Epoch [10/10], Batch [19/117], Loss: 0.0485
Epoch [10/10], Batch [20/117], Loss: 0.0095
Epoch [10/10], Batch [21/117], Loss: 0.0291
Epoch [10/10], Batch [22/117], Loss: 0.0400
Epoch [10/10], Batch [23/117], Loss: 0.0074
Epoch [10/10], Batch [24/117], Loss: 0.0102
Epoch [10/10], Batch [25/117], Loss: 0.0726
Epoch [10/10], Batch [26/117], Loss: 0.0169
Epoch [10/10], Batch [27/117], Loss: 0.0108
Epoch [10/10], Batch [28/117], Loss: 0.0198
Epoch [10/10], Batch [29/117], Loss: 0.0160
Epoch [10/10], Batch [30/117], Loss: 0.0047
Epoch [10/10], Batch [31/117], Loss: 0.0499
Epoch [10/10], Batch [32/117], Loss: 0.0116
Epoch [10/10], Batch [33/117], Loss: 0.0089
Epoch [10/10], Batch [34/117], Loss: 0.0257
Epoch [10/10], Batch [35/117], Loss: 0.0354
Epoch [10/10], Batch [36/117], Loss: 0.1045
Epoch [10/10], Batch [37/117], Loss: 0.0076
Epoch [10/10], Batch [38/117], Loss: 0.0349
Epoch [10/10], Batch [39/117], Loss: 0.0464
Epoch [10/10], Batch [40/117], Loss: 0.0143
Epoch [10/10], Batch [41/117], Loss: 0.0119
Epoch [10/10], Batch [42/117], Loss: 0.0159
Epoch [10/10], Batch [43/117], Loss: 0.0080
Epoch [10/10], Batch [44/117], Loss: 0.0091
Epoch [10/10], Batch [45/117], Loss: 0.0852
Epoch [10/10], Batch [46/117], Loss: 0.0023
Epoch [10/10], Batch [47/117], Loss: 0.0050
Epoch [10/10], Batch [48/117], Loss: 0.0014
Epoch [10/10], Batch [49/117], Loss: 0.0038
Epoch [10/10], Batch [50/117], Loss: 0.0157
Epoch [10/10], Batch [51/117], Loss: 0.0134
Epoch [10/10], Batch [52/117], Loss: 0.0056
Epoch [10/10], Batch [53/117], Loss: 0.0052
Epoch [10/10], Batch [54/117], Loss: 0.0364
Epoch [10/10], Batch [55/117], Loss: 0.0863
Epoch [10/10], Batch [56/117], Loss: 0.0740
Epoch [10/10], Batch [57/117], Loss: 0.0059
Epoch [10/10], Batch [58/117], Loss: 0.0266
Epoch [10/10], Batch [59/117], Loss: 0.1563
Epoch [10/10], Batch [60/117], Loss: 0.0076
Epoch [10/10], Batch [61/117], Loss: 0.0681
Epoch [10/10], Batch [62/117], Loss: 0.0033
Epoch [10/10], Batch [63/117], Loss: 0.0071
Epoch [10/10], Batch [64/117], Loss: 0.0141
Epoch [10/10], Batch [65/117], Loss: 0.0089
Epoch [10/10], Batch [66/117], Loss: 0.0118
Epoch [10/10], Batch [67/117], Loss: 0.0123
Epoch [10/10], Batch [68/117], Loss: 0.0620
Epoch [10/10], Batch [69/117], Loss: 0.0548
Epoch [10/10], Batch [70/117], Loss: 0.0237
Epoch [10/10], Batch [71/117], Loss: 0.0158
Epoch [10/10], Batch [72/117], Loss: 0.2622
Epoch [10/10], Batch [73/117], Loss: 0.0659
Epoch [10/10], Batch [74/117], Loss: 0.0214
Epoch [10/10], Batch [75/117], Loss: 0.0122
Epoch [10/10], Batch [76/117], Loss: 0.0208
Epoch [10/10], Batch [77/117], Loss: 0.0401
Epoch [10/10], Batch [78/117], Loss: 0.0448
Epoch [10/10], Batch [79/117], Loss: 0.0116
Epoch [10/10], Batch [80/117], Loss: 0.0083
Epoch [10/10], Batch [81/117], Loss: 0.0988
Epoch [10/10], Batch [82/117], Loss: 0.1301
Epoch [10/10], Batch [83/117], Loss: 0.0193
Epoch [10/10], Batch [84/117], Loss: 0.0912
Epoch [10/10], Batch [85/117], Loss: 0.0115
Epoch [10/10], Batch [86/117], Loss: 0.1626
Epoch [10/10], Batch [87/117], Loss: 0.0419
Epoch [10/10], Batch [88/117], Loss: 0.0492
Epoch [10/10], Batch [89/117], Loss: 0.0370
Epoch [10/10], Batch [90/117], Loss: 0.0515
Epoch [10/10], Batch [91/117], Loss: 0.0084
Epoch [10/10], Batch [92/117], Loss: 0.0098
Epoch [10/10], Batch [93/117], Loss: 0.0299
Epoch [10/10], Batch [94/117], Loss: 0.1037
Epoch [10/10], Batch [95/117], Loss: 0.0398
Epoch [10/10], Batch [96/117], Loss: 0.0497
Epoch [10/10], Batch [97/117], Loss: 0.0588
Epoch [10/10], Batch [98/117], Loss: 0.1572
Epoch [10/10], Batch [99/117], Loss: 0.0508
Epoch [10/10], Batch [100/117], Loss: 0.0627
Epoch [10/10], Batch [101/117], Loss: 0.0462
Epoch [10/10], Batch [102/117], Loss: 0.0110
Epoch [10/10], Batch [103/117], Loss: 0.0539
Epoch [10/10], Batch [104/117], Loss: 0.0066
Epoch [10/10], Batch [105/117], Loss: 0.0710
Epoch [10/10], Batch [106/117], Loss: 0.0158
Epoch [10/10], Batch [107/117], Loss: 0.0359
Epoch [10/10], Batch [108/117], Loss: 0.0862
Epoch [10/10], Batch [109/117], Loss: 0.0359
Epoch [10/10], Batch [110/117], Loss: 0.0426
Epoch [10/10], Batch [111/117], Loss: 0.0677
Epoch [10/10], Batch [112/117], Loss: 0.0529
Epoch [10/10], Batch [113/117], Loss: 0.0160
Epoch [10/10], Batch [114/117], Loss: 0.0463
Epoch [10/10], Batch [115/117], Loss: 0.0102
Epoch [10/10], Batch [116/117], Loss: 0.0086
Epoch [10/10], Batch [117/117], Loss: 0.0639
Epoch [10/10], Average Loss: 0.0365
-----------------------------------------------------------
strategy: BEAM
iter: 5
epoch: 9
Test Loss: 0.4301
F1_overall: 0.5876
F1_AGENT: 0.7303
F1_TARGET: 0.4465
-----------------------------------------------------------
sorted_beam_scores: [(1759, tensor(-0.4409, dtype=torch.float64)), (1652, tensor(-0.4173, dtype=torch.float64)), (170, tensor(-0.3157, dtype=torch.float64)), (111, tensor(-0.3092, dtype=torch.float64)), (2309, tensor(-0.2937, dtype=torch.float64)), (2441, tensor(-0.2834, dtype=torch.float64)), (1681, tensor(-0.2732, dtype=torch.float64)), (1074, tensor(-0.2658, dtype=torch.float64)), (2594, tensor(-0.2518, dtype=torch.float64)), (757, tensor(-0.2389, dtype=torch.float64)), (264, tensor(-0.2330, dtype=torch.float64)), (2184, tensor(-0.2231, dtype=torch.float64)), (1719, tensor(-0.2229, dtype=torch.float64)), (1567, tensor(-0.2227, dtype=torch.float64)), (2343, tensor(-0.2218, dtype=torch.float64)), (1349, tensor(-0.2211, dtype=torch.float64)), (1556, tensor(-0.2182, dtype=torch.float64)), (80, tensor(-0.2087, dtype=torch.float64)), (1499, tensor(-0.2068, dtype=torch.float64)), (1653, tensor(-0.2031, dtype=torch.float64)), (1192, tensor(-0.2028, dtype=torch.float64)), (2569, tensor(-0.1977, dtype=torch.float64)), (904, tensor(-0.1968, dtype=torch.float64)), (375, tensor(-0.1920, dtype=torch.float64)), (598, tensor(-0.1895, dtype=torch.float64)), (549, tensor(-0.1867, dtype=torch.float64)), (597, tensor(-0.1845, dtype=torch.float64)), (1900, tensor(-0.1814, dtype=torch.float64)), (704, tensor(-0.1810, dtype=torch.float64)), (1633, tensor(-0.1806, dtype=torch.float64)), (195, tensor(-0.1799, dtype=torch.float64)), (741, tensor(-0.1772, dtype=torch.float64)), (1969, tensor(-0.1766, dtype=torch.float64)), (1502, tensor(-0.1725, dtype=torch.float64)), (453, tensor(-0.1654, dtype=torch.float64)), (707, tensor(-0.1635, dtype=torch.float64)), (2376, tensor(-0.1622, dtype=torch.float64)), (1850, tensor(-0.1612, dtype=torch.float64)), (2261, tensor(-0.1611, dtype=torch.float64)), (612, tensor(-0.1601, dtype=torch.float64)), (2386, tensor(-0.1596, dtype=torch.float64)), (2592, tensor(-0.1587, dtype=torch.float64)), (429, tensor(-0.1585, dtype=torch.float64)), (313, tensor(-0.1561, dtype=torch.float64)), (1935, tensor(-0.1537, dtype=torch.float64)), (2565, tensor(-0.1521, dtype=torch.float64)), (764, tensor(-0.1510, dtype=torch.float64)), (1036, tensor(-0.1508, dtype=torch.float64)), (2311, tensor(-0.1502, dtype=torch.float64)), (2195, tensor(-0.1499, dtype=torch.float64)), (1305, tensor(-0.1498, dtype=torch.float64)), (2288, tensor(-0.1493, dtype=torch.float64)), (900, tensor(-0.1488, dtype=torch.float64)), (2534, tensor(-0.1481, dtype=torch.float64)), (2189, tensor(-0.1478, dtype=torch.float64)), (2310, tensor(-0.1475, dtype=torch.float64)), (2010, tensor(-0.1469, dtype=torch.float64)), (1822, tensor(-0.1463, dtype=torch.float64)), (819, tensor(-0.1451, dtype=torch.float64)), (1559, tensor(-0.1438, dtype=torch.float64)), (109, tensor(-0.1438, dtype=torch.float64)), (415, tensor(-0.1432, dtype=torch.float64)), (2605, tensor(-0.1431, dtype=torch.float64)), (115, tensor(-0.1419, dtype=torch.float64)), (888, tensor(-0.1419, dtype=torch.float64)), (2464, tensor(-0.1418, dtype=torch.float64)), (1162, tensor(-0.1417, dtype=torch.float64)), (1329, tensor(-0.1414, dtype=torch.float64)), (1012, tensor(-0.1398, dtype=torch.float64)), (508, tensor(-0.1393, dtype=torch.float64)), (2445, tensor(-0.1387, dtype=torch.float64)), (2552, tensor(-0.1368, dtype=torch.float64)), (2418, tensor(-0.1368, dtype=torch.float64)), (863, tensor(-0.1368, dtype=torch.float64)), (2600, tensor(-0.1359, dtype=torch.float64)), (768, tensor(-0.1357, dtype=torch.float64)), (931, tensor(-0.1345, dtype=torch.float64)), (2286, tensor(-0.1343, dtype=torch.float64)), (456, tensor(-0.1332, dtype=torch.float64)), (1130, tensor(-0.1327, dtype=torch.float64)), (1065, tensor(-0.1318, dtype=torch.float64)), (1553, tensor(-0.1316, dtype=torch.float64)), (811, tensor(-0.1314, dtype=torch.float64)), (780, tensor(-0.1313, dtype=torch.float64)), (1291, tensor(-0.1308, dtype=torch.float64)), (966, tensor(-0.1305, dtype=torch.float64)), (2128, tensor(-0.1302, dtype=torch.float64)), (1487, tensor(-0.1302, dtype=torch.float64)), (1807, tensor(-0.1296, dtype=torch.float64)), (1524, tensor(-0.1290, dtype=torch.float64)), (1133, tensor(-0.1284, dtype=torch.float64)), (1110, tensor(-0.1274, dtype=torch.float64)), (754, tensor(-0.1273, dtype=torch.float64)), (203, tensor(-0.1272, dtype=torch.float64)), (554, tensor(-0.1271, dtype=torch.float64)), (1492, tensor(-0.1259, dtype=torch.float64)), (2019, tensor(-0.1256, dtype=torch.float64)), (286, tensor(-0.1252, dtype=torch.float64)), (1366, tensor(-0.1249, dtype=torch.float64)), (486, tensor(-0.1248, dtype=torch.float64)), (833, tensor(-0.1244, dtype=torch.float64)), (2341, tensor(-0.1244, dtype=torch.float64)), (373, tensor(-0.1243, dtype=torch.float64)), (1862, tensor(-0.1237, dtype=torch.float64)), (146, tensor(-0.1229, dtype=torch.float64)), (1084, tensor(-0.1228, dtype=torch.float64)), (534, tensor(-0.1222, dtype=torch.float64)), (135, tensor(-0.1220, dtype=torch.float64)), (7, tensor(-0.1219, dtype=torch.float64)), (1755, tensor(-0.1211, dtype=torch.float64)), (1082, tensor(-0.1204, dtype=torch.float64)), (179, tensor(-0.1202, dtype=torch.float64)), (1847, tensor(-0.1202, dtype=torch.float64)), (129, tensor(-0.1194, dtype=torch.float64)), (1117, tensor(-0.1188, dtype=torch.float64)), (955, tensor(-0.1173, dtype=torch.float64)), (1256, tensor(-0.1165, dtype=torch.float64)), (1382, tensor(-0.1163, dtype=torch.float64)), (604, tensor(-0.1159, dtype=torch.float64)), (2574, tensor(-0.1157, dtype=torch.float64)), (1647, tensor(-0.1149, dtype=torch.float64)), (1848, tensor(-0.1146, dtype=torch.float64)), (1921, tensor(-0.1145, dtype=torch.float64)), (2520, tensor(-0.1144, dtype=torch.float64)), (2045, tensor(-0.1139, dtype=torch.float64)), (969, tensor(-0.1135, dtype=torch.float64)), (369, tensor(-0.1131, dtype=torch.float64)), (1445, tensor(-0.1129, dtype=torch.float64)), (982, tensor(-0.1129, dtype=torch.float64)), (291, tensor(-0.1126, dtype=torch.float64)), (1371, tensor(-0.1124, dtype=torch.float64)), (471, tensor(-0.1119, dtype=torch.float64)), (1699, tensor(-0.1117, dtype=torch.float64)), (1512, tensor(-0.1115, dtype=torch.float64)), (961, tensor(-0.1115, dtype=torch.float64)), (884, tensor(-0.1114, dtype=torch.float64)), (1281, tensor(-0.1110, dtype=torch.float64)), (1243, tensor(-0.1109, dtype=torch.float64)), (1274, tensor(-0.1107, dtype=torch.float64)), (152, tensor(-0.1102, dtype=torch.float64)), (2113, tensor(-0.1101, dtype=torch.float64)), (391, tensor(-0.1097, dtype=torch.float64)), (1306, tensor(-0.1095, dtype=torch.float64)), (481, tensor(-0.1093, dtype=torch.float64)), (458, tensor(-0.1089, dtype=torch.float64)), (624, tensor(-0.1087, dtype=torch.float64)), (53, tensor(-0.1081, dtype=torch.float64)), (1572, tensor(-0.1081, dtype=torch.float64)), (542, tensor(-0.1074, dtype=torch.float64)), (1587, tensor(-0.1074, dtype=torch.float64)), (100, tensor(-0.1073, dtype=torch.float64)), (2015, tensor(-0.1072, dtype=torch.float64)), (2063, tensor(-0.1071, dtype=torch.float64)), (2488, tensor(-0.1065, dtype=torch.float64)), (1257, tensor(-0.1064, dtype=torch.float64)), (2160, tensor(-0.1063, dtype=torch.float64)), (1952, tensor(-0.1058, dtype=torch.float64)), (1645, tensor(-0.1056, dtype=torch.float64)), (722, tensor(-0.1053, dtype=torch.float64)), (1557, tensor(-0.1046, dtype=torch.float64)), (1839, tensor(-0.1045, dtype=torch.float64)), (464, tensor(-0.1043, dtype=torch.float64)), (2406, tensor(-0.1041, dtype=torch.float64)), (1177, tensor(-0.1040, dtype=torch.float64)), (953, tensor(-0.1040, dtype=torch.float64)), (1121, tensor(-0.1038, dtype=torch.float64)), (2456, tensor(-0.1034, dtype=torch.float64)), (2038, tensor(-0.1028, dtype=torch.float64)), (85, tensor(-0.1020, dtype=torch.float64)), (42, tensor(-0.1017, dtype=torch.float64)), (2353, tensor(-0.1017, dtype=torch.float64)), (881, tensor(-0.1016, dtype=torch.float64)), (1023, tensor(-0.1016, dtype=torch.float64)), (1723, tensor(-0.1006, dtype=torch.float64)), (1458, tensor(-0.1005, dtype=torch.float64)), (216, tensor(-0.1003, dtype=torch.float64)), (2088, tensor(-0.1001, dtype=torch.float64)), (103, tensor(-0.1000, dtype=torch.float64)), (1983, tensor(-0.0997, dtype=torch.float64)), (167, tensor(-0.0996, dtype=torch.float64)), (1693, tensor(-0.0994, dtype=torch.float64)), (1996, tensor(-0.0994, dtype=torch.float64)), (912, tensor(-0.0993, dtype=torch.float64)), (683, tensor(-0.0993, dtype=torch.float64)), (1778, tensor(-0.0989, dtype=torch.float64)), (1793, tensor(-0.0988, dtype=torch.float64)), (1004, tensor(-0.0982, dtype=torch.float64)), (2518, tensor(-0.0981, dtype=torch.float64)), (1219, tensor(-0.0979, dtype=torch.float64)), (2161, tensor(-0.0979, dtype=torch.float64)), (1309, tensor(-0.0979, dtype=torch.float64)), (346, tensor(-0.0977, dtype=torch.float64)), (1006, tensor(-0.0977, dtype=torch.float64)), (1981, tensor(-0.0975, dtype=torch.float64)), (366, tensor(-0.0974, dtype=torch.float64)), (194, tensor(-0.0974, dtype=torch.float64)), (2203, tensor(-0.0971, dtype=torch.float64)), (1184, tensor(-0.0970, dtype=torch.float64)), (1471, tensor(-0.0969, dtype=torch.float64)), (485, tensor(-0.0966, dtype=torch.float64)), (388, tensor(-0.0962, dtype=torch.float64)), (669, tensor(-0.0961, dtype=torch.float64)), (1564, tensor(-0.0957, dtype=torch.float64)), (1620, tensor(-0.0956, dtype=torch.float64)), (2304, tensor(-0.0956, dtype=torch.float64)), (1260, tensor(-0.0956, dtype=torch.float64)), (1411, tensor(-0.0954, dtype=torch.float64)), (1730, tensor(-0.0953, dtype=torch.float64)), (112, tensor(-0.0952, dtype=torch.float64)), (1104, tensor(-0.0946, dtype=torch.float64)), (1692, tensor(-0.0946, dtype=torch.float64)), (84, tensor(-0.0943, dtype=torch.float64)), (985, tensor(-0.0942, dtype=torch.float64)), (979, tensor(-0.0940, dtype=torch.float64)), (5, tensor(-0.0938, dtype=torch.float64)), (2053, tensor(-0.0935, dtype=torch.float64)), (1965, tensor(-0.0933, dtype=torch.float64)), (390, tensor(-0.0932, dtype=torch.float64)), (1795, tensor(-0.0927, dtype=torch.float64)), (2547, tensor(-0.0925, dtype=torch.float64)), (73, tensor(-0.0925, dtype=torch.float64)), (95, tensor(-0.0925, dtype=torch.float64)), (72, tensor(-0.0925, dtype=torch.float64)), (482, tensor(-0.0924, dtype=torch.float64)), (1384, tensor(-0.0923, dtype=torch.float64)), (332, tensor(-0.0922, dtype=torch.float64)), (974, tensor(-0.0921, dtype=torch.float64)), (1045, tensor(-0.0921, dtype=torch.float64)), (1835, tensor(-0.0920, dtype=torch.float64)), (1913, tensor(-0.0919, dtype=torch.float64)), (498, tensor(-0.0919, dtype=torch.float64)), (1493, tensor(-0.0918, dtype=torch.float64)), (1481, tensor(-0.0916, dtype=torch.float64)), (1404, tensor(-0.0906, dtype=torch.float64)), (1186, tensor(-0.0905, dtype=torch.float64)), (2322, tensor(-0.0904, dtype=torch.float64)), (1579, tensor(-0.0902, dtype=torch.float64)), (1949, tensor(-0.0901, dtype=torch.float64)), (175, tensor(-0.0900, dtype=torch.float64)), (694, tensor(-0.0900, dtype=torch.float64)), (1991, tensor(-0.0899, dtype=torch.float64)), (1339, tensor(-0.0898, dtype=torch.float64)), (78, tensor(-0.0894, dtype=torch.float64)), (451, tensor(-0.0893, dtype=torch.float64)), (318, tensor(-0.0890, dtype=torch.float64)), (1616, tensor(-0.0890, dtype=torch.float64)), (1829, tensor(-0.0889, dtype=torch.float64)), (1715, tensor(-0.0888, dtype=torch.float64)), (644, tensor(-0.0887, dtype=torch.float64)), (1570, tensor(-0.0886, dtype=torch.float64)), (68, tensor(-0.0885, dtype=torch.float64)), (1290, tensor(-0.0885, dtype=torch.float64)), (1642, tensor(-0.0883, dtype=torch.float64)), (605, tensor(-0.0883, dtype=torch.float64)), (2065, tensor(-0.0880, dtype=torch.float64)), (180, tensor(-0.0878, dtype=torch.float64)), (131, tensor(-0.0877, dtype=torch.float64)), (468, tensor(-0.0875, dtype=torch.float64)), (1468, tensor(-0.0874, dtype=torch.float64)), (2284, tensor(-0.0872, dtype=torch.float64)), (2214, tensor(-0.0872, dtype=torch.float64)), (2182, tensor(-0.0870, dtype=torch.float64)), (65, tensor(-0.0867, dtype=torch.float64)), (1029, tensor(-0.0866, dtype=torch.float64)), (2433, tensor(-0.0866, dtype=torch.float64)), (2345, tensor(-0.0866, dtype=torch.float64)), (2125, tensor(-0.0865, dtype=torch.float64)), (524, tensor(-0.0864, dtype=torch.float64)), (601, tensor(-0.0863, dtype=torch.float64)), (535, tensor(-0.0863, dtype=torch.float64)), (2335, tensor(-0.0863, dtype=torch.float64)), (719, tensor(-0.0860, dtype=torch.float64)), (1495, tensor(-0.0860, dtype=torch.float64)), (301, tensor(-0.0857, dtype=torch.float64)), (101, tensor(-0.0856, dtype=torch.float64)), (2240, tensor(-0.0854, dtype=torch.float64)), (1353, tensor(-0.0854, dtype=torch.float64)), (729, tensor(-0.0850, dtype=torch.float64)), (1109, tensor(-0.0849, dtype=torch.float64)), (959, tensor(-0.0846, dtype=torch.float64)), (2329, tensor(-0.0845, dtype=torch.float64)), (2210, tensor(-0.0843, dtype=torch.float64)), (217, tensor(-0.0841, dtype=torch.float64)), (2112, tensor(-0.0839, dtype=torch.float64)), (1139, tensor(-0.0839, dtype=torch.float64)), (1372, tensor(-0.0838, dtype=torch.float64)), (2368, tensor(-0.0838, dtype=torch.float64)), (925, tensor(-0.0837, dtype=torch.float64)), (1354, tensor(-0.0837, dtype=torch.float64)), (1451, tensor(-0.0836, dtype=torch.float64)), (1713, tensor(-0.0835, dtype=torch.float64)), (2338, tensor(-0.0835, dtype=torch.float64)), (905, tensor(-0.0835, dtype=torch.float64)), (1264, tensor(-0.0835, dtype=torch.float64)), (1431, tensor(-0.0835, dtype=torch.float64)), (2390, tensor(-0.0833, dtype=torch.float64)), (721, tensor(-0.0832, dtype=torch.float64)), (2198, tensor(-0.0832, dtype=torch.float64)), (1288, tensor(-0.0831, dtype=torch.float64)), (667, tensor(-0.0830, dtype=torch.float64)), (2420, tensor(-0.0828, dtype=torch.float64)), (76, tensor(-0.0827, dtype=torch.float64)), (776, tensor(-0.0823, dtype=torch.float64)), (96, tensor(-0.0823, dtype=torch.float64)), (1338, tensor(-0.0822, dtype=torch.float64)), (2559, tensor(-0.0822, dtype=torch.float64)), (700, tensor(-0.0822, dtype=torch.float64)), (751, tensor(-0.0821, dtype=torch.float64)), (533, tensor(-0.0819, dtype=torch.float64)), (256, tensor(-0.0819, dtype=torch.float64)), (254, tensor(-0.0819, dtype=torch.float64)), (1213, tensor(-0.0819, dtype=torch.float64)), (852, tensor(-0.0819, dtype=torch.float64)), (1702, tensor(-0.0817, dtype=torch.float64)), (2039, tensor(-0.0816, dtype=torch.float64)), (2428, tensor(-0.0812, dtype=torch.float64)), (133, tensor(-0.0812, dtype=torch.float64)), (497, tensor(-0.0812, dtype=torch.float64)), (74, tensor(-0.0810, dtype=torch.float64)), (2462, tensor(-0.0809, dtype=torch.float64)), (123, tensor(-0.0808, dtype=torch.float64)), (865, tensor(-0.0807, dtype=torch.float64)), (322, tensor(-0.0805, dtype=torch.float64)), (199, tensor(-0.0805, dtype=torch.float64)), (408, tensor(-0.0805, dtype=torch.float64)), (428, tensor(-0.0804, dtype=torch.float64)), (1467, tensor(-0.0799, dtype=torch.float64)), (1589, tensor(-0.0798, dtype=torch.float64)), (1865, tensor(-0.0798, dtype=torch.float64)), (1463, tensor(-0.0798, dtype=torch.float64)), (2219, tensor(-0.0796, dtype=torch.float64)), (1732, tensor(-0.0796, dtype=torch.float64)), (1972, tensor(-0.0796, dtype=torch.float64)), (2005, tensor(-0.0795, dtype=torch.float64)), (2152, tensor(-0.0794, dtype=torch.float64)), (272, tensor(-0.0793, dtype=torch.float64)), (2387, tensor(-0.0792, dtype=torch.float64)), (2233, tensor(-0.0792, dtype=torch.float64)), (2036, tensor(-0.0791, dtype=torch.float64)), (1021, tensor(-0.0790, dtype=torch.float64)), (1400, tensor(-0.0790, dtype=torch.float64)), (2541, tensor(-0.0789, dtype=torch.float64)), (1634, tensor(-0.0788, dtype=torch.float64)), (2365, tensor(-0.0788, dtype=torch.float64)), (1904, tensor(-0.0788, dtype=torch.float64)), (907, tensor(-0.0787, dtype=torch.float64)), (849, tensor(-0.0785, dtype=torch.float64)), (2539, tensor(-0.0785, dtype=torch.float64)), (1501, tensor(-0.0783, dtype=torch.float64)), (709, tensor(-0.0781, dtype=torch.float64)), (893, tensor(-0.0780, dtype=torch.float64)), (162, tensor(-0.0780, dtype=torch.float64)), (1676, tensor(-0.0779, dtype=torch.float64)), (2239, tensor(-0.0778, dtype=torch.float64)), (1974, tensor(-0.0778, dtype=torch.float64)), (1626, tensor(-0.0778, dtype=torch.float64)), (892, tensor(-0.0777, dtype=torch.float64)), (1007, tensor(-0.0777, dtype=torch.float64)), (1706, tensor(-0.0775, dtype=torch.float64)), (2060, tensor(-0.0775, dtype=torch.float64)), (1526, tensor(-0.0775, dtype=torch.float64)), (629, tensor(-0.0774, dtype=torch.float64)), (1408, tensor(-0.0774, dtype=torch.float64)), (2082, tensor(-0.0772, dtype=torch.float64)), (1327, tensor(-0.0772, dtype=torch.float64)), (2135, tensor(-0.0772, dtype=torch.float64)), (1809, tensor(-0.0771, dtype=torch.float64)), (2251, tensor(-0.0770, dtype=torch.float64)), (2463, tensor(-0.0770, dtype=torch.float64)), (2366, tensor(-0.0770, dtype=torch.float64)), (806, tensor(-0.0770, dtype=torch.float64)), (804, tensor(-0.0770, dtype=torch.float64)), (1345, tensor(-0.0769, dtype=torch.float64)), (1915, tensor(-0.0768, dtype=torch.float64)), (2099, tensor(-0.0766, dtype=torch.float64)), (1070, tensor(-0.0766, dtype=torch.float64)), (1282, tensor(-0.0765, dtype=torch.float64)), (1364, tensor(-0.0764, dtype=torch.float64)), (2002, tensor(-0.0764, dtype=torch.float64)), (2000, tensor(-0.0763, dtype=torch.float64)), (2059, tensor(-0.0762, dtype=torch.float64)), (887, tensor(-0.0762, dtype=torch.float64)), (1737, tensor(-0.0759, dtype=torch.float64)), (540, tensor(-0.0758, dtype=torch.float64)), (716, tensor(-0.0757, dtype=torch.float64)), (305, tensor(-0.0756, dtype=torch.float64)), (855, tensor(-0.0756, dtype=torch.float64)), (125, tensor(-0.0756, dtype=torch.float64)), (1548, tensor(-0.0756, dtype=torch.float64)), (343, tensor(-0.0753, dtype=torch.float64)), (830, tensor(-0.0752, dtype=torch.float64)), (681, tensor(-0.0752, dtype=torch.float64)), (895, tensor(-0.0752, dtype=torch.float64)), (405, tensor(-0.0750, dtype=torch.float64)), (1893, tensor(-0.0750, dtype=torch.float64)), (1651, tensor(-0.0749, dtype=torch.float64)), (824, tensor(-0.0748, dtype=torch.float64)), (853, tensor(-0.0747, dtype=torch.float64)), (411, tensor(-0.0746, dtype=torch.float64)), (1749, tensor(-0.0745, dtype=torch.float64)), (2200, tensor(-0.0743, dtype=torch.float64)), (656, tensor(-0.0743, dtype=torch.float64)), (1746, tensor(-0.0743, dtype=torch.float64)), (1675, tensor(-0.0742, dtype=torch.float64)), (303, tensor(-0.0742, dtype=torch.float64)), (2118, tensor(-0.0741, dtype=torch.float64)), (2205, tensor(-0.0741, dtype=torch.float64)), (1890, tensor(-0.0739, dtype=torch.float64)), (1048, tensor(-0.0738, dtype=torch.float64)), (843, tensor(-0.0737, dtype=torch.float64)), (417, tensor(-0.0735, dtype=torch.float64)), (1172, tensor(-0.0734, dtype=torch.float64)), (934, tensor(-0.0733, dtype=torch.float64)), (1856, tensor(-0.0733, dtype=torch.float64)), (2164, tensor(-0.0733, dtype=torch.float64)), (1289, tensor(-0.0731, dtype=torch.float64)), (2154, tensor(-0.0731, dtype=torch.float64)), (1966, tensor(-0.0730, dtype=torch.float64)), (2442, tensor(-0.0730, dtype=torch.float64)), (463, tensor(-0.0729, dtype=torch.float64)), (2173, tensor(-0.0728, dtype=torch.float64)), (364, tensor(-0.0727, dtype=torch.float64)), (462, tensor(-0.0727, dtype=torch.float64)), (1738, tensor(-0.0727, dtype=torch.float64)), (457, tensor(-0.0726, dtype=torch.float64)), (136, tensor(-0.0725, dtype=torch.float64)), (306, tensor(-0.0725, dtype=torch.float64)), (947, tensor(-0.0725, dtype=torch.float64)), (231, tensor(-0.0725, dtype=torch.float64)), (1090, tensor(-0.0724, dtype=torch.float64)), (8, tensor(-0.0724, dtype=torch.float64)), (1081, tensor(-0.0723, dtype=torch.float64)), (2494, tensor(-0.0723, dtype=torch.float64)), (1903, tensor(-0.0722, dtype=torch.float64)), (385, tensor(-0.0722, dtype=torch.float64)), (1101, tensor(-0.0722, dtype=torch.float64)), (2248, tensor(-0.0721, dtype=torch.float64)), (591, tensor(-0.0720, dtype=torch.float64)), (1314, tensor(-0.0720, dtype=torch.float64)), (1212, tensor(-0.0719, dtype=torch.float64)), (1912, tensor(-0.0718, dtype=torch.float64)), (2040, tensor(-0.0718, dtype=torch.float64)), (1051, tensor(-0.0718, dtype=torch.float64)), (1876, tensor(-0.0717, dtype=torch.float64)), (121, tensor(-0.0717, dtype=torch.float64)), (514, tensor(-0.0716, dtype=torch.float64)), (856, tensor(-0.0715, dtype=torch.float64)), (790, tensor(-0.0715, dtype=torch.float64)), (1165, tensor(-0.0713, dtype=torch.float64)), (962, tensor(-0.0712, dtype=torch.float64)), (2443, tensor(-0.0712, dtype=torch.float64)), (628, tensor(-0.0711, dtype=torch.float64)), (1099, tensor(-0.0709, dtype=torch.float64)), (1785, tensor(-0.0708, dtype=torch.float64)), (64, tensor(-0.0708, dtype=torch.float64)), (1086, tensor(-0.0706, dtype=torch.float64)), (116, tensor(-0.0705, dtype=torch.float64)), (1792, tensor(-0.0703, dtype=torch.float64)), (2291, tensor(-0.0703, dtype=torch.float64)), (2296, tensor(-0.0702, dtype=torch.float64)), (864, tensor(-0.0702, dtype=torch.float64)), (2207, tensor(-0.0701, dtype=torch.float64)), (2295, tensor(-0.0699, dtype=torch.float64)), (1017, tensor(-0.0699, dtype=torch.float64)), (1234, tensor(-0.0698, dtype=torch.float64)), (2285, tensor(-0.0698, dtype=torch.float64)), (1033, tensor(-0.0697, dtype=torch.float64)), (967, tensor(-0.0696, dtype=torch.float64)), (889, tensor(-0.0696, dtype=torch.float64)), (1887, tensor(-0.0696, dtype=torch.float64)), (1773, tensor(-0.0694, dtype=torch.float64)), (2437, tensor(-0.0694, dtype=torch.float64)), (789, tensor(-0.0693, dtype=torch.float64)), (708, tensor(-0.0693, dtype=torch.float64)), (1470, tensor(-0.0693, dtype=torch.float64)), (2142, tensor(-0.0693, dtype=torch.float64)), (760, tensor(-0.0691, dtype=torch.float64)), (158, tensor(-0.0691, dtype=torch.float64)), (127, tensor(-0.0691, dtype=torch.float64)), (1583, tensor(-0.0691, dtype=torch.float64)), (596, tensor(-0.0690, dtype=torch.float64)), (2007, tensor(-0.0690, dtype=torch.float64)), (1280, tensor(-0.0690, dtype=torch.float64)), (362, tensor(-0.0689, dtype=torch.float64)), (2269, tensor(-0.0689, dtype=torch.float64)), (226, tensor(-0.0689, dtype=torch.float64)), (2183, tensor(-0.0687, dtype=torch.float64)), (636, tensor(-0.0686, dtype=torch.float64)), (90, tensor(-0.0686, dtype=torch.float64)), (169, tensor(-0.0685, dtype=torch.float64)), (1043, tensor(-0.0685, dtype=torch.float64)), (530, tensor(-0.0684, dtype=torch.float64)), (353, tensor(-0.0684, dtype=torch.float64)), (51, tensor(-0.0683, dtype=torch.float64)), (1924, tensor(-0.0681, dtype=torch.float64)), (570, tensor(-0.0680, dtype=torch.float64)), (2516, tensor(-0.0680, dtype=torch.float64)), (557, tensor(-0.0680, dtype=torch.float64)), (1588, tensor(-0.0679, dtype=torch.float64)), (998, tensor(-0.0679, dtype=torch.float64)), (2489, tensor(-0.0678, dtype=torch.float64)), (1944, tensor(-0.0677, dtype=torch.float64)), (1999, tensor(-0.0676, dtype=torch.float64)), (2372, tensor(-0.0675, dtype=torch.float64)), (1003, tensor(-0.0673, dtype=torch.float64)), (2496, tensor(-0.0672, dtype=torch.float64)), (1649, tensor(-0.0672, dtype=torch.float64)), (2107, tensor(-0.0672, dtype=torch.float64)), (2070, tensor(-0.0671, dtype=torch.float64)), (778, tensor(-0.0670, dtype=torch.float64)), (2209, tensor(-0.0670, dtype=torch.float64)), (10, tensor(-0.0669, dtype=torch.float64)), (467, tensor(-0.0669, dtype=torch.float64)), (219, tensor(-0.0669, dtype=torch.float64)), (1047, tensor(-0.0668, dtype=torch.float64)), (1964, tensor(-0.0668, dtype=torch.float64)), (1841, tensor(-0.0667, dtype=torch.float64)), (866, tensor(-0.0667, dtype=torch.float64)), (235, tensor(-0.0666, dtype=torch.float64)), (1929, tensor(-0.0666, dtype=torch.float64)), (69, tensor(-0.0665, dtype=torch.float64)), (1262, tensor(-0.0665, dtype=torch.float64)), (2301, tensor(-0.0665, dtype=torch.float64)), (2228, tensor(-0.0665, dtype=torch.float64)), (23, tensor(-0.0665, dtype=torch.float64)), (421, tensor(-0.0665, dtype=torch.float64)), (1222, tensor(-0.0664, dtype=torch.float64)), (1253, tensor(-0.0664, dtype=torch.float64)), (425, tensor(-0.0663, dtype=torch.float64)), (2581, tensor(-0.0662, dtype=torch.float64)), (2447, tensor(-0.0661, dtype=torch.float64)), (2502, tensor(-0.0661, dtype=torch.float64)), (1768, tensor(-0.0660, dtype=torch.float64)), (859, tensor(-0.0660, dtype=torch.float64)), (578, tensor(-0.0660, dtype=torch.float64)), (2300, tensor(-0.0659, dtype=torch.float64)), (234, tensor(-0.0659, dtype=torch.float64)), (1459, tensor(-0.0658, dtype=torch.float64)), (401, tensor(-0.0658, dtype=torch.float64)), (2337, tensor(-0.0657, dtype=torch.float64)), (2187, tensor(-0.0657, dtype=torch.float64)), (862, tensor(-0.0656, dtype=torch.float64)), (986, tensor(-0.0655, dtype=torch.float64)), (1168, tensor(-0.0653, dtype=torch.float64)), (2522, tensor(-0.0652, dtype=torch.float64)), (1764, tensor(-0.0651, dtype=torch.float64)), (1880, tensor(-0.0651, dtype=torch.float64)), (1454, tensor(-0.0648, dtype=torch.float64)), (1315, tensor(-0.0648, dtype=torch.float64)), (2185, tensor(-0.0647, dtype=torch.float64)), (2530, tensor(-0.0646, dtype=torch.float64)), (148, tensor(-0.0646, dtype=torch.float64)), (1940, tensor(-0.0645, dtype=torch.float64)), (1515, tensor(-0.0644, dtype=torch.float64)), (1091, tensor(-0.0644, dtype=torch.float64)), (839, tensor(-0.0643, dtype=torch.float64)), (1936, tensor(-0.0643, dtype=torch.float64)), (496, tensor(-0.0643, dtype=torch.float64)), (1597, tensor(-0.0643, dtype=torch.float64)), (1163, tensor(-0.0642, dtype=torch.float64)), (126, tensor(-0.0642, dtype=torch.float64)), (2206, tensor(-0.0642, dtype=torch.float64)), (1069, tensor(-0.0640, dtype=torch.float64)), (2273, tensor(-0.0637, dtype=torch.float64)), (1057, tensor(-0.0636, dtype=torch.float64)), (2220, tensor(-0.0636, dtype=torch.float64)), (61, tensor(-0.0636, dtype=torch.float64)), (1209, tensor(-0.0635, dtype=torch.float64)), (677, tensor(-0.0634, dtype=torch.float64)), (99, tensor(-0.0633, dtype=torch.float64)), (2446, tensor(-0.0632, dtype=torch.float64)), (2426, tensor(-0.0630, dtype=torch.float64)), (1919, tensor(-0.0630, dtype=torch.float64)), (851, tensor(-0.0629, dtype=torch.float64)), (1803, tensor(-0.0629, dtype=torch.float64)), (2253, tensor(-0.0628, dtype=torch.float64)), (67, tensor(-0.0628, dtype=torch.float64)), (761, tensor(-0.0627, dtype=torch.float64)), (585, tensor(-0.0626, dtype=torch.float64)), (2254, tensor(-0.0626, dtype=torch.float64)), (455, tensor(-0.0626, dtype=torch.float64)), (29, tensor(-0.0625, dtype=torch.float64)), (1412, tensor(-0.0625, dtype=torch.float64)), (94, tensor(-0.0625, dtype=torch.float64)), (237, tensor(-0.0624, dtype=torch.float64)), (55, tensor(-0.0624, dtype=torch.float64)), (2172, tensor(-0.0623, dtype=torch.float64)), (1504, tensor(-0.0622, dtype=torch.float64)), (1341, tensor(-0.0622, dtype=torch.float64)), (1160, tensor(-0.0621, dtype=torch.float64)), (2034, tensor(-0.0620, dtype=torch.float64)), (52, tensor(-0.0619, dtype=torch.float64)), (1425, tensor(-0.0619, dtype=torch.float64)), (825, tensor(-0.0618, dtype=torch.float64)), (1780, tensor(-0.0617, dtype=torch.float64)), (2241, tensor(-0.0617, dtype=torch.float64)), (358, tensor(-0.0616, dtype=torch.float64)), (2422, tensor(-0.0616, dtype=torch.float64)), (1134, tensor(-0.0615, dtype=torch.float64)), (2326, tensor(-0.0615, dtype=torch.float64)), (532, tensor(-0.0615, dtype=torch.float64)), (134, tensor(-0.0614, dtype=torch.float64)), (2558, tensor(-0.0614, dtype=torch.float64)), (571, tensor(-0.0613, dtype=torch.float64)), (770, tensor(-0.0613, dtype=torch.float64)), (1540, tensor(-0.0612, dtype=torch.float64)), (2501, tensor(-0.0612, dtype=torch.float64)), (424, tensor(-0.0611, dtype=torch.float64)), (1286, tensor(-0.0610, dtype=torch.float64)), (2470, tensor(-0.0610, dtype=torch.float64)), (1569, tensor(-0.0609, dtype=torch.float64)), (1053, tensor(-0.0609, dtype=torch.float64)), (312, tensor(-0.0608, dtype=torch.float64)), (410, tensor(-0.0608, dtype=torch.float64)), (2596, tensor(-0.0607, dtype=torch.float64)), (543, tensor(-0.0607, dtype=torch.float64)), (621, tensor(-0.0607, dtype=torch.float64)), (1261, tensor(-0.0606, dtype=torch.float64)), (914, tensor(-0.0605, dtype=torch.float64)), (259, tensor(-0.0605, dtype=torch.float64)), (1677, tensor(-0.0605, dtype=torch.float64)), (1796, tensor(-0.0604, dtype=torch.float64)), (335, tensor(-0.0604, dtype=torch.float64)), (2505, tensor(-0.0603, dtype=torch.float64)), (641, tensor(-0.0603, dtype=torch.float64)), (1077, tensor(-0.0601, dtype=torch.float64)), (1786, tensor(-0.0601, dtype=torch.float64)), (1728, tensor(-0.0599, dtype=torch.float64)), (2149, tensor(-0.0599, dtype=torch.float64)), (2348, tensor(-0.0599, dtype=torch.float64)), (928, tensor(-0.0599, dtype=torch.float64)), (918, tensor(-0.0598, dtype=torch.float64)), (1923, tensor(-0.0598, dtype=torch.float64)), (1284, tensor(-0.0598, dtype=torch.float64)), (2577, tensor(-0.0598, dtype=torch.float64)), (1035, tensor(-0.0597, dtype=torch.float64)), (1214, tensor(-0.0596, dtype=torch.float64)), (673, tensor(-0.0596, dtype=torch.float64)), (1360, tensor(-0.0596, dtype=torch.float64)), (2414, tensor(-0.0595, dtype=torch.float64)), (901, tensor(-0.0594, dtype=torch.float64)), (1580, tensor(-0.0593, dtype=torch.float64)), (1063, tensor(-0.0592, dtype=torch.float64)), (1241, tensor(-0.0591, dtype=torch.float64)), (2199, tensor(-0.0591, dtype=torch.float64)), (368, tensor(-0.0589, dtype=torch.float64)), (1846, tensor(-0.0589, dtype=torch.float64)), (792, tensor(-0.0589, dtype=torch.float64)), (693, tensor(-0.0589, dtype=torch.float64)), (2062, tensor(-0.0588, dtype=torch.float64)), (1727, tensor(-0.0587, dtype=torch.float64)), (495, tensor(-0.0586, dtype=torch.float64)), (1584, tensor(-0.0586, dtype=torch.float64)), (1396, tensor(-0.0585, dtype=torch.float64)), (1333, tensor(-0.0584, dtype=torch.float64)), (215, tensor(-0.0583, dtype=torch.float64)), (1332, tensor(-0.0583, dtype=torch.float64)), (1685, tensor(-0.0583, dtype=torch.float64)), (919, tensor(-0.0583, dtype=torch.float64)), (1871, tensor(-0.0583, dtype=torch.float64)), (2491, tensor(-0.0582, dtype=torch.float64)), (783, tensor(-0.0580, dtype=torch.float64)), (2383, tensor(-0.0580, dtype=torch.float64)), (412, tensor(-0.0578, dtype=torch.float64)), (2030, tensor(-0.0576, dtype=torch.float64)), (1586, tensor(-0.0575, dtype=torch.float64)), (706, tensor(-0.0575, dtype=torch.float64)), (1325, tensor(-0.0574, dtype=torch.float64)), (1056, tensor(-0.0573, dtype=torch.float64)), (2524, tensor(-0.0573, dtype=torch.float64)), (1089, tensor(-0.0572, dtype=torch.float64)), (1228, tensor(-0.0570, dtype=torch.float64)), (1095, tensor(-0.0569, dtype=torch.float64)), (242, tensor(-0.0568, dtype=torch.float64)), (878, tensor(-0.0568, dtype=torch.float64)), (1547, tensor(-0.0567, dtype=torch.float64)), (104, tensor(-0.0565, dtype=torch.float64)), (637, tensor(-0.0564, dtype=torch.float64)), (1980, tensor(-0.0564, dtype=torch.float64)), (1808, tensor(-0.0563, dtype=torch.float64)), (2351, tensor(-0.0563, dtype=torch.float64)), (1285, tensor(-0.0562, dtype=torch.float64)), (584, tensor(-0.0562, dtype=torch.float64)), (1096, tensor(-0.0562, dtype=torch.float64)), (2073, tensor(-0.0561, dtype=torch.float64)), (2562, tensor(-0.0561, dtype=torch.float64)), (2324, tensor(-0.0560, dtype=torch.float64)), (2056, tensor(-0.0559, dtype=torch.float64)), (615, tensor(-0.0558, dtype=torch.float64)), (1032, tensor(-0.0558, dtype=torch.float64)), (1522, tensor(-0.0557, dtype=torch.float64)), (330, tensor(-0.0557, dtype=torch.float64)), (9, tensor(-0.0556, dtype=torch.float64)), (1858, tensor(-0.0555, dtype=torch.float64)), (813, tensor(-0.0554, dtype=torch.float64)), (2481, tensor(-0.0554, dtype=torch.float64)), (1211, tensor(-0.0553, dtype=torch.float64)), (728, tensor(-0.0553, dtype=torch.float64)), (1899, tensor(-0.0552, dtype=torch.float64)), (1085, tensor(-0.0552, dtype=torch.float64)), (1197, tensor(-0.0551, dtype=torch.float64)), (1695, tensor(-0.0549, dtype=torch.float64)), (2079, tensor(-0.0548, dtype=torch.float64)), (536, tensor(-0.0548, dtype=torch.float64)), (1461, tensor(-0.0547, dtype=torch.float64)), (407, tensor(-0.0547, dtype=torch.float64)), (937, tensor(-0.0547, dtype=torch.float64)), (1902, tensor(-0.0547, dtype=torch.float64)), (1636, tensor(-0.0546, dtype=torch.float64)), (2599, tensor(-0.0546, dtype=torch.float64)), (1726, tensor(-0.0546, dtype=torch.float64)), (48, tensor(-0.0546, dtype=torch.float64)), (876, tensor(-0.0546, dtype=torch.float64)), (1013, tensor(-0.0546, dtype=torch.float64)), (550, tensor(-0.0545, dtype=torch.float64)), (2573, tensor(-0.0545, dtype=torch.float64)), (1059, tensor(-0.0544, dtype=torch.float64)), (725, tensor(-0.0544, dtype=torch.float64)), (1650, tensor(-0.0544, dtype=torch.float64)), (2213, tensor(-0.0543, dtype=torch.float64)), (625, tensor(-0.0543, dtype=torch.float64)), (2081, tensor(-0.0543, dtype=torch.float64)), (1144, tensor(-0.0543, dtype=torch.float64)), (245, tensor(-0.0542, dtype=torch.float64)), (351, tensor(-0.0542, dtype=torch.float64)), (2302, tensor(-0.0542, dtype=torch.float64)), (1511, tensor(-0.0542, dtype=torch.float64)), (2344, tensor(-0.0541, dtype=torch.float64)), (60, tensor(-0.0541, dtype=torch.float64)), (657, tensor(-0.0541, dtype=torch.float64)), (1592, tensor(-0.0541, dtype=torch.float64)), (698, tensor(-0.0540, dtype=torch.float64)), (726, tensor(-0.0540, dtype=torch.float64)), (1270, tensor(-0.0540, dtype=torch.float64)), (1204, tensor(-0.0539, dtype=torch.float64)), (299, tensor(-0.0538, dtype=torch.float64)), (1145, tensor(-0.0536, dtype=torch.float64)), (1623, tensor(-0.0536, dtype=torch.float64)), (1762, tensor(-0.0536, dtype=torch.float64)), (1709, tensor(-0.0535, dtype=torch.float64)), (292, tensor(-0.0535, dtype=torch.float64)), (1957, tensor(-0.0534, dtype=torch.float64)), (381, tensor(-0.0534, dtype=torch.float64)), (1775, tensor(-0.0533, dtype=torch.float64)), (474, tensor(-0.0532, dtype=torch.float64)), (1995, tensor(-0.0532, dtype=torch.float64)), (586, tensor(-0.0532, dtype=torch.float64)), (1342, tensor(-0.0532, dtype=torch.float64)), (403, tensor(-0.0531, dtype=torch.float64)), (702, tensor(-0.0530, dtype=torch.float64)), (1175, tensor(-0.0530, dtype=torch.float64)), (886, tensor(-0.0529, dtype=torch.float64)), (951, tensor(-0.0528, dtype=torch.float64)), (2319, tensor(-0.0528, dtype=torch.float64)), (538, tensor(-0.0527, dtype=torch.float64)), (1869, tensor(-0.0527, dtype=torch.float64)), (331, tensor(-0.0527, dtype=torch.float64)), (1812, tensor(-0.0526, dtype=torch.float64)), (675, tensor(-0.0525, dtype=torch.float64)), (1202, tensor(-0.0525, dtype=torch.float64)), (376, tensor(-0.0524, dtype=torch.float64)), (1201, tensor(-0.0524, dtype=torch.float64)), (13, tensor(-0.0523, dtype=torch.float64)), (1782, tensor(-0.0522, dtype=torch.float64)), (2121, tensor(-0.0522, dtype=torch.float64)), (1357, tensor(-0.0521, dtype=torch.float64)), (214, tensor(-0.0519, dtype=torch.float64)), (1336, tensor(-0.0517, dtype=torch.float64)), (2320, tensor(-0.0517, dtype=torch.float64)), (409, tensor(-0.0517, dtype=torch.float64)), (2077, tensor(-0.0517, dtype=torch.float64)), (1879, tensor(-0.0516, dtype=torch.float64)), (814, tensor(-0.0516, dtype=torch.float64)), (2255, tensor(-0.0515, dtype=torch.float64)), (319, tensor(-0.0515, dtype=torch.float64)), (244, tensor(-0.0515, dtype=torch.float64)), (1696, tensor(-0.0514, dtype=torch.float64)), (2271, tensor(-0.0513, dtype=torch.float64)), (2313, tensor(-0.0513, dtype=torch.float64)), (1686, tensor(-0.0513, dtype=torch.float64)), (1244, tensor(-0.0513, dtype=torch.float64)), (1797, tensor(-0.0513, dtype=torch.float64)), (1994, tensor(-0.0512, dtype=torch.float64)), (610, tensor(-0.0512, dtype=torch.float64)), (1562, tensor(-0.0511, dtype=torch.float64)), (528, tensor(-0.0511, dtype=torch.float64)), (147, tensor(-0.0510, dtype=torch.float64)), (1798, tensor(-0.0510, dtype=torch.float64)), (1959, tensor(-0.0510, dtype=torch.float64)), (1898, tensor(-0.0509, dtype=torch.float64)), (626, tensor(-0.0509, dtype=torch.float64)), (59, tensor(-0.0509, dtype=torch.float64)), (504, tensor(-0.0508, dtype=torch.float64)), (79, tensor(-0.0508, dtype=torch.float64)), (22, tensor(-0.0507, dtype=torch.float64)), (1113, tensor(-0.0506, dtype=torch.float64)), (92, tensor(-0.0506, dtype=torch.float64)), (2136, tensor(-0.0506, dtype=torch.float64)), (1514, tensor(-0.0506, dtype=torch.float64)), (503, tensor(-0.0506, dtype=torch.float64)), (354, tensor(-0.0503, dtype=torch.float64)), (307, tensor(-0.0502, dtype=torch.float64)), (594, tensor(-0.0502, dtype=torch.float64)), (2103, tensor(-0.0501, dtype=torch.float64)), (2054, tensor(-0.0501, dtype=torch.float64)), (817, tensor(-0.0500, dtype=torch.float64)), (62, tensor(-0.0500, dtype=torch.float64)), (1656, tensor(-0.0499, dtype=torch.float64)), (627, tensor(-0.0499, dtype=torch.float64)), (2236, tensor(-0.0498, dtype=torch.float64)), (1654, tensor(-0.0497, dtype=torch.float64)), (208, tensor(-0.0497, dtype=torch.float64)), (896, tensor(-0.0496, dtype=torch.float64)), (1772, tensor(-0.0496, dtype=torch.float64)), (1316, tensor(-0.0496, dtype=torch.float64)), (828, tensor(-0.0496, dtype=torch.float64)), (316, tensor(-0.0496, dtype=torch.float64)), (380, tensor(-0.0496, dtype=torch.float64)), (1615, tensor(-0.0495, dtype=torch.float64)), (1777, tensor(-0.0494, dtype=torch.float64)), (2479, tensor(-0.0494, dtype=torch.float64)), (2543, tensor(-0.0493, dtype=torch.float64)), (2292, tensor(-0.0491, dtype=torch.float64)), (1427, tensor(-0.0491, dtype=torch.float64)), (2408, tensor(-0.0491, dtype=torch.float64)), (1985, tensor(-0.0490, dtype=torch.float64)), (952, tensor(-0.0490, dtype=torch.float64)), (541, tensor(-0.0489, dtype=torch.float64)), (289, tensor(-0.0489, dtype=torch.float64)), (1625, tensor(-0.0489, dtype=torch.float64)), (228, tensor(-0.0488, dtype=torch.float64)), (779, tensor(-0.0488, dtype=torch.float64)), (1646, tensor(-0.0487, dtype=torch.float64)), (801, tensor(-0.0487, dtype=torch.float64)), (845, tensor(-0.0486, dtype=torch.float64)), (1100, tensor(-0.0485, dtype=torch.float64)), (923, tensor(-0.0485, dtype=torch.float64)), (1527, tensor(-0.0485, dtype=torch.float64)), (663, tensor(-0.0485, dtype=torch.float64)), (1608, tensor(-0.0485, dtype=torch.float64)), (97, tensor(-0.0484, dtype=torch.float64)), (271, tensor(-0.0484, dtype=torch.float64)), (1624, tensor(-0.0484, dtype=torch.float64)), (2131, tensor(-0.0484, dtype=torch.float64)), (517, tensor(-0.0483, dtype=torch.float64)), (1525, tensor(-0.0483, dtype=torch.float64)), (749, tensor(-0.0483, dtype=torch.float64)), (2582, tensor(-0.0483, dtype=torch.float64)), (2150, tensor(-0.0483, dtype=torch.float64)), (1721, tensor(-0.0483, dtype=torch.float64)), (860, tensor(-0.0482, dtype=torch.float64)), (1380, tensor(-0.0481, dtype=torch.float64)), (1889, tensor(-0.0480, dtype=torch.float64)), (165, tensor(-0.0480, dtype=torch.float64)), (1497, tensor(-0.0479, dtype=torch.float64)), (2323, tensor(-0.0479, dtype=torch.float64)), (1307, tensor(-0.0479, dtype=torch.float64)), (355, tensor(-0.0478, dtype=torch.float64)), (336, tensor(-0.0478, dtype=torch.float64)), (2237, tensor(-0.0478, dtype=torch.float64)), (1914, tensor(-0.0476, dtype=torch.float64)), (1227, tensor(-0.0475, dtype=torch.float64)), (2403, tensor(-0.0474, dtype=torch.float64)), (753, tensor(-0.0474, dtype=torch.float64)), (1131, tensor(-0.0474, dtype=torch.float64)), (2001, tensor(-0.0474, dtype=torch.float64)), (2578, tensor(-0.0473, dtype=torch.float64)), (1024, tensor(-0.0473, dtype=torch.float64)), (2279, tensor(-0.0473, dtype=torch.float64)), (2006, tensor(-0.0472, dtype=torch.float64)), (2257, tensor(-0.0471, dtype=torch.float64)), (2525, tensor(-0.0469, dtype=torch.float64)), (2321, tensor(-0.0468, dtype=torch.float64)), (1585, tensor(-0.0468, dtype=torch.float64)), (2555, tensor(-0.0468, dtype=torch.float64)), (1789, tensor(-0.0468, dtype=torch.float64)), (661, tensor(-0.0468, dtype=torch.float64)), (1277, tensor(-0.0467, dtype=torch.float64)), (752, tensor(-0.0467, dtype=torch.float64)), (1191, tensor(-0.0467, dtype=torch.float64)), (1226, tensor(-0.0466, dtype=torch.float64)), (32, tensor(-0.0466, dtype=torch.float64)), (117, tensor(-0.0465, dtype=torch.float64)), (1551, tensor(-0.0465, dtype=torch.float64)), (258, tensor(-0.0465, dtype=torch.float64)), (1308, tensor(-0.0465, dtype=torch.float64)), (1941, tensor(-0.0464, dtype=torch.float64)), (1790, tensor(-0.0464, dtype=torch.float64)), (1757, tensor(-0.0464, dtype=torch.float64)), (274, tensor(-0.0464, dtype=torch.float64)), (2483, tensor(-0.0463, dtype=torch.float64)), (1542, tensor(-0.0463, dtype=torch.float64)), (132, tensor(-0.0461, dtype=torch.float64)), (2197, tensor(-0.0461, dtype=torch.float64)), (1767, tensor(-0.0460, dtype=torch.float64)), (447, tensor(-0.0460, dtype=torch.float64)), (2280, tensor(-0.0459, dtype=torch.float64)), (1603, tensor(-0.0459, dtype=torch.float64)), (159, tensor(-0.0458, dtype=torch.float64)), (1483, tensor(-0.0458, dtype=torch.float64)), (2381, tensor(-0.0456, dtype=torch.float64)), (2204, tensor(-0.0456, dtype=torch.float64)), (2119, tensor(-0.0456, dtype=torch.float64)), (1661, tensor(-0.0456, dtype=torch.float64)), (580, tensor(-0.0455, dtype=torch.float64)), (837, tensor(-0.0455, dtype=torch.float64)), (748, tensor(-0.0455, dtype=torch.float64)), (2583, tensor(-0.0455, dtype=torch.float64)), (933, tensor(-0.0455, dtype=torch.float64)), (1271, tensor(-0.0454, dtype=torch.float64)), (1347, tensor(-0.0454, dtype=torch.float64)), (1419, tensor(-0.0453, dtype=torch.float64)), (684, tensor(-0.0453, dtype=torch.float64)), (1910, tensor(-0.0451, dtype=torch.float64)), (1075, tensor(-0.0451, dtype=torch.float64)), (1896, tensor(-0.0450, dtype=torch.float64)), (787, tensor(-0.0450, dtype=torch.float64)), (58, tensor(-0.0450, dtype=torch.float64)), (809, tensor(-0.0449, dtype=torch.float64)), (285, tensor(-0.0449, dtype=torch.float64)), (1648, tensor(-0.0449, dtype=torch.float64)), (2266, tensor(-0.0449, dtype=torch.float64)), (1363, tensor(-0.0448, dtype=torch.float64)), (105, tensor(-0.0447, dtype=torch.float64)), (2226, tensor(-0.0447, dtype=torch.float64)), (2354, tensor(-0.0446, dtype=torch.float64)), (1355, tensor(-0.0446, dtype=torch.float64)), (1300, tensor(-0.0446, dtype=torch.float64)), (2046, tensor(-0.0446, dtype=torch.float64)), (399, tensor(-0.0445, dtype=torch.float64)), (1680, tensor(-0.0445, dtype=torch.float64)), (1038, tensor(-0.0444, dtype=torch.float64)), (1119, tensor(-0.0442, dtype=torch.float64)), (1836, tensor(-0.0442, dtype=torch.float64)), (2327, tensor(-0.0441, dtype=torch.float64)), (1097, tensor(-0.0440, dtype=torch.float64)), (1442, tensor(-0.0440, dtype=torch.float64)), (2603, tensor(-0.0439, dtype=torch.float64)), (1566, tensor(-0.0439, dtype=torch.float64)), (1622, tensor(-0.0438, dtype=torch.float64)), (360, tensor(-0.0438, dtype=torch.float64)), (1179, tensor(-0.0438, dtype=torch.float64)), (1859, tensor(-0.0437, dtype=torch.float64)), (406, tensor(-0.0437, dtype=torch.float64)), (970, tensor(-0.0437, dtype=torch.float64)), (1989, tensor(-0.0437, dtype=torch.float64)), (2147, tensor(-0.0436, dtype=torch.float64)), (1955, tensor(-0.0436, dtype=torch.float64)), (1938, tensor(-0.0436, dtype=torch.float64)), (883, tensor(-0.0436, dtype=torch.float64)), (2023, tensor(-0.0435, dtype=torch.float64)), (505, tensor(-0.0435, dtype=torch.float64)), (799, tensor(-0.0434, dtype=torch.float64)), (1751, tensor(-0.0433, dtype=torch.float64)), (1196, tensor(-0.0433, dtype=torch.float64)), (2528, tensor(-0.0432, dtype=torch.float64)), (2017, tensor(-0.0432, dtype=torch.float64)), (738, tensor(-0.0431, dtype=torch.float64)), (1854, tensor(-0.0431, dtype=torch.float64)), (2306, tensor(-0.0431, dtype=torch.float64)), (2533, tensor(-0.0431, dtype=torch.float64)), (2180, tensor(-0.0431, dtype=torch.float64)), (2380, tensor(-0.0429, dtype=torch.float64)), (2332, tensor(-0.0429, dtype=torch.float64)), (916, tensor(-0.0428, dtype=torch.float64)), (2087, tensor(-0.0428, dtype=torch.float64)), (2032, tensor(-0.0427, dtype=torch.float64)), (2412, tensor(-0.0427, dtype=torch.float64)), (525, tensor(-0.0425, dtype=torch.float64)), (2165, tensor(-0.0425, dtype=torch.float64)), (600, tensor(-0.0425, dtype=torch.float64)), (1246, tensor(-0.0423, dtype=torch.float64)), (2540, tensor(-0.0423, dtype=torch.float64)), (2132, tensor(-0.0422, dtype=torch.float64)), (1837, tensor(-0.0422, dtype=torch.float64)), (2529, tensor(-0.0422, dtype=torch.float64)), (1311, tensor(-0.0420, dtype=torch.float64)), (1079, tensor(-0.0420, dtype=torch.float64)), (1429, tensor(-0.0420, dtype=torch.float64)), (805, tensor(-0.0419, dtype=torch.float64)), (823, tensor(-0.0419, dtype=torch.float64)), (1816, tensor(-0.0419, dtype=torch.float64)), (2047, tensor(-0.0419, dtype=torch.float64)), (771, tensor(-0.0418, dtype=torch.float64)), (2042, tensor(-0.0418, dtype=torch.float64)), (2579, tensor(-0.0417, dtype=torch.float64)), (227, tensor(-0.0417, dtype=torch.float64)), (1948, tensor(-0.0417, dtype=torch.float64)), (1612, tensor(-0.0416, dtype=torch.float64)), (603, tensor(-0.0416, dtype=torch.float64)), (1875, tensor(-0.0415, dtype=torch.float64)), (1867, tensor(-0.0415, dtype=torch.float64)), (141, tensor(-0.0414, dtype=torch.float64)), (2218, tensor(-0.0414, dtype=torch.float64)), (581, tensor(-0.0414, dtype=torch.float64)), (1826, tensor(-0.0413, dtype=torch.float64)), (1543, tensor(-0.0413, dtype=torch.float64)), (882, tensor(-0.0413, dtype=torch.float64)), (2358, tensor(-0.0413, dtype=torch.float64)), (2016, tensor(-0.0412, dtype=torch.float64)), (2264, tensor(-0.0412, dtype=torch.float64)), (544, tensor(-0.0411, dtype=torch.float64)), (1660, tensor(-0.0411, dtype=torch.float64)), (1485, tensor(-0.0410, dtype=torch.float64)), (2314, tensor(-0.0410, dtype=torch.float64)), (978, tensor(-0.0409, dtype=torch.float64)), (1852, tensor(-0.0409, dtype=torch.float64)), (964, tensor(-0.0408, dtype=torch.float64)), (1105, tensor(-0.0408, dtype=torch.float64)), (1456, tensor(-0.0406, dtype=torch.float64)), (1753, tensor(-0.0406, dtype=torch.float64)), (2411, tensor(-0.0406, dtype=torch.float64)), (459, tensor(-0.0406, dtype=torch.float64)), (1334, tensor(-0.0405, dtype=torch.float64)), (1629, tensor(-0.0405, dtype=torch.float64)), (1433, tensor(-0.0404, dtype=torch.float64)), (690, tensor(-0.0404, dtype=torch.float64)), (323, tensor(-0.0403, dtype=torch.float64)), (911, tensor(-0.0403, dtype=torch.float64)), (1299, tensor(-0.0402, dtype=torch.float64)), (477, tensor(-0.0402, dtype=torch.float64)), (1927, tensor(-0.0402, dtype=torch.float64)), (840, tensor(-0.0401, dtype=torch.float64)), (281, tensor(-0.0401, dtype=torch.float64)), (1863, tensor(-0.0399, dtype=torch.float64)), (680, tensor(-0.0399, dtype=torch.float64)), (660, tensor(-0.0398, dtype=torch.float64)), (1962, tensor(-0.0398, dtype=torch.float64)), (1931, tensor(-0.0398, dtype=torch.float64)), (1058, tensor(-0.0398, dtype=torch.float64)), (107, tensor(-0.0398, dtype=torch.float64)), (1708, tensor(-0.0398, dtype=torch.float64)), (1268, tensor(-0.0397, dtype=torch.float64)), (634, tensor(-0.0397, dtype=torch.float64)), (154, tensor(-0.0396, dtype=torch.float64)), (1052, tensor(-0.0396, dtype=torch.float64)), (500, tensor(-0.0396, dtype=torch.float64)), (334, tensor(-0.0395, dtype=torch.float64)), (786, tensor(-0.0395, dtype=torch.float64)), (1301, tensor(-0.0395, dtype=torch.float64)), (1628, tensor(-0.0395, dtype=torch.float64)), (1577, tensor(-0.0395, dtype=torch.float64)), (935, tensor(-0.0394, dtype=torch.float64)), (2085, tensor(-0.0393, dtype=torch.float64)), (2317, tensor(-0.0393, dtype=torch.float64)), (2061, tensor(-0.0392, dtype=torch.float64)), (2075, tensor(-0.0392, dtype=torch.float64)), (309, tensor(-0.0391, dtype=torch.float64)), (512, tensor(-0.0391, dtype=torch.float64)), (108, tensor(-0.0390, dtype=torch.float64)), (470, tensor(-0.0390, dtype=torch.float64)), (207, tensor(-0.0390, dtype=torch.float64)), (2452, tensor(-0.0390, dtype=torch.float64)), (1546, tensor(-0.0390, dtype=torch.float64)), (2068, tensor(-0.0390, dtype=torch.float64)), (561, tensor(-0.0390, dtype=torch.float64)), (563, tensor(-0.0389, dtype=torch.float64)), (47, tensor(-0.0389, dtype=torch.float64)), (1229, tensor(-0.0389, dtype=torch.float64)), (278, tensor(-0.0388, dtype=torch.float64)), (2235, tensor(-0.0388, dtype=torch.float64)), (2305, tensor(-0.0387, dtype=torch.float64)), (1457, tensor(-0.0387, dtype=torch.float64)), (2536, tensor(-0.0387, dtype=torch.float64)), (1469, tensor(-0.0386, dtype=torch.float64)), (2067, tensor(-0.0386, dtype=torch.float64)), (784, tensor(-0.0386, dtype=torch.float64)), (1576, tensor(-0.0386, dtype=torch.float64)), (618, tensor(-0.0385, dtype=torch.float64)), (2095, tensor(-0.0385, dtype=torch.float64)), (1539, tensor(-0.0384, dtype=torch.float64)), (599, tensor(-0.0383, dtype=torch.float64)), (2024, tensor(-0.0383, dtype=torch.float64)), (87, tensor(-0.0382, dtype=torch.float64)), (1947, tensor(-0.0382, dtype=torch.float64)), (2141, tensor(-0.0382, dtype=torch.float64)), (18, tensor(-0.0381, dtype=torch.float64)), (1684, tensor(-0.0381, dtype=torch.float64)), (1632, tensor(-0.0379, dtype=torch.float64)), (1489, tensor(-0.0379, dtype=torch.float64)), (122, tensor(-0.0378, dtype=torch.float64)), (338, tensor(-0.0377, dtype=torch.float64)), (559, tensor(-0.0377, dtype=torch.float64)), (1954, tensor(-0.0377, dtype=torch.float64)), (646, tensor(-0.0377, dtype=torch.float64)), (611, tensor(-0.0376, dtype=torch.float64)), (2029, tensor(-0.0376, dtype=torch.float64)), (906, tensor(-0.0376, dtype=torch.float64)), (1409, tensor(-0.0376, dtype=torch.float64)), (987, tensor(-0.0375, dtype=torch.float64)), (1506, tensor(-0.0375, dtype=torch.float64)), (803, tensor(-0.0375, dtype=torch.float64)), (1161, tensor(-0.0375, dtype=torch.float64)), (370, tensor(-0.0375, dtype=torch.float64)), (1783, tensor(-0.0374, dtype=torch.float64)), (143, tensor(-0.0373, dtype=torch.float64)), (2440, tensor(-0.0371, dtype=torch.float64)), (1697, tensor(-0.0371, dtype=torch.float64)), (284, tensor(-0.0370, dtype=torch.float64)), (857, tensor(-0.0370, dtype=torch.float64)), (838, tensor(-0.0369, dtype=torch.float64)), (221, tensor(-0.0369, dtype=torch.float64)), (521, tensor(-0.0369, dtype=torch.float64)), (2238, tensor(-0.0368, dtype=torch.float64)), (1318, tensor(-0.0368, dtype=torch.float64)), (181, tensor(-0.0368, dtype=torch.float64)), (1223, tensor(-0.0367, dtype=torch.float64)), (2080, tensor(-0.0366, dtype=torch.float64)), (119, tensor(-0.0366, dtype=torch.float64)), (469, tensor(-0.0366, dtype=torch.float64)), (186, tensor(-0.0366, dtype=torch.float64)), (1707, tensor(-0.0366, dtype=torch.float64)), (187, tensor(-0.0365, dtype=torch.float64)), (2359, tensor(-0.0365, dtype=torch.float64)), (1710, tensor(-0.0365, dtype=torch.float64)), (190, tensor(-0.0364, dtype=torch.float64)), (308, tensor(-0.0364, dtype=torch.float64)), (1466, tensor(-0.0363, dtype=torch.float64)), (268, tensor(-0.0363, dtype=torch.float64)), (1000, tensor(-0.0363, dtype=torch.float64)), (446, tensor(-0.0363, dtype=torch.float64)), (1516, tensor(-0.0362, dtype=torch.float64)), (1247, tensor(-0.0361, dtype=torch.float64)), (1062, tensor(-0.0361, dtype=torch.float64)), (2069, tensor(-0.0361, dtype=torch.float64)), (1838, tensor(-0.0359, dtype=torch.float64)), (2294, tensor(-0.0359, dtype=torch.float64)), (1422, tensor(-0.0359, dtype=torch.float64)), (682, tensor(-0.0359, dtype=torch.float64)), (232, tensor(-0.0358, dtype=torch.float64)), (314, tensor(-0.0357, dtype=torch.float64)), (1988, tensor(-0.0357, dtype=torch.float64)), (2597, tensor(-0.0357, dtype=torch.float64)), (2106, tensor(-0.0357, dtype=torch.float64)), (1042, tensor(-0.0355, dtype=torch.float64)), (2258, tensor(-0.0355, dtype=torch.float64)), (1434, tensor(-0.0355, dtype=torch.float64)), (1249, tensor(-0.0354, dtype=torch.float64)), (2492, tensor(-0.0354, dtype=torch.float64)), (1951, tensor(-0.0353, dtype=torch.float64)), (2385, tensor(-0.0353, dtype=torch.float64)), (1190, tensor(-0.0352, dtype=torch.float64)), (139, tensor(-0.0352, dtype=torch.float64)), (296, tensor(-0.0352, dtype=torch.float64)), (1601, tensor(-0.0351, dtype=torch.float64)), (2395, tensor(-0.0350, dtype=torch.float64)), (1614, tensor(-0.0350, dtype=torch.float64)), (2405, tensor(-0.0350, dtype=torch.float64)), (230, tensor(-0.0349, dtype=torch.float64)), (17, tensor(-0.0349, dtype=torch.float64)), (1436, tensor(-0.0348, dtype=torch.float64)), (287, tensor(-0.0347, dtype=torch.float64)), (2449, tensor(-0.0347, dtype=torch.float64)), (431, tensor(-0.0347, dtype=torch.float64)), (41, tensor(-0.0345, dtype=torch.float64)), (1413, tensor(-0.0345, dtype=torch.float64)), (841, tensor(-0.0344, dtype=torch.float64)), (1574, tensor(-0.0343, dtype=torch.float64)), (2117, tensor(-0.0343, dtype=torch.float64)), (548, tensor(-0.0342, dtype=torch.float64)), (1302, tensor(-0.0341, dtype=torch.float64)), (389, tensor(-0.0341, dtype=torch.float64)), (2191, tensor(-0.0341, dtype=torch.float64)), (553, tensor(-0.0341, dtype=torch.float64)), (1873, tensor(-0.0341, dtype=torch.float64)), (921, tensor(-0.0339, dtype=torch.float64)), (164, tensor(-0.0339, dtype=torch.float64)), (695, tensor(-0.0339, dtype=torch.float64)), (479, tensor(-0.0339, dtype=torch.float64)), (438, tensor(-0.0338, dtype=torch.float64)), (270, tensor(-0.0338, dtype=torch.float64)), (1908, tensor(-0.0338, dtype=torch.float64)), (2277, tensor(-0.0337, dtype=torch.float64)), (2375, tensor(-0.0337, dtype=torch.float64)), (929, tensor(-0.0337, dtype=torch.float64)), (2048, tensor(-0.0336, dtype=torch.float64)), (1688, tensor(-0.0336, dtype=torch.float64)), (940, tensor(-0.0335, dtype=torch.float64)), (383, tensor(-0.0335, dtype=torch.float64)), (1265, tensor(-0.0334, dtype=torch.float64)), (1034, tensor(-0.0334, dtype=torch.float64)), (371, tensor(-0.0333, dtype=torch.float64)), (672, tensor(-0.0332, dtype=torch.float64)), (192, tensor(-0.0332, dtype=torch.float64)), (1831, tensor(-0.0332, dtype=torch.float64)), (2471, tensor(-0.0332, dtype=torch.float64)), (1918, tensor(-0.0331, dtype=torch.float64)), (996, tensor(-0.0331, dtype=torch.float64)), (1313, tensor(-0.0330, dtype=torch.float64)), (1928, tensor(-0.0329, dtype=torch.float64)), (449, tensor(-0.0329, dtype=torch.float64)), (344, tensor(-0.0328, dtype=torch.float64)), (1116, tensor(-0.0327, dtype=torch.float64)), (1078, tensor(-0.0327, dtype=torch.float64)), (1283, tensor(-0.0327, dtype=torch.float64)), (2260, tensor(-0.0327, dtype=torch.float64)), (2276, tensor(-0.0327, dtype=torch.float64)), (1602, tensor(-0.0327, dtype=torch.float64)), (668, tensor(-0.0326, dtype=torch.float64)), (1488, tensor(-0.0326, dtype=torch.float64)), (1182, tensor(-0.0325, dtype=torch.float64)), (1690, tensor(-0.0325, dtype=torch.float64)), (1322, tensor(-0.0325, dtype=torch.float64)), (1083, tensor(-0.0325, dtype=torch.float64)), (14, tensor(-0.0324, dtype=torch.float64)), (1102, tensor(-0.0323, dtype=torch.float64)), (174, tensor(-0.0323, dtype=torch.float64)), (2546, tensor(-0.0323, dtype=torch.float64)), (2072, tensor(-0.0323, dtype=torch.float64)), (2517, tensor(-0.0322, dtype=torch.float64)), (2394, tensor(-0.0322, dtype=torch.float64)), (1763, tensor(-0.0321, dtype=torch.float64)), (2401, tensor(-0.0321, dtype=torch.float64)), (2429, tensor(-0.0320, dtype=torch.float64)), (1842, tensor(-0.0320, dtype=torch.float64)), (577, tensor(-0.0320, dtype=torch.float64)), (204, tensor(-0.0320, dtype=torch.float64)), (1724, tensor(-0.0319, dtype=torch.float64)), (2550, tensor(-0.0318, dtype=torch.float64)), (2178, tensor(-0.0318, dtype=torch.float64)), (2293, tensor(-0.0318, dtype=torch.float64)), (1781, tensor(-0.0317, dtype=torch.float64)), (2514, tensor(-0.0317, dtype=torch.float64)), (1330, tensor(-0.0316, dtype=torch.float64)), (2217, tensor(-0.0315, dtype=torch.float64)), (873, tensor(-0.0315, dtype=torch.float64)), (984, tensor(-0.0314, dtype=torch.float64)), (1455, tensor(-0.0314, dtype=torch.float64)), (941, tensor(-0.0313, dtype=torch.float64)), (2331, tensor(-0.0312, dtype=torch.float64)), (1438, tensor(-0.0312, dtype=torch.float64)), (378, tensor(-0.0312, dtype=torch.float64)), (648, tensor(-0.0312, dtype=torch.float64)), (49, tensor(-0.0312, dtype=torch.float64)), (1894, tensor(-0.0312, dtype=torch.float64)), (1245, tensor(-0.0311, dtype=torch.float64)), (1156, tensor(-0.0311, dtype=torch.float64)), (2256, tensor(-0.0311, dtype=torch.float64)), (1040, tensor(-0.0310, dtype=torch.float64)), (1232, tensor(-0.0310, dtype=torch.float64)), (943, tensor(-0.0310, dtype=torch.float64)), (1538, tensor(-0.0310, dtype=torch.float64)), (2299, tensor(-0.0309, dtype=torch.float64)), (2247, tensor(-0.0309, dtype=torch.float64)), (1453, tensor(-0.0309, dtype=torch.float64)), (1328, tensor(-0.0307, dtype=torch.float64)), (769, tensor(-0.0306, dtype=torch.float64)), (689, tensor(-0.0306, dtype=torch.float64)), (1718, tensor(-0.0305, dtype=torch.float64)), (1631, tensor(-0.0304, dtype=torch.float64)), (1060, tensor(-0.0304, dtype=torch.float64)), (2362, tensor(-0.0304, dtype=torch.float64)), (958, tensor(-0.0304, dtype=torch.float64)), (972, tensor(-0.0304, dtype=torch.float64)), (829, tensor(-0.0303, dtype=torch.float64)), (2396, tensor(-0.0302, dtype=torch.float64)), (229, tensor(-0.0302, dtype=torch.float64)), (565, tensor(-0.0302, dtype=torch.float64)), (954, tensor(-0.0302, dtype=torch.float64)), (810, tensor(-0.0302, dtype=torch.float64)), (755, tensor(-0.0302, dtype=torch.float64)), (454, tensor(-0.0302, dtype=torch.float64)), (311, tensor(-0.0301, dtype=torch.float64)), (341, tensor(-0.0301, dtype=torch.float64)), (1818, tensor(-0.0301, dtype=torch.float64)), (894, tensor(-0.0301, dtype=torch.float64)), (1804, tensor(-0.0299, dtype=torch.float64)), (2467, tensor(-0.0299, dtype=torch.float64)), (1670, tensor(-0.0299, dtype=torch.float64)), (466, tensor(-0.0299, dtype=torch.float64)), (2215, tensor(-0.0299, dtype=torch.float64)), (1465, tensor(-0.0298, dtype=torch.float64)), (392, tensor(-0.0298, dtype=torch.float64)), (1993, tensor(-0.0298, dtype=torch.float64)), (2535, tensor(-0.0298, dtype=torch.float64)), (1621, tensor(-0.0297, dtype=torch.float64)), (844, tensor(-0.0297, dtype=torch.float64)), (1659, tensor(-0.0297, dtype=torch.float64)), (2211, tensor(-0.0297, dtype=torch.float64)), (252, tensor(-0.0297, dtype=torch.float64)), (1378, tensor(-0.0296, dtype=torch.float64)), (1379, tensor(-0.0296, dtype=torch.float64)), (2188, tensor(-0.0296, dtype=torch.float64)), (188, tensor(-0.0296, dtype=torch.float64)), (2373, tensor(-0.0296, dtype=torch.float64)), (2275, tensor(-0.0295, dtype=torch.float64)), (2084, tensor(-0.0295, dtype=torch.float64)), (1992, tensor(-0.0293, dtype=torch.float64)), (1747, tensor(-0.0292, dtype=torch.float64)), (1500, tensor(-0.0292, dtype=torch.float64)), (1892, tensor(-0.0292, dtype=torch.float64)), (965, tensor(-0.0292, dtype=torch.float64)), (1159, tensor(-0.0292, dtype=torch.float64)), (1, tensor(-0.0291, dtype=torch.float64)), (737, tensor(-0.0291, dtype=torch.float64)), (2274, tensor(-0.0291, dtype=torch.float64)), (394, tensor(-0.0291, dtype=torch.float64)), (2193, tensor(-0.0290, dtype=torch.float64)), (827, tensor(-0.0290, dtype=torch.float64)), (499, tensor(-0.0289, dtype=torch.float64)), (687, tensor(-0.0289, dtype=torch.float64)), (2122, tensor(-0.0289, dtype=torch.float64)), (2175, tensor(-0.0289, dtype=torch.float64)), (398, tensor(-0.0288, dtype=torch.float64)), (1968, tensor(-0.0288, dtype=torch.float64)), (1123, tensor(-0.0287, dtype=torch.float64)), (647, tensor(-0.0287, dtype=torch.float64)), (2500, tensor(-0.0287, dtype=torch.float64)), (2459, tensor(-0.0286, dtype=torch.float64)), (1046, tensor(-0.0286, dtype=torch.float64)), (2400, tensor(-0.0286, dtype=torch.float64)), (1740, tensor(-0.0285, dtype=torch.float64)), (2194, tensor(-0.0285, dtype=torch.float64)), (796, tensor(-0.0285, dtype=torch.float64)), (899, tensor(-0.0284, dtype=torch.float64)), (1523, tensor(-0.0283, dtype=torch.float64)), (1217, tensor(-0.0283, dtype=torch.float64)), (2003, tensor(-0.0282, dtype=torch.float64)), (2448, tensor(-0.0282, dtype=torch.float64)), (747, tensor(-0.0282, dtype=torch.float64)), (197, tensor(-0.0282, dtype=torch.float64)), (867, tensor(-0.0282, dtype=torch.float64)), (1324, tensor(-0.0281, dtype=torch.float64)), (631, tensor(-0.0281, dtype=torch.float64)), (575, tensor(-0.0280, dtype=torch.float64)), (1216, tensor(-0.0280, dtype=torch.float64)), (2114, tensor(-0.0280, dtype=torch.float64)), (1441, tensor(-0.0280, dtype=torch.float64)), (730, tensor(-0.0279, dtype=torch.float64)), (2289, tensor(-0.0279, dtype=torch.float64)), (1128, tensor(-0.0278, dtype=torch.float64)), (2370, tensor(-0.0278, dtype=torch.float64)), (1255, tensor(-0.0278, dtype=torch.float64)), (2202, tensor(-0.0278, dtype=torch.float64)), (509, tensor(-0.0277, dtype=torch.float64)), (1326, tensor(-0.0277, dtype=torch.float64)), (1554, tensor(-0.0277, dtype=torch.float64)), (2174, tensor(-0.0277, dtype=torch.float64)), (1361, tensor(-0.0277, dtype=torch.float64)), (304, tensor(-0.0277, dtype=torch.float64)), (1205, tensor(-0.0276, dtype=torch.float64)), (1578, tensor(-0.0275, dtype=torch.float64)), (120, tensor(-0.0275, dtype=torch.float64)), (1769, tensor(-0.0274, dtype=torch.float64)), (1273, tensor(-0.0274, dtype=torch.float64)), (1953, tensor(-0.0274, dtype=torch.float64)), (387, tensor(-0.0274, dtype=torch.float64)), (2126, tensor(-0.0274, dtype=torch.float64)), (1352, tensor(-0.0273, dtype=torch.float64)), (434, tensor(-0.0273, dtype=torch.float64)), (2011, tensor(-0.0272, dtype=torch.float64)), (2593, tensor(-0.0272, dtype=torch.float64)), (1701, tensor(-0.0271, dtype=torch.float64)), (2580, tensor(-0.0271, dtype=torch.float64)), (1439, tensor(-0.0271, dtype=torch.float64)), (1536, tensor(-0.0270, dtype=torch.float64)), (1444, tensor(-0.0270, dtype=torch.float64)), (1389, tensor(-0.0270, dtype=torch.float64)), (1784, tensor(-0.0270, dtype=torch.float64)), (1297, tensor(-0.0270, dtype=torch.float64)), (1828, tensor(-0.0270, dtype=torch.float64)), (2167, tensor(-0.0270, dtype=torch.float64)), (592, tensor(-0.0270, dtype=torch.float64)), (66, tensor(-0.0270, dtype=torch.float64)), (1802, tensor(-0.0269, dtype=torch.float64)), (1973, tensor(-0.0269, dtype=torch.float64)), (397, tensor(-0.0269, dtype=torch.float64)), (1857, tensor(-0.0268, dtype=torch.float64)), (209, tensor(-0.0268, dtype=torch.float64)), (2108, tensor(-0.0268, dtype=torch.float64)), (218, tensor(-0.0268, dtype=torch.float64)), (2430, tensor(-0.0268, dtype=torch.float64)), (489, tensor(-0.0268, dtype=torch.float64)), (1373, tensor(-0.0267, dtype=torch.float64)), (1435, tensor(-0.0267, dtype=torch.float64)), (1744, tensor(-0.0267, dtype=torch.float64)), (2363, tensor(-0.0267, dtype=torch.float64)), (315, tensor(-0.0267, dtype=torch.float64)), (1370, tensor(-0.0266, dtype=torch.float64)), (2111, tensor(-0.0266, dtype=torch.float64)), (815, tensor(-0.0265, dtype=torch.float64)), (2181, tensor(-0.0265, dtype=torch.float64)), (1990, tensor(-0.0265, dtype=torch.float64)), (1549, tensor(-0.0264, dtype=torch.float64)), (976, tensor(-0.0264, dtype=torch.float64)), (652, tensor(-0.0264, dtype=torch.float64)), (484, tensor(-0.0264, dtype=torch.float64)), (1505, tensor(-0.0264, dtype=torch.float64)), (1594, tensor(-0.0264, dtype=torch.float64)), (2482, tensor(-0.0263, dtype=torch.float64)), (724, tensor(-0.0262, dtype=torch.float64)), (1428, tensor(-0.0262, dtype=torch.float64)), (2148, tensor(-0.0262, dtype=torch.float64)), (948, tensor(-0.0261, dtype=torch.float64)), (1107, tensor(-0.0261, dtype=torch.float64)), (1678, tensor(-0.0261, dtype=torch.float64)), (1199, tensor(-0.0261, dtype=torch.float64)), (2346, tensor(-0.0260, dtype=torch.float64)), (393, tensor(-0.0259, dtype=torch.float64)), (361, tensor(-0.0259, dtype=torch.float64)), (846, tensor(-0.0259, dtype=torch.float64)), (420, tensor(-0.0259, dtype=torch.float64)), (1830, tensor(-0.0258, dtype=torch.float64)), (2591, tensor(-0.0258, dtype=torch.float64)), (460, tensor(-0.0258, dtype=torch.float64)), (1805, tensor(-0.0258, dtype=torch.float64)), (1977, tensor(-0.0257, dtype=torch.float64)), (1418, tensor(-0.0257, dtype=torch.float64)), (2554, tensor(-0.0257, dtype=torch.float64)), (913, tensor(-0.0257, dtype=torch.float64)), (404, tensor(-0.0257, dtype=torch.float64)), (1739, tensor(-0.0256, dtype=torch.float64)), (140, tensor(-0.0256, dtype=torch.float64)), (2468, tensor(-0.0256, dtype=torch.float64)), (705, tensor(-0.0256, dtype=torch.float64)), (507, tensor(-0.0255, dtype=torch.float64)), (915, tensor(-0.0254, dtype=torch.float64)), (622, tensor(-0.0254, dtype=torch.float64)), (2051, tensor(-0.0253, dtype=torch.float64)), (2049, tensor(-0.0253, dtype=torch.float64)), (1037, tensor(-0.0253, dtype=torch.float64)), (21, tensor(-0.0252, dtype=torch.float64)), (822, tensor(-0.0252, dtype=torch.float64)), (282, tensor(-0.0252, dtype=torch.float64)), (1114, tensor(-0.0251, dtype=torch.float64)), (34, tensor(-0.0251, dtype=torch.float64)), (2508, tensor(-0.0251, dtype=torch.float64)), (1383, tensor(-0.0251, dtype=torch.float64)), (1878, tensor(-0.0251, dtype=torch.float64)), (1272, tensor(-0.0250, dtype=torch.float64)), (1178, tensor(-0.0250, dtype=torch.float64)), (1258, tensor(-0.0250, dtype=torch.float64)), (1350, tensor(-0.0250, dtype=torch.float64)), (515, tensor(-0.0249, dtype=torch.float64)), (980, tensor(-0.0249, dtype=torch.float64)), (871, tensor(-0.0249, dtype=torch.float64)), (277, tensor(-0.0248, dtype=torch.float64)), (1741, tensor(-0.0248, dtype=torch.float64)), (182, tensor(-0.0248, dtype=torch.float64)), (688, tensor(-0.0248, dtype=torch.float64)), (326, tensor(-0.0248, dtype=torch.float64)), (1484, tensor(-0.0246, dtype=torch.float64)), (1124, tensor(-0.0246, dtype=torch.float64)), (2531, tensor(-0.0245, dtype=torch.float64)), (795, tensor(-0.0245, dtype=torch.float64)), (198, tensor(-0.0245, dtype=torch.float64)), (1415, tensor(-0.0244, dtype=torch.float64)), (1018, tensor(-0.0244, dtype=torch.float64)), (2421, tensor(-0.0244, dtype=torch.float64)), (2169, tensor(-0.0243, dtype=torch.float64)), (609, tensor(-0.0242, dtype=torch.float64)), (2575, tensor(-0.0242, dtype=torch.float64)), (711, tensor(-0.0241, dtype=torch.float64)), (2308, tensor(-0.0241, dtype=torch.float64)), (1150, tensor(-0.0241, dtype=torch.float64)), (241, tensor(-0.0241, dtype=torch.float64)), (2542, tensor(-0.0240, dtype=torch.float64)), (1206, tensor(-0.0240, dtype=torch.float64)), (995, tensor(-0.0240, dtype=torch.float64)), (942, tensor(-0.0239, dtype=torch.float64)), (587, tensor(-0.0239, dtype=torch.float64)), (1486, tensor(-0.0239, dtype=torch.float64)), (262, tensor(-0.0239, dtype=torch.float64)), (2476, tensor(-0.0238, dtype=torch.float64)), (1250, tensor(-0.0238, dtype=torch.float64)), (494, tensor(-0.0237, dtype=torch.float64)), (606, tensor(-0.0237, dtype=torch.float64)), (2158, tensor(-0.0237, dtype=torch.float64)), (1491, tensor(-0.0237, dtype=torch.float64)), (1917, tensor(-0.0237, dtype=torch.float64)), (1215, tensor(-0.0237, dtype=torch.float64)), (633, tensor(-0.0236, dtype=torch.float64)), (1106, tensor(-0.0236, dtype=torch.float64)), (1054, tensor(-0.0235, dtype=torch.float64)), (1026, tensor(-0.0235, dtype=torch.float64)), (2521, tensor(-0.0235, dtype=torch.float64)), (2162, tensor(-0.0235, dtype=torch.float64)), (908, tensor(-0.0235, dtype=torch.float64)), (1009, tensor(-0.0234, dtype=torch.float64)), (1668, tensor(-0.0234, dtype=torch.float64)), (1266, tensor(-0.0234, dtype=torch.float64)), (879, tensor(-0.0234, dtype=torch.float64)), (465, tensor(-0.0234, dtype=torch.float64)), (1343, tensor(-0.0232, dtype=torch.float64)), (2050, tensor(-0.0231, dtype=torch.float64)), (750, tensor(-0.0231, dtype=torch.float64)), (850, tensor(-0.0231, dtype=torch.float64)), (1437, tensor(-0.0231, dtype=torch.float64)), (492, tensor(-0.0231, dtype=torch.float64)), (1195, tensor(-0.0230, dtype=torch.float64)), (1978, tensor(-0.0230, dtype=torch.float64)), (238, tensor(-0.0230, dtype=torch.float64)), (2606, tensor(-0.0230, dtype=torch.float64)), (1490, tensor(-0.0230, dtype=torch.float64)), (1365, tensor(-0.0230, dtype=torch.float64)), (638, tensor(-0.0229, dtype=torch.float64)), (2519, tensor(-0.0229, dtype=torch.float64)), (872, tensor(-0.0229, dtype=torch.float64)), (991, tensor(-0.0228, dtype=torch.float64)), (2416, tensor(-0.0228, dtype=torch.float64)), (832, tensor(-0.0228, dtype=torch.float64)), (19, tensor(-0.0228, dtype=torch.float64)), (1920, tensor(-0.0228, dtype=torch.float64)), (699, tensor(-0.0228, dtype=torch.float64)), (1155, tensor(-0.0228, dtype=torch.float64)), (1765, tensor(-0.0228, dtype=torch.float64)), (269, tensor(-0.0227, dtype=torch.float64)), (821, tensor(-0.0227, dtype=torch.float64)), (71, tensor(-0.0227, dtype=torch.float64)), (1391, tensor(-0.0227, dtype=torch.float64)), (1810, tensor(-0.0226, dtype=torch.float64)), (2425, tensor(-0.0226, dtype=torch.float64)), (124, tensor(-0.0225, dtype=torch.float64)), (569, tensor(-0.0225, dtype=torch.float64)), (519, tensor(-0.0225, dtype=torch.float64)), (422, tensor(-0.0225, dtype=torch.float64)), (1811, tensor(-0.0224, dtype=torch.float64)), (1535, tensor(-0.0224, dtype=torch.float64)), (276, tensor(-0.0224, dtype=torch.float64)), (193, tensor(-0.0224, dtype=torch.float64)), (1565, tensor(-0.0223, dtype=torch.float64)), (1390, tensor(-0.0223, dtype=torch.float64)), (16, tensor(-0.0222, dtype=torch.float64)), (1122, tensor(-0.0222, dtype=torch.float64)), (731, tensor(-0.0222, dtype=torch.float64)), (77, tensor(-0.0221, dtype=torch.float64)), (490, tensor(-0.0220, dtype=torch.float64)), (2234, tensor(-0.0219, dtype=torch.float64)), (2064, tensor(-0.0219, dtype=torch.float64)), (1844, tensor(-0.0218, dtype=torch.float64)), (1233, tensor(-0.0218, dtype=torch.float64)), (1348, tensor(-0.0217, dtype=torch.float64)), (812, tensor(-0.0217, dtype=torch.float64)), (1503, tensor(-0.0216, dtype=torch.float64)), (386, tensor(-0.0216, dtype=torch.float64)), (472, tensor(-0.0216, dtype=torch.float64)), (1118, tensor(-0.0215, dtype=torch.float64)), (333, tensor(-0.0215, dtype=torch.float64)), (114, tensor(-0.0214, dtype=torch.float64)), (1449, tensor(-0.0214, dtype=torch.float64)), (1885, tensor(-0.0214, dtype=torch.float64)), (703, tensor(-0.0214, dtype=torch.float64)), (1932, tensor(-0.0213, dtype=torch.float64)), (2224, tensor(-0.0213, dtype=torch.float64)), (433, tensor(-0.0213, dtype=torch.float64)), (1387, tensor(-0.0213, dtype=torch.float64)), (1066, tensor(-0.0212, dtype=torch.float64)), (2109, tensor(-0.0212, dtype=torch.float64)), (113, tensor(-0.0211, dtype=torch.float64)), (1671, tensor(-0.0210, dtype=torch.float64)), (1815, tensor(-0.0210, dtype=torch.float64)), (2086, tensor(-0.0210, dtype=torch.float64)), (2532, tensor(-0.0210, dtype=torch.float64)), (2124, tensor(-0.0209, dtype=torch.float64)), (1331, tensor(-0.0209, dtype=torch.float64)), (1537, tensor(-0.0209, dtype=torch.float64)), (1230, tensor(-0.0209, dtype=torch.float64)), (2270, tensor(-0.0209, dtype=torch.float64)), (1662, tensor(-0.0209, dtype=torch.float64)), (756, tensor(-0.0209, dtype=torch.float64)), (191, tensor(-0.0209, dtype=torch.float64)), (1050, tensor(-0.0209, dtype=torch.float64)), (1934, tensor(-0.0208, dtype=torch.float64)), (1552, tensor(-0.0208, dtype=torch.float64)), (2499, tensor(-0.0208, dtype=torch.float64)), (1293, tensor(-0.0208, dtype=torch.float64)), (205, tensor(-0.0207, dtype=torch.float64)), (2504, tensor(-0.0207, dtype=torch.float64)), (329, tensor(-0.0207, dtype=torch.float64)), (2225, tensor(-0.0206, dtype=torch.float64)), (1635, tensor(-0.0206, dtype=torch.float64)), (1984, tensor(-0.0206, dtype=torch.float64)), (2587, tensor(-0.0206, dtype=torch.float64)), (758, tensor(-0.0205, dtype=torch.float64)), (2392, tensor(-0.0205, dtype=torch.float64)), (617, tensor(-0.0205, dtype=torch.float64)), (2227, tensor(-0.0205, dtype=torch.float64)), (432, tensor(-0.0205, dtype=torch.float64)), (2287, tensor(-0.0204, dtype=torch.float64)), (379, tensor(-0.0204, dtype=torch.float64)), (539, tensor(-0.0204, dtype=torch.float64)), (196, tensor(-0.0203, dtype=torch.float64)), (739, tensor(-0.0203, dtype=torch.float64)), (501, tensor(-0.0203, dtype=torch.float64)), (475, tensor(-0.0202, dtype=torch.float64)), (1294, tensor(-0.0202, dtype=torch.float64)), (573, tensor(-0.0202, dtype=torch.float64)), (435, tensor(-0.0201, dtype=torch.float64)), (2268, tensor(-0.0201, dtype=torch.float64)), (2242, tensor(-0.0200, dtype=torch.float64)), (1087, tensor(-0.0200, dtype=torch.float64)), (1591, tensor(-0.0200, dtype=torch.float64)), (1368, tensor(-0.0200, dtype=torch.float64)), (1704, tensor(-0.0200, dtype=torch.float64)), (1657, tensor(-0.0199, dtype=torch.float64)), (396, tensor(-0.0199, dtype=torch.float64)), (2584, tensor(-0.0198, dtype=torch.float64)), (1394, tensor(-0.0198, dtype=torch.float64)), (2102, tensor(-0.0197, dtype=torch.float64)), (2438, tensor(-0.0197, dtype=torch.float64)), (1610, tensor(-0.0196, dtype=torch.float64)), (1295, tensor(-0.0196, dtype=torch.float64)), (654, tensor(-0.0196, dtype=torch.float64)), (2243, tensor(-0.0196, dtype=torch.float64)), (1756, tensor(-0.0195, dtype=torch.float64)), (861, tensor(-0.0195, dtype=torch.float64)), (2515, tensor(-0.0195, dtype=torch.float64)), (2230, tensor(-0.0194, dtype=torch.float64)), (1639, tensor(-0.0194, dtype=torch.float64)), (773, tensor(-0.0194, dtype=torch.float64)), (2589, tensor(-0.0193, dtype=torch.float64)), (2246, tensor(-0.0193, dtype=torch.float64)), (1861, tensor(-0.0193, dtype=torch.float64)), (1031, tensor(-0.0193, dtype=torch.float64)), (1774, tensor(-0.0192, dtype=torch.float64)), (1528, tensor(-0.0192, dtype=torch.float64)), (1478, tensor(-0.0191, dtype=torch.float64)), (324, tensor(-0.0190, dtype=torch.float64)), (2498, tensor(-0.0190, dtype=torch.float64)), (1068, tensor(-0.0190, dtype=torch.float64)), (402, tensor(-0.0190, dtype=torch.float64)), (2208, tensor(-0.0189, dtype=torch.float64)), (1534, tensor(-0.0189, dtype=torch.float64)), (602, tensor(-0.0189, dtype=torch.float64)), (924, tensor(-0.0189, dtype=torch.float64)), (1705, tensor(-0.0189, dtype=torch.float64)), (2283, tensor(-0.0189, dtype=torch.float64)), (1407, tensor(-0.0189, dtype=torch.float64)), (1474, tensor(-0.0188, dtype=torch.float64)), (1287, tensor(-0.0188, dtype=torch.float64)), (1148, tensor(-0.0187, dtype=torch.float64)), (427, tensor(-0.0187, dtype=torch.float64)), (763, tensor(-0.0187, dtype=torch.float64)), (971, tensor(-0.0186, dtype=torch.float64)), (275, tensor(-0.0186, dtype=torch.float64)), (655, tensor(-0.0185, dtype=torch.float64)), (620, tensor(-0.0185, dtype=torch.float64)), (81, tensor(-0.0185, dtype=torch.float64)), (2330, tensor(-0.0185, dtype=torch.float64)), (1776, tensor(-0.0185, dtype=torch.float64)), (384, tensor(-0.0184, dtype=torch.float64)), (1381, tensor(-0.0184, dtype=torch.float64)), (1183, tensor(-0.0184, dtype=torch.float64)), (527, tensor(-0.0184, dtype=torch.float64)), (742, tensor(-0.0184, dtype=torch.float64)), (1909, tensor(-0.0184, dtype=torch.float64)), (1446, tensor(-0.0183, dtype=torch.float64)), (359, tensor(-0.0183, dtype=torch.float64)), (442, tensor(-0.0182, dtype=torch.float64)), (781, tensor(-0.0182, dtype=torch.float64)), (2444, tensor(-0.0181, dtype=torch.float64)), (1834, tensor(-0.0181, dtype=torch.float64)), (2110, tensor(-0.0181, dtype=torch.float64)), (1210, tensor(-0.0181, dtype=torch.float64)), (1236, tensor(-0.0181, dtype=torch.float64)), (981, tensor(-0.0180, dtype=torch.float64)), (266, tensor(-0.0180, dtype=torch.float64)), (487, tensor(-0.0180, dtype=torch.float64)), (2473, tensor(-0.0180, dtype=torch.float64)), (568, tensor(-0.0180, dtype=torch.float64)), (2116, tensor(-0.0179, dtype=torch.float64)), (2451, tensor(-0.0179, dtype=torch.float64)), (2171, tensor(-0.0179, dtype=torch.float64)), (848, tensor(-0.0179, dtype=torch.float64)), (2602, tensor(-0.0178, dtype=torch.float64)), (1351, tensor(-0.0178, dtype=torch.float64)), (1027, tensor(-0.0178, dtype=torch.float64)), (1970, tensor(-0.0177, dtype=torch.float64)), (2120, tensor(-0.0177, dtype=torch.float64)), (233, tensor(-0.0177, dtype=torch.float64)), (347, tensor(-0.0177, dtype=torch.float64)), (1814, tensor(-0.0176, dtype=torch.float64)), (225, tensor(-0.0176, dtype=torch.float64)), (1093, tensor(-0.0176, dtype=torch.float64)), (1275, tensor(-0.0175, dtype=torch.float64)), (1987, tensor(-0.0174, dtype=torch.float64)), (927, tensor(-0.0174, dtype=torch.float64)), (185, tensor(-0.0174, dtype=torch.float64)), (727, tensor(-0.0174, dtype=torch.float64)), (2155, tensor(-0.0173, dtype=torch.float64)), (1571, tensor(-0.0173, dtype=torch.float64)), (1820, tensor(-0.0173, dtype=torch.float64)), (945, tensor(-0.0173, dtype=torch.float64)), (183, tensor(-0.0173, dtype=torch.float64)), (1725, tensor(-0.0172, dtype=torch.float64)), (1779, tensor(-0.0171, dtype=torch.float64)), (2480, tensor(-0.0171, dtype=torch.float64)), (936, tensor(-0.0171, dtype=torch.float64)), (1304, tensor(-0.0171, dtype=torch.float64)), (30, tensor(-0.0171, dtype=torch.float64)), (2290, tensor(-0.0170, dtype=torch.float64)), (556, tensor(-0.0170, dtype=torch.float64)), (685, tensor(-0.0169, dtype=torch.float64)), (2052, tensor(-0.0169, dtype=torch.float64)), (715, tensor(-0.0169, dtype=torch.float64)), (2460, tensor(-0.0169, dtype=torch.float64)), (1447, tensor(-0.0169, dtype=torch.float64)), (142, tensor(-0.0168, dtype=torch.float64)), (2576, tensor(-0.0168, dtype=torch.float64)), (2570, tensor(-0.0167, dtype=torch.float64)), (224, tensor(-0.0167, dtype=torch.float64)), (836, tensor(-0.0167, dtype=torch.float64)), (802, tensor(-0.0166, dtype=torch.float64)), (1462, tensor(-0.0166, dtype=torch.float64)), (2349, tensor(-0.0165, dtype=torch.float64)), (1694, tensor(-0.0165, dtype=torch.float64)), (327, tensor(-0.0165, dtype=torch.float64)), (551, tensor(-0.0164, dtype=torch.float64)), (2041, tensor(-0.0164, dtype=torch.float64)), (1397, tensor(-0.0163, dtype=torch.float64)), (1410, tensor(-0.0163, dtype=torch.float64)), (2434, tensor(-0.0163, dtype=torch.float64)), (1019, tensor(-0.0163, dtype=torch.float64)), (1833, tensor(-0.0163, dtype=torch.float64)), (2312, tensor(-0.0162, dtype=torch.float64)), (2192, tensor(-0.0162, dtype=torch.float64)), (418, tensor(-0.0162, dtype=torch.float64)), (86, tensor(-0.0162, dtype=torch.float64)), (2020, tensor(-0.0162, dtype=torch.float64)), (1817, tensor(-0.0161, dtype=torch.float64)), (2223, tensor(-0.0161, dtype=torch.float64)), (510, tensor(-0.0161, dtype=torch.float64)), (128, tensor(-0.0160, dtype=torch.float64)), (56, tensor(-0.0160, dtype=torch.float64)), (2382, tensor(-0.0159, dtype=torch.float64)), (1754, tensor(-0.0159, dtype=torch.float64)), (295, tensor(-0.0159, dtype=torch.float64)), (582, tensor(-0.0158, dtype=torch.float64)), (717, tensor(-0.0158, dtype=torch.float64)), (664, tensor(-0.0158, dtype=torch.float64)), (137, tensor(-0.0158, dtype=torch.float64)), (2388, tensor(-0.0158, dtype=torch.float64)), (1851, tensor(-0.0157, dtype=torch.float64)), (2495, tensor(-0.0157, dtype=torch.float64)), (1823, tensor(-0.0157, dtype=torch.float64)), (1827, tensor(-0.0157, dtype=torch.float64)), (1044, tensor(-0.0156, dtype=torch.float64)), (1813, tensor(-0.0156, dtype=torch.float64)), (443, tensor(-0.0156, dtype=torch.float64)), (902, tensor(-0.0156, dtype=torch.float64)), (2083, tensor(-0.0155, dtype=torch.float64)), (1599, tensor(-0.0154, dtype=torch.float64)), (2037, tensor(-0.0154, dtype=torch.float64)), (1061, tensor(-0.0154, dtype=torch.float64)), (920, tensor(-0.0154, dtype=torch.float64)), (1356, tensor(-0.0154, dtype=torch.float64)), (552, tensor(-0.0154, dtype=torch.float64)), (1443, tensor(-0.0153, dtype=torch.float64)), (994, tensor(-0.0153, dtype=torch.float64)), (1208, tensor(-0.0153, dtype=torch.float64)), (1906, tensor(-0.0153, dtype=torch.float64)), (988, tensor(-0.0153, dtype=torch.float64)), (1278, tensor(-0.0153, dtype=torch.float64)), (696, tensor(-0.0152, dtype=torch.float64)), (1041, tensor(-0.0152, dtype=torch.float64)), (1788, tensor(-0.0151, dtype=torch.float64)), (847, tensor(-0.0151, dtype=torch.float64)), (1417, tensor(-0.0151, dtype=torch.float64)), (1402, tensor(-0.0151, dtype=torch.float64)), (1472, tensor(-0.0150, dtype=torch.float64)), (1180, tensor(-0.0150, dtype=torch.float64)), (1925, tensor(-0.0150, dtype=torch.float64)), (1641, tensor(-0.0150, dtype=torch.float64)), (340, tensor(-0.0150, dtype=torch.float64)), (46, tensor(-0.0150, dtype=torch.float64)), (93, tensor(-0.0150, dtype=torch.float64)), (161, tensor(-0.0149, dtype=torch.float64)), (26, tensor(-0.0149, dtype=torch.float64)), (339, tensor(-0.0148, dtype=torch.float64)), (712, tensor(-0.0148, dtype=torch.float64)), (746, tensor(-0.0148, dtype=torch.float64)), (1482, tensor(-0.0148, dtype=torch.float64)), (1242, tensor(-0.0148, dtype=torch.float64)), (1801, tensor(-0.0148, dtype=torch.float64)), (1189, tensor(-0.0148, dtype=torch.float64)), (2013, tensor(-0.0147, dtype=torch.float64)), (1855, tensor(-0.0147, dtype=torch.float64)), (483, tensor(-0.0147, dtype=torch.float64)), (1510, tensor(-0.0147, dtype=torch.float64)), (2297, tensor(-0.0146, dtype=torch.float64)), (1320, tensor(-0.0146, dtype=torch.float64)), (2328, tensor(-0.0146, dtype=torch.float64)), (2, tensor(-0.0146, dtype=torch.float64)), (1142, tensor(-0.0146, dtype=torch.float64)), (2265, tensor(-0.0146, dtype=torch.float64)), (691, tensor(-0.0146, dtype=torch.float64)), (1711, tensor(-0.0143, dtype=torch.float64)), (616, tensor(-0.0143, dtype=torch.float64)), (642, tensor(-0.0143, dtype=torch.float64)), (2303, tensor(-0.0142, dtype=torch.float64)), (163, tensor(-0.0142, dtype=torch.float64)), (35, tensor(-0.0142, dtype=torch.float64)), (868, tensor(-0.0142, dtype=torch.float64)), (1961, tensor(-0.0141, dtype=torch.float64)), (595, tensor(-0.0141, dtype=torch.float64)), (1640, tensor(-0.0141, dtype=torch.float64)), (562, tensor(-0.0141, dtype=torch.float64)), (1108, tensor(-0.0140, dtype=torch.float64)), (263, tensor(-0.0140, dtype=torch.float64)), (1874, tensor(-0.0139, dtype=torch.float64)), (1143, tensor(-0.0139, dtype=torch.float64)), (816, tensor(-0.0139, dtype=torch.float64)), (2432, tensor(-0.0139, dtype=torch.float64)), (2572, tensor(-0.0138, dtype=torch.float64)), (2012, tensor(-0.0138, dtype=torch.float64)), (1135, tensor(-0.0138, dtype=torch.float64)), (854, tensor(-0.0138, dtype=torch.float64)), (178, tensor(-0.0138, dtype=torch.float64)), (1663, tensor(-0.0137, dtype=torch.float64)), (1094, tensor(-0.0137, dtype=torch.float64)), (1716, tensor(-0.0137, dtype=torch.float64)), (249, tensor(-0.0137, dtype=torch.float64)), (213, tensor(-0.0137, dtype=torch.float64)), (4, tensor(-0.0137, dtype=torch.float64)), (990, tensor(-0.0136, dtype=torch.float64)), (2031, tensor(-0.0136, dtype=torch.float64)), (1010, tensor(-0.0136, dtype=torch.float64)), (1883, tensor(-0.0136, dtype=torch.float64)), (2506, tensor(-0.0135, dtype=torch.float64)), (201, tensor(-0.0135, dtype=torch.float64)), (537, tensor(-0.0135, dtype=torch.float64)), (2374, tensor(-0.0135, dtype=torch.float64)), (1593, tensor(-0.0134, dtype=torch.float64)), (2436, tensor(-0.0134, dtype=torch.float64)), (1868, tensor(-0.0134, dtype=torch.float64)), (1558, tensor(-0.0134, dtype=torch.float64)), (2316, tensor(-0.0134, dtype=torch.float64)), (1541, tensor(-0.0134, dtype=torch.float64)), (382, tensor(-0.0134, dtype=torch.float64)), (1655, tensor(-0.0133, dtype=torch.float64)), (1598, tensor(-0.0133, dtype=torch.float64)), (686, tensor(-0.0133, dtype=torch.float64)), (145, tensor(-0.0132, dtype=torch.float64)), (2008, tensor(-0.0132, dtype=torch.float64)), (1269, tensor(-0.0132, dtype=torch.float64)), (999, tensor(-0.0132, dtype=torch.float64)), (419, tensor(-0.0132, dtype=torch.float64)), (791, tensor(-0.0132, dtype=torch.float64)), (414, tensor(-0.0131, dtype=torch.float64)), (1806, tensor(-0.0131, dtype=torch.float64)), (1666, tensor(-0.0131, dtype=torch.float64)), (437, tensor(-0.0131, dtype=torch.float64)), (1673, tensor(-0.0130, dtype=torch.float64)), (1477, tensor(-0.0130, dtype=torch.float64)), (2138, tensor(-0.0130, dtype=torch.float64)), (36, tensor(-0.0130, dtype=torch.float64)), (1164, tensor(-0.0129, dtype=torch.float64)), (2497, tensor(-0.0129, dtype=torch.float64)), (223, tensor(-0.0129, dtype=torch.float64)), (2129, tensor(-0.0129, dtype=torch.float64)), (623, tensor(-0.0128, dtype=torch.float64)), (444, tensor(-0.0128, dtype=torch.float64)), (1259, tensor(-0.0128, dtype=torch.float64)), (377, tensor(-0.0128, dtype=torch.float64)), (2537, tensor(-0.0128, dtype=torch.float64)), (788, tensor(-0.0127, dtype=torch.float64)), (1335, tensor(-0.0127, dtype=torch.float64)), (98, tensor(-0.0127, dtype=torch.float64)), (27, tensor(-0.0127, dtype=torch.float64)), (63, tensor(-0.0126, dtype=torch.float64)), (2166, tensor(-0.0126, dtype=torch.float64)), (1613, tensor(-0.0126, dtype=torch.float64)), (2384, tensor(-0.0126, dtype=torch.float64)), (545, tensor(-0.0126, dtype=torch.float64)), (1607, tensor(-0.0125, dtype=torch.float64)), (511, tensor(-0.0125, dtype=torch.float64)), (2571, tensor(-0.0125, dtype=torch.float64)), (2548, tensor(-0.0125, dtype=torch.float64)), (2413, tensor(-0.0125, dtype=torch.float64)), (2455, tensor(-0.0125, dtype=torch.float64)), (478, tensor(-0.0124, dtype=torch.float64)), (826, tensor(-0.0124, dtype=torch.float64)), (423, tensor(-0.0123, dtype=torch.float64)), (184, tensor(-0.0123, dtype=torch.float64)), (2355, tensor(-0.0123, dtype=torch.float64)), (1149, tensor(-0.0123, dtype=torch.float64)), (1979, tensor(-0.0123, dtype=torch.float64)), (2454, tensor(-0.0122, dtype=torch.float64)), (1098, tensor(-0.0122, dtype=torch.float64)), (745, tensor(-0.0122, dtype=torch.float64)), (608, tensor(-0.0121, dtype=torch.float64)), (2457, tensor(-0.0121, dtype=torch.float64)), (2216, tensor(-0.0121, dtype=torch.float64)), (240, tensor(-0.0120, dtype=torch.float64)), (963, tensor(-0.0120, dtype=torch.float64)), (1937, tensor(-0.0120, dtype=torch.float64)), (1221, tensor(-0.0119, dtype=torch.float64)), (957, tensor(-0.0119, dtype=torch.float64)), (1386, tensor(-0.0119, dtype=torch.float64)), (1317, tensor(-0.0119, dtype=torch.float64)), (2487, tensor(-0.0119, dtype=torch.float64)), (1530, tensor(-0.0119, dtype=torch.float64)), (1787, tensor(-0.0119, dtype=torch.float64)), (1369, tensor(-0.0118, dtype=torch.float64)), (172, tensor(-0.0117, dtype=torch.float64)), (723, tensor(-0.0117, dtype=torch.float64)), (1561, tensor(-0.0117, dtype=torch.float64)), (944, tensor(-0.0117, dtype=torch.float64)), (665, tensor(-0.0116, dtype=torch.float64)), (1958, tensor(-0.0116, dtype=torch.float64)), (1825, tensor(-0.0115, dtype=torch.float64)), (2563, tensor(-0.0115, dtype=torch.float64)), (257, tensor(-0.0115, dtype=torch.float64)), (83, tensor(-0.0115, dtype=torch.float64)), (2091, tensor(-0.0114, dtype=torch.float64)), (766, tensor(-0.0114, dtype=torch.float64)), (1238, tensor(-0.0114, dtype=torch.float64)), (1166, tensor(-0.0114, dtype=torch.float64)), (33, tensor(-0.0113, dtype=torch.float64)), (782, tensor(-0.0113, dtype=torch.float64)), (2371, tensor(-0.0113, dtype=torch.float64)), (1231, tensor(-0.0113, dtype=torch.float64)), (910, tensor(-0.0112, dtype=torch.float64)), (1933, tensor(-0.0112, dtype=torch.float64)), (874, tensor(-0.0112, dtype=torch.float64)), (547, tensor(-0.0112, dtype=torch.float64)), (328, tensor(-0.0111, dtype=torch.float64)), (1545, tensor(-0.0111, dtype=torch.float64)), (1473, tensor(-0.0111, dtype=torch.float64)), (1733, tensor(-0.0110, dtype=torch.float64)), (1154, tensor(-0.0110, dtype=torch.float64)), (2078, tensor(-0.0109, dtype=torch.float64)), (2066, tensor(-0.0109, dtype=torch.float64)), (211, tensor(-0.0109, dtype=torch.float64)), (2143, tensor(-0.0109, dtype=torch.float64)), (247, tensor(-0.0109, dtype=torch.float64)), (491, tensor(-0.0109, dtype=torch.float64)), (1895, tensor(-0.0108, dtype=torch.float64)), (2140, tensor(-0.0108, dtype=torch.float64)), (1476, tensor(-0.0108, dtype=torch.float64)), (1376, tensor(-0.0108, dtype=torch.float64)), (1674, tensor(-0.0108, dtype=torch.float64)), (632, tensor(-0.0108, dtype=torch.float64)), (43, tensor(-0.0108, dtype=torch.float64)), (1323, tensor(-0.0108, dtype=torch.float64)), (2232, tensor(-0.0107, dtype=torch.float64)), (1424, tensor(-0.0107, dtype=torch.float64)), (2590, tensor(-0.0107, dtype=torch.float64)), (1998, tensor(-0.0106, dtype=torch.float64)), (1002, tensor(-0.0106, dtype=torch.float64)), (1531, tensor(-0.0106, dtype=torch.float64)), (2033, tensor(-0.0106, dtype=torch.float64)), (2415, tensor(-0.0106, dtype=torch.float64)), (1008, tensor(-0.0106, dtype=torch.float64)), (1532, tensor(-0.0106, dtype=torch.float64)), (28, tensor(-0.0105, dtype=torch.float64)), (2123, tensor(-0.0105, dtype=torch.float64)), (70, tensor(-0.0105, dtype=torch.float64)), (2231, tensor(-0.0105, dtype=torch.float64)), (2229, tensor(-0.0105, dtype=torch.float64)), (2490, tensor(-0.0104, dtype=torch.float64)), (1279, tensor(-0.0104, dtype=torch.float64)), (171, tensor(-0.0104, dtype=torch.float64)), (38, tensor(-0.0104, dtype=torch.float64)), (808, tensor(-0.0104, dtype=torch.float64)), (619, tensor(-0.0104, dtype=torch.float64)), (2475, tensor(-0.0104, dtype=torch.float64)), (583, tensor(-0.0104, dtype=torch.float64)), (659, tensor(-0.0103, dtype=torch.float64)), (2244, tensor(-0.0103, dtype=torch.float64)), (1712, tensor(-0.0103, dtype=torch.float64)), (639, tensor(-0.0103, dtype=torch.float64)), (772, tensor(-0.0103, dtype=torch.float64)), (2267, tensor(-0.0103, dtype=torch.float64)), (302, tensor(-0.0103, dtype=torch.float64)), (676, tensor(-0.0102, dtype=torch.float64)), (2461, tensor(-0.0101, dtype=torch.float64)), (1550, tensor(-0.0101, dtype=torch.float64)), (1976, tensor(-0.0101, dtype=torch.float64)), (1604, tensor(-0.0101, dtype=torch.float64)), (1403, tensor(-0.0101, dtype=torch.float64)), (589, tensor(-0.0101, dtype=torch.float64)), (349, tensor(-0.0101, dtype=torch.float64)), (560, tensor(-0.0100, dtype=torch.float64)), (2391, tensor(-0.0100, dtype=torch.float64)), (1141, tensor(-0.0100, dtype=torch.float64)), (679, tensor(-0.0100, dtype=torch.float64)), (736, tensor(-0.0100, dtype=torch.float64)), (917, tensor(-0.0099, dtype=torch.float64)), (1619, tensor(-0.0099, dtype=torch.float64)), (2340, tensor(-0.0099, dtype=torch.float64)), (2044, tensor(-0.0099, dtype=torch.float64)), (317, tensor(-0.0099, dtype=torch.float64)), (1945, tensor(-0.0099, dtype=torch.float64)), (1799, tensor(-0.0098, dtype=torch.float64)), (212, tensor(-0.0098, dtype=torch.float64)), (1171, tensor(-0.0098, dtype=torch.float64)), (1254, tensor(-0.0098, dtype=torch.float64)), (2058, tensor(-0.0097, dtype=torch.float64)), (1185, tensor(-0.0097, dtype=torch.float64)), (1517, tensor(-0.0096, dtype=torch.float64)), (2478, tensor(-0.0096, dtype=torch.float64)), (2513, tensor(-0.0096, dtype=torch.float64)), (930, tensor(-0.0096, dtype=torch.float64)), (1761, tensor(-0.0096, dtype=torch.float64)), (1200, tensor(-0.0095, dtype=torch.float64)), (531, tensor(-0.0095, dtype=torch.float64)), (989, tensor(-0.0095, dtype=torch.float64)), (946, tensor(-0.0095, dtype=torch.float64)), (39, tensor(-0.0094, dtype=torch.float64)), (480, tensor(-0.0094, dtype=torch.float64)), (932, tensor(-0.0094, dtype=torch.float64)), (1682, tensor(-0.0094, dtype=torch.float64)), (1743, tensor(-0.0094, dtype=torch.float64)), (2439, tensor(-0.0094, dtype=torch.float64)), (1020, tensor(-0.0093, dtype=torch.float64)), (1905, tensor(-0.0092, dtype=torch.float64)), (2159, tensor(-0.0092, dtype=torch.float64)), (2105, tensor(-0.0092, dtype=torch.float64)), (1129, tensor(-0.0092, dtype=torch.float64)), (202, tensor(-0.0092, dtype=torch.float64)), (640, tensor(-0.0092, dtype=torch.float64)), (20, tensor(-0.0092, dtype=torch.float64)), (1292, tensor(-0.0090, dtype=torch.float64)), (2510, tensor(-0.0090, dtype=torch.float64)), (130, tensor(-0.0089, dtype=torch.float64)), (2249, tensor(-0.0089, dtype=torch.float64)), (1573, tensor(-0.0089, dtype=torch.float64)), (2145, tensor(-0.0088, dtype=torch.float64)), (298, tensor(-0.0088, dtype=torch.float64)), (1016, tensor(-0.0088, dtype=torch.float64)), (151, tensor(-0.0088, dtype=torch.float64)), (1252, tensor(-0.0088, dtype=torch.float64)), (251, tensor(-0.0088, dtype=torch.float64)), (24, tensor(-0.0087, dtype=torch.float64)), (714, tensor(-0.0087, dtype=torch.float64)), (2378, tensor(-0.0087, dtype=torch.float64)), (1393, tensor(-0.0087, dtype=torch.float64)), (50, tensor(-0.0087, dtype=torch.float64)), (2115, tensor(-0.0086, dtype=torch.float64)), (2259, tensor(-0.0086, dtype=torch.float64)), (2424, tensor(-0.0086, dtype=torch.float64)), (2146, tensor(-0.0086, dtype=torch.float64)), (1771, tensor(-0.0086, dtype=torch.float64)), (1388, tensor(-0.0085, dtype=torch.float64)), (300, tensor(-0.0085, dtype=torch.float64)), (1426, tensor(-0.0085, dtype=torch.float64)), (1637, tensor(-0.0085, dtype=torch.float64)), (2027, tensor(-0.0085, dtype=torch.float64)), (983, tensor(-0.0085, dtype=torch.float64)), (1125, tensor(-0.0085, dtype=torch.float64)), (2139, tensor(-0.0084, dtype=torch.float64)), (1015, tensor(-0.0084, dtype=torch.float64)), (200, tensor(-0.0084, dtype=torch.float64)), (2423, tensor(-0.0083, dtype=torch.float64)), (350, tensor(-0.0083, dtype=torch.float64)), (2503, tensor(-0.0083, dtype=torch.float64)), (697, tensor(-0.0083, dtype=torch.float64)), (1132, tensor(-0.0082, dtype=torch.float64)), (342, tensor(-0.0082, dtype=torch.float64)), (588, tensor(-0.0082, dtype=torch.float64)), (1720, tensor(-0.0081, dtype=torch.float64)), (2549, tensor(-0.0081, dtype=torch.float64)), (2221, tensor(-0.0081, dtype=torch.float64)), (15, tensor(-0.0081, dtype=torch.float64)), (2588, tensor(-0.0081, dtype=torch.float64)), (2281, tensor(-0.0081, dtype=torch.float64)), (2093, tensor(-0.0081, dtype=torch.float64)), (1930, tensor(-0.0081, dtype=torch.float64)), (2055, tensor(-0.0081, dtype=torch.float64)), (1049, tensor(-0.0080, dtype=torch.float64)), (674, tensor(-0.0080, dtype=torch.float64)), (1845, tensor(-0.0080, dtype=torch.float64)), (493, tensor(-0.0080, dtype=torch.float64)), (977, tensor(-0.0080, dtype=torch.float64)), (1207, tensor(-0.0079, dtype=torch.float64)), (1595, tensor(-0.0079, dtype=torch.float64)), (1420, tensor(-0.0079, dtype=torch.float64)), (1170, tensor(-0.0079, dtype=torch.float64)), (176, tensor(-0.0079, dtype=torch.float64)), (2509, tensor(-0.0079, dtype=torch.float64)), (1321, tensor(-0.0078, dtype=torch.float64)), (767, tensor(-0.0078, dtype=torch.float64)), (149, tensor(-0.0078, dtype=torch.float64)), (807, tensor(-0.0077, dtype=torch.float64)), (1460, tensor(-0.0077, dtype=torch.float64)), (897, tensor(-0.0077, dtype=torch.float64)), (858, tensor(-0.0077, dtype=torch.float64)), (1824, tensor(-0.0076, dtype=torch.float64)), (1440, tensor(-0.0075, dtype=torch.float64)), (2356, tensor(-0.0075, dtype=torch.float64)), (1605, tensor(-0.0075, dtype=torch.float64)), (2367, tensor(-0.0075, dtype=torch.float64)), (1683, tensor(-0.0075, dtype=torch.float64)), (280, tensor(-0.0075, dtype=torch.float64)), (1395, tensor(-0.0075, dtype=torch.float64)), (1176, tensor(-0.0075, dtype=torch.float64)), (740, tensor(-0.0074, dtype=torch.float64)), (436, tensor(-0.0073, dtype=torch.float64)), (2484, tensor(-0.0073, dtype=torch.float64)), (1146, tensor(-0.0073, dtype=torch.float64)), (938, tensor(-0.0072, dtype=torch.float64)), (1193, tensor(-0.0072, dtype=torch.float64)), (1080, tensor(-0.0072, dtype=torch.float64)), (1448, tensor(-0.0072, dtype=torch.float64)), (2361, tensor(-0.0072, dtype=torch.float64)), (2398, tensor(-0.0072, dtype=torch.float64)), (2134, tensor(-0.0072, dtype=torch.float64)), (1960, tensor(-0.0071, dtype=torch.float64)), (153, tensor(-0.0071, dtype=torch.float64)), (2153, tensor(-0.0071, dtype=torch.float64)), (1877, tensor(-0.0071, dtype=torch.float64)), (1667, tensor(-0.0071, dtype=torch.float64)), (1853, tensor(-0.0071, dtype=torch.float64)), (1630, tensor(-0.0070, dtype=torch.float64)), (555, tensor(-0.0070, dtype=torch.float64)), (1173, tensor(-0.0070, dtype=torch.float64)), (1849, tensor(-0.0069, dtype=torch.float64)), (1071, tensor(-0.0069, dtype=torch.float64)), (1664, tensor(-0.0068, dtype=torch.float64)), (2168, tensor(-0.0068, dtype=torch.float64)), (2339, tensor(-0.0068, dtype=torch.float64)), (1138, tensor(-0.0068, dtype=torch.float64)), (898, tensor(-0.0068, dtype=torch.float64)), (2450, tensor(-0.0067, dtype=torch.float64)), (1509, tensor(-0.0067, dtype=torch.float64)), (1111, tensor(-0.0067, dtype=torch.float64)), (1638, tensor(-0.0067, dtype=torch.float64)), (2342, tensor(-0.0067, dtype=torch.float64)), (430, tensor(-0.0065, dtype=torch.float64)), (1267, tensor(-0.0065, dtype=torch.float64)), (2466, tensor(-0.0065, dtype=torch.float64)), (800, tensor(-0.0064, dtype=torch.float64)), (1819, tensor(-0.0064, dtype=torch.float64)), (759, tensor(-0.0064, dtype=torch.float64)), (243, tensor(-0.0063, dtype=torch.float64)), (1399, tensor(-0.0063, dtype=torch.float64)), (91, tensor(-0.0063, dtype=torch.float64)), (210, tensor(-0.0063, dtype=torch.float64)), (1888, tensor(-0.0063, dtype=torch.float64)), (400, tensor(-0.0063, dtype=torch.float64)), (2564, tensor(-0.0063, dtype=torch.float64)), (88, tensor(-0.0063, dtype=torch.float64)), (1563, tensor(-0.0062, dtype=torch.float64)), (2096, tensor(-0.0062, dtype=torch.float64)), (439, tensor(-0.0062, dtype=torch.float64)), (520, tensor(-0.0062, dtype=torch.float64)), (1770, tensor(-0.0062, dtype=torch.float64)), (1414, tensor(-0.0061, dtype=torch.float64)), (613, tensor(-0.0061, dtype=torch.float64)), (2272, tensor(-0.0061, dtype=torch.float64)), (670, tensor(-0.0061, dtype=torch.float64)), (253, tensor(-0.0061, dtype=torch.float64)), (529, tensor(-0.0061, dtype=torch.float64)), (2435, tensor(-0.0061, dtype=torch.float64)), (348, tensor(-0.0060, dtype=torch.float64)), (546, tensor(-0.0060, dtype=torch.float64)), (831, tensor(-0.0060, dtype=torch.float64)), (1689, tensor(-0.0060, dtype=torch.float64)), (473, tensor(-0.0060, dtype=torch.float64)), (658, tensor(-0.0060, dtype=torch.float64)), (1126, tensor(-0.0060, dtype=torch.float64)), (835, tensor(-0.0059, dtype=torch.float64)), (1147, tensor(-0.0059, dtype=torch.float64)), (518, tensor(-0.0059, dtype=torch.float64)), (1152, tensor(-0.0059, dtype=torch.float64)), (1703, tensor(-0.0059, dtype=torch.float64)), (2350, tensor(-0.0059, dtype=torch.float64)), (1518, tensor(-0.0059, dtype=torch.float64)), (2427, tensor(-0.0059, dtype=torch.float64)), (1416, tensor(-0.0058, dtype=torch.float64)), (1494, tensor(-0.0058, dtype=torch.float64)), (1240, tensor(-0.0058, dtype=torch.float64)), (2333, tensor(-0.0058, dtype=torch.float64)), (1731, tensor(-0.0058, dtype=torch.float64)), (2604, tensor(-0.0057, dtype=torch.float64)), (975, tensor(-0.0057, dtype=torch.float64)), (1700, tensor(-0.0057, dtype=torch.float64)), (1072, tensor(-0.0057, dtype=torch.float64)), (1963, tensor(-0.0057, dtype=torch.float64)), (1181, tensor(-0.0057, dtype=torch.float64)), (2170, tensor(-0.0057, dtype=torch.float64)), (2523, tensor(-0.0057, dtype=torch.float64)), (1198, tensor(-0.0057, dtype=torch.float64)), (1188, tensor(-0.0057, dtype=torch.float64)), (1943, tensor(-0.0057, dtype=torch.float64)), (1575, tensor(-0.0056, dtype=torch.float64)), (1687, tensor(-0.0056, dtype=torch.float64)), (2431, tensor(-0.0056, dtype=torch.float64)), (1986, tensor(-0.0056, dtype=torch.float64)), (1374, tensor(-0.0055, dtype=torch.float64)), (2477, tensor(-0.0055, dtype=torch.float64)), (160, tensor(-0.0055, dtype=torch.float64)), (1303, tensor(-0.0055, dtype=torch.float64)), (891, tensor(-0.0055, dtype=torch.float64)), (1218, tensor(-0.0054, dtype=torch.float64)), (1901, tensor(-0.0054, dtype=torch.float64)), (1735, tensor(-0.0054, dtype=torch.float64)), (1840, tensor(-0.0054, dtype=torch.float64)), (2071, tensor(-0.0054, dtype=torch.float64)), (1717, tensor(-0.0054, dtype=torch.float64)), (1127, tensor(-0.0054, dtype=torch.float64)), (1606, tensor(-0.0053, dtype=torch.float64)), (2262, tensor(-0.0053, dtype=torch.float64)), (2551, tensor(-0.0053, dtype=torch.float64)), (426, tensor(-0.0053, dtype=torch.float64)), (1582, tensor(-0.0053, dtype=torch.float64)), (2360, tensor(-0.0052, dtype=torch.float64)), (1722, tensor(-0.0052, dtype=torch.float64)), (2507, tensor(-0.0052, dtype=torch.float64)), (25, tensor(-0.0052, dtype=torch.float64)), (2074, tensor(-0.0052, dtype=torch.float64)), (1882, tensor(-0.0052, dtype=torch.float64)), (2453, tensor(-0.0051, dtype=torch.float64)), (2133, tensor(-0.0051, dtype=torch.float64)), (1092, tensor(-0.0051, dtype=torch.float64)), (1907, tensor(-0.0051, dtype=torch.float64)), (1971, tensor(-0.0051, dtype=torch.float64)), (1665, tensor(-0.0051, dtype=torch.float64)), (283, tensor(-0.0051, dtype=torch.float64)), (1344, tensor(-0.0051, dtype=torch.float64)), (1508, tensor(-0.0051, dtype=torch.float64)), (320, tensor(-0.0050, dtype=torch.float64)), (2469, tensor(-0.0050, dtype=torch.float64)), (2553, tensor(-0.0050, dtype=torch.float64)), (450, tensor(-0.0050, dtype=torch.float64)), (2263, tensor(-0.0050, dtype=torch.float64)), (558, tensor(-0.0050, dtype=torch.float64)), (2325, tensor(-0.0050, dtype=torch.float64)), (1001, tensor(-0.0049, dtype=torch.float64)), (1401, tensor(-0.0049, dtype=torch.float64)), (2018, tensor(-0.0049, dtype=torch.float64)), (1011, tensor(-0.0049, dtype=torch.float64)), (2298, tensor(-0.0049, dtype=torch.float64)), (1714, tensor(-0.0048, dtype=torch.float64)), (523, tensor(-0.0048, dtype=torch.float64)), (356, tensor(-0.0048, dtype=torch.float64)), (1430, tensor(-0.0048, dtype=torch.float64)), (1319, tensor(-0.0048, dtype=torch.float64)), (206, tensor(-0.0048, dtype=torch.float64)), (614, tensor(-0.0048, dtype=torch.float64)), (416, tensor(-0.0048, dtype=torch.float64)), (922, tensor(-0.0047, dtype=torch.float64)), (1385, tensor(-0.0047, dtype=torch.float64)), (45, tensor(-0.0047, dtype=torch.float64)), (1669, tensor(-0.0047, dtype=torch.float64)), (2595, tensor(-0.0047, dtype=torch.float64)), (1897, tensor(-0.0047, dtype=torch.float64)), (1005, tensor(-0.0047, dtype=torch.float64)), (222, tensor(-0.0047, dtype=torch.float64)), (1590, tensor(-0.0046, dtype=torch.float64)), (1367, tensor(-0.0046, dtype=torch.float64)), (2369, tensor(-0.0046, dtype=torch.float64)), (645, tensor(-0.0046, dtype=torch.float64)), (909, tensor(-0.0046, dtype=torch.float64)), (842, tensor(-0.0046, dtype=torch.float64)), (293, tensor(-0.0046, dtype=torch.float64)), (2545, tensor(-0.0046, dtype=torch.float64)), (1025, tensor(-0.0046, dtype=torch.float64)), (2465, tensor(-0.0046, dtype=torch.float64)), (2334, tensor(-0.0046, dtype=torch.float64)), (2144, tensor(-0.0045, dtype=torch.float64)), (2026, tensor(-0.0045, dtype=torch.float64)), (260, tensor(-0.0045, dtype=torch.float64)), (513, tensor(-0.0045, dtype=torch.float64)), (2025, tensor(-0.0044, dtype=torch.float64)), (666, tensor(-0.0044, dtype=torch.float64)), (2035, tensor(-0.0044, dtype=torch.float64)), (526, tensor(-0.0044, dtype=torch.float64)), (310, tensor(-0.0044, dtype=torch.float64)), (1405, tensor(-0.0043, dtype=torch.float64)), (1911, tensor(-0.0043, dtype=torch.float64)), (345, tensor(-0.0043, dtype=torch.float64)), (1891, tensor(-0.0043, dtype=torch.float64)), (1529, tensor(-0.0043, dtype=torch.float64)), (1736, tensor(-0.0043, dtype=torch.float64)), (11, tensor(-0.0043, dtype=torch.float64)), (2399, tensor(-0.0042, dtype=torch.float64)), (2190, tensor(-0.0042, dtype=torch.float64)), (949, tensor(-0.0042, dtype=torch.float64)), (2458, tensor(-0.0042, dtype=torch.float64)), (110, tensor(-0.0042, dtype=torch.float64)), (1028, tensor(-0.0042, dtype=torch.float64)), (441, tensor(-0.0042, dtype=torch.float64)), (40, tensor(-0.0042, dtype=torch.float64)), (1997, tensor(-0.0041, dtype=torch.float64)), (1251, tensor(-0.0041, dtype=torch.float64)), (1014, tensor(-0.0041, dtype=torch.float64)), (261, tensor(-0.0041, dtype=torch.float64)), (267, tensor(-0.0041, dtype=torch.float64)), (1519, tensor(-0.0041, dtype=torch.float64)), (734, tensor(-0.0040, dtype=torch.float64)), (2364, tensor(-0.0040, dtype=torch.float64)), (567, tensor(-0.0040, dtype=torch.float64)), (890, tensor(-0.0040, dtype=torch.float64)), (649, tensor(-0.0040, dtype=torch.float64)), (777, tensor(-0.0040, dtype=torch.float64)), (2568, tensor(-0.0039, dtype=torch.float64)), (1153, tensor(-0.0039, dtype=torch.float64)), (992, tensor(-0.0039, dtype=torch.float64)), (1581, tensor(-0.0039, dtype=torch.float64)), (1843, tensor(-0.0039, dtype=torch.float64)), (2352, tensor(-0.0039, dtype=torch.float64)), (2336, tensor(-0.0038, dtype=torch.float64)), (1169, tensor(-0.0038, dtype=torch.float64)), (445, tensor(-0.0038, dtype=torch.float64)), (1498, tensor(-0.0038, dtype=torch.float64)), (1734, tensor(-0.0038, dtype=torch.float64)), (870, tensor(-0.0038, dtype=torch.float64)), (2098, tensor(-0.0038, dtype=torch.float64)), (2347, tensor(-0.0037, dtype=torch.float64)), (1942, tensor(-0.0037, dtype=torch.float64)), (1967, tensor(-0.0037, dtype=torch.float64)), (993, tensor(-0.0037, dtype=torch.float64)), (2028, tensor(-0.0037, dtype=torch.float64)), (1235, tensor(-0.0037, dtype=torch.float64)), (168, tensor(-0.0037, dtype=torch.float64)), (1860, tensor(-0.0037, dtype=torch.float64)), (1137, tensor(-0.0037, dtype=torch.float64)), (2601, tensor(-0.0036, dtype=torch.float64)), (1884, tensor(-0.0036, dtype=torch.float64)), (2282, tensor(-0.0036, dtype=torch.float64)), (2130, tensor(-0.0036, dtype=torch.float64)), (1729, tensor(-0.0036, dtype=torch.float64)), (273, tensor(-0.0035, dtype=torch.float64)), (1745, tensor(-0.0035, dtype=torch.float64)), (968, tensor(-0.0035, dtype=torch.float64)), (248, tensor(-0.0035, dtype=torch.float64)), (2493, tensor(-0.0035, dtype=torch.float64)), (2089, tensor(-0.0035, dtype=torch.float64)), (54, tensor(-0.0035, dtype=torch.float64)), (733, tensor(-0.0035, dtype=torch.float64)), (1073, tensor(-0.0035, dtype=torch.float64)), (1030, tensor(-0.0034, dtype=torch.float64)), (506, tensor(-0.0034, dtype=torch.float64)), (574, tensor(-0.0034, dtype=torch.float64)), (834, tensor(-0.0034, dtype=torch.float64)), (6, tensor(-0.0034, dtype=torch.float64)), (973, tensor(-0.0034, dtype=torch.float64)), (2101, tensor(-0.0034, dtype=torch.float64)), (2137, tensor(-0.0034, dtype=torch.float64)), (1392, tensor(-0.0034, dtype=torch.float64)), (448, tensor(-0.0033, dtype=torch.float64)), (662, tensor(-0.0033, dtype=torch.float64)), (950, tensor(-0.0033, dtype=torch.float64)), (2407, tensor(-0.0033, dtype=torch.float64)), (1609, tensor(-0.0033, dtype=torch.float64)), (1088, tensor(-0.0033, dtype=torch.float64)), (1794, tensor(-0.0033, dtype=torch.float64)), (1926, tensor(-0.0033, dtype=torch.float64)), (576, tensor(-0.0033, dtype=torch.float64)), (2014, tensor(-0.0032, dtype=torch.float64)), (1224, tensor(-0.0032, dtype=torch.float64)), (1866, tensor(-0.0032, dtype=torch.float64)), (2092, tensor(-0.0032, dtype=torch.float64)), (885, tensor(-0.0032, dtype=torch.float64)), (1766, tensor(-0.0032, dtype=torch.float64)), (321, tensor(-0.0032, dtype=torch.float64)), (1946, tensor(-0.0032, dtype=torch.float64)), (572, tensor(-0.0032, dtype=torch.float64)), (1982, tensor(-0.0031, dtype=torch.float64)), (2127, tensor(-0.0031, dtype=torch.float64)), (1076, tensor(-0.0031, dtype=torch.float64)), (869, tensor(-0.0031, dtype=torch.float64)), (1174, tensor(-0.0030, dtype=torch.float64)), (564, tensor(-0.0030, dtype=torch.float64)), (2556, tensor(-0.0030, dtype=torch.float64)), (875, tensor(-0.0030, dtype=torch.float64)), (798, tensor(-0.0030, dtype=torch.float64)), (118, tensor(-0.0030, dtype=torch.float64)), (1225, tensor(-0.0030, dtype=torch.float64)), (2090, tensor(-0.0030, dtype=torch.float64)), (2104, tensor(-0.0030, dtype=torch.float64)), (735, tensor(-0.0029, dtype=torch.float64)), (1375, tensor(-0.0029, dtype=torch.float64)), (2163, tensor(-0.0029, dtype=torch.float64)), (440, tensor(-0.0029, dtype=torch.float64)), (325, tensor(-0.0029, dtype=torch.float64)), (2389, tensor(-0.0029, dtype=torch.float64)), (1187, tensor(-0.0029, dtype=torch.float64)), (744, tensor(-0.0029, dtype=torch.float64)), (166, tensor(-0.0029, dtype=torch.float64)), (1103, tensor(-0.0029, dtype=torch.float64)), (2057, tensor(-0.0028, dtype=torch.float64)), (1067, tensor(-0.0028, dtype=torch.float64)), (1346, tensor(-0.0028, dtype=torch.float64)), (785, tensor(-0.0028, dtype=torch.float64)), (372, tensor(-0.0028, dtype=torch.float64)), (2557, tensor(-0.0028, dtype=torch.float64)), (2252, tensor(-0.0028, dtype=torch.float64)), (678, tensor(-0.0028, dtype=torch.float64)), (1377, tensor(-0.0027, dtype=torch.float64)), (2043, tensor(-0.0027, dtype=torch.float64)), (75, tensor(-0.0027, dtype=torch.float64)), (2076, tensor(-0.0027, dtype=torch.float64)), (1464, tensor(-0.0027, dtype=torch.float64)), (1533, tensor(-0.0027, dtype=torch.float64)), (1475, tensor(-0.0027, dtype=torch.float64)), (1194, tensor(-0.0027, dtype=torch.float64)), (1337, tensor(-0.0026, dtype=torch.float64)), (2379, tensor(-0.0026, dtype=torch.float64)), (1886, tensor(-0.0026, dtype=torch.float64)), (279, tensor(-0.0026, dtype=torch.float64)), (1679, tensor(-0.0026, dtype=torch.float64)), (926, tensor(-0.0026, dtype=torch.float64)), (89, tensor(-0.0026, dtype=torch.float64)), (522, tensor(-0.0026, dtype=torch.float64)), (566, tensor(-0.0026, dtype=torch.float64)), (2538, tensor(-0.0025, dtype=torch.float64)), (1600, tensor(-0.0025, dtype=torch.float64)), (590, tensor(-0.0025, dtype=torch.float64)), (1151, tensor(-0.0025, dtype=torch.float64)), (1691, tensor(-0.0025, dtype=torch.float64)), (1362, tensor(-0.0025, dtype=torch.float64)), (1618, tensor(-0.0025, dtype=torch.float64)), (357, tensor(-0.0025, dtype=torch.float64)), (1496, tensor(-0.0025, dtype=torch.float64)), (288, tensor(-0.0024, dtype=torch.float64)), (2410, tensor(-0.0024, dtype=torch.float64)), (44, tensor(-0.0024, dtype=torch.float64)), (2307, tensor(-0.0024, dtype=torch.float64)), (2377, tensor(-0.0024, dtype=torch.float64)), (718, tensor(-0.0023, dtype=torch.float64)), (1975, tensor(-0.0023, dtype=torch.float64)), (903, tensor(-0.0023, dtype=torch.float64)), (1263, tensor(-0.0022, dtype=torch.float64)), (173, tensor(-0.0022, dtype=torch.float64)), (395, tensor(-0.0022, dtype=torch.float64)), (1644, tensor(-0.0022, dtype=torch.float64)), (1698, tensor(-0.0022, dtype=torch.float64)), (671, tensor(-0.0022, dtype=torch.float64)), (2397, tensor(-0.0022, dtype=torch.float64)), (1758, tensor(-0.0022, dtype=torch.float64)), (1617, tensor(-0.0022, dtype=torch.float64)), (1832, tensor(-0.0022, dtype=torch.float64)), (1115, tensor(-0.0021, dtype=torch.float64)), (189, tensor(-0.0021, dtype=torch.float64)), (1310, tensor(-0.0021, dtype=torch.float64)), (1939, tensor(-0.0020, dtype=torch.float64)), (290, tensor(-0.0020, dtype=torch.float64)), (2021, tensor(-0.0020, dtype=torch.float64)), (1627, tensor(-0.0020, dtype=torch.float64)), (1055, tensor(-0.0020, dtype=torch.float64)), (2097, tensor(-0.0020, dtype=torch.float64)), (374, tensor(-0.0019, dtype=torch.float64)), (236, tensor(-0.0019, dtype=torch.float64)), (157, tensor(-0.0019, dtype=torch.float64)), (1520, tensor(-0.0019, dtype=torch.float64)), (1864, tensor(-0.0019, dtype=torch.float64)), (710, tensor(-0.0019, dtype=torch.float64)), (1881, tensor(-0.0018, dtype=torch.float64)), (1568, tensor(-0.0018, dtype=torch.float64)), (1752, tensor(-0.0018, dtype=torch.float64)), (2404, tensor(-0.0018, dtype=torch.float64)), (1039, tensor(-0.0018, dtype=torch.float64)), (82, tensor(-0.0018, dtype=torch.float64)), (2474, tensor(-0.0018, dtype=torch.float64)), (713, tensor(-0.0018, dtype=torch.float64)), (1742, tensor(-0.0018, dtype=torch.float64)), (1423, tensor(-0.0018, dtype=torch.float64)), (150, tensor(-0.0017, dtype=torch.float64)), (0, tensor(-0.0017, dtype=torch.float64)), (2315, tensor(-0.0017, dtype=torch.float64)), (2157, tensor(-0.0017, dtype=torch.float64)), (3, tensor(-0.0017, dtype=torch.float64)), (220, tensor(-0.0017, dtype=torch.float64)), (2318, tensor(-0.0017, dtype=torch.float64)), (1596, tensor(-0.0017, dtype=torch.float64)), (593, tensor(-0.0016, dtype=torch.float64)), (516, tensor(-0.0016, dtype=torch.float64)), (2402, tensor(-0.0016, dtype=torch.float64)), (2527, tensor(-0.0016, dtype=torch.float64)), (1658, tensor(-0.0016, dtype=torch.float64)), (794, tensor(-0.0016, dtype=torch.float64)), (701, tensor(-0.0016, dtype=torch.float64)), (2009, tensor(-0.0016, dtype=torch.float64)), (1800, tensor(-0.0015, dtype=torch.float64)), (177, tensor(-0.0015, dtype=torch.float64)), (1480, tensor(-0.0015, dtype=torch.float64)), (643, tensor(-0.0015, dtype=torch.float64)), (2022, tensor(-0.0015, dtype=torch.float64)), (413, tensor(-0.0015, dtype=torch.float64)), (1479, tensor(-0.0015, dtype=torch.float64)), (1956, tensor(-0.0015, dtype=torch.float64)), (337, tensor(-0.0015, dtype=torch.float64)), (720, tensor(-0.0015, dtype=torch.float64)), (2357, tensor(-0.0015, dtype=torch.float64)), (2586, tensor(-0.0015, dtype=torch.float64)), (692, tensor(-0.0015, dtype=torch.float64)), (775, tensor(-0.0015, dtype=torch.float64)), (2201, tensor(-0.0015, dtype=torch.float64)), (765, tensor(-0.0014, dtype=torch.float64)), (138, tensor(-0.0014, dtype=torch.float64)), (1220, tensor(-0.0014, dtype=torch.float64)), (2278, tensor(-0.0014, dtype=torch.float64)), (877, tensor(-0.0014, dtype=torch.float64)), (2212, tensor(-0.0014, dtype=torch.float64)), (1239, tensor(-0.0014, dtype=torch.float64)), (820, tensor(-0.0014, dtype=torch.float64)), (1064, tensor(-0.0014, dtype=torch.float64)), (1950, tensor(-0.0014, dtype=torch.float64)), (2566, tensor(-0.0013, dtype=torch.float64)), (2486, tensor(-0.0013, dtype=torch.float64)), (476, tensor(-0.0013, dtype=torch.float64)), (2177, tensor(-0.0013, dtype=torch.float64)), (2526, tensor(-0.0013, dtype=torch.float64)), (579, tensor(-0.0013, dtype=torch.float64)), (774, tensor(-0.0013, dtype=torch.float64)), (1359, tensor(-0.0013, dtype=torch.float64)), (880, tensor(-0.0013, dtype=torch.float64)), (1521, tensor(-0.0013, dtype=torch.float64)), (1167, tensor(-0.0013, dtype=torch.float64)), (1120, tensor(-0.0012, dtype=torch.float64)), (1872, tensor(-0.0012, dtype=torch.float64)), (1398, tensor(-0.0012, dtype=torch.float64)), (1643, tensor(-0.0012, dtype=torch.float64)), (239, tensor(-0.0012, dtype=torch.float64)), (1750, tensor(-0.0012, dtype=torch.float64)), (797, tensor(-0.0012, dtype=torch.float64)), (1760, tensor(-0.0012, dtype=torch.float64)), (793, tensor(-0.0012, dtype=torch.float64)), (1248, tensor(-0.0012, dtype=torch.float64)), (12, tensor(-0.0012, dtype=torch.float64)), (1158, tensor(-0.0012, dtype=torch.float64)), (2598, tensor(-0.0012, dtype=torch.float64)), (2585, tensor(-0.0012, dtype=torch.float64)), (2176, tensor(-0.0012, dtype=torch.float64)), (1298, tensor(-0.0012, dtype=torch.float64)), (2393, tensor(-0.0012, dtype=torch.float64)), (1421, tensor(-0.0012, dtype=torch.float64)), (265, tensor(-0.0011, dtype=torch.float64)), (363, tensor(-0.0011, dtype=torch.float64)), (1560, tensor(-0.0011, dtype=torch.float64)), (2196, tensor(-0.0011, dtype=torch.float64)), (352, tensor(-0.0011, dtype=torch.float64)), (1358, tensor(-0.0011, dtype=torch.float64)), (1611, tensor(-0.0011, dtype=torch.float64)), (102, tensor(-0.0011, dtype=torch.float64)), (2245, tensor(-0.0011, dtype=torch.float64)), (1513, tensor(-0.0011, dtype=torch.float64)), (1544, tensor(-0.0011, dtype=torch.float64)), (2419, tensor(-0.0010, dtype=torch.float64)), (1312, tensor(-0.0010, dtype=torch.float64)), (1450, tensor(-0.0010, dtype=torch.float64)), (297, tensor(-0.0010, dtype=torch.float64)), (1748, tensor(-0.0010, dtype=torch.float64)), (651, tensor(-0.0010, dtype=torch.float64)), (2186, tensor(-0.0010, dtype=torch.float64)), (1136, tensor(-0.0010, dtype=torch.float64)), (1916, tensor(-0.0010, dtype=torch.float64)), (818, tensor(-0.0010, dtype=torch.float64)), (367, tensor(-0.0010, dtype=torch.float64)), (762, tensor(-0.0010, dtype=torch.float64)), (294, tensor(-0.0010, dtype=torch.float64)), (2511, tensor(-0.0010, dtype=torch.float64)), (461, tensor(-0.0010, dtype=torch.float64)), (1140, tensor(-0.0009, dtype=torch.float64)), (246, tensor(-0.0009, dtype=torch.float64)), (31, tensor(-0.0009, dtype=torch.float64)), (2561, tensor(-0.0009, dtype=torch.float64)), (1276, tensor(-0.0009, dtype=torch.float64)), (155, tensor(-0.0009, dtype=torch.float64)), (2567, tensor(-0.0009, dtype=torch.float64)), (2250, tensor(-0.0009, dtype=torch.float64)), (997, tensor(-0.0009, dtype=torch.float64)), (1296, tensor(-0.0009, dtype=torch.float64)), (2512, tensor(-0.0009, dtype=torch.float64)), (2417, tensor(-0.0009, dtype=torch.float64)), (956, tensor(-0.0009, dtype=torch.float64)), (106, tensor(-0.0008, dtype=torch.float64)), (2222, tensor(-0.0008, dtype=torch.float64)), (732, tensor(-0.0008, dtype=torch.float64)), (488, tensor(-0.0008, dtype=torch.float64)), (156, tensor(-0.0008, dtype=torch.float64)), (37, tensor(-0.0008, dtype=torch.float64)), (1870, tensor(-0.0007, dtype=torch.float64)), (250, tensor(-0.0007, dtype=torch.float64)), (1432, tensor(-0.0007, dtype=torch.float64)), (2151, tensor(-0.0007, dtype=torch.float64)), (960, tensor(-0.0006, dtype=torch.float64)), (939, tensor(-0.0006, dtype=torch.float64)), (2004, tensor(-0.0006, dtype=torch.float64)), (1922, tensor(-0.0006, dtype=torch.float64)), (1112, tensor(-0.0006, dtype=torch.float64)), (1022, tensor(-0.0006, dtype=torch.float64)), (2100, tensor(-0.0006, dtype=torch.float64)), (144, tensor(-0.0006, dtype=torch.float64)), (502, tensor(-0.0005, dtype=torch.float64)), (630, tensor(-0.0005, dtype=torch.float64)), (1237, tensor(-0.0005, dtype=torch.float64)), (1555, tensor(-0.0005, dtype=torch.float64)), (2179, tensor(-0.0005, dtype=torch.float64)), (365, tensor(-0.0005, dtype=torch.float64)), (743, tensor(-0.0004, dtype=torch.float64)), (1821, tensor(-0.0004, dtype=torch.float64)), (2094, tensor(-0.0004, dtype=torch.float64)), (1672, tensor(-0.0004, dtype=torch.float64)), (653, tensor(-0.0004, dtype=torch.float64)), (2560, tensor(-0.0004, dtype=torch.float64)), (2472, tensor(-0.0004, dtype=torch.float64)), (2544, tensor(-0.0004, dtype=torch.float64)), (1203, tensor(-0.0004, dtype=torch.float64)), (607, tensor(-0.0004, dtype=torch.float64)), (57, tensor(-0.0004, dtype=torch.float64)), (1507, tensor(-0.0004, dtype=torch.float64)), (1791, tensor(-0.0003, dtype=torch.float64)), (452, tensor(-0.0003, dtype=torch.float64)), (2156, tensor(-0.0003, dtype=torch.float64)), (255, tensor(-0.0003, dtype=torch.float64)), (1406, tensor(-0.0003, dtype=torch.float64)), (1452, tensor(-0.0003, dtype=torch.float64)), (2409, tensor(-0.0003, dtype=torch.float64)), (1340, tensor(-0.0002, dtype=torch.float64)), (650, tensor(-0.0002, dtype=torch.float64)), (2485, tensor(-0.0002, dtype=torch.float64)), (1157, tensor(-0.0002, dtype=torch.float64)), (635, tensor(-0.0001, dtype=torch.float64))]
annotated_samples_num: 1067
unannotated_samples_num: 2477
update datapool!
annotated_samples_num: 1067
unannotated_samples_num: 2477
iter: 6
annotated_samples_num: 1067
unannotated_samples_num: 2477
Epoch [1/10], Batch [1/133], Loss: 4.4805
Epoch [1/10], Batch [2/133], Loss: 4.5302
Epoch [1/10], Batch [3/133], Loss: 5.8065
Epoch [1/10], Batch [4/133], Loss: 2.5148
Epoch [1/10], Batch [5/133], Loss: 2.6771
Epoch [1/10], Batch [6/133], Loss: 2.2497
Epoch [1/10], Batch [7/133], Loss: 1.7063
Epoch [1/10], Batch [8/133], Loss: 1.4986
Epoch [1/10], Batch [9/133], Loss: 1.5200
Epoch [1/10], Batch [10/133], Loss: 1.4314
Epoch [1/10], Batch [11/133], Loss: 1.6130
Epoch [1/10], Batch [12/133], Loss: 1.2711
Epoch [1/10], Batch [13/133], Loss: 1.0447
Epoch [1/10], Batch [14/133], Loss: 0.7496
Epoch [1/10], Batch [15/133], Loss: 1.0042
Epoch [1/10], Batch [16/133], Loss: 0.7801
Epoch [1/10], Batch [17/133], Loss: 1.2246
Epoch [1/10], Batch [18/133], Loss: 0.5427
Epoch [1/10], Batch [19/133], Loss: 0.6159
Epoch [1/10], Batch [20/133], Loss: 0.8627
Epoch [1/10], Batch [21/133], Loss: 0.4298
Epoch [1/10], Batch [22/133], Loss: 0.5961
Epoch [1/10], Batch [23/133], Loss: 0.5805
Epoch [1/10], Batch [24/133], Loss: 0.7196
Epoch [1/10], Batch [25/133], Loss: 0.6379
Epoch [1/10], Batch [26/133], Loss: 0.7965
Epoch [1/10], Batch [27/133], Loss: 0.5616
Epoch [1/10], Batch [28/133], Loss: 0.3909
Epoch [1/10], Batch [29/133], Loss: 0.6105
Epoch [1/10], Batch [30/133], Loss: 0.4613
Epoch [1/10], Batch [31/133], Loss: 0.4939
Epoch [1/10], Batch [32/133], Loss: 0.3892
Epoch [1/10], Batch [33/133], Loss: 0.4797
Epoch [1/10], Batch [34/133], Loss: 0.6214
Epoch [1/10], Batch [35/133], Loss: 0.5488
Epoch [1/10], Batch [36/133], Loss: 0.6867
Epoch [1/10], Batch [37/133], Loss: 0.8934
Epoch [1/10], Batch [38/133], Loss: 0.5535
Epoch [1/10], Batch [39/133], Loss: 0.8712
Epoch [1/10], Batch [40/133], Loss: 0.4676
Epoch [1/10], Batch [41/133], Loss: 0.4521
Epoch [1/10], Batch [42/133], Loss: 0.4353
Epoch [1/10], Batch [43/133], Loss: 0.3837
Epoch [1/10], Batch [44/133], Loss: 0.2526
Epoch [1/10], Batch [45/133], Loss: 0.4948
Epoch [1/10], Batch [46/133], Loss: 0.7514
Epoch [1/10], Batch [47/133], Loss: 0.2358
Epoch [1/10], Batch [48/133], Loss: 0.3960
Epoch [1/10], Batch [49/133], Loss: 0.3712
Epoch [1/10], Batch [50/133], Loss: 0.5632
Epoch [1/10], Batch [51/133], Loss: 0.4928
Epoch [1/10], Batch [52/133], Loss: 0.5707
Epoch [1/10], Batch [53/133], Loss: 0.4932
Epoch [1/10], Batch [54/133], Loss: 0.4639
Epoch [1/10], Batch [55/133], Loss: 0.3858
Epoch [1/10], Batch [56/133], Loss: 0.3704
Epoch [1/10], Batch [57/133], Loss: 0.3517
Epoch [1/10], Batch [58/133], Loss: 0.2977
Epoch [1/10], Batch [59/133], Loss: 0.5291
Epoch [1/10], Batch [60/133], Loss: 0.2120
Epoch [1/10], Batch [61/133], Loss: 0.2262
Epoch [1/10], Batch [62/133], Loss: 0.3583
Epoch [1/10], Batch [63/133], Loss: 0.2590
Epoch [1/10], Batch [64/133], Loss: 0.4112
Epoch [1/10], Batch [65/133], Loss: 0.4590
Epoch [1/10], Batch [66/133], Loss: 0.5289
Epoch [1/10], Batch [67/133], Loss: 0.4053
Epoch [1/10], Batch [68/133], Loss: 0.2176
Epoch [1/10], Batch [69/133], Loss: 0.3452
Epoch [1/10], Batch [70/133], Loss: 0.4793
Epoch [1/10], Batch [71/133], Loss: 0.2350
Epoch [1/10], Batch [72/133], Loss: 0.4817
Epoch [1/10], Batch [73/133], Loss: 0.2500
Epoch [1/10], Batch [74/133], Loss: 0.4812
Epoch [1/10], Batch [75/133], Loss: 0.2654
Epoch [1/10], Batch [76/133], Loss: 0.5557
Epoch [1/10], Batch [77/133], Loss: 0.5197
Epoch [1/10], Batch [78/133], Loss: 0.3927
Epoch [1/10], Batch [79/133], Loss: 0.2303
Epoch [1/10], Batch [80/133], Loss: 0.3309
Epoch [1/10], Batch [81/133], Loss: 0.2489
Epoch [1/10], Batch [82/133], Loss: 0.4833
Epoch [1/10], Batch [83/133], Loss: 0.5427
Epoch [1/10], Batch [84/133], Loss: 0.3543
Epoch [1/10], Batch [85/133], Loss: 0.6235
Epoch [1/10], Batch [86/133], Loss: 0.3962
Epoch [1/10], Batch [87/133], Loss: 0.7059
Epoch [1/10], Batch [88/133], Loss: 0.3697
Epoch [1/10], Batch [89/133], Loss: 0.4413
Epoch [1/10], Batch [90/133], Loss: 0.5612
Epoch [1/10], Batch [91/133], Loss: 0.3318
Epoch [1/10], Batch [92/133], Loss: 0.4255
Epoch [1/10], Batch [93/133], Loss: 0.3819
Epoch [1/10], Batch [94/133], Loss: 0.4604
Epoch [1/10], Batch [95/133], Loss: 0.8107
Epoch [1/10], Batch [96/133], Loss: 0.2521
Epoch [1/10], Batch [97/133], Loss: 0.1830
Epoch [1/10], Batch [98/133], Loss: 0.5018
Epoch [1/10], Batch [99/133], Loss: 0.5454
Epoch [1/10], Batch [100/133], Loss: 0.5056
Epoch [1/10], Batch [101/133], Loss: 0.5798
Epoch [1/10], Batch [102/133], Loss: 0.6072
Epoch [1/10], Batch [103/133], Loss: 0.5404
Epoch [1/10], Batch [104/133], Loss: 0.5516
Epoch [1/10], Batch [105/133], Loss: 0.3557
Epoch [1/10], Batch [106/133], Loss: 0.2645
Epoch [1/10], Batch [107/133], Loss: 0.2630
Epoch [1/10], Batch [108/133], Loss: 0.3633
Epoch [1/10], Batch [109/133], Loss: 0.2905
Epoch [1/10], Batch [110/133], Loss: 0.5740
Epoch [1/10], Batch [111/133], Loss: 0.3530
Epoch [1/10], Batch [112/133], Loss: 0.3299
Epoch [1/10], Batch [113/133], Loss: 0.3541
Epoch [1/10], Batch [114/133], Loss: 0.3798
Epoch [1/10], Batch [115/133], Loss: 0.2945
Epoch [1/10], Batch [116/133], Loss: 0.3563
Epoch [1/10], Batch [117/133], Loss: 0.4688
Epoch [1/10], Batch [118/133], Loss: 0.1778
Epoch [1/10], Batch [119/133], Loss: 0.2930
Epoch [1/10], Batch [120/133], Loss: 0.2458
Epoch [1/10], Batch [121/133], Loss: 0.4487
Epoch [1/10], Batch [122/133], Loss: 0.3824
Epoch [1/10], Batch [123/133], Loss: 0.2298
Epoch [1/10], Batch [124/133], Loss: 0.4643
Epoch [1/10], Batch [125/133], Loss: 0.4037
Epoch [1/10], Batch [126/133], Loss: 0.2622
Epoch [1/10], Batch [127/133], Loss: 0.1711
Epoch [1/10], Batch [128/133], Loss: 0.4913
Epoch [1/10], Batch [129/133], Loss: 0.2409
Epoch [1/10], Batch [130/133], Loss: 0.2815
Epoch [1/10], Batch [131/133], Loss: 0.3335
Epoch [1/10], Batch [132/133], Loss: 0.2773
Epoch [1/10], Batch [133/133], Loss: 0.3875
Epoch [1/10], Average Loss: 0.6541
-----------------------------------------------------------
strategy: BEAM
iter: 6
epoch: 0
Test Loss: 0.2880
F1_overall: 0.5068
F1_AGENT: 0.6426
F1_TARGET: 0.3679
-----------------------------------------------------------
Epoch [2/10], Batch [1/133], Loss: 0.3619
Epoch [2/10], Batch [2/133], Loss: 0.4501
Epoch [2/10], Batch [3/133], Loss: 0.2063
Epoch [2/10], Batch [4/133], Loss: 0.2365
Epoch [2/10], Batch [5/133], Loss: 0.3993
Epoch [2/10], Batch [6/133], Loss: 0.2860
Epoch [2/10], Batch [7/133], Loss: 0.3431
Epoch [2/10], Batch [8/133], Loss: 0.2950
Epoch [2/10], Batch [9/133], Loss: 0.1765
Epoch [2/10], Batch [10/133], Loss: 0.1603
Epoch [2/10], Batch [11/133], Loss: 0.2543
Epoch [2/10], Batch [12/133], Loss: 0.2977
Epoch [2/10], Batch [13/133], Loss: 0.3152
Epoch [2/10], Batch [14/133], Loss: 0.2992
Epoch [2/10], Batch [15/133], Loss: 0.2033
Epoch [2/10], Batch [16/133], Loss: 0.2438
Epoch [2/10], Batch [17/133], Loss: 0.2634
Epoch [2/10], Batch [18/133], Loss: 0.2433
Epoch [2/10], Batch [19/133], Loss: 0.3473
Epoch [2/10], Batch [20/133], Loss: 0.2181
Epoch [2/10], Batch [21/133], Loss: 0.2665
Epoch [2/10], Batch [22/133], Loss: 0.6225
Epoch [2/10], Batch [23/133], Loss: 0.2974
Epoch [2/10], Batch [24/133], Loss: 0.1081
Epoch [2/10], Batch [25/133], Loss: 0.5061
Epoch [2/10], Batch [26/133], Loss: 0.2496
Epoch [2/10], Batch [27/133], Loss: 0.4821
Epoch [2/10], Batch [28/133], Loss: 0.3420
Epoch [2/10], Batch [29/133], Loss: 0.2302
Epoch [2/10], Batch [30/133], Loss: 0.6955
Epoch [2/10], Batch [31/133], Loss: 0.2895
Epoch [2/10], Batch [32/133], Loss: 0.2146
Epoch [2/10], Batch [33/133], Loss: 0.2266
Epoch [2/10], Batch [34/133], Loss: 0.1513
Epoch [2/10], Batch [35/133], Loss: 0.3413
Epoch [2/10], Batch [36/133], Loss: 0.1655
Epoch [2/10], Batch [37/133], Loss: 0.3065
Epoch [2/10], Batch [38/133], Loss: 0.4984
Epoch [2/10], Batch [39/133], Loss: 0.2448
Epoch [2/10], Batch [40/133], Loss: 0.2520
Epoch [2/10], Batch [41/133], Loss: 0.5108
Epoch [2/10], Batch [42/133], Loss: 0.4337
Epoch [2/10], Batch [43/133], Loss: 0.2318
Epoch [2/10], Batch [44/133], Loss: 0.3829
Epoch [2/10], Batch [45/133], Loss: 0.3597
Epoch [2/10], Batch [46/133], Loss: 0.2372
Epoch [2/10], Batch [47/133], Loss: 0.4266
Epoch [2/10], Batch [48/133], Loss: 0.4489
Epoch [2/10], Batch [49/133], Loss: 0.3085
Epoch [2/10], Batch [50/133], Loss: 0.3589
Epoch [2/10], Batch [51/133], Loss: 0.2594
Epoch [2/10], Batch [52/133], Loss: 0.4367
Epoch [2/10], Batch [53/133], Loss: 0.2688
Epoch [2/10], Batch [54/133], Loss: 0.3901
Epoch [2/10], Batch [55/133], Loss: 0.2184
Epoch [2/10], Batch [56/133], Loss: 0.2353
Epoch [2/10], Batch [57/133], Loss: 0.2117
Epoch [2/10], Batch [58/133], Loss: 0.6281
Epoch [2/10], Batch [59/133], Loss: 0.4260
Epoch [2/10], Batch [60/133], Loss: 0.3201
Epoch [2/10], Batch [61/133], Loss: 0.2610
Epoch [2/10], Batch [62/133], Loss: 0.5660
Epoch [2/10], Batch [63/133], Loss: 0.2087
Epoch [2/10], Batch [64/133], Loss: 0.3273
Epoch [2/10], Batch [65/133], Loss: 0.5737
Epoch [2/10], Batch [66/133], Loss: 0.4031
Epoch [2/10], Batch [67/133], Loss: 0.1951
Epoch [2/10], Batch [68/133], Loss: 0.2797
Epoch [2/10], Batch [69/133], Loss: 0.3195
Epoch [2/10], Batch [70/133], Loss: 0.1946
Epoch [2/10], Batch [71/133], Loss: 0.3887
Epoch [2/10], Batch [72/133], Loss: 0.4448
Epoch [2/10], Batch [73/133], Loss: 0.3641
Epoch [2/10], Batch [74/133], Loss: 0.5713
Epoch [2/10], Batch [75/133], Loss: 0.2743
Epoch [2/10], Batch [76/133], Loss: 0.1358
Epoch [2/10], Batch [77/133], Loss: 0.3419
Epoch [2/10], Batch [78/133], Loss: 0.2860
Epoch [2/10], Batch [79/133], Loss: 0.2532
Epoch [2/10], Batch [80/133], Loss: 0.2003
Epoch [2/10], Batch [81/133], Loss: 0.2823
Epoch [2/10], Batch [82/133], Loss: 0.4094
Epoch [2/10], Batch [83/133], Loss: 0.3406
Epoch [2/10], Batch [84/133], Loss: 0.3728
Epoch [2/10], Batch [85/133], Loss: 0.3411
Epoch [2/10], Batch [86/133], Loss: 0.1496
Epoch [2/10], Batch [87/133], Loss: 0.5176
Epoch [2/10], Batch [88/133], Loss: 0.5226
Epoch [2/10], Batch [89/133], Loss: 0.2131
Epoch [2/10], Batch [90/133], Loss: 0.2720
Epoch [2/10], Batch [91/133], Loss: 0.2111
Epoch [2/10], Batch [92/133], Loss: 0.4247
Epoch [2/10], Batch [93/133], Loss: 0.2769
Epoch [2/10], Batch [94/133], Loss: 0.3449
Epoch [2/10], Batch [95/133], Loss: 0.2323
Epoch [2/10], Batch [96/133], Loss: 0.3372
Epoch [2/10], Batch [97/133], Loss: 0.3852
Epoch [2/10], Batch [98/133], Loss: 0.1185
Epoch [2/10], Batch [99/133], Loss: 0.2521
Epoch [2/10], Batch [100/133], Loss: 0.2664
Epoch [2/10], Batch [101/133], Loss: 0.2406
Epoch [2/10], Batch [102/133], Loss: 0.3835
Epoch [2/10], Batch [103/133], Loss: 0.5491
Epoch [2/10], Batch [104/133], Loss: 0.3148
Epoch [2/10], Batch [105/133], Loss: 0.3943
Epoch [2/10], Batch [106/133], Loss: 0.2275
Epoch [2/10], Batch [107/133], Loss: 0.3266
Epoch [2/10], Batch [108/133], Loss: 0.2238
Epoch [2/10], Batch [109/133], Loss: 0.1839
Epoch [2/10], Batch [110/133], Loss: 0.4903
Epoch [2/10], Batch [111/133], Loss: 0.3263
Epoch [2/10], Batch [112/133], Loss: 0.2826
Epoch [2/10], Batch [113/133], Loss: 0.2589
Epoch [2/10], Batch [114/133], Loss: 0.1564
Epoch [2/10], Batch [115/133], Loss: 0.1949
Epoch [2/10], Batch [116/133], Loss: 0.1785
Epoch [2/10], Batch [117/133], Loss: 0.2557
Epoch [2/10], Batch [118/133], Loss: 0.5807
Epoch [2/10], Batch [119/133], Loss: 0.2583
Epoch [2/10], Batch [120/133], Loss: 0.3215
Epoch [2/10], Batch [121/133], Loss: 0.3430
Epoch [2/10], Batch [122/133], Loss: 0.2343
Epoch [2/10], Batch [123/133], Loss: 0.3251
Epoch [2/10], Batch [124/133], Loss: 0.3753
Epoch [2/10], Batch [125/133], Loss: 0.2815
Epoch [2/10], Batch [126/133], Loss: 0.3771
Epoch [2/10], Batch [127/133], Loss: 0.3385
Epoch [2/10], Batch [128/133], Loss: 0.1892
Epoch [2/10], Batch [129/133], Loss: 0.2765
Epoch [2/10], Batch [130/133], Loss: 0.2606
Epoch [2/10], Batch [131/133], Loss: 0.2069
Epoch [2/10], Batch [132/133], Loss: 0.3117
Epoch [2/10], Batch [133/133], Loss: 0.3239
Epoch [2/10], Average Loss: 0.3161
-----------------------------------------------------------
strategy: BEAM
iter: 6
epoch: 1
Test Loss: 0.2939
F1_overall: 0.5455
F1_AGENT: 0.6947
F1_TARGET: 0.3929
-----------------------------------------------------------
Epoch [3/10], Batch [1/133], Loss: 0.1847
Epoch [3/10], Batch [2/133], Loss: 0.1818
Epoch [3/10], Batch [3/133], Loss: 0.3982
Epoch [3/10], Batch [4/133], Loss: 0.3202
Epoch [3/10], Batch [5/133], Loss: 0.2039
Epoch [3/10], Batch [6/133], Loss: 0.1359
Epoch [3/10], Batch [7/133], Loss: 0.3028
Epoch [3/10], Batch [8/133], Loss: 0.3009
Epoch [3/10], Batch [9/133], Loss: 0.1764
Epoch [3/10], Batch [10/133], Loss: 0.2794
Epoch [3/10], Batch [11/133], Loss: 0.1851
Epoch [3/10], Batch [12/133], Loss: 0.2219
Epoch [3/10], Batch [13/133], Loss: 0.2871
Epoch [3/10], Batch [14/133], Loss: 0.2075
Epoch [3/10], Batch [15/133], Loss: 0.1320
Epoch [3/10], Batch [16/133], Loss: 0.2414
Epoch [3/10], Batch [17/133], Loss: 0.2064
Epoch [3/10], Batch [18/133], Loss: 0.1954
Epoch [3/10], Batch [19/133], Loss: 0.3182
Epoch [3/10], Batch [20/133], Loss: 0.1995
Epoch [3/10], Batch [21/133], Loss: 0.2404
Epoch [3/10], Batch [22/133], Loss: 0.1782
Epoch [3/10], Batch [23/133], Loss: 0.1508
Epoch [3/10], Batch [24/133], Loss: 0.1235
Epoch [3/10], Batch [25/133], Loss: 0.3920
Epoch [3/10], Batch [26/133], Loss: 0.1547
Epoch [3/10], Batch [27/133], Loss: 0.3101
Epoch [3/10], Batch [28/133], Loss: 0.1487
Epoch [3/10], Batch [29/133], Loss: 0.2139
Epoch [3/10], Batch [30/133], Loss: 0.2210
Epoch [3/10], Batch [31/133], Loss: 0.1552
Epoch [3/10], Batch [32/133], Loss: 0.1180
Epoch [3/10], Batch [33/133], Loss: 0.2021
Epoch [3/10], Batch [34/133], Loss: 0.1284
Epoch [3/10], Batch [35/133], Loss: 0.1571
Epoch [3/10], Batch [36/133], Loss: 0.3531
Epoch [3/10], Batch [37/133], Loss: 0.2265
Epoch [3/10], Batch [38/133], Loss: 0.1563
Epoch [3/10], Batch [39/133], Loss: 0.1888
Epoch [3/10], Batch [40/133], Loss: 0.1906
Epoch [3/10], Batch [41/133], Loss: 0.1478
Epoch [3/10], Batch [42/133], Loss: 0.1723
Epoch [3/10], Batch [43/133], Loss: 0.2620
Epoch [3/10], Batch [44/133], Loss: 0.1052
Epoch [3/10], Batch [45/133], Loss: 0.1682
Epoch [3/10], Batch [46/133], Loss: 0.1948
Epoch [3/10], Batch [47/133], Loss: 0.2743
Epoch [3/10], Batch [48/133], Loss: 0.0686
Epoch [3/10], Batch [49/133], Loss: 0.4671
Epoch [3/10], Batch [50/133], Loss: 0.3976
Epoch [3/10], Batch [51/133], Loss: 0.2082
Epoch [3/10], Batch [52/133], Loss: 0.1633
Epoch [3/10], Batch [53/133], Loss: 0.1771
Epoch [3/10], Batch [54/133], Loss: 0.3653
Epoch [3/10], Batch [55/133], Loss: 0.1395
Epoch [3/10], Batch [56/133], Loss: 0.1116
Epoch [3/10], Batch [57/133], Loss: 0.2182
Epoch [3/10], Batch [58/133], Loss: 0.2676
Epoch [3/10], Batch [59/133], Loss: 0.1752
Epoch [3/10], Batch [60/133], Loss: 0.1648
Epoch [3/10], Batch [61/133], Loss: 0.1887
Epoch [3/10], Batch [62/133], Loss: 0.1966
Epoch [3/10], Batch [63/133], Loss: 0.1812
Epoch [3/10], Batch [64/133], Loss: 0.1558
Epoch [3/10], Batch [65/133], Loss: 0.2165
Epoch [3/10], Batch [66/133], Loss: 0.2360
Epoch [3/10], Batch [67/133], Loss: 0.1730
Epoch [3/10], Batch [68/133], Loss: 0.2173
Epoch [3/10], Batch [69/133], Loss: 0.2922
Epoch [3/10], Batch [70/133], Loss: 0.1555
Epoch [3/10], Batch [71/133], Loss: 0.2458
Epoch [3/10], Batch [72/133], Loss: 0.3036
Epoch [3/10], Batch [73/133], Loss: 0.1706
Epoch [3/10], Batch [74/133], Loss: 0.1131
Epoch [3/10], Batch [75/133], Loss: 0.1474
Epoch [3/10], Batch [76/133], Loss: 0.2565
Epoch [3/10], Batch [77/133], Loss: 0.1494
Epoch [3/10], Batch [78/133], Loss: 0.0823
Epoch [3/10], Batch [79/133], Loss: 0.1528
Epoch [3/10], Batch [80/133], Loss: 0.1940
Epoch [3/10], Batch [81/133], Loss: 0.2167
Epoch [3/10], Batch [82/133], Loss: 0.1230
Epoch [3/10], Batch [83/133], Loss: 0.1715
Epoch [3/10], Batch [84/133], Loss: 0.1270
Epoch [3/10], Batch [85/133], Loss: 0.3888
Epoch [3/10], Batch [86/133], Loss: 0.2329
Epoch [3/10], Batch [87/133], Loss: 0.2233
Epoch [3/10], Batch [88/133], Loss: 0.3630
Epoch [3/10], Batch [89/133], Loss: 0.3148
Epoch [3/10], Batch [90/133], Loss: 0.1550
Epoch [3/10], Batch [91/133], Loss: 0.3428
Epoch [3/10], Batch [92/133], Loss: 0.1329
Epoch [3/10], Batch [93/133], Loss: 0.1844
Epoch [3/10], Batch [94/133], Loss: 0.1726
Epoch [3/10], Batch [95/133], Loss: 0.2627
Epoch [3/10], Batch [96/133], Loss: 0.1440
Epoch [3/10], Batch [97/133], Loss: 0.1459
Epoch [3/10], Batch [98/133], Loss: 0.3760
Epoch [3/10], Batch [99/133], Loss: 0.2759
Epoch [3/10], Batch [100/133], Loss: 0.3247
Epoch [3/10], Batch [101/133], Loss: 0.2469
Epoch [3/10], Batch [102/133], Loss: 0.3931
Epoch [3/10], Batch [103/133], Loss: 0.0995
Epoch [3/10], Batch [104/133], Loss: 0.2128
Epoch [3/10], Batch [105/133], Loss: 0.1931
Epoch [3/10], Batch [106/133], Loss: 0.0787
Epoch [3/10], Batch [107/133], Loss: 0.1306
Epoch [3/10], Batch [108/133], Loss: 0.1083
Epoch [3/10], Batch [109/133], Loss: 0.2756
Epoch [3/10], Batch [110/133], Loss: 0.1367
Epoch [3/10], Batch [111/133], Loss: 0.1637
Epoch [3/10], Batch [112/133], Loss: 0.2085
Epoch [3/10], Batch [113/133], Loss: 0.3036
Epoch [3/10], Batch [114/133], Loss: 0.1665
Epoch [3/10], Batch [115/133], Loss: 0.2354
Epoch [3/10], Batch [116/133], Loss: 0.1532
Epoch [3/10], Batch [117/133], Loss: 0.1216
Epoch [3/10], Batch [118/133], Loss: 0.1556
Epoch [3/10], Batch [119/133], Loss: 0.2379
Epoch [3/10], Batch [120/133], Loss: 0.1682
Epoch [3/10], Batch [121/133], Loss: 0.2855
Epoch [3/10], Batch [122/133], Loss: 0.1801
Epoch [3/10], Batch [123/133], Loss: 0.2023
Epoch [3/10], Batch [124/133], Loss: 0.2427
Epoch [3/10], Batch [125/133], Loss: 0.1306
Epoch [3/10], Batch [126/133], Loss: 0.3532
Epoch [3/10], Batch [127/133], Loss: 0.1199
Epoch [3/10], Batch [128/133], Loss: 0.1656
Epoch [3/10], Batch [129/133], Loss: 0.1614
Epoch [3/10], Batch [130/133], Loss: 0.1635
Epoch [3/10], Batch [131/133], Loss: 0.4003
Epoch [3/10], Batch [132/133], Loss: 0.2600
Epoch [3/10], Batch [133/133], Loss: 0.2622
Epoch [3/10], Average Loss: 0.2117
-----------------------------------------------------------
strategy: BEAM
iter: 6
epoch: 2
Test Loss: 0.3031
F1_overall: 0.5743
F1_AGENT: 0.7303
F1_TARGET: 0.4004
-----------------------------------------------------------
Epoch [4/10], Batch [1/133], Loss: 0.3018
Epoch [4/10], Batch [2/133], Loss: 0.1177
Epoch [4/10], Batch [3/133], Loss: 0.1290
Epoch [4/10], Batch [4/133], Loss: 0.1677
Epoch [4/10], Batch [5/133], Loss: 0.1055
Epoch [4/10], Batch [6/133], Loss: 0.1251
Epoch [4/10], Batch [7/133], Loss: 0.0759
Epoch [4/10], Batch [8/133], Loss: 0.1239
Epoch [4/10], Batch [9/133], Loss: 0.3615
Epoch [4/10], Batch [10/133], Loss: 0.0854
Epoch [4/10], Batch [11/133], Loss: 0.2267
Epoch [4/10], Batch [12/133], Loss: 0.1255
Epoch [4/10], Batch [13/133], Loss: 0.1439
Epoch [4/10], Batch [14/133], Loss: 0.0725
Epoch [4/10], Batch [15/133], Loss: 0.0553
Epoch [4/10], Batch [16/133], Loss: 0.1043
Epoch [4/10], Batch [17/133], Loss: 0.0938
Epoch [4/10], Batch [18/133], Loss: 0.1218
Epoch [4/10], Batch [19/133], Loss: 0.2402
Epoch [4/10], Batch [20/133], Loss: 0.2067
Epoch [4/10], Batch [21/133], Loss: 0.1216
Epoch [4/10], Batch [22/133], Loss: 0.1400
Epoch [4/10], Batch [23/133], Loss: 0.0997
Epoch [4/10], Batch [24/133], Loss: 0.1644
Epoch [4/10], Batch [25/133], Loss: 0.0860
Epoch [4/10], Batch [26/133], Loss: 0.1604
Epoch [4/10], Batch [27/133], Loss: 0.1209
Epoch [4/10], Batch [28/133], Loss: 0.3069
Epoch [4/10], Batch [29/133], Loss: 0.1515
Epoch [4/10], Batch [30/133], Loss: 0.1149
Epoch [4/10], Batch [31/133], Loss: 0.1733
Epoch [4/10], Batch [32/133], Loss: 0.1597
Epoch [4/10], Batch [33/133], Loss: 0.0515
Epoch [4/10], Batch [34/133], Loss: 0.0969
Epoch [4/10], Batch [35/133], Loss: 0.0745
Epoch [4/10], Batch [36/133], Loss: 0.2160
Epoch [4/10], Batch [37/133], Loss: 0.1889
Epoch [4/10], Batch [38/133], Loss: 0.1455
Epoch [4/10], Batch [39/133], Loss: 0.1732
Epoch [4/10], Batch [40/133], Loss: 0.1278
Epoch [4/10], Batch [41/133], Loss: 0.0993
Epoch [4/10], Batch [42/133], Loss: 0.1409
Epoch [4/10], Batch [43/133], Loss: 0.1432
Epoch [4/10], Batch [44/133], Loss: 0.1285
Epoch [4/10], Batch [45/133], Loss: 0.1334
Epoch [4/10], Batch [46/133], Loss: 0.1016
Epoch [4/10], Batch [47/133], Loss: 0.1115
Epoch [4/10], Batch [48/133], Loss: 0.1726
Epoch [4/10], Batch [49/133], Loss: 0.0983
Epoch [4/10], Batch [50/133], Loss: 0.0955
Epoch [4/10], Batch [51/133], Loss: 0.0787
Epoch [4/10], Batch [52/133], Loss: 0.3699
Epoch [4/10], Batch [53/133], Loss: 0.1990
Epoch [4/10], Batch [54/133], Loss: 0.1817
Epoch [4/10], Batch [55/133], Loss: 0.1753
Epoch [4/10], Batch [56/133], Loss: 0.1243
Epoch [4/10], Batch [57/133], Loss: 0.1100
Epoch [4/10], Batch [58/133], Loss: 0.1570
Epoch [4/10], Batch [59/133], Loss: 0.0810
Epoch [4/10], Batch [60/133], Loss: 0.1108
Epoch [4/10], Batch [61/133], Loss: 0.1323
Epoch [4/10], Batch [62/133], Loss: 0.0968
Epoch [4/10], Batch [63/133], Loss: 0.3009
Epoch [4/10], Batch [64/133], Loss: 0.2638
Epoch [4/10], Batch [65/133], Loss: 0.0822
Epoch [4/10], Batch [66/133], Loss: 0.1032
Epoch [4/10], Batch [67/133], Loss: 0.2379
Epoch [4/10], Batch [68/133], Loss: 0.1804
Epoch [4/10], Batch [69/133], Loss: 0.0625
Epoch [4/10], Batch [70/133], Loss: 0.1202
Epoch [4/10], Batch [71/133], Loss: 0.2520
Epoch [4/10], Batch [72/133], Loss: 0.1774
Epoch [4/10], Batch [73/133], Loss: 0.1296
Epoch [4/10], Batch [74/133], Loss: 0.1905
Epoch [4/10], Batch [75/133], Loss: 0.2904
Epoch [4/10], Batch [76/133], Loss: 0.1259
Epoch [4/10], Batch [77/133], Loss: 0.1014
Epoch [4/10], Batch [78/133], Loss: 0.1223
Epoch [4/10], Batch [79/133], Loss: 0.1498
Epoch [4/10], Batch [80/133], Loss: 0.1016
Epoch [4/10], Batch [81/133], Loss: 0.1477
Epoch [4/10], Batch [82/133], Loss: 0.2229
Epoch [4/10], Batch [83/133], Loss: 0.1543
Epoch [4/10], Batch [84/133], Loss: 0.0857
Epoch [4/10], Batch [85/133], Loss: 0.0690
Epoch [4/10], Batch [86/133], Loss: 0.2988
Epoch [4/10], Batch [87/133], Loss: 0.0667
Epoch [4/10], Batch [88/133], Loss: 0.0936
Epoch [4/10], Batch [89/133], Loss: 0.1591
Epoch [4/10], Batch [90/133], Loss: 0.2414
Epoch [4/10], Batch [91/133], Loss: 0.2404
Epoch [4/10], Batch [92/133], Loss: 0.1767
Epoch [4/10], Batch [93/133], Loss: 0.1947
Epoch [4/10], Batch [94/133], Loss: 0.1627
Epoch [4/10], Batch [95/133], Loss: 0.0794
Epoch [4/10], Batch [96/133], Loss: 0.2480
Epoch [4/10], Batch [97/133], Loss: 0.2257
Epoch [4/10], Batch [98/133], Loss: 0.2162
Epoch [4/10], Batch [99/133], Loss: 0.1578
Epoch [4/10], Batch [100/133], Loss: 0.2416
Epoch [4/10], Batch [101/133], Loss: 0.1683
Epoch [4/10], Batch [102/133], Loss: 0.1145
Epoch [4/10], Batch [103/133], Loss: 0.2740
Epoch [4/10], Batch [104/133], Loss: 0.1465
Epoch [4/10], Batch [105/133], Loss: 0.0894
Epoch [4/10], Batch [106/133], Loss: 0.1837
Epoch [4/10], Batch [107/133], Loss: 0.1221
Epoch [4/10], Batch [108/133], Loss: 0.4439
Epoch [4/10], Batch [109/133], Loss: 0.1936
Epoch [4/10], Batch [110/133], Loss: 0.1379
Epoch [4/10], Batch [111/133], Loss: 0.0877
Epoch [4/10], Batch [112/133], Loss: 0.3740
Epoch [4/10], Batch [113/133], Loss: 0.2198
Epoch [4/10], Batch [114/133], Loss: 0.1454
Epoch [4/10], Batch [115/133], Loss: 0.0955
Epoch [4/10], Batch [116/133], Loss: 0.1444
Epoch [4/10], Batch [117/133], Loss: 0.1680
Epoch [4/10], Batch [118/133], Loss: 0.0852
Epoch [4/10], Batch [119/133], Loss: 0.1635
Epoch [4/10], Batch [120/133], Loss: 0.1871
Epoch [4/10], Batch [121/133], Loss: 0.0851
Epoch [4/10], Batch [122/133], Loss: 0.3301
Epoch [4/10], Batch [123/133], Loss: 0.3687
Epoch [4/10], Batch [124/133], Loss: 0.1754
Epoch [4/10], Batch [125/133], Loss: 0.1294
Epoch [4/10], Batch [126/133], Loss: 0.2721
Epoch [4/10], Batch [127/133], Loss: 0.2780
Epoch [4/10], Batch [128/133], Loss: 0.1498
Epoch [4/10], Batch [129/133], Loss: 0.1371
Epoch [4/10], Batch [130/133], Loss: 0.1315
Epoch [4/10], Batch [131/133], Loss: 0.1979
Epoch [4/10], Batch [132/133], Loss: 0.1541
Epoch [4/10], Batch [133/133], Loss: 0.0767
Epoch [4/10], Average Loss: 0.1609
-----------------------------------------------------------
strategy: BEAM
iter: 6
epoch: 3
Test Loss: 0.3369
F1_overall: 0.5526
F1_AGENT: 0.7027
F1_TARGET: 0.3892
-----------------------------------------------------------
Epoch [5/10], Batch [1/133], Loss: 0.3270
Epoch [5/10], Batch [2/133], Loss: 0.0786
Epoch [5/10], Batch [3/133], Loss: 0.1413
Epoch [5/10], Batch [4/133], Loss: 0.2620
Epoch [5/10], Batch [5/133], Loss: 0.0873
Epoch [5/10], Batch [6/133], Loss: 0.0636
Epoch [5/10], Batch [7/133], Loss: 0.1504
Epoch [5/10], Batch [8/133], Loss: 0.1175
Epoch [5/10], Batch [9/133], Loss: 0.1246
Epoch [5/10], Batch [10/133], Loss: 0.1321
Epoch [5/10], Batch [11/133], Loss: 0.0648
Epoch [5/10], Batch [12/133], Loss: 0.2461
Epoch [5/10], Batch [13/133], Loss: 0.1660
Epoch [5/10], Batch [14/133], Loss: 0.1006
Epoch [5/10], Batch [15/133], Loss: 0.0804
Epoch [5/10], Batch [16/133], Loss: 0.1360
Epoch [5/10], Batch [17/133], Loss: 0.1248
Epoch [5/10], Batch [18/133], Loss: 0.1410
Epoch [5/10], Batch [19/133], Loss: 0.1331
Epoch [5/10], Batch [20/133], Loss: 0.1236
Epoch [5/10], Batch [21/133], Loss: 0.1921
Epoch [5/10], Batch [22/133], Loss: 0.1682
Epoch [5/10], Batch [23/133], Loss: 0.1182
Epoch [5/10], Batch [24/133], Loss: 0.1252
Epoch [5/10], Batch [25/133], Loss: 0.2446
Epoch [5/10], Batch [26/133], Loss: 0.0970
Epoch [5/10], Batch [27/133], Loss: 0.0745
Epoch [5/10], Batch [28/133], Loss: 0.1254
Epoch [5/10], Batch [29/133], Loss: 0.1253
Epoch [5/10], Batch [30/133], Loss: 0.1080
Epoch [5/10], Batch [31/133], Loss: 0.1209
Epoch [5/10], Batch [32/133], Loss: 0.2532
Epoch [5/10], Batch [33/133], Loss: 0.0904
Epoch [5/10], Batch [34/133], Loss: 0.1186
Epoch [5/10], Batch [35/133], Loss: 0.0805
Epoch [5/10], Batch [36/133], Loss: 0.1111
Epoch [5/10], Batch [37/133], Loss: 0.1027
Epoch [5/10], Batch [38/133], Loss: 0.1013
Epoch [5/10], Batch [39/133], Loss: 0.1288
Epoch [5/10], Batch [40/133], Loss: 0.1206
Epoch [5/10], Batch [41/133], Loss: 0.0533
Epoch [5/10], Batch [42/133], Loss: 0.0633
Epoch [5/10], Batch [43/133], Loss: 0.1568
Epoch [5/10], Batch [44/133], Loss: 0.1446
Epoch [5/10], Batch [45/133], Loss: 0.6011
Epoch [5/10], Batch [46/133], Loss: 0.0913
Epoch [5/10], Batch [47/133], Loss: 0.1354
Epoch [5/10], Batch [48/133], Loss: 0.0894
Epoch [5/10], Batch [49/133], Loss: 0.0727
Epoch [5/10], Batch [50/133], Loss: 0.1952
Epoch [5/10], Batch [51/133], Loss: 0.1012
Epoch [5/10], Batch [52/133], Loss: 0.1369
Epoch [5/10], Batch [53/133], Loss: 0.1363
Epoch [5/10], Batch [54/133], Loss: 0.0676
Epoch [5/10], Batch [55/133], Loss: 0.1924
Epoch [5/10], Batch [56/133], Loss: 0.1031
Epoch [5/10], Batch [57/133], Loss: 0.1092
Epoch [5/10], Batch [58/133], Loss: 0.0818
Epoch [5/10], Batch [59/133], Loss: 0.1551
Epoch [5/10], Batch [60/133], Loss: 0.1285
Epoch [5/10], Batch [61/133], Loss: 0.1906
Epoch [5/10], Batch [62/133], Loss: 0.1019
Epoch [5/10], Batch [63/133], Loss: 0.0916
Epoch [5/10], Batch [64/133], Loss: 0.1167
Epoch [5/10], Batch [65/133], Loss: 0.0637
Epoch [5/10], Batch [66/133], Loss: 0.0537
Epoch [5/10], Batch [67/133], Loss: 0.0884
Epoch [5/10], Batch [68/133], Loss: 0.0959
Epoch [5/10], Batch [69/133], Loss: 0.1086
Epoch [5/10], Batch [70/133], Loss: 0.0994
Epoch [5/10], Batch [71/133], Loss: 0.1557
Epoch [5/10], Batch [72/133], Loss: 0.0448
Epoch [5/10], Batch [73/133], Loss: 0.1846
Epoch [5/10], Batch [74/133], Loss: 0.1569
Epoch [5/10], Batch [75/133], Loss: 0.3602
Epoch [5/10], Batch [76/133], Loss: 0.1894
Epoch [5/10], Batch [77/133], Loss: 0.3018
Epoch [5/10], Batch [78/133], Loss: 0.1523
Epoch [5/10], Batch [79/133], Loss: 0.1668
Epoch [5/10], Batch [80/133], Loss: 0.0975
Epoch [5/10], Batch [81/133], Loss: 0.0973
Epoch [5/10], Batch [82/133], Loss: 0.1269
Epoch [5/10], Batch [83/133], Loss: 0.0929
Epoch [5/10], Batch [84/133], Loss: 0.1688
Epoch [5/10], Batch [85/133], Loss: 0.1052
Epoch [5/10], Batch [86/133], Loss: 0.0601
Epoch [5/10], Batch [87/133], Loss: 0.0943
Epoch [5/10], Batch [88/133], Loss: 0.1447
Epoch [5/10], Batch [89/133], Loss: 0.1043
Epoch [5/10], Batch [90/133], Loss: 0.0777
Epoch [5/10], Batch [91/133], Loss: 0.0955
Epoch [5/10], Batch [92/133], Loss: 0.2135
Epoch [5/10], Batch [93/133], Loss: 0.1910
Epoch [5/10], Batch [94/133], Loss: 0.1881
Epoch [5/10], Batch [95/133], Loss: 0.1072
Epoch [5/10], Batch [96/133], Loss: 0.3395
Epoch [5/10], Batch [97/133], Loss: 0.1530
Epoch [5/10], Batch [98/133], Loss: 0.1555
Epoch [5/10], Batch [99/133], Loss: 0.0930
Epoch [5/10], Batch [100/133], Loss: 0.1370
Epoch [5/10], Batch [101/133], Loss: 0.1820
Epoch [5/10], Batch [102/133], Loss: 0.0630
Epoch [5/10], Batch [103/133], Loss: 0.3208
Epoch [5/10], Batch [104/133], Loss: 0.1591
Epoch [5/10], Batch [105/133], Loss: 0.0722
Epoch [5/10], Batch [106/133], Loss: 0.1968
Epoch [5/10], Batch [107/133], Loss: 0.0883
Epoch [5/10], Batch [108/133], Loss: 0.1785
Epoch [5/10], Batch [109/133], Loss: 0.1725
Epoch [5/10], Batch [110/133], Loss: 0.1385
Epoch [5/10], Batch [111/133], Loss: 0.1995
Epoch [5/10], Batch [112/133], Loss: 0.1764
Epoch [5/10], Batch [113/133], Loss: 0.1588
Epoch [5/10], Batch [114/133], Loss: 0.1400
Epoch [5/10], Batch [115/133], Loss: 0.2167
Epoch [5/10], Batch [116/133], Loss: 0.0801
Epoch [5/10], Batch [117/133], Loss: 0.1356
Epoch [5/10], Batch [118/133], Loss: 0.1137
Epoch [5/10], Batch [119/133], Loss: 0.2416
Epoch [5/10], Batch [120/133], Loss: 0.0967
Epoch [5/10], Batch [121/133], Loss: 0.2308
Epoch [5/10], Batch [122/133], Loss: 0.1296
Epoch [5/10], Batch [123/133], Loss: 0.0905
Epoch [5/10], Batch [124/133], Loss: 0.0875
Epoch [5/10], Batch [125/133], Loss: 0.1873
Epoch [5/10], Batch [126/133], Loss: 0.0653
Epoch [5/10], Batch [127/133], Loss: 0.1945
Epoch [5/10], Batch [128/133], Loss: 0.1153
Epoch [5/10], Batch [129/133], Loss: 0.1666
Epoch [5/10], Batch [130/133], Loss: 0.0465
Epoch [5/10], Batch [131/133], Loss: 0.0699
Epoch [5/10], Batch [132/133], Loss: 0.0751
Epoch [5/10], Batch [133/133], Loss: 0.2932
Epoch [5/10], Average Loss: 0.1404
-----------------------------------------------------------
strategy: BEAM
iter: 6
epoch: 4
Test Loss: 0.3239
F1_overall: 0.5779
F1_AGENT: 0.6946
F1_TARGET: 0.4742
-----------------------------------------------------------
Epoch [6/10], Batch [1/133], Loss: 0.1459
Epoch [6/10], Batch [2/133], Loss: 0.0717
Epoch [6/10], Batch [3/133], Loss: 0.0793
Epoch [6/10], Batch [4/133], Loss: 0.0396
Epoch [6/10], Batch [5/133], Loss: 0.0407
Epoch [6/10], Batch [6/133], Loss: 0.1060
Epoch [6/10], Batch [7/133], Loss: 0.0912
Epoch [6/10], Batch [8/133], Loss: 0.0811
Epoch [6/10], Batch [9/133], Loss: 0.0270
Epoch [6/10], Batch [10/133], Loss: 0.0916
Epoch [6/10], Batch [11/133], Loss: 0.0852
Epoch [6/10], Batch [12/133], Loss: 0.0640
Epoch [6/10], Batch [13/133], Loss: 0.0297
Epoch [6/10], Batch [14/133], Loss: 0.0372
Epoch [6/10], Batch [15/133], Loss: 0.0390
Epoch [6/10], Batch [16/133], Loss: 0.0503
Epoch [6/10], Batch [17/133], Loss: 0.1190
Epoch [6/10], Batch [18/133], Loss: 0.0652
Epoch [6/10], Batch [19/133], Loss: 0.1390
Epoch [6/10], Batch [20/133], Loss: 0.1070
Epoch [6/10], Batch [21/133], Loss: 0.0982
Epoch [6/10], Batch [22/133], Loss: 0.0840
Epoch [6/10], Batch [23/133], Loss: 0.0283
Epoch [6/10], Batch [24/133], Loss: 0.1382
Epoch [6/10], Batch [25/133], Loss: 0.1718
Epoch [6/10], Batch [26/133], Loss: 0.1122
Epoch [6/10], Batch [27/133], Loss: 0.2332
Epoch [6/10], Batch [28/133], Loss: 0.0440
Epoch [6/10], Batch [29/133], Loss: 0.1841
Epoch [6/10], Batch [30/133], Loss: 0.0501
Epoch [6/10], Batch [31/133], Loss: 0.0287
Epoch [6/10], Batch [32/133], Loss: 0.0728
Epoch [6/10], Batch [33/133], Loss: 0.2483
Epoch [6/10], Batch [34/133], Loss: 0.1087
Epoch [6/10], Batch [35/133], Loss: 0.0943
Epoch [6/10], Batch [36/133], Loss: 0.1151
Epoch [6/10], Batch [37/133], Loss: 0.0664
Epoch [6/10], Batch [38/133], Loss: 0.0779
Epoch [6/10], Batch [39/133], Loss: 0.0587
Epoch [6/10], Batch [40/133], Loss: 0.0688
Epoch [6/10], Batch [41/133], Loss: 0.0554
Epoch [6/10], Batch [42/133], Loss: 0.1208
Epoch [6/10], Batch [43/133], Loss: 0.0409
Epoch [6/10], Batch [44/133], Loss: 0.0971
Epoch [6/10], Batch [45/133], Loss: 0.0281
Epoch [6/10], Batch [46/133], Loss: 0.0395
Epoch [6/10], Batch [47/133], Loss: 0.0467
Epoch [6/10], Batch [48/133], Loss: 0.0511
Epoch [6/10], Batch [49/133], Loss: 0.1037
Epoch [6/10], Batch [50/133], Loss: 0.0901
Epoch [6/10], Batch [51/133], Loss: 0.0745
Epoch [6/10], Batch [52/133], Loss: 0.0841
Epoch [6/10], Batch [53/133], Loss: 0.0613
Epoch [6/10], Batch [54/133], Loss: 0.0222
Epoch [6/10], Batch [55/133], Loss: 0.1067
Epoch [6/10], Batch [56/133], Loss: 0.0830
Epoch [6/10], Batch [57/133], Loss: 0.0255
Epoch [6/10], Batch [58/133], Loss: 0.1489
Epoch [6/10], Batch [59/133], Loss: 0.1509
Epoch [6/10], Batch [60/133], Loss: 0.0263
Epoch [6/10], Batch [61/133], Loss: 0.0794
Epoch [6/10], Batch [62/133], Loss: 0.1702
Epoch [6/10], Batch [63/133], Loss: 0.0541
Epoch [6/10], Batch [64/133], Loss: 0.0298
Epoch [6/10], Batch [65/133], Loss: 0.0772
Epoch [6/10], Batch [66/133], Loss: 0.0587
Epoch [6/10], Batch [67/133], Loss: 0.1255
Epoch [6/10], Batch [68/133], Loss: 0.0619
Epoch [6/10], Batch [69/133], Loss: 0.0722
Epoch [6/10], Batch [70/133], Loss: 0.0291
Epoch [6/10], Batch [71/133], Loss: 0.1082
Epoch [6/10], Batch [72/133], Loss: 0.0516
Epoch [6/10], Batch [73/133], Loss: 0.0721
Epoch [6/10], Batch [74/133], Loss: 0.1225
Epoch [6/10], Batch [75/133], Loss: 0.1101
Epoch [6/10], Batch [76/133], Loss: 0.1472
Epoch [6/10], Batch [77/133], Loss: 0.0487
Epoch [6/10], Batch [78/133], Loss: 0.0326
Epoch [6/10], Batch [79/133], Loss: 0.1093
Epoch [6/10], Batch [80/133], Loss: 0.0787
Epoch [6/10], Batch [81/133], Loss: 0.0548
Epoch [6/10], Batch [82/133], Loss: 0.2166
Epoch [6/10], Batch [83/133], Loss: 0.0796
Epoch [6/10], Batch [84/133], Loss: 0.1188
Epoch [6/10], Batch [85/133], Loss: 0.1302
Epoch [6/10], Batch [86/133], Loss: 0.0507
Epoch [6/10], Batch [87/133], Loss: 0.0718
Epoch [6/10], Batch [88/133], Loss: 0.0888
Epoch [6/10], Batch [89/133], Loss: 0.0847
Epoch [6/10], Batch [90/133], Loss: 0.0916
Epoch [6/10], Batch [91/133], Loss: 0.0602
Epoch [6/10], Batch [92/133], Loss: 0.0868
Epoch [6/10], Batch [93/133], Loss: 0.0658
Epoch [6/10], Batch [94/133], Loss: 0.0692
Epoch [6/10], Batch [95/133], Loss: 0.1355
Epoch [6/10], Batch [96/133], Loss: 0.0510
Epoch [6/10], Batch [97/133], Loss: 0.0212
Epoch [6/10], Batch [98/133], Loss: 0.2234
Epoch [6/10], Batch [99/133], Loss: 0.0181
Epoch [6/10], Batch [100/133], Loss: 0.0527
Epoch [6/10], Batch [101/133], Loss: 0.0582
Epoch [6/10], Batch [102/133], Loss: 0.1346
Epoch [6/10], Batch [103/133], Loss: 0.0261
Epoch [6/10], Batch [104/133], Loss: 0.1203
Epoch [6/10], Batch [105/133], Loss: 0.0942
Epoch [6/10], Batch [106/133], Loss: 0.0815
Epoch [6/10], Batch [107/133], Loss: 0.0781
Epoch [6/10], Batch [108/133], Loss: 0.0939
Epoch [6/10], Batch [109/133], Loss: 0.0847
Epoch [6/10], Batch [110/133], Loss: 0.0587
Epoch [6/10], Batch [111/133], Loss: 0.0956
Epoch [6/10], Batch [112/133], Loss: 0.0566
Epoch [6/10], Batch [113/133], Loss: 0.0390
Epoch [6/10], Batch [114/133], Loss: 0.0536
Epoch [6/10], Batch [115/133], Loss: 0.1712
Epoch [6/10], Batch [116/133], Loss: 0.1191
Epoch [6/10], Batch [117/133], Loss: 0.0272
Epoch [6/10], Batch [118/133], Loss: 0.2752
Epoch [6/10], Batch [119/133], Loss: 0.0393
Epoch [6/10], Batch [120/133], Loss: 0.1288
Epoch [6/10], Batch [121/133], Loss: 0.0652
Epoch [6/10], Batch [122/133], Loss: 0.0505
Epoch [6/10], Batch [123/133], Loss: 0.0895
Epoch [6/10], Batch [124/133], Loss: 0.0742
Epoch [6/10], Batch [125/133], Loss: 0.1544
Epoch [6/10], Batch [126/133], Loss: 0.2228
Epoch [6/10], Batch [127/133], Loss: 0.1797
Epoch [6/10], Batch [128/133], Loss: 0.1689
Epoch [6/10], Batch [129/133], Loss: 0.0741
Epoch [6/10], Batch [130/133], Loss: 0.0888
Epoch [6/10], Batch [131/133], Loss: 0.2154
Epoch [6/10], Batch [132/133], Loss: 0.0527
Epoch [6/10], Batch [133/133], Loss: 0.0490
Epoch [6/10], Average Loss: 0.0886
-----------------------------------------------------------
strategy: BEAM
iter: 6
epoch: 5
Test Loss: 0.3631
F1_overall: 0.5717
F1_AGENT: 0.7096
F1_TARGET: 0.4314
-----------------------------------------------------------
Epoch [7/10], Batch [1/133], Loss: 0.0413
Epoch [7/10], Batch [2/133], Loss: 0.0352
Epoch [7/10], Batch [3/133], Loss: 0.0855
Epoch [7/10], Batch [4/133], Loss: 0.0497
Epoch [7/10], Batch [5/133], Loss: 0.0752
Epoch [7/10], Batch [6/133], Loss: 0.0626
Epoch [7/10], Batch [7/133], Loss: 0.1939
Epoch [7/10], Batch [8/133], Loss: 0.0446
Epoch [7/10], Batch [9/133], Loss: 0.0399
Epoch [7/10], Batch [10/133], Loss: 0.0258
Epoch [7/10], Batch [11/133], Loss: 0.0685
Epoch [7/10], Batch [12/133], Loss: 0.0485
Epoch [7/10], Batch [13/133], Loss: 0.2102
Epoch [7/10], Batch [14/133], Loss: 0.0464
Epoch [7/10], Batch [15/133], Loss: 0.0323
Epoch [7/10], Batch [16/133], Loss: 0.0149
Epoch [7/10], Batch [17/133], Loss: 0.0328
Epoch [7/10], Batch [18/133], Loss: 0.0477
Epoch [7/10], Batch [19/133], Loss: 0.0702
Epoch [7/10], Batch [20/133], Loss: 0.0866
Epoch [7/10], Batch [21/133], Loss: 0.0443
Epoch [7/10], Batch [22/133], Loss: 0.0625
Epoch [7/10], Batch [23/133], Loss: 0.0752
Epoch [7/10], Batch [24/133], Loss: 0.0302
Epoch [7/10], Batch [25/133], Loss: 0.0220
Epoch [7/10], Batch [26/133], Loss: 0.1060
Epoch [7/10], Batch [27/133], Loss: 0.0330
Epoch [7/10], Batch [28/133], Loss: 0.0527
Epoch [7/10], Batch [29/133], Loss: 0.0288
Epoch [7/10], Batch [30/133], Loss: 0.0416
Epoch [7/10], Batch [31/133], Loss: 0.0336
Epoch [7/10], Batch [32/133], Loss: 0.1164
Epoch [7/10], Batch [33/133], Loss: 0.0635
Epoch [7/10], Batch [34/133], Loss: 0.0217
Epoch [7/10], Batch [35/133], Loss: 0.0792
Epoch [7/10], Batch [36/133], Loss: 0.1845
Epoch [7/10], Batch [37/133], Loss: 0.0415
Epoch [7/10], Batch [38/133], Loss: 0.0386
Epoch [7/10], Batch [39/133], Loss: 0.0211
Epoch [7/10], Batch [40/133], Loss: 0.1097
Epoch [7/10], Batch [41/133], Loss: 0.0482
Epoch [7/10], Batch [42/133], Loss: 0.1487
Epoch [7/10], Batch [43/133], Loss: 0.1075
Epoch [7/10], Batch [44/133], Loss: 0.1073
Epoch [7/10], Batch [45/133], Loss: 0.0434
Epoch [7/10], Batch [46/133], Loss: 0.0281
Epoch [7/10], Batch [47/133], Loss: 0.0901
Epoch [7/10], Batch [48/133], Loss: 0.0292
Epoch [7/10], Batch [49/133], Loss: 0.1012
Epoch [7/10], Batch [50/133], Loss: 0.0740
Epoch [7/10], Batch [51/133], Loss: 0.0381
Epoch [7/10], Batch [52/133], Loss: 0.1322
Epoch [7/10], Batch [53/133], Loss: 0.1125
Epoch [7/10], Batch [54/133], Loss: 0.0679
Epoch [7/10], Batch [55/133], Loss: 0.1447
Epoch [7/10], Batch [56/133], Loss: 0.0310
Epoch [7/10], Batch [57/133], Loss: 0.0953
Epoch [7/10], Batch [58/133], Loss: 0.0369
Epoch [7/10], Batch [59/133], Loss: 0.0282
Epoch [7/10], Batch [60/133], Loss: 0.0873
Epoch [7/10], Batch [61/133], Loss: 0.0476
Epoch [7/10], Batch [62/133], Loss: 0.0466
Epoch [7/10], Batch [63/133], Loss: 0.0644
Epoch [7/10], Batch [64/133], Loss: 0.0179
Epoch [7/10], Batch [65/133], Loss: 0.2178
Epoch [7/10], Batch [66/133], Loss: 0.0741
Epoch [7/10], Batch [67/133], Loss: 0.0262
Epoch [7/10], Batch [68/133], Loss: 0.0534
Epoch [7/10], Batch [69/133], Loss: 0.0348
Epoch [7/10], Batch [70/133], Loss: 0.0398
Epoch [7/10], Batch [71/133], Loss: 0.0734
Epoch [7/10], Batch [72/133], Loss: 0.0409
Epoch [7/10], Batch [73/133], Loss: 0.0233
Epoch [7/10], Batch [74/133], Loss: 0.0509
Epoch [7/10], Batch [75/133], Loss: 0.0178
Epoch [7/10], Batch [76/133], Loss: 0.0415
Epoch [7/10], Batch [77/133], Loss: 0.0620
Epoch [7/10], Batch [78/133], Loss: 0.0456
Epoch [7/10], Batch [79/133], Loss: 0.1201
Epoch [7/10], Batch [80/133], Loss: 0.0889
Epoch [7/10], Batch [81/133], Loss: 0.0420
Epoch [7/10], Batch [82/133], Loss: 0.0258
Epoch [7/10], Batch [83/133], Loss: 0.0277
Epoch [7/10], Batch [84/133], Loss: 0.0522
Epoch [7/10], Batch [85/133], Loss: 0.0672
Epoch [7/10], Batch [86/133], Loss: 0.0900
Epoch [7/10], Batch [87/133], Loss: 0.0907
Epoch [7/10], Batch [88/133], Loss: 0.0703
Epoch [7/10], Batch [89/133], Loss: 0.1119
Epoch [7/10], Batch [90/133], Loss: 0.0661
Epoch [7/10], Batch [91/133], Loss: 0.0139
Epoch [7/10], Batch [92/133], Loss: 0.0208
Epoch [7/10], Batch [93/133], Loss: 0.0320
Epoch [7/10], Batch [94/133], Loss: 0.0777
Epoch [7/10], Batch [95/133], Loss: 0.1426
Epoch [7/10], Batch [96/133], Loss: 0.0553
Epoch [7/10], Batch [97/133], Loss: 0.0438
Epoch [7/10], Batch [98/133], Loss: 0.0258
Epoch [7/10], Batch [99/133], Loss: 0.0255
Epoch [7/10], Batch [100/133], Loss: 0.0280
Epoch [7/10], Batch [101/133], Loss: 0.0591
Epoch [7/10], Batch [102/133], Loss: 0.0956
Epoch [7/10], Batch [103/133], Loss: 0.0090
Epoch [7/10], Batch [104/133], Loss: 0.0528
Epoch [7/10], Batch [105/133], Loss: 0.0219
Epoch [7/10], Batch [106/133], Loss: 0.0185
Epoch [7/10], Batch [107/133], Loss: 0.0681
Epoch [7/10], Batch [108/133], Loss: 0.0896
Epoch [7/10], Batch [109/133], Loss: 0.0382
Epoch [7/10], Batch [110/133], Loss: 0.0329
Epoch [7/10], Batch [111/133], Loss: 0.0551
Epoch [7/10], Batch [112/133], Loss: 0.0073
Epoch [7/10], Batch [113/133], Loss: 0.0403
Epoch [7/10], Batch [114/133], Loss: 0.0985
Epoch [7/10], Batch [115/133], Loss: 0.0635
Epoch [7/10], Batch [116/133], Loss: 0.1031
Epoch [7/10], Batch [117/133], Loss: 0.2376
Epoch [7/10], Batch [118/133], Loss: 0.0284
Epoch [7/10], Batch [119/133], Loss: 0.0480
Epoch [7/10], Batch [120/133], Loss: 0.0539
Epoch [7/10], Batch [121/133], Loss: 0.0332
Epoch [7/10], Batch [122/133], Loss: 0.0271
Epoch [7/10], Batch [123/133], Loss: 0.1054
Epoch [7/10], Batch [124/133], Loss: 0.1062
Epoch [7/10], Batch [125/133], Loss: 0.0611
Epoch [7/10], Batch [126/133], Loss: 0.0228
Epoch [7/10], Batch [127/133], Loss: 0.1000
Epoch [7/10], Batch [128/133], Loss: 0.0898
Epoch [7/10], Batch [129/133], Loss: 0.2776
Epoch [7/10], Batch [130/133], Loss: 0.0614
Epoch [7/10], Batch [131/133], Loss: 0.0595
Epoch [7/10], Batch [132/133], Loss: 0.0573
Epoch [7/10], Batch [133/133], Loss: 0.1004
Epoch [7/10], Average Loss: 0.0653
-----------------------------------------------------------
strategy: BEAM
iter: 6
epoch: 6
Test Loss: 0.3957
F1_overall: 0.5881
F1_AGENT: 0.7270
F1_TARGET: 0.4465
-----------------------------------------------------------
Epoch [8/10], Batch [1/133], Loss: 0.0626
Epoch [8/10], Batch [2/133], Loss: 0.0322
Epoch [8/10], Batch [3/133], Loss: 0.0419
Epoch [8/10], Batch [4/133], Loss: 0.0695
Epoch [8/10], Batch [5/133], Loss: 0.0267
Epoch [8/10], Batch [6/133], Loss: 0.0693
Epoch [8/10], Batch [7/133], Loss: 0.0703
Epoch [8/10], Batch [8/133], Loss: 0.0459
Epoch [8/10], Batch [9/133], Loss: 0.0683
Epoch [8/10], Batch [10/133], Loss: 0.0290
Epoch [8/10], Batch [11/133], Loss: 0.0445
Epoch [8/10], Batch [12/133], Loss: 0.0523
Epoch [8/10], Batch [13/133], Loss: 0.0559
Epoch [8/10], Batch [14/133], Loss: 0.0118
Epoch [8/10], Batch [15/133], Loss: 0.0318
Epoch [8/10], Batch [16/133], Loss: 0.0317
Epoch [8/10], Batch [17/133], Loss: 0.0196
Epoch [8/10], Batch [18/133], Loss: 0.0334
Epoch [8/10], Batch [19/133], Loss: 0.0691
Epoch [8/10], Batch [20/133], Loss: 0.0251
Epoch [8/10], Batch [21/133], Loss: 0.0576
Epoch [8/10], Batch [22/133], Loss: 0.0861
Epoch [8/10], Batch [23/133], Loss: 0.0251
Epoch [8/10], Batch [24/133], Loss: 0.0365
Epoch [8/10], Batch [25/133], Loss: 0.1920
Epoch [8/10], Batch [26/133], Loss: 0.1048
Epoch [8/10], Batch [27/133], Loss: 0.0100
Epoch [8/10], Batch [28/133], Loss: 0.0208
Epoch [8/10], Batch [29/133], Loss: 0.0242
Epoch [8/10], Batch [30/133], Loss: 0.0364
Epoch [8/10], Batch [31/133], Loss: 0.0347
Epoch [8/10], Batch [32/133], Loss: 0.0101
Epoch [8/10], Batch [33/133], Loss: 0.1350
Epoch [8/10], Batch [34/133], Loss: 0.0437
Epoch [8/10], Batch [35/133], Loss: 0.0186
Epoch [8/10], Batch [36/133], Loss: 0.0180
Epoch [8/10], Batch [37/133], Loss: 0.0424
Epoch [8/10], Batch [38/133], Loss: 0.1180
Epoch [8/10], Batch [39/133], Loss: 0.0140
Epoch [8/10], Batch [40/133], Loss: 0.0219
Epoch [8/10], Batch [41/133], Loss: 0.0901
Epoch [8/10], Batch [42/133], Loss: 0.0074
Epoch [8/10], Batch [43/133], Loss: 0.0560
Epoch [8/10], Batch [44/133], Loss: 0.0441
Epoch [8/10], Batch [45/133], Loss: 0.0506
Epoch [8/10], Batch [46/133], Loss: 0.0349
Epoch [8/10], Batch [47/133], Loss: 0.0108
Epoch [8/10], Batch [48/133], Loss: 0.0158
Epoch [8/10], Batch [49/133], Loss: 0.0650
Epoch [8/10], Batch [50/133], Loss: 0.0695
Epoch [8/10], Batch [51/133], Loss: 0.0280
Epoch [8/10], Batch [52/133], Loss: 0.0769
Epoch [8/10], Batch [53/133], Loss: 0.1463
Epoch [8/10], Batch [54/133], Loss: 0.0949
Epoch [8/10], Batch [55/133], Loss: 0.0256
Epoch [8/10], Batch [56/133], Loss: 0.0167
Epoch [8/10], Batch [57/133], Loss: 0.0324
Epoch [8/10], Batch [58/133], Loss: 0.0281
Epoch [8/10], Batch [59/133], Loss: 0.1766
Epoch [8/10], Batch [60/133], Loss: 0.0194
Epoch [8/10], Batch [61/133], Loss: 0.1718
Epoch [8/10], Batch [62/133], Loss: 0.0131
Epoch [8/10], Batch [63/133], Loss: 0.0153
Epoch [8/10], Batch [64/133], Loss: 0.0544
Epoch [8/10], Batch [65/133], Loss: 0.0471
Epoch [8/10], Batch [66/133], Loss: 0.0163
Epoch [8/10], Batch [67/133], Loss: 0.1833
Epoch [8/10], Batch [68/133], Loss: 0.1599
Epoch [8/10], Batch [69/133], Loss: 0.0201
Epoch [8/10], Batch [70/133], Loss: 0.0597
Epoch [8/10], Batch [71/133], Loss: 0.0277
Epoch [8/10], Batch [72/133], Loss: 0.0607
Epoch [8/10], Batch [73/133], Loss: 0.0270
Epoch [8/10], Batch [74/133], Loss: 0.0490
Epoch [8/10], Batch [75/133], Loss: 0.0100
Epoch [8/10], Batch [76/133], Loss: 0.0266
Epoch [8/10], Batch [77/133], Loss: 0.0749
Epoch [8/10], Batch [78/133], Loss: 0.0711
Epoch [8/10], Batch [79/133], Loss: 0.2602
Epoch [8/10], Batch [80/133], Loss: 0.0898
Epoch [8/10], Batch [81/133], Loss: 0.0192
Epoch [8/10], Batch [82/133], Loss: 0.0231
Epoch [8/10], Batch [83/133], Loss: 0.0290
Epoch [8/10], Batch [84/133], Loss: 0.0192
Epoch [8/10], Batch [85/133], Loss: 0.1062
Epoch [8/10], Batch [86/133], Loss: 0.0622
Epoch [8/10], Batch [87/133], Loss: 0.0143
Epoch [8/10], Batch [88/133], Loss: 0.0588
Epoch [8/10], Batch [89/133], Loss: 0.0346
Epoch [8/10], Batch [90/133], Loss: 0.0918
Epoch [8/10], Batch [91/133], Loss: 0.1333
Epoch [8/10], Batch [92/133], Loss: 0.0152
Epoch [8/10], Batch [93/133], Loss: 0.0967
Epoch [8/10], Batch [94/133], Loss: 0.1232
Epoch [8/10], Batch [95/133], Loss: 0.0203
Epoch [8/10], Batch [96/133], Loss: 0.1066
Epoch [8/10], Batch [97/133], Loss: 0.0702
Epoch [8/10], Batch [98/133], Loss: 0.0310
Epoch [8/10], Batch [99/133], Loss: 0.0304
Epoch [8/10], Batch [100/133], Loss: 0.1393
Epoch [8/10], Batch [101/133], Loss: 0.0319
Epoch [8/10], Batch [102/133], Loss: 0.0128
Epoch [8/10], Batch [103/133], Loss: 0.1916
Epoch [8/10], Batch [104/133], Loss: 0.0352
Epoch [8/10], Batch [105/133], Loss: 0.0159
Epoch [8/10], Batch [106/133], Loss: 0.0796
Epoch [8/10], Batch [107/133], Loss: 0.0314
Epoch [8/10], Batch [108/133], Loss: 0.1427
Epoch [8/10], Batch [109/133], Loss: 0.0790
Epoch [8/10], Batch [110/133], Loss: 0.0929
Epoch [8/10], Batch [111/133], Loss: 0.0458
Epoch [8/10], Batch [112/133], Loss: 0.0554
Epoch [8/10], Batch [113/133], Loss: 0.0695
Epoch [8/10], Batch [114/133], Loss: 0.0582
Epoch [8/10], Batch [115/133], Loss: 0.1653
Epoch [8/10], Batch [116/133], Loss: 0.0315
Epoch [8/10], Batch [117/133], Loss: 0.0573
Epoch [8/10], Batch [118/133], Loss: 0.0825
Epoch [8/10], Batch [119/133], Loss: 0.0529
Epoch [8/10], Batch [120/133], Loss: 0.0290
Epoch [8/10], Batch [121/133], Loss: 0.1176
Epoch [8/10], Batch [122/133], Loss: 0.0095
Epoch [8/10], Batch [123/133], Loss: 0.0600
Epoch [8/10], Batch [124/133], Loss: 0.0350
Epoch [8/10], Batch [125/133], Loss: 0.1060
Epoch [8/10], Batch [126/133], Loss: 0.1058
Epoch [8/10], Batch [127/133], Loss: 0.0448
Epoch [8/10], Batch [128/133], Loss: 0.1161
Epoch [8/10], Batch [129/133], Loss: 0.0763
Epoch [8/10], Batch [130/133], Loss: 0.0611
Epoch [8/10], Batch [131/133], Loss: 0.1221
Epoch [8/10], Batch [132/133], Loss: 0.0319
Epoch [8/10], Batch [133/133], Loss: 0.0367
Epoch [8/10], Average Loss: 0.0600
-----------------------------------------------------------
strategy: BEAM
iter: 6
epoch: 7
Test Loss: 0.4044
F1_overall: 0.5670
F1_AGENT: 0.6970
F1_TARGET: 0.4487
-----------------------------------------------------------
Epoch [9/10], Batch [1/133], Loss: 0.1158
Epoch [9/10], Batch [2/133], Loss: 0.0089
Epoch [9/10], Batch [3/133], Loss: 0.0710
Epoch [9/10], Batch [4/133], Loss: 0.0545
Epoch [9/10], Batch [5/133], Loss: 0.0493
Epoch [9/10], Batch [6/133], Loss: 0.0463
Epoch [9/10], Batch [7/133], Loss: 0.0112
Epoch [9/10], Batch [8/133], Loss: 0.0153
Epoch [9/10], Batch [9/133], Loss: 0.0236
Epoch [9/10], Batch [10/133], Loss: 0.0282
Epoch [9/10], Batch [11/133], Loss: 0.1334
Epoch [9/10], Batch [12/133], Loss: 0.0138
Epoch [9/10], Batch [13/133], Loss: 0.0120
Epoch [9/10], Batch [14/133], Loss: 0.0087
Epoch [9/10], Batch [15/133], Loss: 0.1148
Epoch [9/10], Batch [16/133], Loss: 0.0193
Epoch [9/10], Batch [17/133], Loss: 0.0074
Epoch [9/10], Batch [18/133], Loss: 0.0196
Epoch [9/10], Batch [19/133], Loss: 0.0190
Epoch [9/10], Batch [20/133], Loss: 0.0064
Epoch [9/10], Batch [21/133], Loss: 0.0101
Epoch [9/10], Batch [22/133], Loss: 0.0161
Epoch [9/10], Batch [23/133], Loss: 0.0048
Epoch [9/10], Batch [24/133], Loss: 0.0477
Epoch [9/10], Batch [25/133], Loss: 0.0163
Epoch [9/10], Batch [26/133], Loss: 0.0200
Epoch [9/10], Batch [27/133], Loss: 0.0128
Epoch [9/10], Batch [28/133], Loss: 0.0266
Epoch [9/10], Batch [29/133], Loss: 0.0246
Epoch [9/10], Batch [30/133], Loss: 0.0428
Epoch [9/10], Batch [31/133], Loss: 0.0638
Epoch [9/10], Batch [32/133], Loss: 0.0146
Epoch [9/10], Batch [33/133], Loss: 0.0133
Epoch [9/10], Batch [34/133], Loss: 0.0891
Epoch [9/10], Batch [35/133], Loss: 0.0516
Epoch [9/10], Batch [36/133], Loss: 0.1165
Epoch [9/10], Batch [37/133], Loss: 0.1001
Epoch [9/10], Batch [38/133], Loss: 0.0584
Epoch [9/10], Batch [39/133], Loss: 0.0827
Epoch [9/10], Batch [40/133], Loss: 0.0557
Epoch [9/10], Batch [41/133], Loss: 0.0158
Epoch [9/10], Batch [42/133], Loss: 0.1515
Epoch [9/10], Batch [43/133], Loss: 0.0108
Epoch [9/10], Batch [44/133], Loss: 0.0378
Epoch [9/10], Batch [45/133], Loss: 0.0632
Epoch [9/10], Batch [46/133], Loss: 0.0243
Epoch [9/10], Batch [47/133], Loss: 0.0134
Epoch [9/10], Batch [48/133], Loss: 0.1080
Epoch [9/10], Batch [49/133], Loss: 0.1787
Epoch [9/10], Batch [50/133], Loss: 0.0517
Epoch [9/10], Batch [51/133], Loss: 0.0541
Epoch [9/10], Batch [52/133], Loss: 0.0933
Epoch [9/10], Batch [53/133], Loss: 0.0150
Epoch [9/10], Batch [54/133], Loss: 0.0142
Epoch [9/10], Batch [55/133], Loss: 0.0138
Epoch [9/10], Batch [56/133], Loss: 0.0441
Epoch [9/10], Batch [57/133], Loss: 0.1171
Epoch [9/10], Batch [58/133], Loss: 0.0246
Epoch [9/10], Batch [59/133], Loss: 0.0407
Epoch [9/10], Batch [60/133], Loss: 0.0358
Epoch [9/10], Batch [61/133], Loss: 0.0680
Epoch [9/10], Batch [62/133], Loss: 0.0327
Epoch [9/10], Batch [63/133], Loss: 0.0319
Epoch [9/10], Batch [64/133], Loss: 0.0446
Epoch [9/10], Batch [65/133], Loss: 0.0204
Epoch [9/10], Batch [66/133], Loss: 0.0888
Epoch [9/10], Batch [67/133], Loss: 0.0107
Epoch [9/10], Batch [68/133], Loss: 0.0188
Epoch [9/10], Batch [69/133], Loss: 0.0607
Epoch [9/10], Batch [70/133], Loss: 0.0748
Epoch [9/10], Batch [71/133], Loss: 0.1016
Epoch [9/10], Batch [72/133], Loss: 0.0810
Epoch [9/10], Batch [73/133], Loss: 0.0112
Epoch [9/10], Batch [74/133], Loss: 0.1050
Epoch [9/10], Batch [75/133], Loss: 0.0245
Epoch [9/10], Batch [76/133], Loss: 0.0776
Epoch [9/10], Batch [77/133], Loss: 0.0311
Epoch [9/10], Batch [78/133], Loss: 0.1389
Epoch [9/10], Batch [79/133], Loss: 0.0495
Epoch [9/10], Batch [80/133], Loss: 0.0088
Epoch [9/10], Batch [81/133], Loss: 0.0509
Epoch [9/10], Batch [82/133], Loss: 0.0178
Epoch [9/10], Batch [83/133], Loss: 0.0327
Epoch [9/10], Batch [84/133], Loss: 0.0188
Epoch [9/10], Batch [85/133], Loss: 0.1160
Epoch [9/10], Batch [86/133], Loss: 0.0647
Epoch [9/10], Batch [87/133], Loss: 0.0970
Epoch [9/10], Batch [88/133], Loss: 0.1122
Epoch [9/10], Batch [89/133], Loss: 0.1198
Epoch [9/10], Batch [90/133], Loss: 0.0761
Epoch [9/10], Batch [91/133], Loss: 0.0197
Epoch [9/10], Batch [92/133], Loss: 0.0155
Epoch [9/10], Batch [93/133], Loss: 0.2481
Epoch [9/10], Batch [94/133], Loss: 0.0176
Epoch [9/10], Batch [95/133], Loss: 0.1576
Epoch [9/10], Batch [96/133], Loss: 0.0432
Epoch [9/10], Batch [97/133], Loss: 0.0379
Epoch [9/10], Batch [98/133], Loss: 0.1146
Epoch [9/10], Batch [99/133], Loss: 0.0224
Epoch [9/10], Batch [100/133], Loss: 0.0563
Epoch [9/10], Batch [101/133], Loss: 0.0078
Epoch [9/10], Batch [102/133], Loss: 0.0257
Epoch [9/10], Batch [103/133], Loss: 0.0868
Epoch [9/10], Batch [104/133], Loss: 0.0115
Epoch [9/10], Batch [105/133], Loss: 0.0383
Epoch [9/10], Batch [106/133], Loss: 0.0456
Epoch [9/10], Batch [107/133], Loss: 0.0305
Epoch [9/10], Batch [108/133], Loss: 0.1913
Epoch [9/10], Batch [109/133], Loss: 0.0655
Epoch [9/10], Batch [110/133], Loss: 0.0393
Epoch [9/10], Batch [111/133], Loss: 0.1542
Epoch [9/10], Batch [112/133], Loss: 0.0706
Epoch [9/10], Batch [113/133], Loss: 0.0703
Epoch [9/10], Batch [114/133], Loss: 0.0227
Epoch [9/10], Batch [115/133], Loss: 0.0652
Epoch [9/10], Batch [116/133], Loss: 0.0749
Epoch [9/10], Batch [117/133], Loss: 0.0632
Epoch [9/10], Batch [118/133], Loss: 0.0252
Epoch [9/10], Batch [119/133], Loss: 0.0044
Epoch [9/10], Batch [120/133], Loss: 0.0522
Epoch [9/10], Batch [121/133], Loss: 0.0713
Epoch [9/10], Batch [122/133], Loss: 0.0436
Epoch [9/10], Batch [123/133], Loss: 0.0375
Epoch [9/10], Batch [124/133], Loss: 0.0915
Epoch [9/10], Batch [125/133], Loss: 0.0380
Epoch [9/10], Batch [126/133], Loss: 0.0330
Epoch [9/10], Batch [127/133], Loss: 0.0379
Epoch [9/10], Batch [128/133], Loss: 0.0119
Epoch [9/10], Batch [129/133], Loss: 0.0287
Epoch [9/10], Batch [130/133], Loss: 0.1456
Epoch [9/10], Batch [131/133], Loss: 0.0277
Epoch [9/10], Batch [132/133], Loss: 0.0325
Epoch [9/10], Batch [133/133], Loss: 0.0109
Epoch [9/10], Average Loss: 0.0528
-----------------------------------------------------------
strategy: BEAM
iter: 6
epoch: 8
Test Loss: 0.4280
F1_overall: 0.5740
F1_AGENT: 0.7131
F1_TARGET: 0.4381
-----------------------------------------------------------
Epoch [10/10], Batch [1/133], Loss: 0.0092
Epoch [10/10], Batch [2/133], Loss: 0.0148
Epoch [10/10], Batch [3/133], Loss: 0.0223
Epoch [10/10], Batch [4/133], Loss: 0.0726
Epoch [10/10], Batch [5/133], Loss: 0.0693
Epoch [10/10], Batch [6/133], Loss: 0.0603
Epoch [10/10], Batch [7/133], Loss: 0.0194
Epoch [10/10], Batch [8/133], Loss: 0.0153
Epoch [10/10], Batch [9/133], Loss: 0.0282
Epoch [10/10], Batch [10/133], Loss: 0.0506
Epoch [10/10], Batch [11/133], Loss: 0.0157
Epoch [10/10], Batch [12/133], Loss: 0.1237
Epoch [10/10], Batch [13/133], Loss: 0.0056
Epoch [10/10], Batch [14/133], Loss: 0.0159
Epoch [10/10], Batch [15/133], Loss: 0.0161
Epoch [10/10], Batch [16/133], Loss: 0.0282
Epoch [10/10], Batch [17/133], Loss: 0.0996
Epoch [10/10], Batch [18/133], Loss: 0.0232
Epoch [10/10], Batch [19/133], Loss: 0.0345
Epoch [10/10], Batch [20/133], Loss: 0.1148
Epoch [10/10], Batch [21/133], Loss: 0.0400
Epoch [10/10], Batch [22/133], Loss: 0.0157
Epoch [10/10], Batch [23/133], Loss: 0.0340
Epoch [10/10], Batch [24/133], Loss: 0.0070
Epoch [10/10], Batch [25/133], Loss: 0.0305
Epoch [10/10], Batch [26/133], Loss: 0.0130
Epoch [10/10], Batch [27/133], Loss: 0.0070
Epoch [10/10], Batch [28/133], Loss: 0.0035
Epoch [10/10], Batch [29/133], Loss: 0.0133
Epoch [10/10], Batch [30/133], Loss: 0.0364
Epoch [10/10], Batch [31/133], Loss: 0.1947
Epoch [10/10], Batch [32/133], Loss: 0.0277
Epoch [10/10], Batch [33/133], Loss: 0.2898
Epoch [10/10], Batch [34/133], Loss: 0.0193
Epoch [10/10], Batch [35/133], Loss: 0.1388
Epoch [10/10], Batch [36/133], Loss: 0.0340
Epoch [10/10], Batch [37/133], Loss: 0.0123
Epoch [10/10], Batch [38/133], Loss: 0.0053
Epoch [10/10], Batch [39/133], Loss: 0.0156
Epoch [10/10], Batch [40/133], Loss: 0.0568
Epoch [10/10], Batch [41/133], Loss: 0.0046
Epoch [10/10], Batch [42/133], Loss: 0.2380
Epoch [10/10], Batch [43/133], Loss: 0.0174
Epoch [10/10], Batch [44/133], Loss: 0.0362
Epoch [10/10], Batch [45/133], Loss: 0.0593
Epoch [10/10], Batch [46/133], Loss: 0.1069
Epoch [10/10], Batch [47/133], Loss: 0.0138
Epoch [10/10], Batch [48/133], Loss: 0.0345
Epoch [10/10], Batch [49/133], Loss: 0.0599
Epoch [10/10], Batch [50/133], Loss: 0.0676
Epoch [10/10], Batch [51/133], Loss: 0.0339
Epoch [10/10], Batch [52/133], Loss: 0.0351
Epoch [10/10], Batch [53/133], Loss: 0.1426
Epoch [10/10], Batch [54/133], Loss: 0.0362
Epoch [10/10], Batch [55/133], Loss: 0.1247
Epoch [10/10], Batch [56/133], Loss: 0.0151
Epoch [10/10], Batch [57/133], Loss: 0.0823
Epoch [10/10], Batch [58/133], Loss: 0.0163
Epoch [10/10], Batch [59/133], Loss: 0.0372
Epoch [10/10], Batch [60/133], Loss: 0.0320
Epoch [10/10], Batch [61/133], Loss: 0.0772
Epoch [10/10], Batch [62/133], Loss: 0.0626
Epoch [10/10], Batch [63/133], Loss: 0.0070
Epoch [10/10], Batch [64/133], Loss: 0.0302
Epoch [10/10], Batch [65/133], Loss: 0.0112
Epoch [10/10], Batch [66/133], Loss: 0.0730
Epoch [10/10], Batch [67/133], Loss: 0.0164
Epoch [10/10], Batch [68/133], Loss: 0.0245
Epoch [10/10], Batch [69/133], Loss: 0.0257
Epoch [10/10], Batch [70/133], Loss: 0.0251
Epoch [10/10], Batch [71/133], Loss: 0.0125
Epoch [10/10], Batch [72/133], Loss: 0.0073
Epoch [10/10], Batch [73/133], Loss: 0.0475
Epoch [10/10], Batch [74/133], Loss: 0.0240
Epoch [10/10], Batch [75/133], Loss: 0.0062
Epoch [10/10], Batch [76/133], Loss: 0.0174
Epoch [10/10], Batch [77/133], Loss: 0.0266
Epoch [10/10], Batch [78/133], Loss: 0.0506
Epoch [10/10], Batch [79/133], Loss: 0.0131
Epoch [10/10], Batch [80/133], Loss: 0.0251
Epoch [10/10], Batch [81/133], Loss: 0.0559
Epoch [10/10], Batch [82/133], Loss: 0.0423
Epoch [10/10], Batch [83/133], Loss: 0.0085
Epoch [10/10], Batch [84/133], Loss: 0.0502
Epoch [10/10], Batch [85/133], Loss: 0.0155
Epoch [10/10], Batch [86/133], Loss: 0.0391
Epoch [10/10], Batch [87/133], Loss: 0.0813
Epoch [10/10], Batch [88/133], Loss: 0.0099
Epoch [10/10], Batch [89/133], Loss: 0.0026
Epoch [10/10], Batch [90/133], Loss: 0.0215
Epoch [10/10], Batch [91/133], Loss: 0.0166
Epoch [10/10], Batch [92/133], Loss: 0.0440
Epoch [10/10], Batch [93/133], Loss: 0.0802
Epoch [10/10], Batch [94/133], Loss: 0.0727
Epoch [10/10], Batch [95/133], Loss: 0.1120
Epoch [10/10], Batch [96/133], Loss: 0.1502
Epoch [10/10], Batch [97/133], Loss: 0.0111
Epoch [10/10], Batch [98/133], Loss: 0.0338
Epoch [10/10], Batch [99/133], Loss: 0.0234
Epoch [10/10], Batch [100/133], Loss: 0.0422
Epoch [10/10], Batch [101/133], Loss: 0.0433
Epoch [10/10], Batch [102/133], Loss: 0.0904
Epoch [10/10], Batch [103/133], Loss: 0.0092
Epoch [10/10], Batch [104/133], Loss: 0.0365
Epoch [10/10], Batch [105/133], Loss: 0.0604
Epoch [10/10], Batch [106/133], Loss: 0.0136
Epoch [10/10], Batch [107/133], Loss: 0.0326
Epoch [10/10], Batch [108/133], Loss: 0.0086
Epoch [10/10], Batch [109/133], Loss: 0.1025
Epoch [10/10], Batch [110/133], Loss: 0.0062
Epoch [10/10], Batch [111/133], Loss: 0.0176
Epoch [10/10], Batch [112/133], Loss: 0.0142
Epoch [10/10], Batch [113/133], Loss: 0.0072
Epoch [10/10], Batch [114/133], Loss: 0.0946
Epoch [10/10], Batch [115/133], Loss: 0.1687
Epoch [10/10], Batch [116/133], Loss: 0.0370
Epoch [10/10], Batch [117/133], Loss: 0.0276
Epoch [10/10], Batch [118/133], Loss: 0.0466
Epoch [10/10], Batch [119/133], Loss: 0.0538
Epoch [10/10], Batch [120/133], Loss: 0.1009
Epoch [10/10], Batch [121/133], Loss: 0.0594
Epoch [10/10], Batch [122/133], Loss: 0.0194
Epoch [10/10], Batch [123/133], Loss: 0.3202
Epoch [10/10], Batch [124/133], Loss: 0.0310
Epoch [10/10], Batch [125/133], Loss: 0.0240
Epoch [10/10], Batch [126/133], Loss: 0.0235
Epoch [10/10], Batch [127/133], Loss: 0.0885
Epoch [10/10], Batch [128/133], Loss: 0.0424
Epoch [10/10], Batch [129/133], Loss: 0.0543
Epoch [10/10], Batch [130/133], Loss: 0.0591
Epoch [10/10], Batch [131/133], Loss: 0.0251
Epoch [10/10], Batch [132/133], Loss: 0.0206
Epoch [10/10], Batch [133/133], Loss: 0.0200
Epoch [10/10], Average Loss: 0.0472
-----------------------------------------------------------
strategy: BEAM
iter: 6
epoch: 9
Test Loss: 0.4403
F1_overall: 0.5780
F1_AGENT: 0.7322
F1_TARGET: 0.4272
-----------------------------------------------------------
sorted_beam_scores: [(372, tensor(-0.3410, dtype=torch.float64)), (296, tensor(-0.3158, dtype=torch.float64)), (2014, tensor(-0.3023, dtype=torch.float64)), (1398, tensor(-0.2713, dtype=torch.float64)), (101, tensor(-0.2628, dtype=torch.float64)), (1430, tensor(-0.2608, dtype=torch.float64)), (783, tensor(-0.2493, dtype=torch.float64)), (606, tensor(-0.2442, dtype=torch.float64)), (2372, tensor(-0.2296, dtype=torch.float64)), (1657, tensor(-0.2270, dtype=torch.float64)), (1925, tensor(-0.2211, dtype=torch.float64)), (2041, tensor(-0.1970, dtype=torch.float64)), (855, tensor(-0.1845, dtype=torch.float64)), (83, tensor(-0.1776, dtype=torch.float64)), (67, tensor(-0.1696, dtype=torch.float64)), (2125, tensor(-0.1679, dtype=torch.float64)), (1091, tensor(-0.1665, dtype=torch.float64)), (1964, tensor(-0.1592, dtype=torch.float64)), (2255, tensor(-0.1582, dtype=torch.float64)), (61, tensor(-0.1545, dtype=torch.float64)), (962, tensor(-0.1543, dtype=torch.float64)), (529, tensor(-0.1536, dtype=torch.float64)), (2268, tensor(-0.1528, dtype=torch.float64)), (1742, tensor(-0.1516, dtype=torch.float64)), (2252, tensor(-0.1497, dtype=torch.float64)), (1189, tensor(-0.1489, dtype=torch.float64)), (1728, tensor(-0.1489, dtype=torch.float64)), (714, tensor(-0.1486, dtype=torch.float64)), (1080, tensor(-0.1472, dtype=torch.float64)), (60, tensor(-0.1471, dtype=torch.float64)), (71, tensor(-0.1447, dtype=torch.float64)), (1567, tensor(-0.1435, dtype=torch.float64)), (2419, tensor(-0.1409, dtype=torch.float64)), (782, tensor(-0.1380, dtype=torch.float64)), (106, tensor(-0.1377, dtype=torch.float64)), (1013, tensor(-0.1375, dtype=torch.float64)), (1780, tensor(-0.1375, dtype=torch.float64)), (1938, tensor(-0.1375, dtype=torch.float64)), (2427, tensor(-0.1366, dtype=torch.float64)), (635, tensor(-0.1363, dtype=torch.float64)), (796, tensor(-0.1362, dtype=torch.float64)), (368, tensor(-0.1355, dtype=torch.float64)), (1884, tensor(-0.1351, dtype=torch.float64)), (392, tensor(-0.1333, dtype=torch.float64)), (1730, tensor(-0.1318, dtype=torch.float64)), (1874, tensor(-0.1315, dtype=torch.float64)), (1276, tensor(-0.1297, dtype=torch.float64)), (569, tensor(-0.1296, dtype=torch.float64)), (35, tensor(-0.1293, dtype=torch.float64)), (73, tensor(-0.1291, dtype=torch.float64)), (2230, tensor(-0.1283, dtype=torch.float64)), (218, tensor(-0.1281, dtype=torch.float64)), (475, tensor(-0.1279, dtype=torch.float64)), (100, tensor(-0.1272, dtype=torch.float64)), (748, tensor(-0.1256, dtype=torch.float64)), (954, tensor(-0.1252, dtype=torch.float64)), (1293, tensor(-0.1250, dtype=torch.float64)), (346, tensor(-0.1231, dtype=torch.float64)), (2393, tensor(-0.1211, dtype=torch.float64)), (946, tensor(-0.1210, dtype=torch.float64)), (528, tensor(-0.1208, dtype=torch.float64)), (1141, tensor(-0.1191, dtype=torch.float64)), (2239, tensor(-0.1190, dtype=torch.float64)), (2290, tensor(-0.1179, dtype=torch.float64)), (1893, tensor(-0.1161, dtype=torch.float64)), (1904, tensor(-0.1156, dtype=torch.float64)), (1239, tensor(-0.1156, dtype=torch.float64)), (2394, tensor(-0.1151, dtype=torch.float64)), (1051, tensor(-0.1150, dtype=torch.float64)), (408, tensor(-0.1147, dtype=torch.float64)), (459, tensor(-0.1144, dtype=torch.float64)), (742, tensor(-0.1141, dtype=torch.float64)), (2082, tensor(-0.1140, dtype=torch.float64)), (1636, tensor(-0.1134, dtype=torch.float64)), (998, tensor(-0.1131, dtype=torch.float64)), (219, tensor(-0.1128, dtype=torch.float64)), (1140, tensor(-0.1124, dtype=torch.float64)), (795, tensor(-0.1123, dtype=torch.float64)), (2018, tensor(-0.1118, dtype=torch.float64)), (1973, tensor(-0.1096, dtype=torch.float64)), (673, tensor(-0.1096, dtype=torch.float64)), (1879, tensor(-0.1095, dtype=torch.float64)), (1629, tensor(-0.1093, dtype=torch.float64)), (377, tensor(-0.1089, dtype=torch.float64)), (95, tensor(-0.1089, dtype=torch.float64)), (2145, tensor(-0.1088, dtype=torch.float64)), (2133, tensor(-0.1079, dtype=torch.float64)), (2017, tensor(-0.1075, dtype=torch.float64)), (232, tensor(-0.1074, dtype=torch.float64)), (636, tensor(-0.1072, dtype=torch.float64)), (1426, tensor(-0.1070, dtype=torch.float64)), (1826, tensor(-0.1068, dtype=torch.float64)), (863, tensor(-0.1063, dtype=torch.float64)), (2434, tensor(-0.1048, dtype=torch.float64)), (51, tensor(-0.1045, dtype=torch.float64)), (1937, tensor(-0.1045, dtype=torch.float64)), (1127, tensor(-0.1043, dtype=torch.float64)), (509, tensor(-0.1042, dtype=torch.float64)), (465, tensor(-0.1037, dtype=torch.float64)), (1979, tensor(-0.1035, dtype=torch.float64)), (2016, tensor(-0.1034, dtype=torch.float64)), (510, tensor(-0.1033, dtype=torch.float64)), (481, tensor(-0.1028, dtype=torch.float64)), (2051, tensor(-0.1026, dtype=torch.float64)), (250, tensor(-0.1022, dtype=torch.float64)), (2202, tensor(-0.1021, dtype=torch.float64)), (2329, tensor(-0.1021, dtype=torch.float64)), (1534, tensor(-0.1020, dtype=torch.float64)), (2295, tensor(-0.1015, dtype=torch.float64)), (1527, tensor(-0.1012, dtype=torch.float64)), (1749, tensor(-0.1011, dtype=torch.float64)), (700, tensor(-0.1010, dtype=torch.float64)), (1902, tensor(-0.1008, dtype=torch.float64)), (1935, tensor(-0.1005, dtype=torch.float64)), (927, tensor(-0.1005, dtype=torch.float64)), (2305, tensor(-0.1003, dtype=torch.float64)), (1006, tensor(-0.0997, dtype=torch.float64)), (1302, tensor(-0.0996, dtype=torch.float64)), (1165, tensor(-0.0995, dtype=torch.float64)), (767, tensor(-0.0995, dtype=torch.float64)), (578, tensor(-0.0995, dtype=torch.float64)), (999, tensor(-0.0995, dtype=torch.float64)), (339, tensor(-0.0992, dtype=torch.float64)), (1021, tensor(-0.0990, dtype=torch.float64)), (337, tensor(-0.0990, dtype=torch.float64)), (1589, tensor(-0.0990, dtype=torch.float64)), (25, tensor(-0.0989, dtype=torch.float64)), (571, tensor(-0.0981, dtype=torch.float64)), (1745, tensor(-0.0980, dtype=torch.float64)), (451, tensor(-0.0977, dtype=torch.float64)), (2146, tensor(-0.0975, dtype=torch.float64)), (2085, tensor(-0.0972, dtype=torch.float64)), (2192, tensor(-0.0972, dtype=torch.float64)), (1349, tensor(-0.0972, dtype=torch.float64)), (1463, tensor(-0.0969, dtype=torch.float64)), (2392, tensor(-0.0966, dtype=torch.float64)), (1358, tensor(-0.0963, dtype=torch.float64)), (2355, tensor(-0.0959, dtype=torch.float64)), (174, tensor(-0.0955, dtype=torch.float64)), (1474, tensor(-0.0954, dtype=torch.float64)), (2135, tensor(-0.0951, dtype=torch.float64)), (489, tensor(-0.0951, dtype=torch.float64)), (716, tensor(-0.0950, dtype=torch.float64)), (277, tensor(-0.0946, dtype=torch.float64)), (58, tensor(-0.0946, dtype=torch.float64)), (1700, tensor(-0.0943, dtype=torch.float64)), (467, tensor(-0.0943, dtype=torch.float64)), (2335, tensor(-0.0943, dtype=torch.float64)), (633, tensor(-0.0942, dtype=torch.float64)), (2075, tensor(-0.0939, dtype=torch.float64)), (1634, tensor(-0.0937, dtype=torch.float64)), (906, tensor(-0.0933, dtype=torch.float64)), (670, tensor(-0.0930, dtype=torch.float64)), (1362, tensor(-0.0928, dtype=torch.float64)), (2151, tensor(-0.0926, dtype=torch.float64)), (1750, tensor(-0.0924, dtype=torch.float64)), (231, tensor(-0.0922, dtype=torch.float64)), (1901, tensor(-0.0921, dtype=torch.float64)), (590, tensor(-0.0921, dtype=torch.float64)), (2322, tensor(-0.0921, dtype=torch.float64)), (1491, tensor(-0.0920, dtype=torch.float64)), (2200, tensor(-0.0919, dtype=torch.float64)), (161, tensor(-0.0916, dtype=torch.float64)), (172, tensor(-0.0913, dtype=torch.float64)), (169, tensor(-0.0913, dtype=torch.float64)), (1329, tensor(-0.0912, dtype=torch.float64)), (2024, tensor(-0.0909, dtype=torch.float64)), (240, tensor(-0.0908, dtype=torch.float64)), (752, tensor(-0.0906, dtype=torch.float64)), (903, tensor(-0.0906, dtype=torch.float64)), (1147, tensor(-0.0904, dtype=torch.float64)), (1025, tensor(-0.0901, dtype=torch.float64)), (86, tensor(-0.0899, dtype=torch.float64)), (1611, tensor(-0.0897, dtype=torch.float64)), (2435, tensor(-0.0896, dtype=torch.float64)), (1244, tensor(-0.0895, dtype=torch.float64)), (1192, tensor(-0.0892, dtype=torch.float64)), (788, tensor(-0.0892, dtype=torch.float64)), (1563, tensor(-0.0888, dtype=torch.float64)), (261, tensor(-0.0887, dtype=torch.float64)), (1125, tensor(-0.0886, dtype=torch.float64)), (119, tensor(-0.0883, dtype=torch.float64)), (994, tensor(-0.0877, dtype=torch.float64)), (1481, tensor(-0.0876, dtype=torch.float64)), (2353, tensor(-0.0872, dtype=torch.float64)), (1348, tensor(-0.0872, dtype=torch.float64)), (2270, tensor(-0.0871, dtype=torch.float64)), (981, tensor(-0.0871, dtype=torch.float64)), (85, tensor(-0.0870, dtype=torch.float64)), (1191, tensor(-0.0869, dtype=torch.float64)), (1015, tensor(-0.0868, dtype=torch.float64)), (1188, tensor(-0.0865, dtype=torch.float64)), (2397, tensor(-0.0865, dtype=torch.float64)), (1104, tensor(-0.0863, dtype=torch.float64)), (1968, tensor(-0.0863, dtype=torch.float64)), (1233, tensor(-0.0861, dtype=torch.float64)), (557, tensor(-0.0860, dtype=torch.float64)), (1260, tensor(-0.0859, dtype=torch.float64)), (1930, tensor(-0.0857, dtype=torch.float64)), (834, tensor(-0.0857, dtype=torch.float64)), (1340, tensor(-0.0852, dtype=torch.float64)), (455, tensor(-0.0852, dtype=torch.float64)), (502, tensor(-0.0848, dtype=torch.float64)), (1274, tensor(-0.0841, dtype=torch.float64)), (988, tensor(-0.0840, dtype=torch.float64)), (290, tensor(-0.0836, dtype=torch.float64)), (1227, tensor(-0.0835, dtype=torch.float64)), (1216, tensor(-0.0835, dtype=torch.float64)), (9, tensor(-0.0831, dtype=torch.float64)), (697, tensor(-0.0830, dtype=torch.float64)), (1019, tensor(-0.0830, dtype=torch.float64)), (2458, tensor(-0.0825, dtype=torch.float64)), (1281, tensor(-0.0825, dtype=torch.float64)), (177, tensor(-0.0824, dtype=torch.float64)), (2298, tensor(-0.0824, dtype=torch.float64)), (1404, tensor(-0.0820, dtype=torch.float64)), (785, tensor(-0.0819, dtype=torch.float64)), (774, tensor(-0.0817, dtype=torch.float64)), (470, tensor(-0.0817, dtype=torch.float64)), (118, tensor(-0.0816, dtype=torch.float64)), (1038, tensor(-0.0815, dtype=torch.float64)), (1762, tensor(-0.0814, dtype=torch.float64)), (2219, tensor(-0.0814, dtype=torch.float64)), (1661, tensor(-0.0813, dtype=torch.float64)), (1740, tensor(-0.0813, dtype=torch.float64)), (2011, tensor(-0.0812, dtype=torch.float64)), (1776, tensor(-0.0810, dtype=torch.float64)), (1771, tensor(-0.0809, dtype=torch.float64)), (1179, tensor(-0.0809, dtype=torch.float64)), (2304, tensor(-0.0808, dtype=torch.float64)), (1946, tensor(-0.0807, dtype=torch.float64)), (1652, tensor(-0.0806, dtype=torch.float64)), (472, tensor(-0.0805, dtype=torch.float64)), (1572, tensor(-0.0805, dtype=torch.float64)), (1602, tensor(-0.0803, dtype=torch.float64)), (381, tensor(-0.0802, dtype=torch.float64)), (2022, tensor(-0.0801, dtype=torch.float64)), (976, tensor(-0.0799, dtype=torch.float64)), (2134, tensor(-0.0796, dtype=torch.float64)), (577, tensor(-0.0796, dtype=torch.float64)), (632, tensor(-0.0794, dtype=torch.float64)), (1041, tensor(-0.0794, dtype=torch.float64)), (176, tensor(-0.0793, dtype=torch.float64)), (2348, tensor(-0.0792, dtype=torch.float64)), (1065, tensor(-0.0790, dtype=torch.float64)), (944, tensor(-0.0787, dtype=torch.float64)), (675, tensor(-0.0787, dtype=torch.float64)), (534, tensor(-0.0786, dtype=torch.float64)), (1354, tensor(-0.0785, dtype=torch.float64)), (805, tensor(-0.0783, dtype=torch.float64)), (393, tensor(-0.0781, dtype=torch.float64)), (1317, tensor(-0.0780, dtype=torch.float64)), (1438, tensor(-0.0776, dtype=torch.float64)), (2056, tensor(-0.0775, dtype=torch.float64)), (1613, tensor(-0.0773, dtype=torch.float64)), (1070, tensor(-0.0771, dtype=torch.float64)), (1088, tensor(-0.0770, dtype=torch.float64)), (2413, tensor(-0.0769, dtype=torch.float64)), (566, tensor(-0.0768, dtype=torch.float64)), (1560, tensor(-0.0768, dtype=torch.float64)), (941, tensor(-0.0766, dtype=torch.float64)), (2122, tensor(-0.0764, dtype=torch.float64)), (1610, tensor(-0.0762, dtype=torch.float64)), (1009, tensor(-0.0759, dtype=torch.float64)), (1360, tensor(-0.0756, dtype=torch.float64)), (1675, tensor(-0.0754, dtype=torch.float64)), (909, tensor(-0.0754, dtype=torch.float64)), (1355, tensor(-0.0754, dtype=torch.float64)), (1459, tensor(-0.0754, dtype=torch.float64)), (360, tensor(-0.0752, dtype=torch.float64)), (1414, tensor(-0.0752, dtype=torch.float64)), (522, tensor(-0.0749, dtype=torch.float64)), (1249, tensor(-0.0749, dtype=torch.float64)), (1668, tensor(-0.0749, dtype=torch.float64)), (499, tensor(-0.0745, dtype=torch.float64)), (847, tensor(-0.0744, dtype=torch.float64)), (1900, tensor(-0.0743, dtype=torch.float64)), (1741, tensor(-0.0743, dtype=torch.float64)), (1908, tensor(-0.0740, dtype=torch.float64)), (1819, tensor(-0.0739, dtype=torch.float64)), (99, tensor(-0.0739, dtype=torch.float64)), (678, tensor(-0.0738, dtype=torch.float64)), (2015, tensor(-0.0736, dtype=torch.float64)), (1821, tensor(-0.0736, dtype=torch.float64)), (738, tensor(-0.0734, dtype=torch.float64)), (1807, tensor(-0.0734, dtype=torch.float64)), (375, tensor(-0.0733, dtype=torch.float64)), (1497, tensor(-0.0732, dtype=torch.float64)), (1316, tensor(-0.0730, dtype=torch.float64)), (2466, tensor(-0.0729, dtype=torch.float64)), (934, tensor(-0.0729, dtype=torch.float64)), (1445, tensor(-0.0729, dtype=torch.float64)), (520, tensor(-0.0729, dtype=torch.float64)), (2260, tensor(-0.0727, dtype=torch.float64)), (637, tensor(-0.0727, dtype=torch.float64)), (1213, tensor(-0.0727, dtype=torch.float64)), (1406, tensor(-0.0726, dtype=torch.float64)), (645, tensor(-0.0724, dtype=torch.float64)), (807, tensor(-0.0723, dtype=torch.float64)), (1226, tensor(-0.0722, dtype=torch.float64)), (1209, tensor(-0.0722, dtype=torch.float64)), (1012, tensor(-0.0721, dtype=torch.float64)), (1977, tensor(-0.0721, dtype=torch.float64)), (264, tensor(-0.0719, dtype=torch.float64)), (1262, tensor(-0.0717, dtype=torch.float64)), (910, tensor(-0.0716, dtype=torch.float64)), (226, tensor(-0.0715, dtype=torch.float64)), (719, tensor(-0.0712, dtype=torch.float64)), (2175, tensor(-0.0710, dtype=torch.float64)), (2033, tensor(-0.0708, dtype=torch.float64)), (1537, tensor(-0.0707, dtype=torch.float64)), (81, tensor(-0.0707, dtype=torch.float64)), (825, tensor(-0.0706, dtype=torch.float64)), (354, tensor(-0.0706, dtype=torch.float64)), (892, tensor(-0.0705, dtype=torch.float64)), (814, tensor(-0.0704, dtype=torch.float64)), (2267, tensor(-0.0704, dtype=torch.float64)), (430, tensor(-0.0703, dtype=torch.float64)), (867, tensor(-0.0702, dtype=torch.float64)), (2222, tensor(-0.0702, dtype=torch.float64)), (50, tensor(-0.0701, dtype=torch.float64)), (235, tensor(-0.0699, dtype=torch.float64)), (1450, tensor(-0.0699, dtype=torch.float64)), (1832, tensor(-0.0697, dtype=torch.float64)), (1825, tensor(-0.0696, dtype=torch.float64)), (1791, tensor(-0.0693, dtype=torch.float64)), (693, tensor(-0.0692, dtype=torch.float64)), (1486, tensor(-0.0690, dtype=torch.float64)), (1063, tensor(-0.0688, dtype=torch.float64)), (415, tensor(-0.0688, dtype=torch.float64)), (653, tensor(-0.0688, dtype=torch.float64)), (2172, tensor(-0.0685, dtype=torch.float64)), (394, tensor(-0.0685, dtype=torch.float64)), (1389, tensor(-0.0683, dtype=torch.float64)), (2027, tensor(-0.0682, dtype=torch.float64)), (279, tensor(-0.0681, dtype=torch.float64)), (1536, tensor(-0.0679, dtype=torch.float64)), (117, tensor(-0.0679, dtype=torch.float64)), (1640, tensor(-0.0677, dtype=torch.float64)), (120, tensor(-0.0677, dtype=torch.float64)), (1965, tensor(-0.0677, dtype=torch.float64)), (2226, tensor(-0.0676, dtype=torch.float64)), (1679, tensor(-0.0676, dtype=torch.float64)), (787, tensor(-0.0676, dtype=torch.float64)), (1253, tensor(-0.0674, dtype=torch.float64)), (1396, tensor(-0.0674, dtype=torch.float64)), (2422, tensor(-0.0673, dtype=torch.float64)), (362, tensor(-0.0672, dtype=torch.float64)), (1801, tensor(-0.0672, dtype=torch.float64)), (1471, tensor(-0.0670, dtype=torch.float64)), (230, tensor(-0.0668, dtype=torch.float64)), (2111, tensor(-0.0667, dtype=torch.float64)), (1521, tensor(-0.0666, dtype=torch.float64)), (70, tensor(-0.0665, dtype=torch.float64)), (794, tensor(-0.0661, dtype=torch.float64)), (2362, tensor(-0.0661, dtype=torch.float64)), (553, tensor(-0.0661, dtype=torch.float64)), (1918, tensor(-0.0660, dtype=torch.float64)), (1986, tensor(-0.0658, dtype=torch.float64)), (517, tensor(-0.0657, dtype=torch.float64)), (1026, tensor(-0.0656, dtype=torch.float64)), (40, tensor(-0.0655, dtype=torch.float64)), (1713, tensor(-0.0654, dtype=torch.float64)), (2289, tensor(-0.0654, dtype=torch.float64)), (1857, tensor(-0.0653, dtype=torch.float64)), (2183, tensor(-0.0653, dtype=torch.float64)), (186, tensor(-0.0651, dtype=torch.float64)), (1676, tensor(-0.0650, dtype=torch.float64)), (383, tensor(-0.0650, dtype=torch.float64)), (1788, tensor(-0.0649, dtype=torch.float64)), (363, tensor(-0.0649, dtype=torch.float64)), (887, tensor(-0.0649, dtype=torch.float64)), (1258, tensor(-0.0648, dtype=torch.float64)), (2094, tensor(-0.0646, dtype=torch.float64)), (63, tensor(-0.0646, dtype=torch.float64)), (1726, tensor(-0.0646, dtype=torch.float64)), (403, tensor(-0.0646, dtype=torch.float64)), (269, tensor(-0.0645, dtype=torch.float64)), (1659, tensor(-0.0645, dtype=torch.float64)), (761, tensor(-0.0644, dtype=torch.float64)), (202, tensor(-0.0643, dtype=torch.float64)), (1509, tensor(-0.0643, dtype=torch.float64)), (1499, tensor(-0.0643, dtype=torch.float64)), (1381, tensor(-0.0642, dtype=torch.float64)), (694, tensor(-0.0641, dtype=torch.float64)), (1248, tensor(-0.0641, dtype=torch.float64)), (2147, tensor(-0.0641, dtype=torch.float64)), (1155, tensor(-0.0640, dtype=torch.float64)), (2420, tensor(-0.0638, dtype=torch.float64)), (543, tensor(-0.0638, dtype=torch.float64)), (1795, tensor(-0.0638, dtype=torch.float64)), (1598, tensor(-0.0637, dtype=torch.float64)), (2184, tensor(-0.0636, dtype=torch.float64)), (2142, tensor(-0.0635, dtype=torch.float64)), (1337, tensor(-0.0635, dtype=torch.float64)), (33, tensor(-0.0635, dtype=torch.float64)), (2406, tensor(-0.0634, dtype=torch.float64)), (236, tensor(-0.0633, dtype=torch.float64)), (2279, tensor(-0.0633, dtype=torch.float64)), (263, tensor(-0.0631, dtype=torch.float64)), (246, tensor(-0.0631, dtype=torch.float64)), (338, tensor(-0.0631, dtype=torch.float64)), (791, tensor(-0.0630, dtype=torch.float64)), (1756, tensor(-0.0630, dtype=torch.float64)), (407, tensor(-0.0630, dtype=torch.float64)), (352, tensor(-0.0629, dtype=torch.float64)), (1533, tensor(-0.0628, dtype=torch.float64)), (2245, tensor(-0.0625, dtype=torch.float64)), (1229, tensor(-0.0623, dtype=torch.float64)), (638, tensor(-0.0623, dtype=torch.float64)), (187, tensor(-0.0623, dtype=torch.float64)), (1422, tensor(-0.0622, dtype=torch.float64)), (2187, tensor(-0.0621, dtype=torch.float64)), (2102, tensor(-0.0621, dtype=torch.float64)), (728, tensor(-0.0621, dtype=torch.float64)), (2008, tensor(-0.0620, dtype=torch.float64)), (2407, tensor(-0.0619, dtype=torch.float64)), (1228, tensor(-0.0618, dtype=torch.float64)), (2396, tensor(-0.0618, dtype=torch.float64)), (969, tensor(-0.0617, dtype=torch.float64)), (677, tensor(-0.0616, dtype=torch.float64)), (1641, tensor(-0.0616, dtype=torch.float64)), (2217, tensor(-0.0615, dtype=torch.float64)), (28, tensor(-0.0615, dtype=torch.float64)), (1138, tensor(-0.0615, dtype=torch.float64)), (516, tensor(-0.0615, dtype=torch.float64)), (2214, tensor(-0.0615, dtype=torch.float64)), (306, tensor(-0.0612, dtype=torch.float64)), (107, tensor(-0.0612, dtype=torch.float64)), (1754, tensor(-0.0612, dtype=torch.float64)), (1061, tensor(-0.0610, dtype=torch.float64)), (1431, tensor(-0.0610, dtype=torch.float64)), (508, tensor(-0.0606, dtype=torch.float64)), (960, tensor(-0.0605, dtype=torch.float64)), (1151, tensor(-0.0601, dtype=torch.float64)), (664, tensor(-0.0601, dtype=torch.float64)), (1158, tensor(-0.0601, dtype=torch.float64)), (1803, tensor(-0.0601, dtype=torch.float64)), (875, tensor(-0.0600, dtype=torch.float64)), (853, tensor(-0.0599, dtype=torch.float64)), (1836, tensor(-0.0598, dtype=torch.float64)), (1112, tensor(-0.0598, dtype=torch.float64)), (780, tensor(-0.0597, dtype=torch.float64)), (755, tensor(-0.0596, dtype=torch.float64)), (2361, tensor(-0.0595, dtype=torch.float64)), (1291, tensor(-0.0595, dtype=torch.float64)), (1493, tensor(-0.0595, dtype=torch.float64)), (2009, tensor(-0.0595, dtype=torch.float64)), (52, tensor(-0.0594, dtype=torch.float64)), (1201, tensor(-0.0594, dtype=torch.float64)), (2097, tensor(-0.0593, dtype=torch.float64)), (1400, tensor(-0.0589, dtype=torch.float64)), (583, tensor(-0.0588, dtype=torch.float64)), (1532, tensor(-0.0585, dtype=torch.float64)), (1467, tensor(-0.0585, dtype=torch.float64)), (2275, tensor(-0.0584, dtype=torch.float64)), (2119, tensor(-0.0584, dtype=torch.float64)), (992, tensor(-0.0584, dtype=torch.float64)), (1308, tensor(-0.0582, dtype=torch.float64)), (1067, tensor(-0.0581, dtype=torch.float64)), (1310, tensor(-0.0581, dtype=torch.float64)), (94, tensor(-0.0579, dtype=torch.float64)), (1397, tensor(-0.0579, dtype=torch.float64)), (1939, tensor(-0.0579, dtype=torch.float64)), (180, tensor(-0.0579, dtype=torch.float64)), (660, tensor(-0.0578, dtype=torch.float64)), (2343, tensor(-0.0578, dtype=torch.float64)), (385, tensor(-0.0577, dtype=torch.float64)), (1827, tensor(-0.0576, dtype=torch.float64)), (1917, tensor(-0.0576, dtype=torch.float64)), (1823, tensor(-0.0576, dtype=torch.float64)), (370, tensor(-0.0576, dtype=torch.float64)), (603, tensor(-0.0576, dtype=torch.float64)), (1255, tensor(-0.0576, dtype=torch.float64)), (2471, tensor(-0.0575, dtype=torch.float64)), (1582, tensor(-0.0574, dtype=torch.float64)), (2238, tensor(-0.0574, dtype=torch.float64)), (1862, tensor(-0.0573, dtype=torch.float64)), (1955, tensor(-0.0573, dtype=torch.float64)), (364, tensor(-0.0572, dtype=torch.float64)), (616, tensor(-0.0572, dtype=torch.float64)), (1299, tensor(-0.0572, dtype=torch.float64)), (1048, tensor(-0.0571, dtype=torch.float64)), (1268, tensor(-0.0571, dtype=torch.float64)), (2171, tensor(-0.0570, dtype=torch.float64)), (552, tensor(-0.0568, dtype=torch.float64)), (886, tensor(-0.0568, dtype=torch.float64)), (690, tensor(-0.0567, dtype=torch.float64)), (1962, tensor(-0.0567, dtype=torch.float64)), (214, tensor(-0.0566, dtype=torch.float64)), (316, tensor(-0.0565, dtype=torch.float64)), (1892, tensor(-0.0565, dtype=torch.float64)), (1306, tensor(-0.0564, dtype=torch.float64)), (1428, tensor(-0.0563, dtype=torch.float64)), (1989, tensor(-0.0563, dtype=torch.float64)), (259, tensor(-0.0563, dtype=torch.float64)), (2229, tensor(-0.0563, dtype=torch.float64)), (2371, tensor(-0.0561, dtype=torch.float64)), (743, tensor(-0.0561, dtype=torch.float64)), (1557, tensor(-0.0560, dtype=torch.float64)), (952, tensor(-0.0560, dtype=torch.float64)), (1457, tensor(-0.0559, dtype=torch.float64)), (2021, tensor(-0.0559, dtype=torch.float64)), (711, tensor(-0.0559, dtype=torch.float64)), (1822, tensor(-0.0559, dtype=torch.float64)), (1736, tensor(-0.0559, dtype=torch.float64)), (1441, tensor(-0.0559, dtype=torch.float64)), (1180, tensor(-0.0556, dtype=torch.float64)), (726, tensor(-0.0555, dtype=torch.float64)), (2324, tensor(-0.0554, dtype=torch.float64)), (15, tensor(-0.0554, dtype=torch.float64)), (2241, tensor(-0.0554, dtype=torch.float64)), (1784, tensor(-0.0552, dtype=torch.float64)), (1524, tensor(-0.0550, dtype=torch.float64)), (405, tensor(-0.0550, dtype=torch.float64)), (384, tensor(-0.0549, dtype=torch.float64)), (823, tensor(-0.0549, dtype=torch.float64)), (1295, tensor(-0.0548, dtype=torch.float64)), (2246, tensor(-0.0547, dtype=torch.float64)), (573, tensor(-0.0547, dtype=torch.float64)), (1411, tensor(-0.0547, dtype=torch.float64)), (299, tensor(-0.0546, dtype=torch.float64)), (2046, tensor(-0.0546, dtype=torch.float64)), (661, tensor(-0.0546, dtype=torch.float64)), (1942, tensor(-0.0545, dtype=torch.float64)), (1032, tensor(-0.0543, dtype=torch.float64)), (2174, tensor(-0.0543, dtype=torch.float64)), (2199, tensor(-0.0543, dtype=torch.float64)), (1007, tensor(-0.0543, dtype=torch.float64)), (1121, tensor(-0.0543, dtype=torch.float64)), (328, tensor(-0.0543, dtype=torch.float64)), (123, tensor(-0.0542, dtype=torch.float64)), (1282, tensor(-0.0542, dtype=torch.float64)), (1896, tensor(-0.0542, dtype=torch.float64)), (696, tensor(-0.0542, dtype=torch.float64)), (1439, tensor(-0.0542, dtype=torch.float64)), (411, tensor(-0.0542, dtype=torch.float64)), (908, tensor(-0.0542, dtype=torch.float64)), (1694, tensor(-0.0541, dtype=torch.float64)), (2441, tensor(-0.0541, dtype=torch.float64)), (1437, tensor(-0.0541, dtype=torch.float64)), (1800, tensor(-0.0541, dtype=torch.float64)), (658, tensor(-0.0540, dtype=torch.float64)), (980, tensor(-0.0540, dtype=torch.float64)), (576, tensor(-0.0540, dtype=torch.float64)), (1443, tensor(-0.0540, dtype=torch.float64)), (550, tensor(-0.0539, dtype=torch.float64)), (1496, tensor(-0.0538, dtype=torch.float64)), (1392, tensor(-0.0538, dtype=torch.float64)), (1099, tensor(-0.0537, dtype=torch.float64)), (542, tensor(-0.0537, dtype=torch.float64)), (1915, tensor(-0.0536, dtype=torch.float64)), (355, tensor(-0.0535, dtype=torch.float64)), (462, tensor(-0.0535, dtype=torch.float64)), (2170, tensor(-0.0535, dtype=torch.float64)), (1168, tensor(-0.0535, dtype=torch.float64)), (2101, tensor(-0.0535, dtype=torch.float64)), (2370, tensor(-0.0533, dtype=torch.float64)), (1638, tensor(-0.0533, dtype=torch.float64)), (627, tensor(-0.0532, dtype=torch.float64)), (1966, tensor(-0.0532, dtype=torch.float64)), (2402, tensor(-0.0532, dtype=torch.float64)), (1781, tensor(-0.0531, dtype=torch.float64)), (130, tensor(-0.0531, dtype=torch.float64)), (76, tensor(-0.0530, dtype=torch.float64)), (110, tensor(-0.0530, dtype=torch.float64)), (1597, tensor(-0.0529, dtype=torch.float64)), (651, tensor(-0.0528, dtype=torch.float64)), (154, tensor(-0.0528, dtype=torch.float64)), (1050, tensor(-0.0528, dtype=torch.float64)), (12, tensor(-0.0527, dtype=torch.float64)), (1277, tensor(-0.0527, dtype=torch.float64)), (2448, tensor(-0.0526, dtype=torch.float64)), (624, tensor(-0.0525, dtype=torch.float64)), (112, tensor(-0.0525, dtype=torch.float64)), (97, tensor(-0.0524, dtype=torch.float64)), (113, tensor(-0.0522, dtype=torch.float64)), (1018, tensor(-0.0522, dtype=torch.float64)), (333, tensor(-0.0520, dtype=torch.float64)), (1542, tensor(-0.0520, dtype=torch.float64)), (2354, tensor(-0.0520, dtype=torch.float64)), (592, tensor(-0.0519, dtype=torch.float64)), (98, tensor(-0.0518, dtype=torch.float64)), (1704, tensor(-0.0518, dtype=torch.float64)), (523, tensor(-0.0517, dtype=torch.float64)), (1261, tensor(-0.0516, dtype=torch.float64)), (184, tensor(-0.0515, dtype=torch.float64)), (2425, tensor(-0.0514, dtype=torch.float64)), (1346, tensor(-0.0514, dtype=torch.float64)), (308, tensor(-0.0514, dtype=torch.float64)), (1631, tensor(-0.0513, dtype=torch.float64)), (699, tensor(-0.0511, dtype=torch.float64)), (525, tensor(-0.0510, dtype=torch.float64)), (343, tensor(-0.0509, dtype=torch.float64)), (1331, tensor(-0.0508, dtype=torch.float64)), (1339, tensor(-0.0508, dtype=torch.float64)), (1300, tensor(-0.0508, dtype=torch.float64)), (1264, tensor(-0.0508, dtype=torch.float64)), (1432, tensor(-0.0507, dtype=torch.float64)), (1210, tensor(-0.0507, dtype=torch.float64)), (1886, tensor(-0.0507, dtype=torch.float64)), (978, tensor(-0.0507, dtype=torch.float64)), (965, tensor(-0.0506, dtype=torch.float64)), (568, tensor(-0.0505, dtype=torch.float64)), (1759, tensor(-0.0505, dtype=torch.float64)), (1405, tensor(-0.0503, dtype=torch.float64)), (307, tensor(-0.0502, dtype=torch.float64)), (2256, tensor(-0.0502, dtype=torch.float64)), (1460, tensor(-0.0502, dtype=torch.float64)), (1205, tensor(-0.0501, dtype=torch.float64)), (1573, tensor(-0.0501, dtype=torch.float64)), (1501, tensor(-0.0500, dtype=torch.float64)), (378, tensor(-0.0500, dtype=torch.float64)), (721, tensor(-0.0499, dtype=torch.float64)), (749, tensor(-0.0498, dtype=torch.float64)), (2417, tensor(-0.0498, dtype=torch.float64)), (963, tensor(-0.0498, dtype=torch.float64)), (2159, tensor(-0.0498, dtype=torch.float64)), (292, tensor(-0.0498, dtype=torch.float64)), (947, tensor(-0.0497, dtype=torch.float64)), (921, tensor(-0.0497, dtype=torch.float64)), (920, tensor(-0.0497, dtype=torch.float64)), (878, tensor(-0.0497, dtype=torch.float64)), (1256, tensor(-0.0497, dtype=torch.float64)), (1259, tensor(-0.0497, dtype=torch.float64)), (2319, tensor(-0.0497, dtype=torch.float64)), (1592, tensor(-0.0495, dtype=torch.float64)), (2350, tensor(-0.0495, dtype=torch.float64)), (22, tensor(-0.0495, dtype=torch.float64)), (2030, tensor(-0.0494, dtype=torch.float64)), (1897, tensor(-0.0494, dtype=torch.float64)), (821, tensor(-0.0493, dtype=torch.float64)), (982, tensor(-0.0492, dtype=torch.float64)), (417, tensor(-0.0492, dtype=torch.float64)), (649, tensor(-0.0487, dtype=torch.float64)), (1516, tensor(-0.0487, dtype=torch.float64)), (143, tensor(-0.0486, dtype=torch.float64)), (2069, tensor(-0.0486, dtype=torch.float64)), (668, tensor(-0.0486, dtype=torch.float64)), (478, tensor(-0.0486, dtype=torch.float64)), (1881, tensor(-0.0486, dtype=torch.float64)), (1279, tensor(-0.0485, dtype=torch.float64)), (824, tensor(-0.0485, dtype=torch.float64)), (2242, tensor(-0.0484, dtype=torch.float64)), (442, tensor(-0.0483, dtype=torch.float64)), (1157, tensor(-0.0483, dtype=torch.float64)), (797, tensor(-0.0482, dtype=torch.float64)), (2326, tensor(-0.0482, dtype=torch.float64)), (966, tensor(-0.0481, dtype=torch.float64)), (1606, tensor(-0.0481, dtype=torch.float64)), (1376, tensor(-0.0480, dtype=torch.float64)), (1461, tensor(-0.0480, dtype=torch.float64)), (192, tensor(-0.0480, dtype=torch.float64)), (1725, tensor(-0.0478, dtype=torch.float64)), (391, tensor(-0.0478, dtype=torch.float64)), (5, tensor(-0.0478, dtype=torch.float64)), (587, tensor(-0.0477, dtype=torch.float64)), (860, tensor(-0.0477, dtype=torch.float64)), (1395, tensor(-0.0475, dtype=torch.float64)), (2040, tensor(-0.0474, dtype=torch.float64)), (274, tensor(-0.0474, dtype=torch.float64)), (1150, tensor(-0.0474, dtype=torch.float64)), (485, tensor(-0.0473, dtype=torch.float64)), (239, tensor(-0.0472, dtype=torch.float64)), (695, tensor(-0.0472, dtype=torch.float64)), (771, tensor(-0.0472, dtype=torch.float64)), (739, tensor(-0.0472, dtype=torch.float64)), (2261, tensor(-0.0472, dtype=torch.float64)), (68, tensor(-0.0471, dtype=torch.float64)), (1240, tensor(-0.0471, dtype=torch.float64)), (581, tensor(-0.0470, dtype=torch.float64)), (1102, tensor(-0.0470, dtype=torch.float64)), (1814, tensor(-0.0469, dtype=torch.float64)), (524, tensor(-0.0469, dtype=torch.float64)), (1409, tensor(-0.0469, dtype=torch.float64)), (262, tensor(-0.0469, dtype=torch.float64)), (2437, tensor(-0.0468, dtype=torch.float64)), (155, tensor(-0.0468, dtype=torch.float64)), (1548, tensor(-0.0467, dtype=torch.float64)), (850, tensor(-0.0467, dtype=torch.float64)), (1580, tensor(-0.0467, dtype=torch.float64)), (2228, tensor(-0.0467, dtype=torch.float64)), (864, tensor(-0.0467, dtype=torch.float64)), (1269, tensor(-0.0466, dtype=torch.float64)), (77, tensor(-0.0466, dtype=torch.float64)), (730, tensor(-0.0465, dtype=torch.float64)), (2272, tensor(-0.0465, dtype=torch.float64)), (1421, tensor(-0.0465, dtype=torch.float64)), (473, tensor(-0.0464, dtype=torch.float64)), (701, tensor(-0.0464, dtype=torch.float64)), (445, tensor(-0.0464, dtype=torch.float64)), (786, tensor(-0.0463, dtype=torch.float64)), (1077, tensor(-0.0463, dtype=torch.float64)), (1645, tensor(-0.0463, dtype=torch.float64)), (1166, tensor(-0.0462, dtype=torch.float64)), (1207, tensor(-0.0462, dtype=torch.float64)), (1373, tensor(-0.0461, dtype=torch.float64)), (1967, tensor(-0.0461, dtype=torch.float64)), (1123, tensor(-0.0460, dtype=torch.float64)), (1876, tensor(-0.0459, dtype=torch.float64)), (1022, tensor(-0.0458, dtype=torch.float64)), (1797, tensor(-0.0458, dtype=torch.float64)), (256, tensor(-0.0457, dtype=torch.float64)), (2442, tensor(-0.0457, dtype=torch.float64)), (732, tensor(-0.0457, dtype=torch.float64)), (1333, tensor(-0.0457, dtype=torch.float64)), (1318, tensor(-0.0457, dtype=torch.float64)), (1947, tensor(-0.0456, dtype=torch.float64)), (2055, tensor(-0.0456, dtype=torch.float64)), (183, tensor(-0.0455, dtype=torch.float64)), (741, tensor(-0.0455, dtype=torch.float64)), (1875, tensor(-0.0455, dtype=torch.float64)), (2089, tensor(-0.0455, dtype=torch.float64)), (1684, tensor(-0.0455, dtype=torch.float64)), (82, tensor(-0.0454, dtype=torch.float64)), (357, tensor(-0.0453, dtype=torch.float64)), (1945, tensor(-0.0452, dtype=torch.float64)), (167, tensor(-0.0452, dtype=torch.float64)), (977, tensor(-0.0451, dtype=torch.float64)), (2071, tensor(-0.0450, dtype=torch.float64)), (2004, tensor(-0.0450, dtype=torch.float64)), (474, tensor(-0.0450, dtype=torch.float64)), (1581, tensor(-0.0450, dtype=torch.float64)), (2449, tensor(-0.0450, dtype=torch.float64)), (1656, tensor(-0.0450, dtype=torch.float64)), (2274, tensor(-0.0449, dtype=torch.float64)), (2344, tensor(-0.0449, dtype=torch.float64)), (625, tensor(-0.0449, dtype=torch.float64)), (1639, tensor(-0.0448, dtype=torch.float64)), (1951, tensor(-0.0448, dtype=torch.float64)), (2157, tensor(-0.0447, dtype=torch.float64)), (335, tensor(-0.0446, dtype=torch.float64)), (255, tensor(-0.0446, dtype=torch.float64)), (1584, tensor(-0.0446, dtype=torch.float64)), (2334, tensor(-0.0443, dtype=torch.float64)), (1673, tensor(-0.0443, dtype=torch.float64)), (1775, tensor(-0.0443, dtype=torch.float64)), (882, tensor(-0.0443, dtype=torch.float64)), (1873, tensor(-0.0442, dtype=torch.float64)), (1698, tensor(-0.0442, dtype=torch.float64)), (1905, tensor(-0.0442, dtype=torch.float64)), (2364, tensor(-0.0441, dtype=torch.float64)), (611, tensor(-0.0441, dtype=torch.float64)), (2367, tensor(-0.0441, dtype=torch.float64)), (347, tensor(-0.0441, dtype=torch.float64)), (492, tensor(-0.0439, dtype=torch.float64)), (917, tensor(-0.0439, dtype=torch.float64)), (1356, tensor(-0.0439, dtype=torch.float64)), (2181, tensor(-0.0439, dtype=torch.float64)), (2047, tensor(-0.0439, dtype=torch.float64)), (957, tensor(-0.0438, dtype=torch.float64)), (448, tensor(-0.0437, dtype=torch.float64)), (149, tensor(-0.0437, dtype=torch.float64)), (2078, tensor(-0.0437, dtype=torch.float64)), (1863, tensor(-0.0437, dtype=torch.float64)), (925, tensor(-0.0437, dtype=torch.float64)), (105, tensor(-0.0436, dtype=torch.float64)), (1182, tensor(-0.0436, dtype=torch.float64)), (1971, tensor(-0.0435, dtype=torch.float64)), (365, tensor(-0.0435, dtype=torch.float64)), (291, tensor(-0.0434, dtype=torch.float64)), (2107, tensor(-0.0434, dtype=torch.float64)), (526, tensor(-0.0433, dtype=torch.float64)), (2385, tensor(-0.0433, dtype=torch.float64)), (302, tensor(-0.0432, dtype=torch.float64)), (686, tensor(-0.0431, dtype=torch.float64)), (258, tensor(-0.0431, dtype=torch.float64)), (237, tensor(-0.0431, dtype=torch.float64)), (2064, tensor(-0.0430, dtype=torch.float64)), (1145, tensor(-0.0429, dtype=torch.float64)), (428, tensor(-0.0429, dtype=torch.float64)), (350, tensor(-0.0429, dtype=torch.float64)), (922, tensor(-0.0428, dtype=torch.float64)), (56, tensor(-0.0428, dtype=torch.float64)), (869, tensor(-0.0428, dtype=torch.float64)), (1689, tensor(-0.0428, dtype=torch.float64)), (2127, tensor(-0.0428, dtype=torch.float64)), (31, tensor(-0.0428, dtype=torch.float64)), (1206, tensor(-0.0427, dtype=torch.float64)), (1507, tensor(-0.0427, dtype=torch.float64)), (1957, tensor(-0.0427, dtype=torch.float64)), (1153, tensor(-0.0426, dtype=torch.float64)), (2118, tensor(-0.0425, dtype=torch.float64)), (871, tensor(-0.0425, dtype=torch.float64)), (1833, tensor(-0.0425, dtype=torch.float64)), (1469, tensor(-0.0424, dtype=torch.float64)), (2328, tensor(-0.0423, dtype=torch.float64)), (872, tensor(-0.0423, dtype=torch.float64)), (858, tensor(-0.0423, dtype=torch.float64)), (1970, tensor(-0.0421, dtype=torch.float64)), (1724, tensor(-0.0421, dtype=torch.float64)), (1744, tensor(-0.0420, dtype=torch.float64)), (1658, tensor(-0.0420, dtype=torch.float64)), (1503, tensor(-0.0419, dtype=torch.float64)), (2162, tensor(-0.0419, dtype=torch.float64)), (1551, tensor(-0.0418, dtype=torch.float64)), (429, tensor(-0.0418, dtype=torch.float64)), (1617, tensor(-0.0418, dtype=torch.float64)), (1614, tensor(-0.0418, dtype=torch.float64)), (421, tensor(-0.0417, dtype=torch.float64)), (772, tensor(-0.0416, dtype=torch.float64)), (404, tensor(-0.0415, dtype=torch.float64)), (970, tensor(-0.0414, dtype=torch.float64)), (78, tensor(-0.0414, dtype=torch.float64)), (2113, tensor(-0.0414, dtype=torch.float64)), (580, tensor(-0.0414, dtype=torch.float64)), (382, tensor(-0.0414, dtype=torch.float64)), (2123, tensor(-0.0413, dtype=torch.float64)), (2360, tensor(-0.0413, dtype=torch.float64)), (275, tensor(-0.0413, dtype=torch.float64)), (367, tensor(-0.0412, dtype=torch.float64)), (2109, tensor(-0.0412, dtype=torch.float64)), (813, tensor(-0.0411, dtype=torch.float64)), (2327, tensor(-0.0411, dtype=torch.float64)), (2073, tensor(-0.0410, dtype=torch.float64)), (1768, tensor(-0.0410, dtype=torch.float64)), (1033, tensor(-0.0410, dtype=torch.float64)), (1097, tensor(-0.0410, dtype=torch.float64)), (2166, tensor(-0.0409, dtype=torch.float64)), (1212, tensor(-0.0409, dtype=torch.float64)), (1484, tensor(-0.0409, dtype=torch.float64)), (1547, tensor(-0.0407, dtype=torch.float64)), (1023, tensor(-0.0407, dtype=torch.float64)), (1278, tensor(-0.0407, dtype=torch.float64)), (21, tensor(-0.0407, dtype=torch.float64)), (1054, tensor(-0.0407, dtype=torch.float64)), (93, tensor(-0.0407, dtype=torch.float64)), (806, tensor(-0.0407, dtype=torch.float64)), (1267, tensor(-0.0406, dtype=torch.float64)), (905, tensor(-0.0405, dtype=torch.float64)), (1020, tensor(-0.0405, dtype=torch.float64)), (376, tensor(-0.0405, dtype=torch.float64)), (2211, tensor(-0.0404, dtype=torch.float64)), (964, tensor(-0.0404, dtype=torch.float64)), (441, tensor(-0.0404, dtype=torch.float64)), (2061, tensor(-0.0404, dtype=torch.float64)), (133, tensor(-0.0404, dtype=torch.float64)), (2233, tensor(-0.0403, dtype=torch.float64)), (521, tensor(-0.0403, dtype=torch.float64)), (2104, tensor(-0.0402, dtype=torch.float64)), (683, tensor(-0.0401, dtype=torch.float64)), (197, tensor(-0.0401, dtype=torch.float64)), (1393, tensor(-0.0401, dtype=torch.float64)), (2201, tensor(-0.0401, dtype=torch.float64)), (1039, tensor(-0.0401, dtype=torch.float64)), (310, tensor(-0.0401, dtype=torch.float64)), (1590, tensor(-0.0400, dtype=torch.float64)), (171, tensor(-0.0400, dtype=torch.float64)), (399, tensor(-0.0400, dtype=torch.float64)), (626, tensor(-0.0399, dtype=torch.float64)), (248, tensor(-0.0399, dtype=torch.float64)), (1447, tensor(-0.0399, dtype=torch.float64)), (1906, tensor(-0.0398, dtype=torch.float64)), (971, tensor(-0.0397, dtype=torch.float64)), (1963, tensor(-0.0397, dtype=torch.float64)), (1429, tensor(-0.0397, dtype=torch.float64)), (1114, tensor(-0.0397, dtype=torch.float64)), (507, tensor(-0.0397, dtype=torch.float64)), (228, tensor(-0.0397, dtype=torch.float64)), (1851, tensor(-0.0397, dtype=torch.float64)), (1294, tensor(-0.0396, dtype=torch.float64)), (1270, tensor(-0.0395, dtype=torch.float64)), (1703, tensor(-0.0395, dtype=torch.float64)), (2002, tensor(-0.0395, dtype=torch.float64)), (2440, tensor(-0.0393, dtype=torch.float64)), (764, tensor(-0.0392, dtype=torch.float64)), (1662, tensor(-0.0392, dtype=torch.float64)), (1504, tensor(-0.0392, dtype=torch.float64)), (1319, tensor(-0.0392, dtype=torch.float64)), (72, tensor(-0.0391, dtype=torch.float64)), (271, tensor(-0.0391, dtype=torch.float64)), (919, tensor(-0.0391, dtype=torch.float64)), (1849, tensor(-0.0391, dtype=torch.float64)), (1328, tensor(-0.0389, dtype=torch.float64)), (126, tensor(-0.0388, dtype=torch.float64)), (717, tensor(-0.0388, dtype=torch.float64)), (1505, tensor(-0.0388, dtype=torch.float64)), (2470, tensor(-0.0388, dtype=torch.float64)), (2070, tensor(-0.0387, dtype=torch.float64)), (1448, tensor(-0.0386, dtype=torch.float64)), (820, tensor(-0.0386, dtype=torch.float64)), (1011, tensor(-0.0385, dtype=torch.float64)), (1943, tensor(-0.0385, dtype=torch.float64)), (1707, tensor(-0.0385, dtype=torch.float64)), (2366, tensor(-0.0384, dtype=torch.float64)), (1723, tensor(-0.0384, dtype=torch.float64)), (722, tensor(-0.0384, dtype=torch.float64)), (555, tensor(-0.0383, dtype=torch.float64)), (1994, tensor(-0.0383, dtype=torch.float64)), (1382, tensor(-0.0382, dtype=torch.float64)), (1049, tensor(-0.0382, dtype=torch.float64)), (84, tensor(-0.0382, dtype=torch.float64)), (2231, tensor(-0.0380, dtype=torch.float64)), (1538, tensor(-0.0380, dtype=torch.float64)), (2280, tensor(-0.0379, dtype=torch.float64)), (1671, tensor(-0.0379, dtype=torch.float64)), (688, tensor(-0.0378, dtype=torch.float64)), (723, tensor(-0.0378, dtype=torch.float64)), (414, tensor(-0.0377, dtype=torch.float64)), (1254, tensor(-0.0377, dtype=torch.float64)), (438, tensor(-0.0377, dtype=torch.float64)), (597, tensor(-0.0377, dtype=torch.float64)), (1710, tensor(-0.0377, dtype=torch.float64)), (1003, tensor(-0.0377, dtype=torch.float64)), (1616, tensor(-0.0376, dtype=torch.float64)), (1764, tensor(-0.0376, dtype=torch.float64)), (1425, tensor(-0.0375, dtype=torch.float64)), (2281, tensor(-0.0375, dtype=torch.float64)), (1922, tensor(-0.0375, dtype=torch.float64)), (159, tensor(-0.0375, dtype=torch.float64)), (1047, tensor(-0.0375, dtype=torch.float64)), (1854, tensor(-0.0375, dtype=torch.float64)), (1066, tensor(-0.0375, dtype=torch.float64)), (74, tensor(-0.0373, dtype=torch.float64)), (2398, tensor(-0.0373, dtype=torch.float64)), (2410, tensor(-0.0373, dtype=torch.float64)), (599, tensor(-0.0372, dtype=torch.float64)), (1787, tensor(-0.0372, dtype=torch.float64)), (2400, tensor(-0.0371, dtype=torch.float64)), (221, tensor(-0.0371, dtype=torch.float64)), (8, tensor(-0.0370, dtype=torch.float64)), (769, tensor(-0.0369, dtype=torch.float64)), (2349, tensor(-0.0368, dtype=torch.float64)), (162, tensor(-0.0367, dtype=torch.float64)), (1081, tensor(-0.0367, dtype=torch.float64)), (822, tensor(-0.0367, dtype=torch.float64)), (531, tensor(-0.0366, dtype=torch.float64)), (1417, tensor(-0.0366, dtype=torch.float64)), (111, tensor(-0.0365, dtype=torch.float64)), (2066, tensor(-0.0365, dtype=torch.float64)), (1036, tensor(-0.0365, dtype=torch.float64)), (440, tensor(-0.0364, dtype=torch.float64)), (1672, tensor(-0.0364, dtype=torch.float64)), (819, tensor(-0.0364, dtype=torch.float64)), (720, tensor(-0.0364, dtype=torch.float64)), (295, tensor(-0.0364, dtype=torch.float64)), (2158, tensor(-0.0363, dtype=torch.float64)), (336, tensor(-0.0363, dtype=torch.float64)), (2323, tensor(-0.0361, dtype=torch.float64)), (535, tensor(-0.0361, dtype=torch.float64)), (691, tensor(-0.0361, dtype=torch.float64)), (1513, tensor(-0.0360, dtype=torch.float64)), (179, tensor(-0.0359, dtype=torch.float64)), (1883, tensor(-0.0358, dtype=torch.float64)), (1446, tensor(-0.0358, dtype=torch.float64)), (1164, tensor(-0.0357, dtype=torch.float64)), (1828, tensor(-0.0357, dtype=torch.float64)), (1132, tensor(-0.0356, dtype=torch.float64)), (1263, tensor(-0.0356, dtype=torch.float64)), (1956, tensor(-0.0356, dtype=torch.float64)), (1014, tensor(-0.0355, dtype=torch.float64)), (2377, tensor(-0.0354, dtype=torch.float64)), (744, tensor(-0.0353, dtype=torch.float64)), (2380, tensor(-0.0351, dtype=torch.float64)), (1004, tensor(-0.0351, dtype=torch.float64)), (2240, tensor(-0.0350, dtype=torch.float64)), (2136, tensor(-0.0349, dtype=torch.float64)), (2444, tensor(-0.0349, dtype=torch.float64)), (511, tensor(-0.0349, dtype=torch.float64)), (1596, tensor(-0.0348, dtype=torch.float64)), (466, tensor(-0.0348, dtype=torch.float64)), (327, tensor(-0.0348, dtype=torch.float64)), (1944, tensor(-0.0347, dtype=torch.float64)), (458, tensor(-0.0347, dtype=torch.float64)), (398, tensor(-0.0346, dtype=torch.float64)), (961, tensor(-0.0346, dtype=torch.float64)), (896, tensor(-0.0346, dtype=torch.float64)), (1950, tensor(-0.0345, dtype=torch.float64)), (1685, tensor(-0.0345, dtype=torch.float64)), (1084, tensor(-0.0345, dtype=torch.float64)), (238, tensor(-0.0345, dtype=torch.float64)), (1761, tensor(-0.0345, dtype=torch.float64)), (1839, tensor(-0.0344, dtype=torch.float64)), (1131, tensor(-0.0344, dtype=torch.float64)), (2105, tensor(-0.0344, dtype=torch.float64)), (1593, tensor(-0.0344, dtype=torch.float64)), (341, tensor(-0.0343, dtype=torch.float64)), (2161, tensor(-0.0343, dtype=torch.float64)), (257, tensor(-0.0343, dtype=torch.float64)), (682, tensor(-0.0341, dtype=torch.float64)), (2369, tensor(-0.0340, dtype=torch.float64)), (2148, tensor(-0.0340, dtype=torch.float64)), (837, tensor(-0.0339, dtype=torch.float64)), (1559, tensor(-0.0339, dtype=torch.float64)), (1094, tensor(-0.0339, dtype=torch.float64)), (1190, tensor(-0.0339, dtype=torch.float64)), (1571, tensor(-0.0338, dtype=torch.float64)), (2218, tensor(-0.0338, dtype=torch.float64)), (361, tensor(-0.0337, dtype=torch.float64)), (490, tensor(-0.0336, dtype=torch.float64)), (227, tensor(-0.0336, dtype=torch.float64)), (1663, tensor(-0.0336, dtype=torch.float64)), (1399, tensor(-0.0336, dtype=torch.float64)), (608, tensor(-0.0336, dtype=torch.float64)), (170, tensor(-0.0336, dtype=torch.float64)), (166, tensor(-0.0335, dtype=torch.float64)), (2399, tensor(-0.0335, dtype=torch.float64)), (2234, tensor(-0.0335, dtype=torch.float64)), (835, tensor(-0.0333, dtype=torch.float64)), (1660, tensor(-0.0333, dtype=torch.float64)), (2120, tensor(-0.0332, dtype=torch.float64)), (265, tensor(-0.0332, dtype=torch.float64)), (1059, tensor(-0.0332, dtype=torch.float64)), (1074, tensor(-0.0332, dtype=torch.float64)), (2378, tensor(-0.0331, dtype=torch.float64)), (1576, tensor(-0.0331, dtype=torch.float64)), (1208, tensor(-0.0330, dtype=torch.float64)), (282, tensor(-0.0329, dtype=torch.float64)), (1433, tensor(-0.0329, dtype=torch.float64)), (353, tensor(-0.0328, dtype=torch.float64)), (223, tensor(-0.0328, dtype=torch.float64)), (359, tensor(-0.0327, dtype=torch.float64)), (96, tensor(-0.0327, dtype=torch.float64)), (1068, tensor(-0.0327, dtype=torch.float64)), (1958, tensor(-0.0327, dtype=torch.float64)), (2307, tensor(-0.0327, dtype=torch.float64)), (48, tensor(-0.0326, dtype=torch.float64)), (190, tensor(-0.0326, dtype=torch.float64)), (132, tensor(-0.0326, dtype=torch.float64)), (1, tensor(-0.0325, dtype=torch.float64)), (23, tensor(-0.0325, dtype=torch.float64)), (901, tensor(-0.0325, dtype=torch.float64)), (674, tensor(-0.0325, dtype=torch.float64)), (707, tensor(-0.0324, dtype=torch.float64)), (2019, tensor(-0.0324, dtype=torch.float64)), (559, tensor(-0.0324, dtype=torch.float64)), (1313, tensor(-0.0324, dtype=torch.float64)), (773, tensor(-0.0323, dtype=torch.float64)), (1321, tensor(-0.0323, dtype=torch.float64)), (2265, tensor(-0.0323, dtype=torch.float64)), (439, tensor(-0.0323, dtype=torch.float64)), (17, tensor(-0.0323, dtype=torch.float64)), (2152, tensor(-0.0323, dtype=torch.float64)), (181, tensor(-0.0322, dtype=torch.float64)), (1162, tensor(-0.0322, dtype=torch.float64)), (1338, tensor(-0.0322, dtype=torch.float64)), (1706, tensor(-0.0321, dtype=torch.float64)), (968, tensor(-0.0321, dtype=torch.float64)), (570, tensor(-0.0321, dtype=torch.float64)), (2083, tensor(-0.0320, dtype=torch.float64)), (233, tensor(-0.0319, dtype=torch.float64)), (323, tensor(-0.0317, dtype=torch.float64)), (1812, tensor(-0.0317, dtype=torch.float64)), (1271, tensor(-0.0317, dtype=torch.float64)), (88, tensor(-0.0317, dtype=torch.float64)), (1834, tensor(-0.0317, dtype=torch.float64)), (628, tensor(-0.0316, dtype=torch.float64)), (1650, tensor(-0.0316, dtype=torch.float64)), (59, tensor(-0.0316, dtype=torch.float64)), (90, tensor(-0.0316, dtype=torch.float64)), (1515, tensor(-0.0316, dtype=torch.float64)), (1782, tensor(-0.0316, dtype=torch.float64)), (314, tensor(-0.0316, dtype=torch.float64)), (331, tensor(-0.0315, dtype=torch.float64)), (1518, tensor(-0.0315, dtype=torch.float64)), (1378, tensor(-0.0314, dtype=torch.float64)), (198, tensor(-0.0313, dtype=torch.float64)), (2099, tensor(-0.0312, dtype=torch.float64)), (1464, tensor(-0.0312, dtype=torch.float64)), (1829, tensor(-0.0312, dtype=torch.float64)), (1454, tensor(-0.0312, dtype=torch.float64)), (1811, tensor(-0.0312, dtype=torch.float64)), (842, tensor(-0.0312, dtype=torch.float64)), (309, tensor(-0.0312, dtype=torch.float64)), (956, tensor(-0.0311, dtype=torch.float64)), (79, tensor(-0.0311, dtype=torch.float64)), (2032, tensor(-0.0311, dtype=torch.float64)), (656, tensor(-0.0311, dtype=torch.float64)), (2000, tensor(-0.0310, dtype=torch.float64)), (2453, tensor(-0.0310, dtype=torch.float64)), (1170, tensor(-0.0310, dtype=torch.float64)), (2379, tensor(-0.0309, dtype=torch.float64)), (932, tensor(-0.0308, dtype=torch.float64)), (612, tensor(-0.0308, dtype=torch.float64)), (967, tensor(-0.0308, dtype=torch.float64)), (2053, tensor(-0.0308, dtype=torch.float64)), (1735, tensor(-0.0307, dtype=torch.float64)), (798, tensor(-0.0307, dtype=torch.float64)), (1029, tensor(-0.0307, dtype=torch.float64)), (692, tensor(-0.0307, dtype=torch.float64)), (1927, tensor(-0.0306, dtype=torch.float64)), (500, tensor(-0.0306, dtype=torch.float64)), (321, tensor(-0.0305, dtype=torch.float64)), (1427, tensor(-0.0305, dtype=torch.float64)), (207, tensor(-0.0305, dtype=torch.float64)), (1914, tensor(-0.0305, dtype=torch.float64)), (1101, tensor(-0.0304, dtype=torch.float64)), (1221, tensor(-0.0304, dtype=torch.float64)), (1910, tensor(-0.0304, dtype=torch.float64)), (188, tensor(-0.0303, dtype=torch.float64)), (1591, tensor(-0.0303, dtype=torch.float64)), (2303, tensor(-0.0303, dtype=torch.float64)), (1899, tensor(-0.0302, dtype=torch.float64)), (836, tensor(-0.0302, dtype=torch.float64)), (1416, tensor(-0.0301, dtype=torch.float64)), (655, tensor(-0.0301, dtype=torch.float64)), (2110, tensor(-0.0300, dtype=torch.float64)), (1163, tensor(-0.0300, dtype=torch.float64)), (1489, tensor(-0.0300, dtype=torch.float64)), (2375, tensor(-0.0300, dtype=torch.float64)), (1449, tensor(-0.0300, dtype=torch.float64)), (1042, tensor(-0.0300, dtype=torch.float64)), (1523, tensor(-0.0299, dtype=torch.float64)), (1757, tensor(-0.0299, dtype=torch.float64)), (828, tensor(-0.0299, dtype=torch.float64)), (2395, tensor(-0.0299, dtype=torch.float64)), (2414, tensor(-0.0298, dtype=torch.float64)), (1435, tensor(-0.0298, dtype=torch.float64)), (2310, tensor(-0.0297, dtype=torch.float64)), (747, tensor(-0.0297, dtype=torch.float64)), (1265, tensor(-0.0297, dtype=torch.float64)), (1361, tensor(-0.0297, dtype=torch.float64)), (157, tensor(-0.0297, dtype=torch.float64)), (972, tensor(-0.0297, dtype=torch.float64)), (463, tensor(-0.0296, dtype=torch.float64)), (2173, tensor(-0.0296, dtype=torch.float64)), (1453, tensor(-0.0296, dtype=torch.float64)), (2237, tensor(-0.0296, dtype=torch.float64)), (348, tensor(-0.0296, dtype=torch.float64)), (2010, tensor(-0.0295, dtype=torch.float64)), (27, tensor(-0.0295, dtype=torch.float64)), (1109, tensor(-0.0294, dtype=torch.float64)), (2426, tensor(-0.0294, dtype=torch.float64)), (1919, tensor(-0.0294, dtype=torch.float64)), (1311, tensor(-0.0294, dtype=torch.float64)), (313, tensor(-0.0293, dtype=torch.float64)), (2387, tensor(-0.0292, dtype=torch.float64)), (1717, tensor(-0.0292, dtype=torch.float64)), (533, tensor(-0.0292, dtype=torch.float64)), (799, tensor(-0.0292, dtype=torch.float64)), (2013, tensor(-0.0292, dtype=torch.float64)), (1810, tensor(-0.0291, dtype=torch.float64)), (1786, tensor(-0.0290, dtype=torch.float64)), (37, tensor(-0.0290, dtype=torch.float64)), (2049, tensor(-0.0288, dtype=torch.float64)), (1999, tensor(-0.0288, dtype=torch.float64)), (1721, tensor(-0.0287, dtype=torch.float64)), (866, tensor(-0.0286, dtype=torch.float64)), (1600, tensor(-0.0286, dtype=torch.float64)), (681, tensor(-0.0286, dtype=torch.float64)), (654, tensor(-0.0286, dtype=torch.float64)), (1089, tensor(-0.0286, dtype=torch.float64)), (1069, tensor(-0.0286, dtype=torch.float64)), (413, tensor(-0.0286, dtype=torch.float64)), (1646, tensor(-0.0285, dtype=torch.float64)), (1686, tensor(-0.0285, dtype=torch.float64)), (2065, tensor(-0.0285, dtype=torch.float64)), (268, tensor(-0.0285, dtype=torch.float64)), (1961, tensor(-0.0285, dtype=torch.float64)), (1135, tensor(-0.0284, dtype=torch.float64)), (2189, tensor(-0.0284, dtype=torch.float64)), (2208, tensor(-0.0284, dtype=torch.float64)), (165, tensor(-0.0283, dtype=torch.float64)), (729, tensor(-0.0283, dtype=torch.float64)), (1488, tensor(-0.0282, dtype=torch.float64)), (373, tensor(-0.0282, dtype=torch.float64)), (1451, tensor(-0.0282, dtype=torch.float64)), (1565, tensor(-0.0281, dtype=torch.float64)), (1510, tensor(-0.0281, dtype=torch.float64)), (1242, tensor(-0.0281, dtype=torch.float64)), (1195, tensor(-0.0280, dtype=torch.float64)), (953, tensor(-0.0280, dtype=torch.float64)), (2176, tensor(-0.0280, dtype=torch.float64)), (561, tensor(-0.0280, dtype=torch.float64)), (1861, tensor(-0.0280, dtype=torch.float64)), (2363, tensor(-0.0280, dtype=torch.float64)), (330, tensor(-0.0280, dtype=torch.float64)), (1384, tensor(-0.0280, dtype=torch.float64)), (2412, tensor(-0.0279, dtype=torch.float64)), (1280, tensor(-0.0279, dtype=torch.float64)), (1796, tensor(-0.0278, dtype=torch.float64)), (1230, tensor(-0.0277, dtype=torch.float64)), (2088, tensor(-0.0277, dtype=torch.float64)), (1681, tensor(-0.0277, dtype=torch.float64)), (890, tensor(-0.0276, dtype=torch.float64)), (477, tensor(-0.0276, dtype=torch.float64)), (371, tensor(-0.0276, dtype=torch.float64)), (1550, tensor(-0.0275, dtype=torch.float64)), (1785, tensor(-0.0275, dtype=torch.float64)), (955, tensor(-0.0275, dtype=torch.float64)), (2373, tensor(-0.0274, dtype=torch.float64)), (687, tensor(-0.0274, dtype=torch.float64)), (704, tensor(-0.0273, dtype=torch.float64)), (356, tensor(-0.0273, dtype=torch.float64)), (2132, tensor(-0.0273, dtype=torch.float64)), (1363, tensor(-0.0272, dtype=torch.float64)), (1185, tensor(-0.0272, dtype=torch.float64)), (713, tensor(-0.0271, dtype=torch.float64)), (737, tensor(-0.0271, dtype=torch.float64)), (1369, tensor(-0.0271, dtype=torch.float64)), (1156, tensor(-0.0271, dtype=torch.float64)), (288, tensor(-0.0270, dtype=torch.float64)), (979, tensor(-0.0270, dtype=torch.float64)), (434, tensor(-0.0270, dtype=torch.float64)), (2465, tensor(-0.0270, dtype=torch.float64)), (2212, tensor(-0.0270, dtype=torch.float64)), (208, tensor(-0.0269, dtype=torch.float64)), (1044, tensor(-0.0269, dtype=torch.float64)), (1872, tensor(-0.0269, dtype=torch.float64)), (10, tensor(-0.0269, dtype=torch.float64)), (1843, tensor(-0.0269, dtype=torch.float64)), (593, tensor(-0.0268, dtype=torch.float64)), (848, tensor(-0.0268, dtype=torch.float64)), (2182, tensor(-0.0268, dtype=torch.float64)), (997, tensor(-0.0268, dtype=torch.float64)), (949, tensor(-0.0267, dtype=torch.float64)), (1837, tensor(-0.0267, dtype=torch.float64)), (598, tensor(-0.0267, dtype=torch.float64)), (206, tensor(-0.0266, dtype=torch.float64)), (204, tensor(-0.0265, dtype=torch.float64)), (7, tensor(-0.0265, dtype=torch.float64)), (2220, tensor(-0.0265, dtype=torch.float64)), (178, tensor(-0.0265, dtype=torch.float64)), (2391, tensor(-0.0265, dtype=torch.float64)), (2169, tensor(-0.0263, dtype=torch.float64)), (1737, tensor(-0.0263, dtype=torch.float64)), (1738, tensor(-0.0263, dtype=torch.float64)), (1997, tensor(-0.0263, dtype=torch.float64)), (943, tensor(-0.0263, dtype=torch.float64)), (456, tensor(-0.0263, dtype=torch.float64)), (1482, tensor(-0.0262, dtype=torch.float64)), (2469, tensor(-0.0262, dtype=torch.float64)), (410, tensor(-0.0262, dtype=torch.float64)), (185, tensor(-0.0261, dtype=torch.float64)), (1817, tensor(-0.0261, dtype=torch.float64)), (1159, tensor(-0.0261, dtype=torch.float64)), (790, tensor(-0.0260, dtype=torch.float64)), (549, tensor(-0.0260, dtype=torch.float64)), (975, tensor(-0.0260, dtype=torch.float64)), (1502, tensor(-0.0260, dtype=torch.float64)), (2190, tensor(-0.0260, dtype=torch.float64)), (1987, tensor(-0.0260, dtype=torch.float64)), (1372, tensor(-0.0260, dtype=torch.float64)), (471, tensor(-0.0260, dtype=torch.float64)), (396, tensor(-0.0258, dtype=torch.float64)), (1692, tensor(-0.0258, dtype=torch.float64)), (1665, tensor(-0.0258, dtype=torch.float64)), (1605, tensor(-0.0258, dtype=torch.float64)), (652, tensor(-0.0258, dtype=torch.float64)), (758, tensor(-0.0258, dtype=torch.float64)), (808, tensor(-0.0257, dtype=torch.float64)), (47, tensor(-0.0257, dtype=torch.float64)), (648, tensor(-0.0257, dtype=torch.float64)), (1583, tensor(-0.0257, dtype=torch.float64)), (2351, tensor(-0.0256, dtype=torch.float64)), (129, tensor(-0.0255, dtype=torch.float64)), (1286, tensor(-0.0255, dtype=torch.float64)), (2095, tensor(-0.0255, dtype=torch.float64)), (1120, tensor(-0.0255, dtype=torch.float64)), (515, tensor(-0.0255, dtype=torch.float64)), (1722, tensor(-0.0255, dtype=torch.float64)), (1107, tensor(-0.0254, dtype=torch.float64)), (225, tensor(-0.0254, dtype=torch.float64)), (548, tensor(-0.0253, dtype=torch.float64)), (294, tensor(-0.0253, dtype=torch.float64)), (1758, tensor(-0.0252, dtype=torch.float64)), (433, tensor(-0.0251, dtype=torch.float64)), (1005, tensor(-0.0251, dtype=torch.float64)), (859, tensor(-0.0251, dtype=torch.float64)), (2273, tensor(-0.0250, dtype=torch.float64)), (1586, tensor(-0.0250, dtype=torch.float64)), (1866, tensor(-0.0250, dtype=torch.float64)), (2374, tensor(-0.0250, dtype=torch.float64)), (1217, tensor(-0.0250, dtype=torch.float64)), (839, tensor(-0.0249, dtype=torch.float64)), (596, tensor(-0.0249, dtype=torch.float64)), (1693, tensor(-0.0249, dtype=torch.float64)), (2271, tensor(-0.0248, dtype=torch.float64)), (647, tensor(-0.0248, dtype=torch.float64)), (1865, tensor(-0.0248, dtype=torch.float64)), (519, tensor(-0.0248, dtype=torch.float64)), (452, tensor(-0.0247, dtype=torch.float64)), (2081, tensor(-0.0247, dtype=torch.float64)), (1574, tensor(-0.0247, dtype=torch.float64)), (1103, tensor(-0.0247, dtype=torch.float64)), (1305, tensor(-0.0247, dtype=torch.float64)), (2313, tensor(-0.0246, dtype=torch.float64)), (424, tensor(-0.0246, dtype=torch.float64)), (1804, tensor(-0.0246, dtype=torch.float64)), (487, tensor(-0.0246, dtype=torch.float64)), (935, tensor(-0.0245, dtype=torch.float64)), (1760, tensor(-0.0245, dtype=torch.float64)), (986, tensor(-0.0244, dtype=torch.float64)), (584, tensor(-0.0244, dtype=torch.float64)), (1558, tensor(-0.0244, dtype=torch.float64)), (2154, tensor(-0.0243, dtype=torch.float64)), (615, tensor(-0.0242, dtype=torch.float64)), (220, tensor(-0.0242, dtype=torch.float64)), (1058, tensor(-0.0242, dtype=torch.float64)), (454, tensor(-0.0241, dtype=torch.float64)), (1653, tensor(-0.0240, dtype=torch.float64)), (20, tensor(-0.0240, dtype=torch.float64)), (588, tensor(-0.0240, dtype=torch.float64)), (483, tensor(-0.0239, dtype=torch.float64)), (617, tensor(-0.0239, dtype=torch.float64)), (423, tensor(-0.0238, dtype=torch.float64)), (746, tensor(-0.0238, dtype=torch.float64)), (2368, tensor(-0.0238, dtype=torch.float64)), (724, tensor(-0.0238, dtype=torch.float64)), (830, tensor(-0.0238, dtype=torch.float64)), (2112, tensor(-0.0237, dtype=torch.float64)), (1037, tensor(-0.0237, dtype=torch.float64)), (665, tensor(-0.0237, dtype=torch.float64)), (1413, tensor(-0.0237, dtype=torch.float64)), (2210, tensor(-0.0237, dtype=torch.float64)), (272, tensor(-0.0236, dtype=torch.float64)), (950, tensor(-0.0236, dtype=torch.float64)), (1236, tensor(-0.0236, dtype=torch.float64)), (1569, tensor(-0.0236, dtype=torch.float64)), (1604, tensor(-0.0235, dtype=torch.float64)), (1869, tensor(-0.0235, dtype=torch.float64)), (1568, tensor(-0.0235, dtype=torch.float64)), (1644, tensor(-0.0234, dtype=torch.float64)), (2108, tensor(-0.0234, dtype=torch.float64)), (567, tensor(-0.0233, dtype=torch.float64)), (1008, tensor(-0.0233, dtype=torch.float64)), (852, tensor(-0.0232, dtype=torch.float64)), (2232, tensor(-0.0232, dtype=torch.float64)), (1860, tensor(-0.0232, dtype=torch.float64)), (426, tensor(-0.0232, dtype=torch.float64)), (1520, tensor(-0.0231, dtype=torch.float64)), (380, tensor(-0.0230, dtype=torch.float64)), (1666, tensor(-0.0230, dtype=torch.float64)), (2357, tensor(-0.0230, dtype=torch.float64)), (2285, tensor(-0.0229, dtype=torch.float64)), (1301, tensor(-0.0229, dtype=torch.float64)), (1794, tensor(-0.0229, dtype=torch.float64)), (778, tensor(-0.0229, dtype=torch.float64)), (1982, tensor(-0.0229, dtype=torch.float64)), (49, tensor(-0.0228, dtype=torch.float64)), (1247, tensor(-0.0228, dtype=torch.float64)), (1498, tensor(-0.0228, dtype=torch.float64)), (2235, tensor(-0.0227, dtype=torch.float64)), (1053, tensor(-0.0227, dtype=torch.float64)), (990, tensor(-0.0226, dtype=torch.float64)), (750, tensor(-0.0226, dtype=torch.float64)), (276, tensor(-0.0226, dtype=torch.float64)), (1816, tensor(-0.0226, dtype=torch.float64)), (1578, tensor(-0.0226, dtype=torch.float64)), (547, tensor(-0.0226, dtype=torch.float64)), (2262, tensor(-0.0225, dtype=torch.float64)), (1090, tensor(-0.0225, dtype=torch.float64)), (913, tensor(-0.0225, dtype=torch.float64)), (2103, tensor(-0.0224, dtype=torch.float64)), (1494, tensor(-0.0224, dtype=torch.float64)), (1539, tensor(-0.0224, dtype=torch.float64)), (2144, tensor(-0.0224, dtype=torch.float64)), (2074, tensor(-0.0224, dtype=torch.float64)), (1118, tensor(-0.0224, dtype=torch.float64)), (199, tensor(-0.0223, dtype=torch.float64)), (2131, tensor(-0.0222, dtype=torch.float64)), (1755, tensor(-0.0222, dtype=torch.float64)), (1285, tensor(-0.0222, dtype=torch.float64)), (832, tensor(-0.0221, dtype=torch.float64)), (930, tensor(-0.0221, dtype=torch.float64)), (518, tensor(-0.0221, dtype=torch.float64)), (1923, tensor(-0.0221, dtype=torch.float64)), (846, tensor(-0.0221, dtype=torch.float64)), (300, tensor(-0.0220, dtype=torch.float64)), (861, tensor(-0.0220, dtype=torch.float64)), (2460, tensor(-0.0220, dtype=torch.float64)), (572, tensor(-0.0219, dtype=torch.float64)), (2244, tensor(-0.0219, dtype=torch.float64)), (1763, tensor(-0.0219, dtype=torch.float64)), (1055, tensor(-0.0219, dtype=torch.float64)), (1000, tensor(-0.0219, dtype=torch.float64)), (1555, tensor(-0.0218, dtype=torch.float64)), (2278, tensor(-0.0218, dtype=torch.float64)), (191, tensor(-0.0218, dtype=torch.float64)), (1100, tensor(-0.0218, dtype=torch.float64)), (175, tensor(-0.0218, dtype=torch.float64)), (2204, tensor(-0.0218, dtype=torch.float64)), (2381, tensor(-0.0217, dtype=torch.float64)), (125, tensor(-0.0217, dtype=torch.float64)), (904, tensor(-0.0217, dtype=torch.float64)), (1420, tensor(-0.0217, dtype=torch.float64)), (397, tensor(-0.0216, dtype=torch.float64)), (1773, tensor(-0.0216, dtype=torch.float64)), (2045, tensor(-0.0215, dtype=torch.float64)), (152, tensor(-0.0215, dtype=torch.float64)), (888, tensor(-0.0214, dtype=torch.float64)), (2028, tensor(-0.0214, dtype=torch.float64)), (2130, tensor(-0.0213, dtype=torch.float64)), (1490, tensor(-0.0213, dtype=torch.float64)), (843, tensor(-0.0213, dtype=torch.float64)), (558, tensor(-0.0213, dtype=torch.float64)), (389, tensor(-0.0213, dtype=torch.float64)), (936, tensor(-0.0213, dtype=torch.float64)), (801, tensor(-0.0212, dtype=torch.float64)), (2415, tensor(-0.0212, dtype=torch.float64)), (679, tensor(-0.0212, dtype=torch.float64)), (2006, tensor(-0.0212, dtype=torch.float64)), (2193, tensor(-0.0212, dtype=torch.float64)), (2052, tensor(-0.0212, dtype=torch.float64)), (2037, tensor(-0.0211, dtype=torch.float64)), (2408, tensor(-0.0210, dtype=torch.float64)), (1705, tensor(-0.0210, dtype=torch.float64)), (289, tensor(-0.0210, dtype=torch.float64)), (2090, tensor(-0.0210, dtype=torch.float64)), (865, tensor(-0.0210, dtype=torch.float64)), (2341, tensor(-0.0210, dtype=torch.float64)), (1603, tensor(-0.0209, dtype=torch.float64)), (135, tensor(-0.0209, dtype=torch.float64)), (710, tensor(-0.0209, dtype=torch.float64)), (1830, tensor(-0.0209, dtype=torch.float64)), (2251, tensor(-0.0208, dtype=torch.float64)), (1544, tensor(-0.0207, dtype=torch.float64)), (1556, tensor(-0.0207, dtype=torch.float64)), (514, tensor(-0.0207, dtype=torch.float64)), (2093, tensor(-0.0206, dtype=torch.float64)), (284, tensor(-0.0206, dtype=torch.float64)), (2156, tensor(-0.0206, dtype=torch.float64)), (1708, tensor(-0.0206, dtype=torch.float64)), (2058, tensor(-0.0205, dtype=torch.float64)), (1466, tensor(-0.0205, dtype=torch.float64)), (1806, tensor(-0.0204, dtype=torch.float64)), (2203, tensor(-0.0204, dtype=torch.float64)), (784, tensor(-0.0204, dtype=torch.float64)), (591, tensor(-0.0204, dtype=torch.float64)), (1177, tensor(-0.0204, dtype=torch.float64)), (1936, tensor(-0.0203, dtype=torch.float64)), (1599, tensor(-0.0203, dtype=torch.float64)), (1194, tensor(-0.0203, dtype=torch.float64)), (2191, tensor(-0.0203, dtype=torch.float64)), (2062, tensor(-0.0202, dtype=torch.float64)), (1352, tensor(-0.0202, dtype=torch.float64)), (815, tensor(-0.0202, dtype=torch.float64)), (1273, tensor(-0.0202, dtype=torch.float64)), (1891, tensor(-0.0202, dtype=torch.float64)), (1850, tensor(-0.0202, dtype=torch.float64)), (140, tensor(-0.0201, dtype=torch.float64)), (2254, tensor(-0.0200, dtype=torch.float64)), (36, tensor(-0.0200, dtype=torch.float64)), (1664, tensor(-0.0200, dtype=torch.float64)), (2116, tensor(-0.0200, dtype=torch.float64)), (1347, tensor(-0.0199, dtype=torch.float64)), (412, tensor(-0.0199, dtype=torch.float64)), (1485, tensor(-0.0199, dtype=torch.float64)), (870, tensor(-0.0199, dtype=torch.float64)), (1172, tensor(-0.0198, dtype=torch.float64)), (2439, tensor(-0.0198, dtype=torch.float64)), (189, tensor(-0.0198, dtype=torch.float64)), (139, tensor(-0.0198, dtype=torch.float64)), (2284, tensor(-0.0197, dtype=torch.float64)), (1748, tensor(-0.0197, dtype=torch.float64)), (287, tensor(-0.0197, dtype=torch.float64)), (1845, tensor(-0.0197, dtype=torch.float64)), (1296, tensor(-0.0196, dtype=torch.float64)), (1133, tensor(-0.0196, dtype=torch.float64)), (1630, tensor(-0.0196, dtype=torch.float64)), (215, tensor(-0.0196, dtype=torch.float64)), (253, tensor(-0.0195, dtype=torch.float64)), (879, tensor(-0.0195, dtype=torch.float64)), (298, tensor(-0.0195, dtype=torch.float64)), (1709, tensor(-0.0194, dtype=torch.float64)), (1719, tensor(-0.0194, dtype=torch.float64)), (650, tensor(-0.0194, dtype=torch.float64)), (760, tensor(-0.0194, dtype=torch.float64)), (1440, tensor(-0.0194, dtype=torch.float64)), (868, tensor(-0.0194, dtype=torch.float64)), (1001, tensor(-0.0194, dtype=torch.float64)), (400, tensor(-0.0194, dtype=torch.float64)), (2311, tensor(-0.0193, dtype=torch.float64)), (942, tensor(-0.0193, dtype=torch.float64)), (1677, tensor(-0.0193, dtype=torch.float64)), (1678, tensor(-0.0193, dtype=torch.float64)), (2455, tensor(-0.0193, dtype=torch.float64)), (332, tensor(-0.0192, dtype=torch.float64)), (2068, tensor(-0.0191, dtype=torch.float64)), (1637, tensor(-0.0191, dtype=torch.float64)), (2205, tensor(-0.0191, dtype=torch.float64)), (873, tensor(-0.0191, dtype=torch.float64)), (2143, tensor(-0.0191, dtype=torch.float64)), (2179, tensor(-0.0190, dtype=torch.float64)), (1434, tensor(-0.0190, dtype=torch.float64)), (45, tensor(-0.0190, dtype=torch.float64)), (1142, tensor(-0.0190, dtype=torch.float64)), (1530, tensor(-0.0190, dtype=torch.float64)), (1894, tensor(-0.0190, dtype=torch.float64)), (2462, tensor(-0.0190, dtype=torch.float64)), (1933, tensor(-0.0190, dtype=torch.float64)), (2294, tensor(-0.0189, dtype=torch.float64)), (1223, tensor(-0.0189, dtype=torch.float64)), (1028, tensor(-0.0188, dtype=torch.float64)), (1187, tensor(-0.0188, dtype=torch.float64)), (1083, tensor(-0.0187, dtype=torch.float64)), (513, tensor(-0.0187, dtype=torch.float64)), (114, tensor(-0.0185, dtype=torch.float64)), (715, tensor(-0.0185, dtype=torch.float64)), (1343, tensor(-0.0185, dtype=torch.float64)), (334, tensor(-0.0184, dtype=torch.float64)), (657, tensor(-0.0184, dtype=torch.float64)), (1402, tensor(-0.0184, dtype=torch.float64)), (594, tensor(-0.0183, dtype=torch.float64)), (899, tensor(-0.0182, dtype=torch.float64)), (2333, tensor(-0.0182, dtype=torch.float64)), (1370, tensor(-0.0182, dtype=torch.float64)), (2424, tensor(-0.0182, dtype=torch.float64)), (893, tensor(-0.0182, dtype=torch.float64)), (926, tensor(-0.0182, dtype=torch.float64)), (251, tensor(-0.0182, dtype=torch.float64)), (1304, tensor(-0.0181, dtype=torch.float64)), (923, tensor(-0.0181, dtype=torch.float64)), (951, tensor(-0.0181, dtype=torch.float64)), (325, tensor(-0.0180, dtype=torch.float64)), (991, tensor(-0.0180, dtype=torch.float64)), (1375, tensor(-0.0180, dtype=torch.float64)), (1699, tensor(-0.0179, dtype=torch.float64)), (244, tensor(-0.0179, dtype=torch.float64)), (146, tensor(-0.0179, dtype=torch.float64)), (1674, tensor(-0.0179, dtype=torch.float64)), (663, tensor(-0.0179, dtype=torch.float64)), (1714, tensor(-0.0178, dtype=torch.float64)), (2403, tensor(-0.0178, dtype=torch.float64)), (1238, tensor(-0.0178, dtype=torch.float64)), (541, tensor(-0.0178, dtype=torch.float64)), (779, tensor(-0.0178, dtype=torch.float64)), (1669, tensor(-0.0177, dtype=torch.float64)), (1959, tensor(-0.0177, dtype=torch.float64)), (2388, tensor(-0.0177, dtype=torch.float64)), (924, tensor(-0.0177, dtype=torch.float64)), (304, tensor(-0.0177, dtype=torch.float64)), (1424, tensor(-0.0175, dtype=torch.float64)), (1117, tensor(-0.0175, dtype=torch.float64)), (1772, tensor(-0.0175, dtype=torch.float64)), (318, tensor(-0.0175, dtype=torch.float64)), (1452, tensor(-0.0175, dtype=torch.float64)), (614, tensor(-0.0175, dtype=torch.float64)), (1408, tensor(-0.0174, dtype=torch.float64)), (326, tensor(-0.0174, dtype=torch.float64)), (2456, tensor(-0.0173, dtype=torch.float64)), (366, tensor(-0.0173, dtype=torch.float64)), (973, tensor(-0.0173, dtype=torch.float64)), (1332, tensor(-0.0172, dtype=torch.float64)), (2318, tensor(-0.0172, dtype=torch.float64)), (425, tensor(-0.0172, dtype=torch.float64)), (44, tensor(-0.0171, dtype=torch.float64)), (605, tensor(-0.0171, dtype=torch.float64)), (2036, tensor(-0.0171, dtype=torch.float64)), (1519, tensor(-0.0171, dtype=torch.float64)), (457, tensor(-0.0170, dtype=torch.float64)), (1487, tensor(-0.0170, dtype=torch.float64)), (1010, tensor(-0.0170, dtype=torch.float64)), (1913, tensor(-0.0170, dtype=torch.float64)), (733, tensor(-0.0169, dtype=torch.float64)), (488, tensor(-0.0169, dtype=torch.float64)), (1995, tensor(-0.0169, dtype=torch.float64)), (1512, tensor(-0.0169, dtype=torch.float64)), (127, tensor(-0.0169, dtype=torch.float64)), (1419, tensor(-0.0168, dtype=torch.float64)), (2359, tensor(-0.0168, dtype=torch.float64)), (390, tensor(-0.0167, dtype=torch.float64)), (1877, tensor(-0.0167, dtype=torch.float64)), (1085, tensor(-0.0167, dtype=torch.float64)), (1960, tensor(-0.0167, dtype=torch.float64)), (2213, tensor(-0.0167, dtype=torch.float64)), (945, tensor(-0.0167, dtype=torch.float64)), (1588, tensor(-0.0166, dtype=torch.float64)), (1805, tensor(-0.0166, dtype=torch.float64)), (1844, tensor(-0.0166, dtype=torch.float64)), (2282, tensor(-0.0165, dtype=torch.float64)), (144, tensor(-0.0165, dtype=torch.float64)), (530, tensor(-0.0165, dtype=torch.float64)), (222, tensor(-0.0165, dtype=torch.float64)), (494, tensor(-0.0164, dtype=torch.float64)), (1621, tensor(-0.0164, dtype=torch.float64)), (311, tensor(-0.0163, dtype=torch.float64)), (1831, tensor(-0.0163, dtype=torch.float64)), (640, tensor(-0.0163, dtype=torch.float64)), (1506, tensor(-0.0163, dtype=torch.float64)), (278, tensor(-0.0162, dtype=torch.float64)), (1130, tensor(-0.0162, dtype=torch.float64)), (895, tensor(-0.0162, dtype=torch.float64)), (1495, tensor(-0.0162, dtype=torch.float64)), (1436, tensor(-0.0162, dtype=torch.float64)), (1379, tensor(-0.0162, dtype=torch.float64)), (196, tensor(-0.0161, dtype=torch.float64)), (1364, tensor(-0.0161, dtype=torch.float64)), (1351, tensor(-0.0161, dtype=torch.float64)), (2223, tensor(-0.0161, dtype=torch.float64)), (446, tensor(-0.0161, dtype=torch.float64)), (1916, tensor(-0.0160, dtype=torch.float64)), (3, tensor(-0.0160, dtype=torch.float64)), (1858, tensor(-0.0160, dtype=torch.float64)), (65, tensor(-0.0160, dtype=torch.float64)), (1969, tensor(-0.0160, dtype=torch.float64)), (1476, tensor(-0.0160, dtype=torch.float64)), (1651, tensor(-0.0159, dtype=torch.float64)), (2308, tensor(-0.0159, dtype=torch.float64)), (2115, tensor(-0.0158, dtype=torch.float64)), (1315, tensor(-0.0158, dtype=torch.float64)), (2475, tensor(-0.0158, dtype=torch.float64)), (1235, tensor(-0.0157, dtype=torch.float64)), (1368, tensor(-0.0157, dtype=torch.float64)), (2352, tensor(-0.0157, dtype=torch.float64)), (1250, tensor(-0.0157, dtype=torch.float64)), (974, tensor(-0.0157, dtype=torch.float64)), (1204, tensor(-0.0156, dtype=torch.float64)), (1479, tensor(-0.0156, dtype=torch.float64)), (1880, tensor(-0.0156, dtype=torch.float64)), (2345, tensor(-0.0156, dtype=torch.float64)), (1017, tensor(-0.0156, dtype=torch.float64)), (1275, tensor(-0.0156, dtype=torch.float64)), (851, tensor(-0.0155, dtype=torch.float64)), (2300, tensor(-0.0155, dtype=torch.float64)), (1330, tensor(-0.0154, dtype=torch.float64)), (116, tensor(-0.0154, dtype=torch.float64)), (409, tensor(-0.0154, dtype=torch.float64)), (1531, tensor(-0.0154, dtype=torch.float64)), (2266, tensor(-0.0154, dtype=torch.float64)), (1353, tensor(-0.0154, dtype=torch.float64)), (706, tensor(-0.0153, dtype=torch.float64)), (2153, tensor(-0.0153, dtype=torch.float64)), (560, tensor(-0.0153, dtype=torch.float64)), (2057, tensor(-0.0153, dtype=torch.float64)), (1098, tensor(-0.0153, dtype=torch.float64)), (505, tensor(-0.0153, dtype=torch.float64)), (1720, tensor(-0.0153, dtype=torch.float64)), (984, tensor(-0.0152, dtype=torch.float64)), (293, tensor(-0.0152, dtype=torch.float64)), (604, tensor(-0.0152, dtype=torch.float64)), (756, tensor(-0.0151, dtype=torch.float64)), (800, tensor(-0.0151, dtype=torch.float64)), (1016, tensor(-0.0151, dtype=torch.float64)), (1888, tensor(-0.0151, dtype=torch.float64)), (1082, tensor(-0.0150, dtype=torch.float64)), (480, tensor(-0.0150, dtype=torch.float64)), (1241, tensor(-0.0150, dtype=torch.float64)), (1462, tensor(-0.0150, dtype=torch.float64)), (2121, tensor(-0.0150, dtype=torch.float64)), (844, tensor(-0.0150, dtype=torch.float64)), (1087, tensor(-0.0150, dtype=torch.float64)), (849, tensor(-0.0150, dtype=torch.float64)), (1231, tensor(-0.0149, dtype=torch.float64)), (109, tensor(-0.0149, dtype=torch.float64)), (2188, tensor(-0.0149, dtype=torch.float64)), (1993, tensor(-0.0149, dtype=torch.float64)), (1746, tensor(-0.0149, dtype=torch.float64)), (432, tensor(-0.0148, dtype=torch.float64)), (2194, tensor(-0.0148, dtype=torch.float64)), (1732, tensor(-0.0148, dtype=torch.float64)), (260, tensor(-0.0147, dtype=torch.float64)), (80, tensor(-0.0146, dtype=torch.float64)), (731, tensor(-0.0145, dtype=torch.float64)), (2421, tensor(-0.0145, dtype=torch.float64)), (1870, tensor(-0.0145, dtype=torch.float64)), (1783, tensor(-0.0145, dtype=torch.float64)), (419, tensor(-0.0144, dtype=torch.float64)), (245, tensor(-0.0144, dtype=torch.float64)), (2337, tensor(-0.0144, dtype=torch.float64)), (1649, tensor(-0.0143, dtype=torch.float64)), (280, tensor(-0.0143, dtype=torch.float64)), (1060, tensor(-0.0143, dtype=torch.float64)), (2063, tensor(-0.0143, dtype=torch.float64)), (874, tensor(-0.0143, dtype=torch.float64)), (876, tensor(-0.0143, dtype=torch.float64)), (2077, tensor(-0.0143, dtype=torch.float64)), (1312, tensor(-0.0143, dtype=torch.float64)), (1423, tensor(-0.0142, dtype=torch.float64)), (1882, tensor(-0.0142, dtype=torch.float64)), (1126, tensor(-0.0142, dtype=torch.float64)), (1475, tensor(-0.0142, dtype=torch.float64)), (213, tensor(-0.0141, dtype=torch.float64)), (1252, tensor(-0.0141, dtype=torch.float64)), (193, tensor(-0.0141, dtype=torch.float64)), (803, tensor(-0.0141, dtype=torch.float64)), (2339, tensor(-0.0141, dtype=torch.float64)), (1514, tensor(-0.0140, dtype=torch.float64)), (685, tensor(-0.0140, dtype=torch.float64)), (1108, tensor(-0.0140, dtype=torch.float64)), (2100, tensor(-0.0139, dtype=torch.float64)), (1808, tensor(-0.0139, dtype=torch.float64)), (556, tensor(-0.0139, dtype=torch.float64)), (1526, tensor(-0.0139, dtype=torch.float64)), (1178, tensor(-0.0138, dtype=torch.float64)), (1934, tensor(-0.0138, dtype=torch.float64)), (1128, tensor(-0.0138, dtype=torch.float64)), (242, tensor(-0.0138, dtype=torch.float64)), (1889, tensor(-0.0138, dtype=torch.float64)), (2048, tensor(-0.0137, dtype=torch.float64)), (2178, tensor(-0.0137, dtype=torch.float64)), (1225, tensor(-0.0137, dtype=torch.float64)), (1622, tensor(-0.0137, dtype=torch.float64)), (1174, tensor(-0.0137, dtype=torch.float64)), (1543, tensor(-0.0137, dtype=torch.float64)), (2155, tensor(-0.0137, dtype=torch.float64)), (46, tensor(-0.0137, dtype=torch.float64)), (1374, tensor(-0.0137, dtype=torch.float64)), (607, tensor(-0.0137, dtype=torch.float64)), (1200, tensor(-0.0136, dtype=torch.float64)), (2039, tensor(-0.0136, dtype=torch.float64)), (1751, tensor(-0.0136, dtype=torch.float64)), (1695, tensor(-0.0136, dtype=torch.float64)), (26, tensor(-0.0135, dtype=torch.float64)), (2160, tensor(-0.0135, dtype=torch.float64)), (1031, tensor(-0.0135, dtype=torch.float64)), (816, tensor(-0.0135, dtype=torch.float64)), (889, tensor(-0.0135, dtype=torch.float64)), (1779, tensor(-0.0134, dtype=torch.float64)), (38, tensor(-0.0134, dtype=torch.float64)), (2038, tensor(-0.0134, dtype=torch.float64)), (2464, tensor(-0.0134, dtype=torch.float64)), (1220, tensor(-0.0133, dtype=torch.float64)), (379, tensor(-0.0133, dtype=torch.float64)), (156, tensor(-0.0133, dtype=torch.float64)), (89, tensor(-0.0133, dtype=torch.float64)), (2411, tensor(-0.0132, dtype=torch.float64)), (1856, tensor(-0.0132, dtype=torch.float64)), (461, tensor(-0.0132, dtype=torch.float64)), (1793, tensor(-0.0132, dtype=torch.float64)), (1680, tensor(-0.0131, dtype=torch.float64)), (667, tensor(-0.0131, dtype=torch.float64)), (1802, tensor(-0.0131, dtype=torch.float64)), (2384, tensor(-0.0130, dtype=torch.float64)), (418, tensor(-0.0130, dtype=torch.float64)), (267, tensor(-0.0130, dtype=torch.float64)), (672, tensor(-0.0130, dtype=torch.float64)), (2336, tensor(-0.0129, dtype=torch.float64)), (2428, tensor(-0.0129, dtype=torch.float64)), (539, tensor(-0.0129, dtype=torch.float64)), (1386, tensor(-0.0129, dtype=torch.float64)), (1928, tensor(-0.0128, dtype=torch.float64)), (1633, tensor(-0.0128, dtype=torch.float64)), (2031, tensor(-0.0127, dtype=torch.float64)), (443, tensor(-0.0127, dtype=torch.float64)), (634, tensor(-0.0126, dtype=torch.float64)), (1940, tensor(-0.0126, dtype=torch.float64)), (669, tensor(-0.0126, dtype=torch.float64)), (2007, tensor(-0.0125, dtype=torch.float64)), (1086, tensor(-0.0125, dtype=torch.float64)), (2468, tensor(-0.0125, dtype=torch.float64)), (34, tensor(-0.0125, dtype=torch.float64)), (1912, tensor(-0.0124, dtype=torch.float64)), (1852, tensor(-0.0124, dtype=torch.float64)), (406, tensor(-0.0123, dtype=torch.float64)), (1385, tensor(-0.0123, dtype=torch.float64)), (1119, tensor(-0.0123, dtype=torch.float64)), (2248, tensor(-0.0123, dtype=torch.float64)), (985, tensor(-0.0123, dtype=torch.float64)), (1752, tensor(-0.0123, dtype=torch.float64)), (229, tensor(-0.0123, dtype=torch.float64)), (1522, tensor(-0.0122, dtype=torch.float64)), (1517, tensor(-0.0122, dtype=torch.float64)), (2401, tensor(-0.0122, dtype=torch.float64)), (297, tensor(-0.0121, dtype=torch.float64)), (2079, tensor(-0.0121, dtype=torch.float64)), (1871, tensor(-0.0121, dtype=torch.float64)), (766, tensor(-0.0120, dtype=torch.float64)), (1601, tensor(-0.0120, dtype=torch.float64)), (1183, tensor(-0.0120, dtype=torch.float64)), (138, tensor(-0.0120, dtype=torch.float64)), (345, tensor(-0.0120, dtype=torch.float64)), (2258, tensor(-0.0119, dtype=torch.float64)), (1818, tensor(-0.0119, dtype=torch.float64)), (642, tensor(-0.0119, dtype=torch.float64)), (2092, tensor(-0.0119, dtype=torch.float64)), (1064, tensor(-0.0118, dtype=torch.float64)), (2165, tensor(-0.0118, dtype=torch.float64)), (2423, tensor(-0.0118, dtype=torch.float64)), (880, tensor(-0.0118, dtype=torch.float64)), (2317, tensor(-0.0118, dtype=torch.float64)), (2346, tensor(-0.0118, dtype=torch.float64)), (770, tensor(-0.0118, dtype=torch.float64)), (1470, tensor(-0.0118, dtype=torch.float64)), (460, tensor(-0.0117, dtype=torch.float64)), (1921, tensor(-0.0117, dtype=torch.float64)), (1137, tensor(-0.0117, dtype=torch.float64)), (2044, tensor(-0.0117, dtype=torch.float64)), (1492, tensor(-0.0117, dtype=torch.float64)), (1287, tensor(-0.0117, dtype=torch.float64)), (2084, tensor(-0.0116, dtype=torch.float64)), (1696, tensor(-0.0116, dtype=torch.float64)), (1418, tensor(-0.0116, dtype=torch.float64)), (1774, tensor(-0.0116, dtype=torch.float64)), (319, tensor(-0.0116, dtype=torch.float64)), (2277, tensor(-0.0115, dtype=torch.float64)), (1283, tensor(-0.0115, dtype=torch.float64)), (173, tensor(-0.0115, dtype=torch.float64)), (2356, tensor(-0.0115, dtype=torch.float64)), (689, tensor(-0.0115, dtype=torch.float64)), (622, tensor(-0.0115, dtype=torch.float64)), (2467, tensor(-0.0115, dtype=torch.float64)), (1920, tensor(-0.0114, dtype=torch.float64)), (1835, tensor(-0.0114, dtype=torch.float64)), (2098, tensor(-0.0114, dtype=torch.float64)), (134, tensor(-0.0114, dtype=torch.float64)), (644, tensor(-0.0113, dtype=torch.float64)), (1612, tensor(-0.0113, dtype=torch.float64)), (582, tensor(-0.0113, dtype=torch.float64)), (545, tensor(-0.0113, dtype=torch.float64)), (195, tensor(-0.0113, dtype=torch.float64)), (1715, tensor(-0.0113, dtype=torch.float64)), (1303, tensor(-0.0113, dtype=torch.float64)), (286, tensor(-0.0113, dtype=torch.float64)), (1073, tensor(-0.0112, dtype=torch.float64)), (1096, tensor(-0.0112, dtype=torch.float64)), (662, tensor(-0.0111, dtype=torch.float64)), (2215, tensor(-0.0109, dtype=torch.float64)), (1766, tensor(-0.0109, dtype=torch.float64)), (2087, tensor(-0.0109, dtype=torch.float64)), (1325, tensor(-0.0109, dtype=torch.float64)), (1655, tensor(-0.0109, dtype=torch.float64)), (579, tensor(-0.0108, dtype=torch.float64)), (1322, tensor(-0.0108, dtype=torch.float64)), (142, tensor(-0.0108, dtype=torch.float64)), (1246, tensor(-0.0108, dtype=torch.float64)), (1770, tensor(-0.0108, dtype=torch.float64)), (501, tensor(-0.0107, dtype=torch.float64)), (1035, tensor(-0.0107, dtype=torch.float64)), (2106, tensor(-0.0107, dtype=torch.float64)), (2312, tensor(-0.0106, dtype=torch.float64)), (2450, tensor(-0.0106, dtype=torch.float64)), (2117, tensor(-0.0106, dtype=torch.float64)), (562, tensor(-0.0106, dtype=torch.float64)), (831, tensor(-0.0106, dtype=torch.float64)), (1691, tensor(-0.0106, dtype=torch.float64)), (595, tensor(-0.0106, dtype=torch.float64)), (2072, tensor(-0.0106, dtype=torch.float64)), (1867, tensor(-0.0105, dtype=torch.float64)), (989, tensor(-0.0105, dtype=torch.float64)), (1932, tensor(-0.0104, dtype=torch.float64)), (1171, tensor(-0.0104, dtype=torch.float64)), (148, tensor(-0.0104, dtype=torch.float64)), (1952, tensor(-0.0104, dtype=torch.float64)), (856, tensor(-0.0104, dtype=torch.float64)), (2386, tensor(-0.0104, dtype=torch.float64)), (216, tensor(-0.0104, dtype=torch.float64)), (666, tensor(-0.0104, dtype=torch.float64)), (2332, tensor(-0.0104, dtype=torch.float64)), (1129, tensor(-0.0103, dtype=torch.float64)), (646, tensor(-0.0103, dtype=torch.float64)), (200, tensor(-0.0103, dtype=torch.float64)), (907, tensor(-0.0102, dtype=torch.float64)), (1169, tensor(-0.0102, dtype=torch.float64)), (610, tensor(-0.0102, dtype=torch.float64)), (1838, tensor(-0.0102, dtype=torch.float64)), (620, tensor(-0.0102, dtype=torch.float64)), (18, tensor(-0.0102, dtype=torch.float64)), (1931, tensor(-0.0102, dtype=torch.float64)), (476, tensor(-0.0101, dtype=torch.float64)), (2124, tensor(-0.0101, dtype=torch.float64)), (841, tensor(-0.0101, dtype=torch.float64)), (374, tensor(-0.0101, dtype=torch.float64)), (1541, tensor(-0.0101, dtype=torch.float64)), (2250, tensor(-0.0101, dtype=torch.float64)), (1985, tensor(-0.0101, dtype=torch.float64)), (959, tensor(-0.0100, dtype=torch.float64)), (1344, tensor(-0.0100, dtype=torch.float64)), (2043, tensor(-0.0100, dtype=torch.float64)), (1799, tensor(-0.0100, dtype=torch.float64)), (395, tensor(-0.0100, dtype=torch.float64)), (1895, tensor(-0.0099, dtype=torch.float64)), (2114, tensor(-0.0099, dtype=torch.float64)), (1323, tensor(-0.0099, dtype=torch.float64)), (2020, tensor(-0.0099, dtype=torch.float64)), (1868, tensor(-0.0099, dtype=torch.float64)), (933, tensor(-0.0099, dtype=torch.float64)), (2418, tensor(-0.0099, dtype=torch.float64)), (765, tensor(-0.0099, dtype=torch.float64)), (2001, tensor(-0.0098, dtype=torch.float64)), (1345, tensor(-0.0098, dtype=torch.float64)), (2382, tensor(-0.0098, dtype=torch.float64)), (2338, tensor(-0.0098, dtype=torch.float64)), (6, tensor(-0.0098, dtype=torch.float64)), (1878, tensor(-0.0097, dtype=torch.float64)), (575, tensor(-0.0097, dtype=torch.float64)), (369, tensor(-0.0097, dtype=torch.float64)), (1034, tensor(-0.0097, dtype=torch.float64)), (102, tensor(-0.0097, dtype=torch.float64)), (827, tensor(-0.0097, dtype=torch.float64)), (1981, tensor(-0.0096, dtype=torch.float64)), (1257, tensor(-0.0096, dtype=torch.float64)), (2443, tensor(-0.0094, dtype=torch.float64)), (1727, tensor(-0.0094, dtype=torch.float64)), (777, tensor(-0.0094, dtype=torch.float64)), (512, tensor(-0.0094, dtype=torch.float64)), (1057, tensor(-0.0094, dtype=torch.float64)), (342, tensor(-0.0094, dtype=torch.float64)), (160, tensor(-0.0093, dtype=torch.float64)), (589, tensor(-0.0093, dtype=torch.float64)), (147, tensor(-0.0093, dtype=torch.float64)), (312, tensor(-0.0092, dtype=torch.float64)), (1535, tensor(-0.0092, dtype=torch.float64)), (912, tensor(-0.0092, dtype=torch.float64)), (1628, tensor(-0.0091, dtype=torch.float64)), (2259, tensor(-0.0091, dtype=torch.float64)), (402, tensor(-0.0091, dtype=torch.float64)), (1415, tensor(-0.0091, dtype=torch.float64)), (1176, tensor(-0.0091, dtype=torch.float64)), (958, tensor(-0.0091, dtype=torch.float64)), (671, tensor(-0.0091, dtype=torch.float64)), (53, tensor(-0.0091, dtype=torch.float64)), (2316, tensor(-0.0091, dtype=torch.float64)), (609, tensor(-0.0090, dtype=torch.float64)), (554, tensor(-0.0090, dtype=torch.float64)), (2209, tensor(-0.0090, dtype=torch.float64)), (1988, tensor(-0.0090, dtype=torch.float64)), (2025, tensor(-0.0090, dtype=torch.float64)), (1173, tensor(-0.0089, dtype=torch.float64)), (285, tensor(-0.0089, dtype=torch.float64)), (929, tensor(-0.0089, dtype=torch.float64)), (1500, tensor(-0.0088, dtype=torch.float64)), (736, tensor(-0.0088, dtype=torch.float64)), (1554, tensor(-0.0088, dtype=torch.float64)), (498, tensor(-0.0088, dtype=torch.float64)), (1624, tensor(-0.0087, dtype=torch.float64)), (1887, tensor(-0.0087, dtype=torch.float64)), (630, tensor(-0.0086, dtype=torch.float64)), (902, tensor(-0.0086, dtype=torch.float64)), (2283, tensor(-0.0086, dtype=torch.float64)), (574, tensor(-0.0086, dtype=torch.float64)), (2197, tensor(-0.0086, dtype=torch.float64)), (1990, tensor(-0.0086, dtype=torch.float64)), (1848, tensor(-0.0086, dtype=torch.float64)), (2431, tensor(-0.0086, dtype=torch.float64)), (1627, tensor(-0.0086, dtype=torch.float64)), (1564, tensor(-0.0085, dtype=torch.float64)), (2140, tensor(-0.0085, dtype=torch.float64)), (1237, tensor(-0.0085, dtype=torch.float64)), (301, tensor(-0.0085, dtype=torch.float64)), (1468, tensor(-0.0084, dtype=torch.float64)), (315, tensor(-0.0084, dtype=torch.float64)), (948, tensor(-0.0084, dtype=torch.float64)), (388, tensor(-0.0084, dtype=torch.float64)), (305, tensor(-0.0084, dtype=torch.float64)), (1670, tensor(-0.0084, dtype=torch.float64)), (937, tensor(-0.0084, dtype=torch.float64)), (768, tensor(-0.0084, dtype=torch.float64)), (753, tensor(-0.0084, dtype=torch.float64)), (916, tensor(-0.0084, dtype=torch.float64)), (1401, tensor(-0.0084, dtype=torch.float64)), (194, tensor(-0.0083, dtype=torch.float64)), (1570, tensor(-0.0083, dtype=torch.float64)), (249, tensor(-0.0083, dtype=torch.float64)), (2438, tensor(-0.0083, dtype=torch.float64)), (2177, tensor(-0.0083, dtype=torch.float64)), (1769, tensor(-0.0083, dtype=torch.float64)), (817, tensor(-0.0083, dtype=torch.float64)), (1410, tensor(-0.0083, dtype=torch.float64)), (1846, tensor(-0.0082, dtype=torch.float64)), (1383, tensor(-0.0082, dtype=torch.float64)), (829, tensor(-0.0082, dtype=torch.float64)), (151, tensor(-0.0082, dtype=torch.float64)), (2163, tensor(-0.0082, dtype=torch.float64)), (344, tensor(-0.0082, dtype=torch.float64)), (1040, tensor(-0.0081, dtype=torch.float64)), (1218, tensor(-0.0081, dtype=torch.float64)), (745, tensor(-0.0081, dtype=torch.float64)), (416, tensor(-0.0081, dtype=torch.float64)), (754, tensor(-0.0081, dtype=torch.float64)), (435, tensor(-0.0081, dtype=torch.float64)), (2076, tensor(-0.0081, dtype=torch.float64)), (1078, tensor(-0.0080, dtype=torch.float64)), (1202, tensor(-0.0080, dtype=torch.float64)), (1110, tensor(-0.0080, dtype=torch.float64)), (1733, tensor(-0.0080, dtype=torch.float64)), (1292, tensor(-0.0080, dtype=torch.float64)), (2342, tensor(-0.0080, dtype=torch.float64)), (2299, tensor(-0.0079, dtype=torch.float64)), (317, tensor(-0.0079, dtype=torch.float64)), (42, tensor(-0.0079, dtype=torch.float64)), (145, tensor(-0.0079, dtype=torch.float64)), (2325, tensor(-0.0079, dtype=torch.float64)), (1079, tensor(-0.0079, dtype=torch.float64)), (437, tensor(-0.0079, dtype=torch.float64)), (643, tensor(-0.0078, dtype=torch.float64)), (1199, tensor(-0.0078, dtype=torch.float64)), (2185, tensor(-0.0077, dtype=torch.float64)), (1608, tensor(-0.0077, dtype=torch.float64)), (940, tensor(-0.0077, dtype=torch.float64)), (1167, tensor(-0.0077, dtype=torch.float64)), (1198, tensor(-0.0077, dtype=torch.float64)), (2, tensor(-0.0077, dtype=torch.float64)), (2168, tensor(-0.0077, dtype=torch.float64)), (2080, tensor(-0.0077, dtype=torch.float64)), (1160, tensor(-0.0076, dtype=torch.float64)), (894, tensor(-0.0076, dtype=torch.float64)), (351, tensor(-0.0076, dtype=torch.float64)), (792, tensor(-0.0076, dtype=torch.float64)), (1765, tensor(-0.0076, dtype=torch.float64)), (504, tensor(-0.0076, dtype=torch.float64)), (993, tensor(-0.0075, dtype=torch.float64)), (2167, tensor(-0.0075, dtype=torch.float64)), (1380, tensor(-0.0075, dtype=torch.float64)), (1184, tensor(-0.0075, dtype=torch.float64)), (1122, tensor(-0.0075, dtype=torch.float64)), (303, tensor(-0.0075, dtype=torch.float64)), (75, tensor(-0.0075, dtype=torch.float64)), (270, tensor(-0.0075, dtype=torch.float64)), (19, tensor(-0.0074, dtype=torch.float64)), (987, tensor(-0.0074, dtype=torch.float64)), (1124, tensor(-0.0074, dtype=torch.float64)), (211, tensor(-0.0074, dtype=torch.float64)), (1350, tensor(-0.0074, dtype=torch.float64)), (24, tensor(-0.0073, dtype=torch.float64)), (2376, tensor(-0.0073, dtype=torch.float64)), (273, tensor(-0.0073, dtype=torch.float64)), (1193, tensor(-0.0073, dtype=torch.float64)), (1290, tensor(-0.0073, dtype=torch.float64)), (641, tensor(-0.0073, dtype=torch.float64)), (1289, tensor(-0.0073, dtype=torch.float64)), (2091, tensor(-0.0073, dtype=torch.float64)), (1687, tensor(-0.0073, dtype=torch.float64)), (2390, tensor(-0.0072, dtype=torch.float64)), (2206, tensor(-0.0072, dtype=torch.float64)), (2257, tensor(-0.0072, dtype=torch.float64)), (1365, tensor(-0.0072, dtype=torch.float64)), (2269, tensor(-0.0072, dtype=torch.float64)), (41, tensor(-0.0071, dtype=torch.float64)), (1983, tensor(-0.0071, dtype=torch.float64)), (1324, tensor(-0.0071, dtype=torch.float64)), (2196, tensor(-0.0071, dtype=torch.float64)), (1284, tensor(-0.0070, dtype=torch.float64)), (2253, tensor(-0.0070, dtype=torch.float64)), (881, tensor(-0.0070, dtype=torch.float64)), (2249, tensor(-0.0070, dtype=torch.float64)), (2263, tensor(-0.0070, dtype=torch.float64)), (740, tensor(-0.0069, dtype=torch.float64)), (1980, tensor(-0.0069, dtype=torch.float64)), (544, tensor(-0.0069, dtype=torch.float64)), (2221, tensor(-0.0068, dtype=torch.float64)), (623, tensor(-0.0068, dtype=torch.float64)), (1511, tensor(-0.0068, dtype=torch.float64)), (1483, tensor(-0.0067, dtype=torch.float64)), (810, tensor(-0.0067, dtype=torch.float64)), (64, tensor(-0.0067, dtype=torch.float64)), (2186, tensor(-0.0067, dtype=torch.float64)), (1336, tensor(-0.0067, dtype=torch.float64)), (1455, tensor(-0.0066, dtype=torch.float64)), (680, tensor(-0.0066, dtype=torch.float64)), (862, tensor(-0.0066, dtype=torch.float64)), (802, tensor(-0.0066, dtype=torch.float64)), (247, tensor(-0.0066, dtype=torch.float64)), (2473, tensor(-0.0065, dtype=torch.float64)), (4, tensor(-0.0065, dtype=torch.float64)), (503, tensor(-0.0065, dtype=torch.float64)), (2416, tensor(-0.0065, dtype=torch.float64)), (43, tensor(-0.0065, dtype=torch.float64)), (854, tensor(-0.0065, dtype=torch.float64)), (2141, tensor(-0.0064, dtype=torch.float64)), (1222, tensor(-0.0064, dtype=torch.float64)), (1992, tensor(-0.0064, dtype=torch.float64)), (1388, tensor(-0.0064, dtype=torch.float64)), (698, tensor(-0.0064, dtype=torch.float64)), (2461, tensor(-0.0064, dtype=torch.float64)), (1148, tensor(-0.0063, dtype=torch.float64)), (340, tensor(-0.0063, dtype=torch.float64)), (1809, tensor(-0.0063, dtype=torch.float64)), (840, tensor(-0.0063, dtype=torch.float64)), (1371, tensor(-0.0063, dtype=torch.float64)), (2029, tensor(-0.0062, dtype=torch.float64)), (1813, tensor(-0.0062, dtype=torch.float64)), (1272, tensor(-0.0062, dtype=torch.float64)), (838, tensor(-0.0062, dtype=torch.float64)), (1478, tensor(-0.0062, dtype=torch.float64)), (1146, tensor(-0.0062, dtype=torch.float64)), (1824, tensor(-0.0062, dtype=torch.float64)), (1777, tensor(-0.0061, dtype=torch.float64)), (1743, tensor(-0.0061, dtype=torch.float64)), (252, tensor(-0.0061, dtype=torch.float64)), (1043, tensor(-0.0061, dtype=torch.float64)), (1113, tensor(-0.0061, dtype=torch.float64)), (29, tensor(-0.0061, dtype=torch.float64)), (32, tensor(-0.0061, dtype=torch.float64)), (600, tensor(-0.0060, dtype=torch.float64)), (564, tensor(-0.0060, dtype=torch.float64)), (2432, tensor(-0.0060, dtype=torch.float64)), (1948, tensor(-0.0060, dtype=torch.float64)), (39, tensor(-0.0060, dtype=torch.float64)), (602, tensor(-0.0060, dtype=torch.float64)), (1298, tensor(-0.0060, dtype=torch.float64)), (1594, tensor(-0.0059, dtype=torch.float64)), (2126, tensor(-0.0059, dtype=torch.float64)), (537, tensor(-0.0059, dtype=torch.float64)), (1903, tensor(-0.0059, dtype=torch.float64)), (1789, tensor(-0.0058, dtype=torch.float64)), (1890, tensor(-0.0058, dtype=torch.float64)), (763, tensor(-0.0058, dtype=torch.float64)), (1154, tensor(-0.0058, dtype=torch.float64)), (1334, tensor(-0.0058, dtype=torch.float64)), (900, tensor(-0.0058, dtype=torch.float64)), (1092, tensor(-0.0057, dtype=torch.float64)), (468, tensor(-0.0057, dtype=torch.float64)), (54, tensor(-0.0057, dtype=torch.float64)), (141, tensor(-0.0057, dtype=torch.float64)), (2301, tensor(-0.0057, dtype=torch.float64)), (1619, tensor(-0.0057, dtype=torch.float64)), (2207, tensor(-0.0056, dtype=torch.float64)), (2347, tensor(-0.0056, dtype=torch.float64)), (1093, tensor(-0.0056, dtype=torch.float64)), (1620, tensor(-0.0056, dtype=torch.float64)), (1062, tensor(-0.0056, dtype=torch.float64)), (2003, tensor(-0.0055, dtype=torch.float64)), (2216, tensor(-0.0055, dtype=torch.float64)), (2288, tensor(-0.0055, dtype=torch.float64)), (464, tensor(-0.0055, dtype=torch.float64)), (586, tensor(-0.0055, dtype=torch.float64)), (757, tensor(-0.0055, dtype=torch.float64)), (2297, tensor(-0.0055, dtype=torch.float64)), (1734, tensor(-0.0055, dtype=torch.float64)), (121, tensor(-0.0054, dtype=torch.float64)), (0, tensor(-0.0054, dtype=torch.float64)), (1071, tensor(-0.0054, dtype=torch.float64)), (818, tensor(-0.0054, dtype=torch.float64)), (1864, tensor(-0.0054, dtype=torch.float64)), (938, tensor(-0.0054, dtype=torch.float64)), (1618, tensor(-0.0054, dtype=torch.float64)), (209, tensor(-0.0053, dtype=torch.float64)), (1529, tensor(-0.0053, dtype=torch.float64)), (2276, tensor(-0.0053, dtype=torch.float64)), (2005, tensor(-0.0053, dtype=torch.float64)), (1716, tensor(-0.0053, dtype=torch.float64)), (66, tensor(-0.0053, dtype=torch.float64)), (1234, tensor(-0.0053, dtype=torch.float64)), (1266, tensor(-0.0053, dtype=torch.float64)), (1197, tensor(-0.0052, dtype=torch.float64)), (1549, tensor(-0.0052, dtype=torch.float64)), (1625, tensor(-0.0051, dtype=torch.float64)), (136, tensor(-0.0051, dtype=torch.float64)), (2150, tensor(-0.0051, dtype=torch.float64)), (57, tensor(-0.0051, dtype=torch.float64)), (776, tensor(-0.0051, dtype=torch.float64)), (2067, tensor(-0.0051, dtype=torch.float64)), (1907, tensor(-0.0050, dtype=torch.float64)), (1972, tensor(-0.0050, dtype=torch.float64)), (1976, tensor(-0.0050, dtype=torch.float64)), (322, tensor(-0.0049, dtype=torch.float64)), (1690, tensor(-0.0049, dtype=torch.float64)), (793, tensor(-0.0049, dtype=torch.float64)), (401, tensor(-0.0049, dtype=torch.float64)), (1027, tensor(-0.0049, dtype=torch.float64)), (789, tensor(-0.0049, dtype=torch.float64)), (1030, tensor(-0.0049, dtype=torch.float64)), (915, tensor(-0.0049, dtype=torch.float64)), (1739, tensor(-0.0049, dtype=torch.float64)), (826, tensor(-0.0048, dtype=torch.float64)), (283, tensor(-0.0048, dtype=torch.float64)), (1577, tensor(-0.0048, dtype=torch.float64)), (1472, tensor(-0.0048, dtype=torch.float64)), (1251, tensor(-0.0048, dtype=torch.float64)), (1697, tensor(-0.0048, dtype=torch.float64)), (1341, tensor(-0.0047, dtype=torch.float64)), (1076, tensor(-0.0047, dtype=torch.float64)), (1609, tensor(-0.0047, dtype=torch.float64)), (540, tensor(-0.0047, dtype=torch.float64)), (1683, tensor(-0.0047, dtype=torch.float64)), (857, tensor(-0.0047, dtype=torch.float64)), (2358, tensor(-0.0047, dtype=torch.float64)), (493, tensor(-0.0047, dtype=torch.float64)), (484, tensor(-0.0047, dtype=torch.float64)), (124, tensor(-0.0047, dtype=torch.float64)), (103, tensor(-0.0047, dtype=torch.float64)), (1747, tensor(-0.0046, dtype=torch.float64)), (2454, tensor(-0.0046, dtype=torch.float64)), (1753, tensor(-0.0046, dtype=torch.float64)), (1859, tensor(-0.0046, dtype=torch.float64)), (1320, tensor(-0.0046, dtype=torch.float64)), (703, tensor(-0.0046, dtype=torch.float64)), (1342, tensor(-0.0046, dtype=torch.float64)), (1072, tensor(-0.0046, dtype=torch.float64)), (1648, tensor(-0.0045, dtype=torch.float64)), (150, tensor(-0.0045, dtype=torch.float64)), (1394, tensor(-0.0045, dtype=torch.float64)), (1367, tensor(-0.0045, dtype=torch.float64)), (2314, tensor(-0.0045, dtype=torch.float64)), (163, tensor(-0.0045, dtype=torch.float64)), (1002, tensor(-0.0044, dtype=torch.float64)), (809, tensor(-0.0044, dtype=torch.float64)), (1647, tensor(-0.0044, dtype=torch.float64)), (2035, tensor(-0.0044, dtype=torch.float64)), (1552, tensor(-0.0044, dtype=torch.float64)), (469, tensor(-0.0044, dtype=torch.float64)), (55, tensor(-0.0044, dtype=torch.float64)), (447, tensor(-0.0043, dtype=torch.float64)), (486, tensor(-0.0043, dtype=torch.float64)), (122, tensor(-0.0043, dtype=torch.float64)), (1115, tensor(-0.0043, dtype=torch.float64)), (1196, tensor(-0.0043, dtype=torch.float64)), (759, tensor(-0.0043, dtype=torch.float64)), (1924, tensor(-0.0043, dtype=torch.float64)), (2389, tensor(-0.0043, dtype=torch.float64)), (613, tensor(-0.0042, dtype=torch.float64)), (2340, tensor(-0.0042, dtype=torch.float64)), (444, tensor(-0.0042, dtype=torch.float64)), (1607, tensor(-0.0042, dtype=torch.float64)), (1790, tensor(-0.0042, dtype=torch.float64)), (734, tensor(-0.0042, dtype=torch.float64)), (1111, tensor(-0.0042, dtype=torch.float64)), (1632, tensor(-0.0041, dtype=torch.float64)), (1953, tensor(-0.0041, dtype=torch.float64)), (563, tensor(-0.0041, dtype=torch.float64)), (1024, tensor(-0.0041, dtype=torch.float64)), (217, tensor(-0.0041, dtype=torch.float64)), (2243, tensor(-0.0041, dtype=torch.float64)), (538, tensor(-0.0041, dtype=torch.float64)), (845, tensor(-0.0041, dtype=torch.float64)), (2433, tensor(-0.0040, dtype=torch.float64)), (482, tensor(-0.0040, dtype=torch.float64)), (1926, tensor(-0.0040, dtype=torch.float64)), (2445, tensor(-0.0040, dtype=torch.float64)), (1403, tensor(-0.0040, dtype=torch.float64)), (1232, tensor(-0.0039, dtype=torch.float64)), (1525, tensor(-0.0039, dtype=torch.float64)), (2472, tensor(-0.0039, dtype=torch.float64)), (585, tensor(-0.0039, dtype=torch.float64)), (2331, tensor(-0.0039, dtype=torch.float64)), (108, tensor(-0.0039, dtype=torch.float64)), (153, tensor(-0.0038, dtype=torch.float64)), (1095, tensor(-0.0038, dtype=torch.float64)), (1387, tensor(-0.0038, dtype=torch.float64)), (891, tensor(-0.0038, dtype=torch.float64)), (1143, tensor(-0.0038, dtype=torch.float64)), (1654, tensor(-0.0038, dtype=torch.float64)), (2321, tensor(-0.0038, dtype=torch.float64)), (436, tensor(-0.0037, dtype=torch.float64)), (2137, tensor(-0.0037, dtype=torch.float64)), (1442, tensor(-0.0037, dtype=torch.float64)), (1575, tensor(-0.0037, dtype=torch.float64)), (1473, tensor(-0.0037, dtype=torch.float64)), (2447, tensor(-0.0037, dtype=torch.float64)), (243, tensor(-0.0036, dtype=torch.float64)), (2457, tensor(-0.0036, dtype=torch.float64)), (324, tensor(-0.0036, dtype=torch.float64)), (1407, tensor(-0.0036, dtype=torch.float64)), (496, tensor(-0.0036, dtype=torch.float64)), (1642, tensor(-0.0036, dtype=torch.float64)), (2429, tensor(-0.0036, dtype=torch.float64)), (2446, tensor(-0.0036, dtype=torch.float64)), (1136, tensor(-0.0036, dtype=torch.float64)), (201, tensor(-0.0035, dtype=torch.float64)), (449, tensor(-0.0035, dtype=torch.float64)), (137, tensor(-0.0035, dtype=torch.float64)), (2139, tensor(-0.0035, dtype=torch.float64)), (1626, tensor(-0.0035, dtype=torch.float64)), (2054, tensor(-0.0035, dtype=torch.float64)), (1540, tensor(-0.0034, dtype=torch.float64)), (1224, tensor(-0.0034, dtype=torch.float64)), (898, tensor(-0.0034, dtype=torch.float64)), (450, tensor(-0.0034, dtype=torch.float64)), (676, tensor(-0.0034, dtype=torch.float64)), (527, tensor(-0.0034, dtype=torch.float64)), (1731, tensor(-0.0034, dtype=torch.float64)), (1045, tensor(-0.0034, dtype=torch.float64)), (2309, tensor(-0.0034, dtype=torch.float64)), (210, tensor(-0.0034, dtype=torch.float64)), (2296, tensor(-0.0033, dtype=torch.float64)), (254, tensor(-0.0033, dtype=torch.float64)), (2315, tensor(-0.0033, dtype=torch.float64)), (1175, tensor(-0.0033, dtype=torch.float64)), (1458, tensor(-0.0033, dtype=torch.float64)), (2430, tensor(-0.0033, dtype=torch.float64)), (1480, tensor(-0.0033, dtype=torch.float64)), (897, tensor(-0.0033, dtype=torch.float64)), (1711, tensor(-0.0033, dtype=torch.float64)), (14, tensor(-0.0032, dtype=torch.float64)), (182, tensor(-0.0032, dtype=torch.float64)), (1052, tensor(-0.0031, dtype=torch.float64)), (2320, tensor(-0.0031, dtype=torch.float64)), (1359, tensor(-0.0031, dtype=torch.float64)), (1688, tensor(-0.0031, dtype=torch.float64)), (705, tensor(-0.0031, dtype=torch.float64)), (762, tensor(-0.0031, dtype=torch.float64)), (1553, tensor(-0.0031, dtype=torch.float64)), (2023, tensor(-0.0031, dtype=torch.float64)), (1214, tensor(-0.0031, dtype=torch.float64)), (619, tensor(-0.0031, dtype=torch.float64)), (1712, tensor(-0.0030, dtype=torch.float64)), (996, tensor(-0.0030, dtype=torch.float64)), (1909, tensor(-0.0030, dtype=torch.float64)), (804, tensor(-0.0030, dtype=torch.float64)), (1219, tensor(-0.0030, dtype=torch.float64)), (2050, tensor(-0.0030, dtype=torch.float64)), (1954, tensor(-0.0030, dtype=torch.float64)), (506, tensor(-0.0030, dtype=torch.float64)), (1820, tensor(-0.0030, dtype=torch.float64)), (387, tensor(-0.0030, dtype=torch.float64)), (1978, tensor(-0.0030, dtype=torch.float64)), (479, tensor(-0.0029, dtype=torch.float64)), (128, tensor(-0.0029, dtype=torch.float64)), (2404, tensor(-0.0029, dtype=torch.float64)), (349, tensor(-0.0029, dtype=torch.float64)), (1847, tensor(-0.0029, dtype=torch.float64)), (983, tensor(-0.0029, dtype=torch.float64)), (2474, tensor(-0.0029, dtype=torch.float64)), (1309, tensor(-0.0029, dtype=torch.float64)), (1211, tensor(-0.0029, dtype=torch.float64)), (2383, tensor(-0.0029, dtype=torch.float64)), (2060, tensor(-0.0029, dtype=torch.float64)), (1702, tensor(-0.0029, dtype=torch.float64)), (1941, tensor(-0.0029, dtype=torch.float64)), (775, tensor(-0.0029, dtype=torch.float64)), (781, tensor(-0.0029, dtype=torch.float64)), (69, tensor(-0.0029, dtype=torch.float64)), (833, tensor(-0.0029, dtype=torch.float64)), (2436, tensor(-0.0028, dtype=torch.float64)), (2042, tensor(-0.0028, dtype=torch.float64)), (1149, tensor(-0.0028, dtype=torch.float64)), (1377, tensor(-0.0028, dtype=torch.float64)), (727, tensor(-0.0028, dtype=torch.float64)), (1116, tensor(-0.0028, dtype=torch.float64)), (1203, tensor(-0.0028, dtype=torch.float64)), (329, tensor(-0.0028, dtype=torch.float64)), (1297, tensor(-0.0027, dtype=torch.float64)), (2086, tensor(-0.0027, dtype=torch.float64)), (565, tensor(-0.0027, dtype=torch.float64)), (2476, tensor(-0.0027, dtype=torch.float64)), (281, tensor(-0.0027, dtype=torch.float64)), (205, tensor(-0.0027, dtype=torch.float64)), (1682, tensor(-0.0026, dtype=torch.float64)), (1056, tensor(-0.0026, dtype=torch.float64)), (2293, tensor(-0.0026, dtype=torch.float64)), (532, tensor(-0.0026, dtype=torch.float64)), (1161, tensor(-0.0026, dtype=torch.float64)), (1307, tensor(-0.0026, dtype=torch.float64)), (1792, tensor(-0.0026, dtype=torch.float64)), (1885, tensor(-0.0026, dtype=torch.float64)), (1412, tensor(-0.0026, dtype=torch.float64)), (1718, tensor(-0.0025, dtype=torch.float64)), (2198, tensor(-0.0025, dtype=torch.float64)), (2096, tensor(-0.0025, dtype=torch.float64)), (497, tensor(-0.0025, dtype=torch.float64)), (1335, tensor(-0.0025, dtype=torch.float64)), (2164, tensor(-0.0025, dtype=torch.float64)), (639, tensor(-0.0024, dtype=torch.float64)), (453, tensor(-0.0024, dtype=torch.float64)), (1635, tensor(-0.0024, dtype=torch.float64)), (2195, tensor(-0.0024, dtype=torch.float64)), (1456, tensor(-0.0024, dtype=torch.float64)), (536, tensor(-0.0024, dtype=torch.float64)), (1778, tensor(-0.0024, dtype=torch.float64)), (91, tensor(-0.0024, dtype=torch.float64)), (2247, tensor(-0.0024, dtype=torch.float64)), (386, tensor(-0.0024, dtype=torch.float64)), (877, tensor(-0.0023, dtype=torch.float64)), (1215, tensor(-0.0023, dtype=torch.float64)), (2451, tensor(-0.0023, dtype=torch.float64)), (1390, tensor(-0.0023, dtype=torch.float64)), (1975, tensor(-0.0023, dtype=torch.float64)), (1134, tensor(-0.0023, dtype=torch.float64)), (631, tensor(-0.0023, dtype=torch.float64)), (2129, tensor(-0.0023, dtype=torch.float64)), (1623, tensor(-0.0023, dtype=torch.float64)), (911, tensor(-0.0023, dtype=torch.float64)), (931, tensor(-0.0023, dtype=torch.float64)), (1245, tensor(-0.0023, dtype=torch.float64)), (1643, tensor(-0.0022, dtype=torch.float64)), (1579, tensor(-0.0022, dtype=torch.float64)), (158, tensor(-0.0022, dtype=torch.float64)), (885, tensor(-0.0022, dtype=torch.float64)), (1767, tensor(-0.0022, dtype=torch.float64)), (1701, tensor(-0.0022, dtype=torch.float64)), (939, tensor(-0.0022, dtype=torch.float64)), (1911, tensor(-0.0022, dtype=torch.float64)), (1998, tensor(-0.0022, dtype=torch.float64)), (491, tensor(-0.0022, dtype=torch.float64)), (1152, tensor(-0.0022, dtype=torch.float64)), (115, tensor(-0.0022, dtype=torch.float64)), (914, tensor(-0.0022, dtype=torch.float64)), (1314, tensor(-0.0022, dtype=torch.float64)), (1075, tensor(-0.0022, dtype=torch.float64)), (629, tensor(-0.0021, dtype=torch.float64)), (1528, tensor(-0.0021, dtype=torch.float64)), (2409, tensor(-0.0021, dtype=torch.float64)), (712, tensor(-0.0021, dtype=torch.float64)), (11, tensor(-0.0021, dtype=torch.float64)), (2405, tensor(-0.0021, dtype=torch.float64)), (1046, tensor(-0.0020, dtype=torch.float64)), (1561, tensor(-0.0020, dtype=torch.float64)), (62, tensor(-0.0020, dtype=torch.float64)), (2224, tensor(-0.0020, dtype=torch.float64)), (995, tensor(-0.0020, dtype=torch.float64)), (1841, tensor(-0.0020, dtype=torch.float64)), (618, tensor(-0.0020, dtype=torch.float64)), (1974, tensor(-0.0019, dtype=torch.float64)), (1144, tensor(-0.0019, dtype=torch.float64)), (1587, tensor(-0.0019, dtype=torch.float64)), (1855, tensor(-0.0019, dtype=torch.float64)), (203, tensor(-0.0019, dtype=torch.float64)), (358, tensor(-0.0018, dtype=torch.float64)), (1798, tensor(-0.0018, dtype=torch.float64)), (709, tensor(-0.0018, dtype=torch.float64)), (1181, tensor(-0.0018, dtype=torch.float64)), (427, tensor(-0.0017, dtype=torch.float64)), (1186, tensor(-0.0017, dtype=torch.float64)), (212, tensor(-0.0017, dtype=torch.float64)), (1585, tensor(-0.0017, dtype=torch.float64)), (104, tensor(-0.0017, dtype=torch.float64)), (1615, tensor(-0.0017, dtype=torch.float64)), (1477, tensor(-0.0017, dtype=torch.float64)), (659, tensor(-0.0017, dtype=torch.float64)), (2291, tensor(-0.0017, dtype=torch.float64)), (224, tensor(-0.0016, dtype=torch.float64)), (1326, tensor(-0.0016, dtype=torch.float64)), (2287, tensor(-0.0016, dtype=torch.float64)), (1327, tensor(-0.0016, dtype=torch.float64)), (168, tensor(-0.0016, dtype=torch.float64)), (1105, tensor(-0.0016, dtype=torch.float64)), (2180, tensor(-0.0016, dtype=torch.float64)), (1562, tensor(-0.0016, dtype=torch.float64)), (1546, tensor(-0.0016, dtype=torch.float64)), (2286, tensor(-0.0016, dtype=torch.float64)), (725, tensor(-0.0016, dtype=torch.float64)), (1815, tensor(-0.0016, dtype=torch.float64)), (751, tensor(-0.0016, dtype=torch.float64)), (1391, tensor(-0.0015, dtype=torch.float64)), (718, tensor(-0.0015, dtype=torch.float64)), (1984, tensor(-0.0015, dtype=torch.float64)), (1465, tensor(-0.0014, dtype=torch.float64)), (2306, tensor(-0.0014, dtype=torch.float64)), (1842, tensor(-0.0014, dtype=torch.float64)), (1288, tensor(-0.0014, dtype=torch.float64)), (1508, tensor(-0.0014, dtype=torch.float64)), (1545, tensor(-0.0014, dtype=torch.float64)), (1243, tensor(-0.0014, dtype=torch.float64)), (495, tensor(-0.0013, dtype=torch.float64)), (1566, tensor(-0.0013, dtype=torch.float64)), (2264, tensor(-0.0013, dtype=torch.float64)), (2225, tensor(-0.0013, dtype=torch.float64)), (1929, tensor(-0.0013, dtype=torch.float64)), (1139, tensor(-0.0013, dtype=torch.float64)), (420, tensor(-0.0013, dtype=torch.float64)), (1366, tensor(-0.0013, dtype=torch.float64)), (2227, tensor(-0.0012, dtype=torch.float64)), (811, tensor(-0.0012, dtype=torch.float64)), (1840, tensor(-0.0012, dtype=torch.float64)), (621, tensor(-0.0012, dtype=torch.float64)), (2459, tensor(-0.0012, dtype=torch.float64)), (735, tensor(-0.0012, dtype=torch.float64)), (684, tensor(-0.0012, dtype=torch.float64)), (92, tensor(-0.0012, dtype=torch.float64)), (2236, tensor(-0.0012, dtype=torch.float64)), (2452, tensor(-0.0012, dtype=torch.float64)), (708, tensor(-0.0012, dtype=torch.float64)), (30, tensor(-0.0011, dtype=torch.float64)), (884, tensor(-0.0011, dtype=torch.float64)), (131, tensor(-0.0011, dtype=torch.float64)), (2292, tensor(-0.0011, dtype=torch.float64)), (2012, tensor(-0.0011, dtype=torch.float64)), (13, tensor(-0.0011, dtype=torch.float64)), (883, tensor(-0.0011, dtype=torch.float64)), (2302, tensor(-0.0011, dtype=torch.float64)), (546, tensor(-0.0011, dtype=torch.float64)), (702, tensor(-0.0010, dtype=torch.float64)), (2059, tensor(-0.0010, dtype=torch.float64)), (1106, tensor(-0.0010, dtype=torch.float64)), (2330, tensor(-0.0010, dtype=torch.float64)), (1996, tensor(-0.0009, dtype=torch.float64)), (2128, tensor(-0.0009, dtype=torch.float64)), (2365, tensor(-0.0009, dtype=torch.float64)), (2138, tensor(-0.0009, dtype=torch.float64)), (16, tensor(-0.0009, dtype=torch.float64)), (2026, tensor(-0.0009, dtype=torch.float64)), (2034, tensor(-0.0009, dtype=torch.float64)), (1853, tensor(-0.0008, dtype=torch.float64)), (1595, tensor(-0.0008, dtype=torch.float64)), (234, tensor(-0.0008, dtype=torch.float64)), (87, tensor(-0.0008, dtype=torch.float64)), (551, tensor(-0.0008, dtype=torch.float64)), (812, tensor(-0.0008, dtype=torch.float64)), (431, tensor(-0.0007, dtype=torch.float64)), (1729, tensor(-0.0007, dtype=torch.float64)), (422, tensor(-0.0007, dtype=torch.float64)), (1991, tensor(-0.0007, dtype=torch.float64)), (918, tensor(-0.0007, dtype=torch.float64)), (1444, tensor(-0.0007, dtype=torch.float64)), (1667, tensor(-0.0007, dtype=torch.float64)), (164, tensor(-0.0007, dtype=torch.float64)), (1357, tensor(-0.0006, dtype=torch.float64)), (320, tensor(-0.0006, dtype=torch.float64)), (2149, tensor(-0.0006, dtype=torch.float64)), (266, tensor(-0.0006, dtype=torch.float64)), (1949, tensor(-0.0005, dtype=torch.float64)), (601, tensor(-0.0005, dtype=torch.float64)), (928, tensor(-0.0004, dtype=torch.float64)), (1898, tensor(-0.0003, dtype=torch.float64)), (241, tensor(-0.0003, dtype=torch.float64)), (2463, tensor(-0.0003, dtype=torch.float64))]
annotated_samples_num: 1190
unannotated_samples_num: 2354
update datapool!
annotated_samples_num: 1190
unannotated_samples_num: 2354
iter: 7
annotated_samples_num: 1190
unannotated_samples_num: 2354
Epoch [1/10], Batch [1/148], Loss: 4.4989
Epoch [1/10], Batch [2/148], Loss: 4.3194
Epoch [1/10], Batch [3/148], Loss: 3.1304
Epoch [1/10], Batch [4/148], Loss: 2.3111
Epoch [1/10], Batch [5/148], Loss: 2.0814
Epoch [1/10], Batch [6/148], Loss: 1.7965
Epoch [1/10], Batch [7/148], Loss: 1.7100
Epoch [1/10], Batch [8/148], Loss: 1.5538
Epoch [1/10], Batch [9/148], Loss: 1.1802
Epoch [1/10], Batch [10/148], Loss: 1.2831
Epoch [1/10], Batch [11/148], Loss: 0.9759
Epoch [1/10], Batch [12/148], Loss: 1.0692
Epoch [1/10], Batch [13/148], Loss: 0.8307
Epoch [1/10], Batch [14/148], Loss: 0.7010
Epoch [1/10], Batch [15/148], Loss: 0.9119
Epoch [1/10], Batch [16/148], Loss: 0.7680
Epoch [1/10], Batch [17/148], Loss: 0.8341
Epoch [1/10], Batch [18/148], Loss: 0.7435
Epoch [1/10], Batch [19/148], Loss: 0.7973
Epoch [1/10], Batch [20/148], Loss: 0.7913
Epoch [1/10], Batch [21/148], Loss: 0.5849
Epoch [1/10], Batch [22/148], Loss: 0.4848
Epoch [1/10], Batch [23/148], Loss: 0.5434
Epoch [1/10], Batch [24/148], Loss: 0.5095
Epoch [1/10], Batch [25/148], Loss: 0.6263
Epoch [1/10], Batch [26/148], Loss: 0.6347
Epoch [1/10], Batch [27/148], Loss: 0.3757
Epoch [1/10], Batch [28/148], Loss: 0.3783
Epoch [1/10], Batch [29/148], Loss: 0.5374
Epoch [1/10], Batch [30/148], Loss: 0.5399
Epoch [1/10], Batch [31/148], Loss: 0.6262
Epoch [1/10], Batch [32/148], Loss: 0.5078
Epoch [1/10], Batch [33/148], Loss: 0.3726
Epoch [1/10], Batch [34/148], Loss: 0.7038
Epoch [1/10], Batch [35/148], Loss: 0.3441
Epoch [1/10], Batch [36/148], Loss: 0.3235
Epoch [1/10], Batch [37/148], Loss: 0.4846
Epoch [1/10], Batch [38/148], Loss: 0.3696
Epoch [1/10], Batch [39/148], Loss: 0.8600
Epoch [1/10], Batch [40/148], Loss: 0.3811
Epoch [1/10], Batch [41/148], Loss: 0.3891
Epoch [1/10], Batch [42/148], Loss: 0.3783
Epoch [1/10], Batch [43/148], Loss: 0.5046
Epoch [1/10], Batch [44/148], Loss: 0.4098
Epoch [1/10], Batch [45/148], Loss: 0.2974
Epoch [1/10], Batch [46/148], Loss: 0.3282
Epoch [1/10], Batch [47/148], Loss: 0.3575
Epoch [1/10], Batch [48/148], Loss: 0.3249
Epoch [1/10], Batch [49/148], Loss: 0.3928
Epoch [1/10], Batch [50/148], Loss: 0.3763
Epoch [1/10], Batch [51/148], Loss: 0.3494
Epoch [1/10], Batch [52/148], Loss: 0.3913
Epoch [1/10], Batch [53/148], Loss: 0.3304
Epoch [1/10], Batch [54/148], Loss: 0.3814
Epoch [1/10], Batch [55/148], Loss: 0.1946
Epoch [1/10], Batch [56/148], Loss: 0.3718
Epoch [1/10], Batch [57/148], Loss: 0.3266
Epoch [1/10], Batch [58/148], Loss: 0.2185
Epoch [1/10], Batch [59/148], Loss: 0.4474
Epoch [1/10], Batch [60/148], Loss: 0.2071
Epoch [1/10], Batch [61/148], Loss: 0.6907
Epoch [1/10], Batch [62/148], Loss: 0.5290
Epoch [1/10], Batch [63/148], Loss: 0.3519
Epoch [1/10], Batch [64/148], Loss: 0.4512
Epoch [1/10], Batch [65/148], Loss: 0.6051
Epoch [1/10], Batch [66/148], Loss: 0.4125
Epoch [1/10], Batch [67/148], Loss: 0.4300
Epoch [1/10], Batch [68/148], Loss: 0.5712
Epoch [1/10], Batch [69/148], Loss: 0.2431
Epoch [1/10], Batch [70/148], Loss: 0.8564
Epoch [1/10], Batch [71/148], Loss: 0.2305
Epoch [1/10], Batch [72/148], Loss: 0.2236
Epoch [1/10], Batch [73/148], Loss: 0.3478
Epoch [1/10], Batch [74/148], Loss: 0.4126
Epoch [1/10], Batch [75/148], Loss: 0.4236
Epoch [1/10], Batch [76/148], Loss: 0.4638
Epoch [1/10], Batch [77/148], Loss: 0.2968
Epoch [1/10], Batch [78/148], Loss: 0.3639
Epoch [1/10], Batch [79/148], Loss: 0.2997
Epoch [1/10], Batch [80/148], Loss: 0.2898
Epoch [1/10], Batch [81/148], Loss: 0.3822
Epoch [1/10], Batch [82/148], Loss: 0.2656
Epoch [1/10], Batch [83/148], Loss: 0.8518
Epoch [1/10], Batch [84/148], Loss: 0.3969
Epoch [1/10], Batch [85/148], Loss: 0.2428
Epoch [1/10], Batch [86/148], Loss: 0.4043
Epoch [1/10], Batch [87/148], Loss: 0.3647
Epoch [1/10], Batch [88/148], Loss: 0.5816
Epoch [1/10], Batch [89/148], Loss: 0.5802
Epoch [1/10], Batch [90/148], Loss: 0.3316
Epoch [1/10], Batch [91/148], Loss: 0.4473
Epoch [1/10], Batch [92/148], Loss: 0.5072
Epoch [1/10], Batch [93/148], Loss: 0.4434
Epoch [1/10], Batch [94/148], Loss: 0.2644
Epoch [1/10], Batch [95/148], Loss: 0.3401
Epoch [1/10], Batch [96/148], Loss: 0.2765
Epoch [1/10], Batch [97/148], Loss: 0.3122
Epoch [1/10], Batch [98/148], Loss: 0.3194
Epoch [1/10], Batch [99/148], Loss: 0.4649
Epoch [1/10], Batch [100/148], Loss: 0.3099
Epoch [1/10], Batch [101/148], Loss: 0.3092
Epoch [1/10], Batch [102/148], Loss: 0.2594
Epoch [1/10], Batch [103/148], Loss: 0.2990
Epoch [1/10], Batch [104/148], Loss: 0.2354
Epoch [1/10], Batch [105/148], Loss: 0.3923
Epoch [1/10], Batch [106/148], Loss: 0.2571
Epoch [1/10], Batch [107/148], Loss: 0.2332
Epoch [1/10], Batch [108/148], Loss: 0.5372
Epoch [1/10], Batch [109/148], Loss: 0.3349
Epoch [1/10], Batch [110/148], Loss: 0.4133
Epoch [1/10], Batch [111/148], Loss: 0.3025
Epoch [1/10], Batch [112/148], Loss: 0.3404
Epoch [1/10], Batch [113/148], Loss: 0.1495
Epoch [1/10], Batch [114/148], Loss: 0.2287
Epoch [1/10], Batch [115/148], Loss: 0.3202
Epoch [1/10], Batch [116/148], Loss: 0.4774
Epoch [1/10], Batch [117/148], Loss: 0.3815
Epoch [1/10], Batch [118/148], Loss: 0.7108
Epoch [1/10], Batch [119/148], Loss: 0.3109
Epoch [1/10], Batch [120/148], Loss: 0.3143
Epoch [1/10], Batch [121/148], Loss: 0.4739
Epoch [1/10], Batch [122/148], Loss: 0.4547
Epoch [1/10], Batch [123/148], Loss: 0.2695
Epoch [1/10], Batch [124/148], Loss: 0.4484
Epoch [1/10], Batch [125/148], Loss: 0.6382
Epoch [1/10], Batch [126/148], Loss: 0.2441
Epoch [1/10], Batch [127/148], Loss: 0.4224
Epoch [1/10], Batch [128/148], Loss: 0.3399
Epoch [1/10], Batch [129/148], Loss: 0.1905
Epoch [1/10], Batch [130/148], Loss: 0.4961
Epoch [1/10], Batch [131/148], Loss: 0.3580
Epoch [1/10], Batch [132/148], Loss: 0.4014
Epoch [1/10], Batch [133/148], Loss: 0.3803
Epoch [1/10], Batch [134/148], Loss: 0.2480
Epoch [1/10], Batch [135/148], Loss: 0.3228
Epoch [1/10], Batch [136/148], Loss: 0.3650
Epoch [1/10], Batch [137/148], Loss: 0.5157
Epoch [1/10], Batch [138/148], Loss: 0.1917
Epoch [1/10], Batch [139/148], Loss: 0.1787
Epoch [1/10], Batch [140/148], Loss: 0.3369
Epoch [1/10], Batch [141/148], Loss: 0.4248
Epoch [1/10], Batch [142/148], Loss: 0.3377
Epoch [1/10], Batch [143/148], Loss: 0.1894
Epoch [1/10], Batch [144/148], Loss: 0.6949
Epoch [1/10], Batch [145/148], Loss: 0.3853
Epoch [1/10], Batch [146/148], Loss: 0.2268
Epoch [1/10], Batch [147/148], Loss: 0.3699
Epoch [1/10], Batch [148/148], Loss: 0.2531
Epoch [1/10], Average Loss: 0.5608
-----------------------------------------------------------
strategy: BEAM
iter: 7
epoch: 0
Test Loss: 0.2606
F1_overall: 0.5471
F1_AGENT: 0.6907
F1_TARGET: 0.4133
-----------------------------------------------------------
Epoch [2/10], Batch [1/148], Loss: 0.2320
Epoch [2/10], Batch [2/148], Loss: 0.1982
Epoch [2/10], Batch [3/148], Loss: 0.1886
Epoch [2/10], Batch [4/148], Loss: 0.2212
Epoch [2/10], Batch [5/148], Loss: 0.2544
Epoch [2/10], Batch [6/148], Loss: 0.2469
Epoch [2/10], Batch [7/148], Loss: 0.1874
Epoch [2/10], Batch [8/148], Loss: 0.3027
Epoch [2/10], Batch [9/148], Loss: 0.4383
Epoch [2/10], Batch [10/148], Loss: 0.3898
Epoch [2/10], Batch [11/148], Loss: 0.3843
Epoch [2/10], Batch [12/148], Loss: 0.6142
Epoch [2/10], Batch [13/148], Loss: 0.1320
Epoch [2/10], Batch [14/148], Loss: 0.1776
Epoch [2/10], Batch [15/148], Loss: 0.2894
Epoch [2/10], Batch [16/148], Loss: 0.2325
Epoch [2/10], Batch [17/148], Loss: 0.2767
Epoch [2/10], Batch [18/148], Loss: 0.2148
Epoch [2/10], Batch [19/148], Loss: 0.2122
Epoch [2/10], Batch [20/148], Loss: 0.3265
Epoch [2/10], Batch [21/148], Loss: 0.1955
Epoch [2/10], Batch [22/148], Loss: 0.1740
Epoch [2/10], Batch [23/148], Loss: 0.2133
Epoch [2/10], Batch [24/148], Loss: 0.3525
Epoch [2/10], Batch [25/148], Loss: 0.1875
Epoch [2/10], Batch [26/148], Loss: 0.2606
Epoch [2/10], Batch [27/148], Loss: 0.2436
Epoch [2/10], Batch [28/148], Loss: 0.2189
Epoch [2/10], Batch [29/148], Loss: 0.3109
Epoch [2/10], Batch [30/148], Loss: 0.1444
Epoch [2/10], Batch [31/148], Loss: 0.3016
Epoch [2/10], Batch [32/148], Loss: 0.4565
Epoch [2/10], Batch [33/148], Loss: 0.3034
Epoch [2/10], Batch [34/148], Loss: 0.1416
Epoch [2/10], Batch [35/148], Loss: 0.1931
Epoch [2/10], Batch [36/148], Loss: 0.3514
Epoch [2/10], Batch [37/148], Loss: 0.2529
Epoch [2/10], Batch [38/148], Loss: 0.1967
Epoch [2/10], Batch [39/148], Loss: 0.3157
Epoch [2/10], Batch [40/148], Loss: 0.3950
Epoch [2/10], Batch [41/148], Loss: 0.3138
Epoch [2/10], Batch [42/148], Loss: 0.2464
Epoch [2/10], Batch [43/148], Loss: 0.1775
Epoch [2/10], Batch [44/148], Loss: 0.2191
Epoch [2/10], Batch [45/148], Loss: 0.2841
Epoch [2/10], Batch [46/148], Loss: 0.2116
Epoch [2/10], Batch [47/148], Loss: 0.1938
Epoch [2/10], Batch [48/148], Loss: 0.2585
Epoch [2/10], Batch [49/148], Loss: 0.1977
Epoch [2/10], Batch [50/148], Loss: 0.1764
Epoch [2/10], Batch [51/148], Loss: 0.1888
Epoch [2/10], Batch [52/148], Loss: 0.2317
Epoch [2/10], Batch [53/148], Loss: 0.1753
Epoch [2/10], Batch [54/148], Loss: 0.2675
Epoch [2/10], Batch [55/148], Loss: 0.2377
Epoch [2/10], Batch [56/148], Loss: 0.1943
Epoch [2/10], Batch [57/148], Loss: 0.2910
Epoch [2/10], Batch [58/148], Loss: 0.1688
Epoch [2/10], Batch [59/148], Loss: 0.2091
Epoch [2/10], Batch [60/148], Loss: 0.1836
Epoch [2/10], Batch [61/148], Loss: 0.1612
Epoch [2/10], Batch [62/148], Loss: 0.2301
Epoch [2/10], Batch [63/148], Loss: 0.1899
Epoch [2/10], Batch [64/148], Loss: 0.4862
Epoch [2/10], Batch [65/148], Loss: 0.3027
Epoch [2/10], Batch [66/148], Loss: 0.4445
Epoch [2/10], Batch [67/148], Loss: 0.1882
Epoch [2/10], Batch [68/148], Loss: 0.2779
Epoch [2/10], Batch [69/148], Loss: 0.1706
Epoch [2/10], Batch [70/148], Loss: 0.2302
Epoch [2/10], Batch [71/148], Loss: 0.3292
Epoch [2/10], Batch [72/148], Loss: 0.1840
Epoch [2/10], Batch [73/148], Loss: 0.4076
Epoch [2/10], Batch [74/148], Loss: 0.2507
Epoch [2/10], Batch [75/148], Loss: 0.3346
Epoch [2/10], Batch [76/148], Loss: 0.2143
Epoch [2/10], Batch [77/148], Loss: 0.2042
Epoch [2/10], Batch [78/148], Loss: 0.3806
Epoch [2/10], Batch [79/148], Loss: 0.2581
Epoch [2/10], Batch [80/148], Loss: 0.3710
Epoch [2/10], Batch [81/148], Loss: 0.4633
Epoch [2/10], Batch [82/148], Loss: 0.1463
Epoch [2/10], Batch [83/148], Loss: 0.1954
Epoch [2/10], Batch [84/148], Loss: 0.2707
Epoch [2/10], Batch [85/148], Loss: 0.2879
Epoch [2/10], Batch [86/148], Loss: 0.2441
Epoch [2/10], Batch [87/148], Loss: 0.2887
Epoch [2/10], Batch [88/148], Loss: 0.3259
Epoch [2/10], Batch [89/148], Loss: 0.2171
Epoch [2/10], Batch [90/148], Loss: 0.2518
Epoch [2/10], Batch [91/148], Loss: 0.3334
Epoch [2/10], Batch [92/148], Loss: 0.3203
Epoch [2/10], Batch [93/148], Loss: 0.2513
Epoch [2/10], Batch [94/148], Loss: 0.3248
Epoch [2/10], Batch [95/148], Loss: 0.2835
Epoch [2/10], Batch [96/148], Loss: 0.2330
Epoch [2/10], Batch [97/148], Loss: 0.3950
Epoch [2/10], Batch [98/148], Loss: 0.2154
Epoch [2/10], Batch [99/148], Loss: 0.2176
Epoch [2/10], Batch [100/148], Loss: 0.1501
Epoch [2/10], Batch [101/148], Loss: 0.4462
Epoch [2/10], Batch [102/148], Loss: 0.1503
Epoch [2/10], Batch [103/148], Loss: 0.1693
Epoch [2/10], Batch [104/148], Loss: 0.2838
Epoch [2/10], Batch [105/148], Loss: 0.1885
Epoch [2/10], Batch [106/148], Loss: 0.3884
Epoch [2/10], Batch [107/148], Loss: 0.1684
Epoch [2/10], Batch [108/148], Loss: 0.2982
Epoch [2/10], Batch [109/148], Loss: 0.3193
Epoch [2/10], Batch [110/148], Loss: 0.2511
Epoch [2/10], Batch [111/148], Loss: 0.2917
Epoch [2/10], Batch [112/148], Loss: 0.2768
Epoch [2/10], Batch [113/148], Loss: 0.2708
Epoch [2/10], Batch [114/148], Loss: 0.2118
Epoch [2/10], Batch [115/148], Loss: 0.2667
Epoch [2/10], Batch [116/148], Loss: 0.2643
Epoch [2/10], Batch [117/148], Loss: 0.2322
Epoch [2/10], Batch [118/148], Loss: 0.2689
Epoch [2/10], Batch [119/148], Loss: 0.2903
Epoch [2/10], Batch [120/148], Loss: 0.2518
Epoch [2/10], Batch [121/148], Loss: 0.1259
Epoch [2/10], Batch [122/148], Loss: 0.1891
Epoch [2/10], Batch [123/148], Loss: 0.2119
Epoch [2/10], Batch [124/148], Loss: 0.5786
Epoch [2/10], Batch [125/148], Loss: 0.0771
Epoch [2/10], Batch [126/148], Loss: 0.2567
Epoch [2/10], Batch [127/148], Loss: 0.1846
Epoch [2/10], Batch [128/148], Loss: 0.2826
Epoch [2/10], Batch [129/148], Loss: 0.1789
Epoch [2/10], Batch [130/148], Loss: 0.3143
Epoch [2/10], Batch [131/148], Loss: 0.3865
Epoch [2/10], Batch [132/148], Loss: 0.2741
Epoch [2/10], Batch [133/148], Loss: 0.3448
Epoch [2/10], Batch [134/148], Loss: 0.3689
Epoch [2/10], Batch [135/148], Loss: 0.2483
Epoch [2/10], Batch [136/148], Loss: 0.3471
Epoch [2/10], Batch [137/148], Loss: 0.3497
Epoch [2/10], Batch [138/148], Loss: 0.3851
Epoch [2/10], Batch [139/148], Loss: 0.1544
Epoch [2/10], Batch [140/148], Loss: 0.3123
Epoch [2/10], Batch [141/148], Loss: 0.3209
Epoch [2/10], Batch [142/148], Loss: 0.3127
Epoch [2/10], Batch [143/148], Loss: 0.2862
Epoch [2/10], Batch [144/148], Loss: 0.2795
Epoch [2/10], Batch [145/148], Loss: 0.2607
Epoch [2/10], Batch [146/148], Loss: 0.2517
Epoch [2/10], Batch [147/148], Loss: 0.3848
Epoch [2/10], Batch [148/148], Loss: 0.2632
Epoch [2/10], Average Loss: 0.2663
-----------------------------------------------------------
strategy: BEAM
iter: 7
epoch: 1
Test Loss: 0.2747
F1_overall: 0.5522
F1_AGENT: 0.7046
F1_TARGET: 0.3823
-----------------------------------------------------------
Epoch [3/10], Batch [1/148], Loss: 0.1041
Epoch [3/10], Batch [2/148], Loss: 0.1379
Epoch [3/10], Batch [3/148], Loss: 0.1026
Epoch [3/10], Batch [4/148], Loss: 0.1056
Epoch [3/10], Batch [5/148], Loss: 0.1615
Epoch [3/10], Batch [6/148], Loss: 0.1627
Epoch [3/10], Batch [7/148], Loss: 0.1685
Epoch [3/10], Batch [8/148], Loss: 0.1158
Epoch [3/10], Batch [9/148], Loss: 0.2804
Epoch [3/10], Batch [10/148], Loss: 0.2015
Epoch [3/10], Batch [11/148], Loss: 0.1929
Epoch [3/10], Batch [12/148], Loss: 0.1233
Epoch [3/10], Batch [13/148], Loss: 0.1451
Epoch [3/10], Batch [14/148], Loss: 0.1856
Epoch [3/10], Batch [15/148], Loss: 0.1853
Epoch [3/10], Batch [16/148], Loss: 0.1652
Epoch [3/10], Batch [17/148], Loss: 0.1411
Epoch [3/10], Batch [18/148], Loss: 0.1532
Epoch [3/10], Batch [19/148], Loss: 0.1692
Epoch [3/10], Batch [20/148], Loss: 0.2264
Epoch [3/10], Batch [21/148], Loss: 0.1220
Epoch [3/10], Batch [22/148], Loss: 0.1773
Epoch [3/10], Batch [23/148], Loss: 0.1294
Epoch [3/10], Batch [24/148], Loss: 0.2093
Epoch [3/10], Batch [25/148], Loss: 0.1315
Epoch [3/10], Batch [26/148], Loss: 0.1676
Epoch [3/10], Batch [27/148], Loss: 0.1664
Epoch [3/10], Batch [28/148], Loss: 0.2491
Epoch [3/10], Batch [29/148], Loss: 0.1038
Epoch [3/10], Batch [30/148], Loss: 0.1377
Epoch [3/10], Batch [31/148], Loss: 0.1420
Epoch [3/10], Batch [32/148], Loss: 0.1150
Epoch [3/10], Batch [33/148], Loss: 0.1118
Epoch [3/10], Batch [34/148], Loss: 0.2525
Epoch [3/10], Batch [35/148], Loss: 0.1389
Epoch [3/10], Batch [36/148], Loss: 0.1465
Epoch [3/10], Batch [37/148], Loss: 0.1327
Epoch [3/10], Batch [38/148], Loss: 0.1223
Epoch [3/10], Batch [39/148], Loss: 0.1627
Epoch [3/10], Batch [40/148], Loss: 0.1254
Epoch [3/10], Batch [41/148], Loss: 0.1942
Epoch [3/10], Batch [42/148], Loss: 0.2811
Epoch [3/10], Batch [43/148], Loss: 0.1255
Epoch [3/10], Batch [44/148], Loss: 0.2759
Epoch [3/10], Batch [45/148], Loss: 0.4297
Epoch [3/10], Batch [46/148], Loss: 0.1263
Epoch [3/10], Batch [47/148], Loss: 0.1518
Epoch [3/10], Batch [48/148], Loss: 0.0912
Epoch [3/10], Batch [49/148], Loss: 0.0930
Epoch [3/10], Batch [50/148], Loss: 0.1809
Epoch [3/10], Batch [51/148], Loss: 0.2977
Epoch [3/10], Batch [52/148], Loss: 0.2916
Epoch [3/10], Batch [53/148], Loss: 0.1419
Epoch [3/10], Batch [54/148], Loss: 0.2191
Epoch [3/10], Batch [55/148], Loss: 0.1384
Epoch [3/10], Batch [56/148], Loss: 0.1003
Epoch [3/10], Batch [57/148], Loss: 0.1182
Epoch [3/10], Batch [58/148], Loss: 0.1545
Epoch [3/10], Batch [59/148], Loss: 0.1090
Epoch [3/10], Batch [60/148], Loss: 0.2366
Epoch [3/10], Batch [61/148], Loss: 0.1807
Epoch [3/10], Batch [62/148], Loss: 0.1917
Epoch [3/10], Batch [63/148], Loss: 0.1672
Epoch [3/10], Batch [64/148], Loss: 0.0981
Epoch [3/10], Batch [65/148], Loss: 0.3201
Epoch [3/10], Batch [66/148], Loss: 0.1252
Epoch [3/10], Batch [67/148], Loss: 0.2831
Epoch [3/10], Batch [68/148], Loss: 0.1974
Epoch [3/10], Batch [69/148], Loss: 0.2020
Epoch [3/10], Batch [70/148], Loss: 0.1055
Epoch [3/10], Batch [71/148], Loss: 0.1578
Epoch [3/10], Batch [72/148], Loss: 0.1802
Epoch [3/10], Batch [73/148], Loss: 0.2324
Epoch [3/10], Batch [74/148], Loss: 0.2240
Epoch [3/10], Batch [75/148], Loss: 0.1489
Epoch [3/10], Batch [76/148], Loss: 0.1628
Epoch [3/10], Batch [77/148], Loss: 0.2890
Epoch [3/10], Batch [78/148], Loss: 0.1434
Epoch [3/10], Batch [79/148], Loss: 0.1121
Epoch [3/10], Batch [80/148], Loss: 0.1160
Epoch [3/10], Batch [81/148], Loss: 0.0818
Epoch [3/10], Batch [82/148], Loss: 0.1924
Epoch [3/10], Batch [83/148], Loss: 0.2958
Epoch [3/10], Batch [84/148], Loss: 0.1608
Epoch [3/10], Batch [85/148], Loss: 0.1772
Epoch [3/10], Batch [86/148], Loss: 0.1988
Epoch [3/10], Batch [87/148], Loss: 0.1180
Epoch [3/10], Batch [88/148], Loss: 0.1182
Epoch [3/10], Batch [89/148], Loss: 0.2767
Epoch [3/10], Batch [90/148], Loss: 0.1639
Epoch [3/10], Batch [91/148], Loss: 0.1662
Epoch [3/10], Batch [92/148], Loss: 0.2156
Epoch [3/10], Batch [93/148], Loss: 0.2405
Epoch [3/10], Batch [94/148], Loss: 0.2443
Epoch [3/10], Batch [95/148], Loss: 0.2258
Epoch [3/10], Batch [96/148], Loss: 0.3352
Epoch [3/10], Batch [97/148], Loss: 0.1796
Epoch [3/10], Batch [98/148], Loss: 0.1328
Epoch [3/10], Batch [99/148], Loss: 0.2093
Epoch [3/10], Batch [100/148], Loss: 0.2022
Epoch [3/10], Batch [101/148], Loss: 0.1465
Epoch [3/10], Batch [102/148], Loss: 0.1930
Epoch [3/10], Batch [103/148], Loss: 0.2521
Epoch [3/10], Batch [104/148], Loss: 0.1427
Epoch [3/10], Batch [105/148], Loss: 0.2092
Epoch [3/10], Batch [106/148], Loss: 0.1151
Epoch [3/10], Batch [107/148], Loss: 0.2542
Epoch [3/10], Batch [108/148], Loss: 0.1262
Epoch [3/10], Batch [109/148], Loss: 0.2773
Epoch [3/10], Batch [110/148], Loss: 0.2976
Epoch [3/10], Batch [111/148], Loss: 0.1508
Epoch [3/10], Batch [112/148], Loss: 0.1540
Epoch [3/10], Batch [113/148], Loss: 0.1501
Epoch [3/10], Batch [114/148], Loss: 0.1993
Epoch [3/10], Batch [115/148], Loss: 0.3262
Epoch [3/10], Batch [116/148], Loss: 0.4189
Epoch [3/10], Batch [117/148], Loss: 0.1376
Epoch [3/10], Batch [118/148], Loss: 0.1635
Epoch [3/10], Batch [119/148], Loss: 0.1525
Epoch [3/10], Batch [120/148], Loss: 0.0613
Epoch [3/10], Batch [121/148], Loss: 0.2718
Epoch [3/10], Batch [122/148], Loss: 0.1385
Epoch [3/10], Batch [123/148], Loss: 0.2349
Epoch [3/10], Batch [124/148], Loss: 0.2159
Epoch [3/10], Batch [125/148], Loss: 0.1759
Epoch [3/10], Batch [126/148], Loss: 0.1752
Epoch [3/10], Batch [127/148], Loss: 0.1319
Epoch [3/10], Batch [128/148], Loss: 0.1216
Epoch [3/10], Batch [129/148], Loss: 0.0922
Epoch [3/10], Batch [130/148], Loss: 0.2823
Epoch [3/10], Batch [131/148], Loss: 0.1732
Epoch [3/10], Batch [132/148], Loss: 0.2021
Epoch [3/10], Batch [133/148], Loss: 0.3064
Epoch [3/10], Batch [134/148], Loss: 0.1330
Epoch [3/10], Batch [135/148], Loss: 0.1358
Epoch [3/10], Batch [136/148], Loss: 0.1148
Epoch [3/10], Batch [137/148], Loss: 0.3309
Epoch [3/10], Batch [138/148], Loss: 0.3175
Epoch [3/10], Batch [139/148], Loss: 0.1423
Epoch [3/10], Batch [140/148], Loss: 0.0839
Epoch [3/10], Batch [141/148], Loss: 0.2301
Epoch [3/10], Batch [142/148], Loss: 0.2183
Epoch [3/10], Batch [143/148], Loss: 0.1718
Epoch [3/10], Batch [144/148], Loss: 0.2402
Epoch [3/10], Batch [145/148], Loss: 0.1766
Epoch [3/10], Batch [146/148], Loss: 0.0758
Epoch [3/10], Batch [147/148], Loss: 0.1531
Epoch [3/10], Batch [148/148], Loss: 0.3032
Epoch [3/10], Average Loss: 0.1816
-----------------------------------------------------------
strategy: BEAM
iter: 7
epoch: 2
Test Loss: 0.3014
F1_overall: 0.5471
F1_AGENT: 0.6957
F1_TARGET: 0.4055
-----------------------------------------------------------
Epoch [4/10], Batch [1/148], Loss: 0.1138
Epoch [4/10], Batch [2/148], Loss: 0.1116
Epoch [4/10], Batch [3/148], Loss: 0.1639
Epoch [4/10], Batch [4/148], Loss: 0.1918
Epoch [4/10], Batch [5/148], Loss: 0.0885
Epoch [4/10], Batch [6/148], Loss: 0.0475
Epoch [4/10], Batch [7/148], Loss: 0.0899
Epoch [4/10], Batch [8/148], Loss: 0.0927
Epoch [4/10], Batch [9/148], Loss: 0.0700
Epoch [4/10], Batch [10/148], Loss: 0.1643
Epoch [4/10], Batch [11/148], Loss: 0.1540
Epoch [4/10], Batch [12/148], Loss: 0.1244
Epoch [4/10], Batch [13/148], Loss: 0.0681
Epoch [4/10], Batch [14/148], Loss: 0.0728
Epoch [4/10], Batch [15/148], Loss: 0.0751
Epoch [4/10], Batch [16/148], Loss: 0.1715
Epoch [4/10], Batch [17/148], Loss: 0.0743
Epoch [4/10], Batch [18/148], Loss: 0.0991
Epoch [4/10], Batch [19/148], Loss: 0.0641
Epoch [4/10], Batch [20/148], Loss: 0.0472
Epoch [4/10], Batch [21/148], Loss: 0.1326
Epoch [4/10], Batch [22/148], Loss: 0.0861
Epoch [4/10], Batch [23/148], Loss: 0.2483
Epoch [4/10], Batch [24/148], Loss: 0.0598
Epoch [4/10], Batch [25/148], Loss: 0.0998
Epoch [4/10], Batch [26/148], Loss: 0.0539
Epoch [4/10], Batch [27/148], Loss: 0.1113
Epoch [4/10], Batch [28/148], Loss: 0.0773
Epoch [4/10], Batch [29/148], Loss: 0.0912
Epoch [4/10], Batch [30/148], Loss: 0.0746
Epoch [4/10], Batch [31/148], Loss: 0.0991
Epoch [4/10], Batch [32/148], Loss: 0.0477
Epoch [4/10], Batch [33/148], Loss: 0.1202
Epoch [4/10], Batch [34/148], Loss: 0.0756
Epoch [4/10], Batch [35/148], Loss: 0.1363
Epoch [4/10], Batch [36/148], Loss: 0.1649
Epoch [4/10], Batch [37/148], Loss: 0.0661
Epoch [4/10], Batch [38/148], Loss: 0.0789
Epoch [4/10], Batch [39/148], Loss: 0.0257
Epoch [4/10], Batch [40/148], Loss: 0.1264
Epoch [4/10], Batch [41/148], Loss: 0.0282
Epoch [4/10], Batch [42/148], Loss: 0.1975
Epoch [4/10], Batch [43/148], Loss: 0.0937
Epoch [4/10], Batch [44/148], Loss: 0.0966
Epoch [4/10], Batch [45/148], Loss: 0.0563
Epoch [4/10], Batch [46/148], Loss: 0.0686
Epoch [4/10], Batch [47/148], Loss: 0.1555
Epoch [4/10], Batch [48/148], Loss: 0.3439
Epoch [4/10], Batch [49/148], Loss: 0.0598
Epoch [4/10], Batch [50/148], Loss: 0.0895
Epoch [4/10], Batch [51/148], Loss: 0.0923
Epoch [4/10], Batch [52/148], Loss: 0.0840
Epoch [4/10], Batch [53/148], Loss: 0.0671
Epoch [4/10], Batch [54/148], Loss: 0.0795
Epoch [4/10], Batch [55/148], Loss: 0.0797
Epoch [4/10], Batch [56/148], Loss: 0.0523
Epoch [4/10], Batch [57/148], Loss: 0.1528
Epoch [4/10], Batch [58/148], Loss: 0.1684
Epoch [4/10], Batch [59/148], Loss: 0.0821
Epoch [4/10], Batch [60/148], Loss: 0.1858
Epoch [4/10], Batch [61/148], Loss: 0.0410
Epoch [4/10], Batch [62/148], Loss: 0.0323
Epoch [4/10], Batch [63/148], Loss: 0.1229
Epoch [4/10], Batch [64/148], Loss: 0.0777
Epoch [4/10], Batch [65/148], Loss: 0.1473
Epoch [4/10], Batch [66/148], Loss: 0.1347
Epoch [4/10], Batch [67/148], Loss: 0.0801
Epoch [4/10], Batch [68/148], Loss: 0.0889
Epoch [4/10], Batch [69/148], Loss: 0.0623
Epoch [4/10], Batch [70/148], Loss: 0.1171
Epoch [4/10], Batch [71/148], Loss: 0.0553
Epoch [4/10], Batch [72/148], Loss: 0.0899
Epoch [4/10], Batch [73/148], Loss: 0.0652
Epoch [4/10], Batch [74/148], Loss: 0.1240
Epoch [4/10], Batch [75/148], Loss: 0.1261
Epoch [4/10], Batch [76/148], Loss: 0.0373
Epoch [4/10], Batch [77/148], Loss: 0.0795
Epoch [4/10], Batch [78/148], Loss: 0.1700
Epoch [4/10], Batch [79/148], Loss: 0.0837
Epoch [4/10], Batch [80/148], Loss: 0.0347
Epoch [4/10], Batch [81/148], Loss: 0.2488
Epoch [4/10], Batch [82/148], Loss: 0.1349
Epoch [4/10], Batch [83/148], Loss: 0.1183
Epoch [4/10], Batch [84/148], Loss: 0.1072
Epoch [4/10], Batch [85/148], Loss: 0.1695
Epoch [4/10], Batch [86/148], Loss: 0.1224
Epoch [4/10], Batch [87/148], Loss: 0.1142
Epoch [4/10], Batch [88/148], Loss: 0.0748
Epoch [4/10], Batch [89/148], Loss: 0.0422
Epoch [4/10], Batch [90/148], Loss: 0.1446
Epoch [4/10], Batch [91/148], Loss: 0.2372
Epoch [4/10], Batch [92/148], Loss: 0.1165
Epoch [4/10], Batch [93/148], Loss: 0.1882
Epoch [4/10], Batch [94/148], Loss: 0.1167
Epoch [4/10], Batch [95/148], Loss: 0.1175
Epoch [4/10], Batch [96/148], Loss: 0.1107
Epoch [4/10], Batch [97/148], Loss: 0.1409
Epoch [4/10], Batch [98/148], Loss: 0.0458
Epoch [4/10], Batch [99/148], Loss: 0.1997
Epoch [4/10], Batch [100/148], Loss: 0.2352
Epoch [4/10], Batch [101/148], Loss: 0.2395
Epoch [4/10], Batch [102/148], Loss: 0.0710
Epoch [4/10], Batch [103/148], Loss: 0.1063
Epoch [4/10], Batch [104/148], Loss: 0.1499
Epoch [4/10], Batch [105/148], Loss: 0.0873
Epoch [4/10], Batch [106/148], Loss: 0.0755
Epoch [4/10], Batch [107/148], Loss: 0.1635
Epoch [4/10], Batch [108/148], Loss: 0.1166
Epoch [4/10], Batch [109/148], Loss: 0.0251
Epoch [4/10], Batch [110/148], Loss: 0.1366
Epoch [4/10], Batch [111/148], Loss: 0.1333
Epoch [4/10], Batch [112/148], Loss: 0.0904
Epoch [4/10], Batch [113/148], Loss: 0.0853
Epoch [4/10], Batch [114/148], Loss: 0.2595
Epoch [4/10], Batch [115/148], Loss: 0.1299
Epoch [4/10], Batch [116/148], Loss: 0.1709
Epoch [4/10], Batch [117/148], Loss: 0.0968
Epoch [4/10], Batch [118/148], Loss: 0.1478
Epoch [4/10], Batch [119/148], Loss: 0.0349
Epoch [4/10], Batch [120/148], Loss: 0.2226
Epoch [4/10], Batch [121/148], Loss: 0.2181
Epoch [4/10], Batch [122/148], Loss: 0.1099
Epoch [4/10], Batch [123/148], Loss: 0.1504
Epoch [4/10], Batch [124/148], Loss: 0.0922
Epoch [4/10], Batch [125/148], Loss: 0.0960
Epoch [4/10], Batch [126/148], Loss: 0.1057
Epoch [4/10], Batch [127/148], Loss: 0.2963
Epoch [4/10], Batch [128/148], Loss: 0.1748
Epoch [4/10], Batch [129/148], Loss: 0.3554
Epoch [4/10], Batch [130/148], Loss: 0.2236
Epoch [4/10], Batch [131/148], Loss: 0.0624
Epoch [4/10], Batch [132/148], Loss: 0.0704
Epoch [4/10], Batch [133/148], Loss: 0.1996
Epoch [4/10], Batch [134/148], Loss: 0.3245
Epoch [4/10], Batch [135/148], Loss: 0.2009
Epoch [4/10], Batch [136/148], Loss: 0.2171
Epoch [4/10], Batch [137/148], Loss: 0.0798
Epoch [4/10], Batch [138/148], Loss: 0.0610
Epoch [4/10], Batch [139/148], Loss: 0.2960
Epoch [4/10], Batch [140/148], Loss: 0.1068
Epoch [4/10], Batch [141/148], Loss: 0.0429
Epoch [4/10], Batch [142/148], Loss: 0.1438
Epoch [4/10], Batch [143/148], Loss: 0.0885
Epoch [4/10], Batch [144/148], Loss: 0.2210
Epoch [4/10], Batch [145/148], Loss: 0.3278
Epoch [4/10], Batch [146/148], Loss: 0.1884
Epoch [4/10], Batch [147/148], Loss: 0.1485
Epoch [4/10], Batch [148/148], Loss: 0.2139
Epoch [4/10], Average Loss: 0.1230
-----------------------------------------------------------
strategy: BEAM
iter: 7
epoch: 3
Test Loss: 0.3056
F1_overall: 0.5686
F1_AGENT: 0.7168
F1_TARGET: 0.4126
-----------------------------------------------------------
Epoch [5/10], Batch [1/148], Loss: 0.0721
Epoch [5/10], Batch [2/148], Loss: 0.0711
Epoch [5/10], Batch [3/148], Loss: 0.1451
Epoch [5/10], Batch [4/148], Loss: 0.2852
Epoch [5/10], Batch [5/148], Loss: 0.0824
Epoch [5/10], Batch [6/148], Loss: 0.1023
Epoch [5/10], Batch [7/148], Loss: 0.1203
Epoch [5/10], Batch [8/148], Loss: 0.0569
Epoch [5/10], Batch [9/148], Loss: 0.0609
Epoch [5/10], Batch [10/148], Loss: 0.0497
Epoch [5/10], Batch [11/148], Loss: 0.0377
Epoch [5/10], Batch [12/148], Loss: 0.1162
Epoch [5/10], Batch [13/148], Loss: 0.0706
Epoch [5/10], Batch [14/148], Loss: 0.1066
Epoch [5/10], Batch [15/148], Loss: 0.0859
Epoch [5/10], Batch [16/148], Loss: 0.0287
Epoch [5/10], Batch [17/148], Loss: 0.0519
Epoch [5/10], Batch [18/148], Loss: 0.0980
Epoch [5/10], Batch [19/148], Loss: 0.0986
Epoch [5/10], Batch [20/148], Loss: 0.0552
Epoch [5/10], Batch [21/148], Loss: 0.0778
Epoch [5/10], Batch [22/148], Loss: 0.1308
Epoch [5/10], Batch [23/148], Loss: 0.0728
Epoch [5/10], Batch [24/148], Loss: 0.1463
Epoch [5/10], Batch [25/148], Loss: 0.1313
Epoch [5/10], Batch [26/148], Loss: 0.1992
Epoch [5/10], Batch [27/148], Loss: 0.0849
Epoch [5/10], Batch [28/148], Loss: 0.1202
Epoch [5/10], Batch [29/148], Loss: 0.1539
Epoch [5/10], Batch [30/148], Loss: 0.0791
Epoch [5/10], Batch [31/148], Loss: 0.2216
Epoch [5/10], Batch [32/148], Loss: 0.0854
Epoch [5/10], Batch [33/148], Loss: 0.0924
Epoch [5/10], Batch [34/148], Loss: 0.1166
Epoch [5/10], Batch [35/148], Loss: 0.0294
Epoch [5/10], Batch [36/148], Loss: 0.0693
Epoch [5/10], Batch [37/148], Loss: 0.1058
Epoch [5/10], Batch [38/148], Loss: 0.0775
Epoch [5/10], Batch [39/148], Loss: 0.7213
Epoch [5/10], Batch [40/148], Loss: 0.0389
Epoch [5/10], Batch [41/148], Loss: 0.1604
Epoch [5/10], Batch [42/148], Loss: 0.2863
Epoch [5/10], Batch [43/148], Loss: 0.2345
Epoch [5/10], Batch [44/148], Loss: 0.2072
Epoch [5/10], Batch [45/148], Loss: 0.1961
Epoch [5/10], Batch [46/148], Loss: 0.2027
Epoch [5/10], Batch [47/148], Loss: 0.2391
Epoch [5/10], Batch [48/148], Loss: 0.0353
Epoch [5/10], Batch [49/148], Loss: 0.2647
Epoch [5/10], Batch [50/148], Loss: 0.2786
Epoch [5/10], Batch [51/148], Loss: 0.0634
Epoch [5/10], Batch [52/148], Loss: 0.1247
Epoch [5/10], Batch [53/148], Loss: 0.0972
Epoch [5/10], Batch [54/148], Loss: 0.1093
Epoch [5/10], Batch [55/148], Loss: 0.1243
Epoch [5/10], Batch [56/148], Loss: 0.0900
Epoch [5/10], Batch [57/148], Loss: 0.1996
Epoch [5/10], Batch [58/148], Loss: 0.1904
Epoch [5/10], Batch [59/148], Loss: 0.0854
Epoch [5/10], Batch [60/148], Loss: 0.1133
Epoch [5/10], Batch [61/148], Loss: 0.1011
Epoch [5/10], Batch [62/148], Loss: 0.1272
Epoch [5/10], Batch [63/148], Loss: 0.1378
Epoch [5/10], Batch [64/148], Loss: 0.0814
Epoch [5/10], Batch [65/148], Loss: 0.0970
Epoch [5/10], Batch [66/148], Loss: 0.0741
Epoch [5/10], Batch [67/148], Loss: 0.0490
Epoch [5/10], Batch [68/148], Loss: 0.1244
Epoch [5/10], Batch [69/148], Loss: 0.0393
Epoch [5/10], Batch [70/148], Loss: 0.1465
Epoch [5/10], Batch [71/148], Loss: 0.0710
Epoch [5/10], Batch [72/148], Loss: 0.0564
Epoch [5/10], Batch [73/148], Loss: 0.1479
Epoch [5/10], Batch [74/148], Loss: 0.0665
Epoch [5/10], Batch [75/148], Loss: 0.1972
Epoch [5/10], Batch [76/148], Loss: 0.2147
Epoch [5/10], Batch [77/148], Loss: 0.0667
Epoch [5/10], Batch [78/148], Loss: 0.2655
Epoch [5/10], Batch [79/148], Loss: 0.1147
Epoch [5/10], Batch [80/148], Loss: 0.0570
Epoch [5/10], Batch [81/148], Loss: 0.1226
Epoch [5/10], Batch [82/148], Loss: 0.0788
Epoch [5/10], Batch [83/148], Loss: 0.0585
Epoch [5/10], Batch [84/148], Loss: 0.0849
Epoch [5/10], Batch [85/148], Loss: 0.1643
Epoch [5/10], Batch [86/148], Loss: 0.2058
Epoch [5/10], Batch [87/148], Loss: 0.1009
Epoch [5/10], Batch [88/148], Loss: 0.0961
Epoch [5/10], Batch [89/148], Loss: 0.1130
Epoch [5/10], Batch [90/148], Loss: 0.0884
Epoch [5/10], Batch [91/148], Loss: 0.1996
Epoch [5/10], Batch [92/148], Loss: 0.1167
Epoch [5/10], Batch [93/148], Loss: 0.1288
Epoch [5/10], Batch [94/148], Loss: 0.0742
Epoch [5/10], Batch [95/148], Loss: 0.0644
Epoch [5/10], Batch [96/148], Loss: 0.0714
Epoch [5/10], Batch [97/148], Loss: 0.2384
Epoch [5/10], Batch [98/148], Loss: 0.0289
Epoch [5/10], Batch [99/148], Loss: 0.1793
Epoch [5/10], Batch [100/148], Loss: 0.0568
Epoch [5/10], Batch [101/148], Loss: 0.0848
Epoch [5/10], Batch [102/148], Loss: 0.1292
Epoch [5/10], Batch [103/148], Loss: 0.0192
Epoch [5/10], Batch [104/148], Loss: 0.0683
Epoch [5/10], Batch [105/148], Loss: 0.4853
Epoch [5/10], Batch [106/148], Loss: 0.1442
Epoch [5/10], Batch [107/148], Loss: 0.0964
Epoch [5/10], Batch [108/148], Loss: 0.6229
Epoch [5/10], Batch [109/148], Loss: 0.1421
Epoch [5/10], Batch [110/148], Loss: 0.1188
Epoch [5/10], Batch [111/148], Loss: 0.1428
Epoch [5/10], Batch [112/148], Loss: 0.2546
Epoch [5/10], Batch [113/148], Loss: 0.1234
Epoch [5/10], Batch [114/148], Loss: 0.1262
Epoch [5/10], Batch [115/148], Loss: 0.1402
Epoch [5/10], Batch [116/148], Loss: 0.0964
Epoch [5/10], Batch [117/148], Loss: 0.1003
Epoch [5/10], Batch [118/148], Loss: 0.3038
Epoch [5/10], Batch [119/148], Loss: 0.0664
Epoch [5/10], Batch [120/148], Loss: 0.3492
Epoch [5/10], Batch [121/148], Loss: 0.0700
Epoch [5/10], Batch [122/148], Loss: 0.0954
Epoch [5/10], Batch [123/148], Loss: 0.1253
Epoch [5/10], Batch [124/148], Loss: 0.1104
Epoch [5/10], Batch [125/148], Loss: 0.0789
Epoch [5/10], Batch [126/148], Loss: 0.1036
Epoch [5/10], Batch [127/148], Loss: 0.0760
Epoch [5/10], Batch [128/148], Loss: 0.0858
Epoch [5/10], Batch [129/148], Loss: 0.2350
Epoch [5/10], Batch [130/148], Loss: 0.1698
Epoch [5/10], Batch [131/148], Loss: 0.1379
Epoch [5/10], Batch [132/148], Loss: 0.3072
Epoch [5/10], Batch [133/148], Loss: 0.1788
Epoch [5/10], Batch [134/148], Loss: 0.1571
Epoch [5/10], Batch [135/148], Loss: 0.5086
Epoch [5/10], Batch [136/148], Loss: 0.2541
Epoch [5/10], Batch [137/148], Loss: 0.1792
Epoch [5/10], Batch [138/148], Loss: 0.1124
Epoch [5/10], Batch [139/148], Loss: 0.2018
Epoch [5/10], Batch [140/148], Loss: 0.1339
Epoch [5/10], Batch [141/148], Loss: 0.1363
Epoch [5/10], Batch [142/148], Loss: 0.1736
Epoch [5/10], Batch [143/148], Loss: 0.2261
Epoch [5/10], Batch [144/148], Loss: 0.0923
Epoch [5/10], Batch [145/148], Loss: 0.2823
Epoch [5/10], Batch [146/148], Loss: 0.1536
Epoch [5/10], Batch [147/148], Loss: 0.1805
Epoch [5/10], Batch [148/148], Loss: 0.3113
Epoch [5/10], Average Loss: 0.1409
-----------------------------------------------------------
strategy: BEAM
iter: 7
epoch: 4
Test Loss: 0.4014
F1_overall: 0.5629
F1_AGENT: 0.7260
F1_TARGET: 0.3944
-----------------------------------------------------------
Epoch [6/10], Batch [1/148], Loss: 0.1307
Epoch [6/10], Batch [2/148], Loss: 0.2926
Epoch [6/10], Batch [3/148], Loss: 0.1511
Epoch [6/10], Batch [4/148], Loss: 0.1028
Epoch [6/10], Batch [5/148], Loss: 0.6512
Epoch [6/10], Batch [6/148], Loss: 0.0637
Epoch [6/10], Batch [7/148], Loss: 0.1316
Epoch [6/10], Batch [8/148], Loss: 0.0530
Epoch [6/10], Batch [9/148], Loss: 0.1042
Epoch [6/10], Batch [10/148], Loss: 0.1449
Epoch [6/10], Batch [11/148], Loss: 0.1559
Epoch [6/10], Batch [12/148], Loss: 0.0747
Epoch [6/10], Batch [13/148], Loss: 0.0353
Epoch [6/10], Batch [14/148], Loss: 0.1389
Epoch [6/10], Batch [15/148], Loss: 0.0828
Epoch [6/10], Batch [16/148], Loss: 0.0626
Epoch [6/10], Batch [17/148], Loss: 0.1994
Epoch [6/10], Batch [18/148], Loss: 0.1043
Epoch [6/10], Batch [19/148], Loss: 0.1266
Epoch [6/10], Batch [20/148], Loss: 0.1302
Epoch [6/10], Batch [21/148], Loss: 0.1186
Epoch [6/10], Batch [22/148], Loss: 0.0941
Epoch [6/10], Batch [23/148], Loss: 0.2034
Epoch [6/10], Batch [24/148], Loss: 0.0975
Epoch [6/10], Batch [25/148], Loss: 0.2414
Epoch [6/10], Batch [26/148], Loss: 0.1561
Epoch [6/10], Batch [27/148], Loss: 0.1744
Epoch [6/10], Batch [28/148], Loss: 0.3186
Epoch [6/10], Batch [29/148], Loss: 0.1060
Epoch [6/10], Batch [30/148], Loss: 0.0983
Epoch [6/10], Batch [31/148], Loss: 0.2051
Epoch [6/10], Batch [32/148], Loss: 0.0643
Epoch [6/10], Batch [33/148], Loss: 0.1127
Epoch [6/10], Batch [34/148], Loss: 0.1133
Epoch [6/10], Batch [35/148], Loss: 0.1542
Epoch [6/10], Batch [36/148], Loss: 0.1199
Epoch [6/10], Batch [37/148], Loss: 0.1202
Epoch [6/10], Batch [38/148], Loss: 0.1284
Epoch [6/10], Batch [39/148], Loss: 0.0892
Epoch [6/10], Batch [40/148], Loss: 0.0291
Epoch [6/10], Batch [41/148], Loss: 0.1865
Epoch [6/10], Batch [42/148], Loss: 0.0713
Epoch [6/10], Batch [43/148], Loss: 0.0980
Epoch [6/10], Batch [44/148], Loss: 0.0327
Epoch [6/10], Batch [45/148], Loss: 0.1187
Epoch [6/10], Batch [46/148], Loss: 0.5537
Epoch [6/10], Batch [47/148], Loss: 0.0598
Epoch [6/10], Batch [48/148], Loss: 0.1224
Epoch [6/10], Batch [49/148], Loss: 0.0720
Epoch [6/10], Batch [50/148], Loss: 0.0273
Epoch [6/10], Batch [51/148], Loss: 0.2746
Epoch [6/10], Batch [52/148], Loss: 0.1072
Epoch [6/10], Batch [53/148], Loss: 0.0514
Epoch [6/10], Batch [54/148], Loss: 0.3319
Epoch [6/10], Batch [55/148], Loss: 0.1447
Epoch [6/10], Batch [56/148], Loss: 0.0722
Epoch [6/10], Batch [57/148], Loss: 0.2790
Epoch [6/10], Batch [58/148], Loss: 0.1228
Epoch [6/10], Batch [59/148], Loss: 0.1923
Epoch [6/10], Batch [60/148], Loss: 0.2002
Epoch [6/10], Batch [61/148], Loss: 0.0762
Epoch [6/10], Batch [62/148], Loss: 0.0568
Epoch [6/10], Batch [63/148], Loss: 0.0684
Epoch [6/10], Batch [64/148], Loss: 0.0516
Epoch [6/10], Batch [65/148], Loss: 0.0953
Epoch [6/10], Batch [66/148], Loss: 0.2870
Epoch [6/10], Batch [67/148], Loss: 0.2320
Epoch [6/10], Batch [68/148], Loss: 0.0345
Epoch [6/10], Batch [69/148], Loss: 0.1491
Epoch [6/10], Batch [70/148], Loss: 0.2383
Epoch [6/10], Batch [71/148], Loss: 0.1359
Epoch [6/10], Batch [72/148], Loss: 0.0249
Epoch [6/10], Batch [73/148], Loss: 0.0922
Epoch [6/10], Batch [74/148], Loss: 0.2890
Epoch [6/10], Batch [75/148], Loss: 0.1497
Epoch [6/10], Batch [76/148], Loss: 0.1088
Epoch [6/10], Batch [77/148], Loss: 0.0961
Epoch [6/10], Batch [78/148], Loss: 0.2563
Epoch [6/10], Batch [79/148], Loss: 0.1253
Epoch [6/10], Batch [80/148], Loss: 0.1879
Epoch [6/10], Batch [81/148], Loss: 0.0471
Epoch [6/10], Batch [82/148], Loss: 0.1337
Epoch [6/10], Batch [83/148], Loss: 0.1245
Epoch [6/10], Batch [84/148], Loss: 0.1566
Epoch [6/10], Batch [85/148], Loss: 0.0482
Epoch [6/10], Batch [86/148], Loss: 0.0952
Epoch [6/10], Batch [87/148], Loss: 0.1492
Epoch [6/10], Batch [88/148], Loss: 0.1917
Epoch [6/10], Batch [89/148], Loss: 0.0694
Epoch [6/10], Batch [90/148], Loss: 0.1630
Epoch [6/10], Batch [91/148], Loss: 0.0783
Epoch [6/10], Batch [92/148], Loss: 0.2305
Epoch [6/10], Batch [93/148], Loss: 0.0629
Epoch [6/10], Batch [94/148], Loss: 0.0851
Epoch [6/10], Batch [95/148], Loss: 0.0564
Epoch [6/10], Batch [96/148], Loss: 0.0517
Epoch [6/10], Batch [97/148], Loss: 0.1344
Epoch [6/10], Batch [98/148], Loss: 0.1189
Epoch [6/10], Batch [99/148], Loss: 0.0707
Epoch [6/10], Batch [100/148], Loss: 0.0535
Epoch [6/10], Batch [101/148], Loss: 0.2747
Epoch [6/10], Batch [102/148], Loss: 0.1565
Epoch [6/10], Batch [103/148], Loss: 0.1170
Epoch [6/10], Batch [104/148], Loss: 0.1074
Epoch [6/10], Batch [105/148], Loss: 0.1306
Epoch [6/10], Batch [106/148], Loss: 0.0529
Epoch [6/10], Batch [107/148], Loss: 0.0883
Epoch [6/10], Batch [108/148], Loss: 0.1188
Epoch [6/10], Batch [109/148], Loss: 0.0526
Epoch [6/10], Batch [110/148], Loss: 0.0665
Epoch [6/10], Batch [111/148], Loss: 0.1107
Epoch [6/10], Batch [112/148], Loss: 0.1126
Epoch [6/10], Batch [113/148], Loss: 0.0492
Epoch [6/10], Batch [114/148], Loss: 0.1170
Epoch [6/10], Batch [115/148], Loss: 0.0551
Epoch [6/10], Batch [116/148], Loss: 0.1469
Epoch [6/10], Batch [117/148], Loss: 0.0392
Epoch [6/10], Batch [118/148], Loss: 0.0777
Epoch [6/10], Batch [119/148], Loss: 0.1976
Epoch [6/10], Batch [120/148], Loss: 0.0415
Epoch [6/10], Batch [121/148], Loss: 0.0948
Epoch [6/10], Batch [122/148], Loss: 0.0517
Epoch [6/10], Batch [123/148], Loss: 0.0820
Epoch [6/10], Batch [124/148], Loss: 0.1414
Epoch [6/10], Batch [125/148], Loss: 0.1550
Epoch [6/10], Batch [126/148], Loss: 0.1404
Epoch [6/10], Batch [127/148], Loss: 0.1388
Epoch [6/10], Batch [128/148], Loss: 0.1149
Epoch [6/10], Batch [129/148], Loss: 0.0274
Epoch [6/10], Batch [130/148], Loss: 0.0988
Epoch [6/10], Batch [131/148], Loss: 0.1663
Epoch [6/10], Batch [132/148], Loss: 0.0947
Epoch [6/10], Batch [133/148], Loss: 0.0665
Epoch [6/10], Batch [134/148], Loss: 0.0857
Epoch [6/10], Batch [135/148], Loss: 0.2049
Epoch [6/10], Batch [136/148], Loss: 0.0736
Epoch [6/10], Batch [137/148], Loss: 0.1419
Epoch [6/10], Batch [138/148], Loss: 0.0886
Epoch [6/10], Batch [139/148], Loss: 0.1757
Epoch [6/10], Batch [140/148], Loss: 0.1419
Epoch [6/10], Batch [141/148], Loss: 0.1607
Epoch [6/10], Batch [142/148], Loss: 0.1128
Epoch [6/10], Batch [143/148], Loss: 0.1319
Epoch [6/10], Batch [144/148], Loss: 0.2121
Epoch [6/10], Batch [145/148], Loss: 0.1542
Epoch [6/10], Batch [146/148], Loss: 0.2358
Epoch [6/10], Batch [147/148], Loss: 0.1813
Epoch [6/10], Batch [148/148], Loss: 0.1209
Epoch [6/10], Average Loss: 0.1310
-----------------------------------------------------------
strategy: BEAM
iter: 7
epoch: 5
Test Loss: 0.3685
F1_overall: 0.5690
F1_AGENT: 0.7039
F1_TARGET: 0.4466
-----------------------------------------------------------
Epoch [7/10], Batch [1/148], Loss: 0.0693
Epoch [7/10], Batch [2/148], Loss: 0.0515
Epoch [7/10], Batch [3/148], Loss: 0.0583
Epoch [7/10], Batch [4/148], Loss: 0.1273
Epoch [7/10], Batch [5/148], Loss: 0.0262
Epoch [7/10], Batch [6/148], Loss: 0.0852
Epoch [7/10], Batch [7/148], Loss: 0.0715
Epoch [7/10], Batch [8/148], Loss: 0.0438
Epoch [7/10], Batch [9/148], Loss: 0.0239
Epoch [7/10], Batch [10/148], Loss: 0.0319
Epoch [7/10], Batch [11/148], Loss: 0.1312
Epoch [7/10], Batch [12/148], Loss: 0.0287
Epoch [7/10], Batch [13/148], Loss: 0.0677
Epoch [7/10], Batch [14/148], Loss: 0.0494
Epoch [7/10], Batch [15/148], Loss: 0.1738
Epoch [7/10], Batch [16/148], Loss: 0.0686
Epoch [7/10], Batch [17/148], Loss: 0.0893
Epoch [7/10], Batch [18/148], Loss: 0.0292
Epoch [7/10], Batch [19/148], Loss: 0.0775
Epoch [7/10], Batch [20/148], Loss: 0.0712
Epoch [7/10], Batch [21/148], Loss: 0.0829
Epoch [7/10], Batch [22/148], Loss: 0.0232
Epoch [7/10], Batch [23/148], Loss: 0.2084
Epoch [7/10], Batch [24/148], Loss: 0.0826
Epoch [7/10], Batch [25/148], Loss: 0.0711
Epoch [7/10], Batch [26/148], Loss: 0.0627
Epoch [7/10], Batch [27/148], Loss: 0.1010
Epoch [7/10], Batch [28/148], Loss: 0.1019
Epoch [7/10], Batch [29/148], Loss: 0.0202
Epoch [7/10], Batch [30/148], Loss: 0.0094
Epoch [7/10], Batch [31/148], Loss: 0.0266
Epoch [7/10], Batch [32/148], Loss: 0.0391
Epoch [7/10], Batch [33/148], Loss: 0.0345
Epoch [7/10], Batch [34/148], Loss: 0.0792
Epoch [7/10], Batch [35/148], Loss: 0.2330
Epoch [7/10], Batch [36/148], Loss: 0.0304
Epoch [7/10], Batch [37/148], Loss: 0.0314
Epoch [7/10], Batch [38/148], Loss: 0.1677
Epoch [7/10], Batch [39/148], Loss: 0.0436
Epoch [7/10], Batch [40/148], Loss: 0.1969
Epoch [7/10], Batch [41/148], Loss: 0.0787
Epoch [7/10], Batch [42/148], Loss: 0.0312
Epoch [7/10], Batch [43/148], Loss: 0.0376
Epoch [7/10], Batch [44/148], Loss: 0.0762
Epoch [7/10], Batch [45/148], Loss: 0.0400
Epoch [7/10], Batch [46/148], Loss: 0.0374
Epoch [7/10], Batch [47/148], Loss: 0.0976
Epoch [7/10], Batch [48/148], Loss: 0.0198
Epoch [7/10], Batch [49/148], Loss: 0.0437
Epoch [7/10], Batch [50/148], Loss: 0.0658
Epoch [7/10], Batch [51/148], Loss: 0.0833
Epoch [7/10], Batch [52/148], Loss: 0.0947
Epoch [7/10], Batch [53/148], Loss: 0.0185
Epoch [7/10], Batch [54/148], Loss: 0.0938
Epoch [7/10], Batch [55/148], Loss: 0.0623
Epoch [7/10], Batch [56/148], Loss: 0.0212
Epoch [7/10], Batch [57/148], Loss: 0.0824
Epoch [7/10], Batch [58/148], Loss: 0.0765
Epoch [7/10], Batch [59/148], Loss: 0.0231
Epoch [7/10], Batch [60/148], Loss: 0.0089
Epoch [7/10], Batch [61/148], Loss: 0.0200
Epoch [7/10], Batch [62/148], Loss: 0.0152
Epoch [7/10], Batch [63/148], Loss: 0.0409
Epoch [7/10], Batch [64/148], Loss: 0.0884
Epoch [7/10], Batch [65/148], Loss: 0.0425
Epoch [7/10], Batch [66/148], Loss: 0.0821
Epoch [7/10], Batch [67/148], Loss: 0.0706
Epoch [7/10], Batch [68/148], Loss: 0.0394
Epoch [7/10], Batch [69/148], Loss: 0.0416
Epoch [7/10], Batch [70/148], Loss: 0.0435
Epoch [7/10], Batch [71/148], Loss: 0.0069
Epoch [7/10], Batch [72/148], Loss: 0.0577
Epoch [7/10], Batch [73/148], Loss: 0.0273
Epoch [7/10], Batch [74/148], Loss: 0.3343
Epoch [7/10], Batch [75/148], Loss: 0.1025
Epoch [7/10], Batch [76/148], Loss: 0.0806
Epoch [7/10], Batch [77/148], Loss: 0.0972
Epoch [7/10], Batch [78/148], Loss: 0.0374
Epoch [7/10], Batch [79/148], Loss: 0.1593
Epoch [7/10], Batch [80/148], Loss: 0.1248
Epoch [7/10], Batch [81/148], Loss: 0.0516
Epoch [7/10], Batch [82/148], Loss: 0.1201
Epoch [7/10], Batch [83/148], Loss: 0.0118
Epoch [7/10], Batch [84/148], Loss: 0.0957
Epoch [7/10], Batch [85/148], Loss: 0.0729
Epoch [7/10], Batch [86/148], Loss: 0.0153
Epoch [7/10], Batch [87/148], Loss: 0.0699
Epoch [7/10], Batch [88/148], Loss: 0.0383
Epoch [7/10], Batch [89/148], Loss: 0.1362
Epoch [7/10], Batch [90/148], Loss: 0.1660
Epoch [7/10], Batch [91/148], Loss: 0.0468
Epoch [7/10], Batch [92/148], Loss: 0.0153
Epoch [7/10], Batch [93/148], Loss: 0.0433
Epoch [7/10], Batch [94/148], Loss: 0.0585
Epoch [7/10], Batch [95/148], Loss: 0.0303
Epoch [7/10], Batch [96/148], Loss: 0.0830
Epoch [7/10], Batch [97/148], Loss: 0.1185
Epoch [7/10], Batch [98/148], Loss: 0.0899
Epoch [7/10], Batch [99/148], Loss: 0.0973
Epoch [7/10], Batch [100/148], Loss: 0.1644
Epoch [7/10], Batch [101/148], Loss: 0.1306
Epoch [7/10], Batch [102/148], Loss: 0.0632
Epoch [7/10], Batch [103/148], Loss: 0.0265
Epoch [7/10], Batch [104/148], Loss: 0.0429
Epoch [7/10], Batch [105/148], Loss: 0.0880
Epoch [7/10], Batch [106/148], Loss: 0.0619
Epoch [7/10], Batch [107/148], Loss: 0.0480
Epoch [7/10], Batch [108/148], Loss: 0.0730
Epoch [7/10], Batch [109/148], Loss: 0.0393
Epoch [7/10], Batch [110/148], Loss: 0.0133
Epoch [7/10], Batch [111/148], Loss: 0.0457
Epoch [7/10], Batch [112/148], Loss: 0.0153
Epoch [7/10], Batch [113/148], Loss: 0.0404
Epoch [7/10], Batch [114/148], Loss: 0.0138
Epoch [7/10], Batch [115/148], Loss: 0.0736
Epoch [7/10], Batch [116/148], Loss: 0.0410
Epoch [7/10], Batch [117/148], Loss: 0.0915
Epoch [7/10], Batch [118/148], Loss: 0.0542
Epoch [7/10], Batch [119/148], Loss: 0.0540
Epoch [7/10], Batch [120/148], Loss: 0.1149
Epoch [7/10], Batch [121/148], Loss: 0.0358
Epoch [7/10], Batch [122/148], Loss: 0.0732
Epoch [7/10], Batch [123/148], Loss: 0.0156
Epoch [7/10], Batch [124/148], Loss: 0.0477
Epoch [7/10], Batch [125/148], Loss: 0.0345
Epoch [7/10], Batch [126/148], Loss: 0.0328
Epoch [7/10], Batch [127/148], Loss: 0.1049
Epoch [7/10], Batch [128/148], Loss: 0.1684
Epoch [7/10], Batch [129/148], Loss: 0.0631
Epoch [7/10], Batch [130/148], Loss: 0.0111
Epoch [7/10], Batch [131/148], Loss: 0.0569
Epoch [7/10], Batch [132/148], Loss: 0.0805
Epoch [7/10], Batch [133/148], Loss: 0.0315
Epoch [7/10], Batch [134/148], Loss: 0.0371
Epoch [7/10], Batch [135/148], Loss: 0.0156
Epoch [7/10], Batch [136/148], Loss: 0.1293
Epoch [7/10], Batch [137/148], Loss: 0.0382
Epoch [7/10], Batch [138/148], Loss: 0.0649
Epoch [7/10], Batch [139/148], Loss: 0.3641
Epoch [7/10], Batch [140/148], Loss: 0.0459
Epoch [7/10], Batch [141/148], Loss: 0.2352
Epoch [7/10], Batch [142/148], Loss: 0.0336
Epoch [7/10], Batch [143/148], Loss: 0.0582
Epoch [7/10], Batch [144/148], Loss: 0.0710
Epoch [7/10], Batch [145/148], Loss: 0.0980
Epoch [7/10], Batch [146/148], Loss: 0.0269
Epoch [7/10], Batch [147/148], Loss: 0.1281
Epoch [7/10], Batch [148/148], Loss: 0.0751
Epoch [7/10], Average Loss: 0.0707
-----------------------------------------------------------
strategy: BEAM
iter: 7
epoch: 6
Test Loss: 0.3952
F1_overall: 0.5948
F1_AGENT: 0.7391
F1_TARGET: 0.4493
-----------------------------------------------------------
Epoch [8/10], Batch [1/148], Loss: 0.0152
Epoch [8/10], Batch [2/148], Loss: 0.0256
Epoch [8/10], Batch [3/148], Loss: 0.0130
Epoch [8/10], Batch [4/148], Loss: 0.0092
Epoch [8/10], Batch [5/148], Loss: 0.0777
Epoch [8/10], Batch [6/148], Loss: 0.0143
Epoch [8/10], Batch [7/148], Loss: 0.0985
Epoch [8/10], Batch [8/148], Loss: 0.0388
Epoch [8/10], Batch [9/148], Loss: 0.0121
Epoch [8/10], Batch [10/148], Loss: 0.0313
Epoch [8/10], Batch [11/148], Loss: 0.0379
Epoch [8/10], Batch [12/148], Loss: 0.0199
Epoch [8/10], Batch [13/148], Loss: 0.0526
Epoch [8/10], Batch [14/148], Loss: 0.0204
Epoch [8/10], Batch [15/148], Loss: 0.0474
Epoch [8/10], Batch [16/148], Loss: 0.0073
Epoch [8/10], Batch [17/148], Loss: 0.0515
Epoch [8/10], Batch [18/148], Loss: 0.0667
Epoch [8/10], Batch [19/148], Loss: 0.1577
Epoch [8/10], Batch [20/148], Loss: 0.0490
Epoch [8/10], Batch [21/148], Loss: 0.0065
Epoch [8/10], Batch [22/148], Loss: 0.0108
Epoch [8/10], Batch [23/148], Loss: 0.0370
Epoch [8/10], Batch [24/148], Loss: 0.0361
Epoch [8/10], Batch [25/148], Loss: 0.0513
Epoch [8/10], Batch [26/148], Loss: 0.0216
Epoch [8/10], Batch [27/148], Loss: 0.1141
Epoch [8/10], Batch [28/148], Loss: 0.0543
Epoch [8/10], Batch [29/148], Loss: 0.0554
Epoch [8/10], Batch [30/148], Loss: 0.0503
Epoch [8/10], Batch [31/148], Loss: 0.0236
Epoch [8/10], Batch [32/148], Loss: 0.0158
Epoch [8/10], Batch [33/148], Loss: 0.0504
Epoch [8/10], Batch [34/148], Loss: 0.0354
Epoch [8/10], Batch [35/148], Loss: 0.0240
Epoch [8/10], Batch [36/148], Loss: 0.0243
Epoch [8/10], Batch [37/148], Loss: 0.0485
Epoch [8/10], Batch [38/148], Loss: 0.1305
Epoch [8/10], Batch [39/148], Loss: 0.0519
Epoch [8/10], Batch [40/148], Loss: 0.0321
Epoch [8/10], Batch [41/148], Loss: 0.0277
Epoch [8/10], Batch [42/148], Loss: 0.0404
Epoch [8/10], Batch [43/148], Loss: 0.0339
Epoch [8/10], Batch [44/148], Loss: 0.0372
Epoch [8/10], Batch [45/148], Loss: 0.0499
Epoch [8/10], Batch [46/148], Loss: 0.0663
Epoch [8/10], Batch [47/148], Loss: 0.1187
Epoch [8/10], Batch [48/148], Loss: 0.0081
Epoch [8/10], Batch [49/148], Loss: 0.0566
Epoch [8/10], Batch [50/148], Loss: 0.0104
Epoch [8/10], Batch [51/148], Loss: 0.0559
Epoch [8/10], Batch [52/148], Loss: 0.0495
Epoch [8/10], Batch [53/148], Loss: 0.0231
Epoch [8/10], Batch [54/148], Loss: 0.0093
Epoch [8/10], Batch [55/148], Loss: 0.0402
Epoch [8/10], Batch [56/148], Loss: 0.0307
Epoch [8/10], Batch [57/148], Loss: 0.0528
Epoch [8/10], Batch [58/148], Loss: 0.0218
Epoch [8/10], Batch [59/148], Loss: 0.0415
Epoch [8/10], Batch [60/148], Loss: 0.1389
Epoch [8/10], Batch [61/148], Loss: 0.1972
Epoch [8/10], Batch [62/148], Loss: 0.0313
Epoch [8/10], Batch [63/148], Loss: 0.0173
Epoch [8/10], Batch [64/148], Loss: 0.0390
Epoch [8/10], Batch [65/148], Loss: 0.0279
Epoch [8/10], Batch [66/148], Loss: 0.0262
Epoch [8/10], Batch [67/148], Loss: 0.1908
Epoch [8/10], Batch [68/148], Loss: 0.0117
Epoch [8/10], Batch [69/148], Loss: 0.0449
Epoch [8/10], Batch [70/148], Loss: 0.0563
Epoch [8/10], Batch [71/148], Loss: 0.1073
Epoch [8/10], Batch [72/148], Loss: 0.0314
Epoch [8/10], Batch [73/148], Loss: 0.0354
Epoch [8/10], Batch [74/148], Loss: 0.0150
Epoch [8/10], Batch [75/148], Loss: 0.0636
Epoch [8/10], Batch [76/148], Loss: 0.0419
Epoch [8/10], Batch [77/148], Loss: 0.0607
Epoch [8/10], Batch [78/148], Loss: 0.0140
Epoch [8/10], Batch [79/148], Loss: 0.0175
Epoch [8/10], Batch [80/148], Loss: 0.0804
Epoch [8/10], Batch [81/148], Loss: 0.0581
Epoch [8/10], Batch [82/148], Loss: 0.1785
Epoch [8/10], Batch [83/148], Loss: 0.0291
Epoch [8/10], Batch [84/148], Loss: 0.0161
Epoch [8/10], Batch [85/148], Loss: 0.0626
Epoch [8/10], Batch [86/148], Loss: 0.0240
Epoch [8/10], Batch [87/148], Loss: 0.1562
Epoch [8/10], Batch [88/148], Loss: 0.0070
Epoch [8/10], Batch [89/148], Loss: 0.0917
Epoch [8/10], Batch [90/148], Loss: 0.0141
Epoch [8/10], Batch [91/148], Loss: 0.0281
Epoch [8/10], Batch [92/148], Loss: 0.0707
Epoch [8/10], Batch [93/148], Loss: 0.0148
Epoch [8/10], Batch [94/148], Loss: 0.0301
Epoch [8/10], Batch [95/148], Loss: 0.0240
Epoch [8/10], Batch [96/148], Loss: 0.0850
Epoch [8/10], Batch [97/148], Loss: 0.0838
Epoch [8/10], Batch [98/148], Loss: 0.0497
Epoch [8/10], Batch [99/148], Loss: 0.0054
Epoch [8/10], Batch [100/148], Loss: 0.0637
Epoch [8/10], Batch [101/148], Loss: 0.0323
Epoch [8/10], Batch [102/148], Loss: 0.0646
Epoch [8/10], Batch [103/148], Loss: 0.0781
Epoch [8/10], Batch [104/148], Loss: 0.0237
Epoch [8/10], Batch [105/148], Loss: 0.0357
Epoch [8/10], Batch [106/148], Loss: 0.1107
Epoch [8/10], Batch [107/148], Loss: 0.0443
Epoch [8/10], Batch [108/148], Loss: 0.0875
Epoch [8/10], Batch [109/148], Loss: 0.0703
Epoch [8/10], Batch [110/148], Loss: 0.0698
Epoch [8/10], Batch [111/148], Loss: 0.0265
Epoch [8/10], Batch [112/148], Loss: 0.0440
Epoch [8/10], Batch [113/148], Loss: 0.0350
Epoch [8/10], Batch [114/148], Loss: 0.0085
Epoch [8/10], Batch [115/148], Loss: 0.1522
Epoch [8/10], Batch [116/148], Loss: 0.0088
Epoch [8/10], Batch [117/148], Loss: 0.0076
Epoch [8/10], Batch [118/148], Loss: 0.0716
Epoch [8/10], Batch [119/148], Loss: 0.0363
Epoch [8/10], Batch [120/148], Loss: 0.0240
Epoch [8/10], Batch [121/148], Loss: 0.0041
Epoch [8/10], Batch [122/148], Loss: 0.0132
Epoch [8/10], Batch [123/148], Loss: 0.0522
Epoch [8/10], Batch [124/148], Loss: 0.0440
Epoch [8/10], Batch [125/148], Loss: 0.0421
Epoch [8/10], Batch [126/148], Loss: 0.2149
Epoch [8/10], Batch [127/148], Loss: 0.0078
Epoch [8/10], Batch [128/148], Loss: 0.1859
Epoch [8/10], Batch [129/148], Loss: 0.0543
Epoch [8/10], Batch [130/148], Loss: 0.0591
Epoch [8/10], Batch [131/148], Loss: 0.0950
Epoch [8/10], Batch [132/148], Loss: 0.0678
Epoch [8/10], Batch [133/148], Loss: 0.0161
Epoch [8/10], Batch [134/148], Loss: 0.0451
Epoch [8/10], Batch [135/148], Loss: 0.1950
Epoch [8/10], Batch [136/148], Loss: 0.0589
Epoch [8/10], Batch [137/148], Loss: 0.1488
Epoch [8/10], Batch [138/148], Loss: 0.1227
Epoch [8/10], Batch [139/148], Loss: 0.0543
Epoch [8/10], Batch [140/148], Loss: 0.0655
Epoch [8/10], Batch [141/148], Loss: 0.0122
Epoch [8/10], Batch [142/148], Loss: 0.0258
Epoch [8/10], Batch [143/148], Loss: 0.0820
Epoch [8/10], Batch [144/148], Loss: 0.1001
Epoch [8/10], Batch [145/148], Loss: 0.0191
Epoch [8/10], Batch [146/148], Loss: 0.1096
Epoch [8/10], Batch [147/148], Loss: 0.0506
Epoch [8/10], Batch [148/148], Loss: 0.0423
Epoch [8/10], Average Loss: 0.0531
-----------------------------------------------------------
strategy: BEAM
iter: 7
epoch: 7
Test Loss: 0.3913
F1_overall: 0.5974
F1_AGENT: 0.7334
F1_TARGET: 0.4649
-----------------------------------------------------------
Epoch [9/10], Batch [1/148], Loss: 0.0160
Epoch [9/10], Batch [2/148], Loss: 0.0638
Epoch [9/10], Batch [3/148], Loss: 0.0241
Epoch [9/10], Batch [4/148], Loss: 0.0499
Epoch [9/10], Batch [5/148], Loss: 0.0153
Epoch [9/10], Batch [6/148], Loss: 0.0228
Epoch [9/10], Batch [7/148], Loss: 0.0332
Epoch [9/10], Batch [8/148], Loss: 0.0140
Epoch [9/10], Batch [9/148], Loss: 0.0253
Epoch [9/10], Batch [10/148], Loss: 0.0359
Epoch [9/10], Batch [11/148], Loss: 0.0318
Epoch [9/10], Batch [12/148], Loss: 0.1036
Epoch [9/10], Batch [13/148], Loss: 0.0884
Epoch [9/10], Batch [14/148], Loss: 0.0439
Epoch [9/10], Batch [15/148], Loss: 0.0051
Epoch [9/10], Batch [16/148], Loss: 0.0845
Epoch [9/10], Batch [17/148], Loss: 0.0094
Epoch [9/10], Batch [18/148], Loss: 0.0409
Epoch [9/10], Batch [19/148], Loss: 0.0523
Epoch [9/10], Batch [20/148], Loss: 0.0148
Epoch [9/10], Batch [21/148], Loss: 0.1602
Epoch [9/10], Batch [22/148], Loss: 0.0614
Epoch [9/10], Batch [23/148], Loss: 0.0597
Epoch [9/10], Batch [24/148], Loss: 0.0462
Epoch [9/10], Batch [25/148], Loss: 0.0110
Epoch [9/10], Batch [26/148], Loss: 0.3631
Epoch [9/10], Batch [27/148], Loss: 0.0301
Epoch [9/10], Batch [28/148], Loss: 0.0096
Epoch [9/10], Batch [29/148], Loss: 0.0900
Epoch [9/10], Batch [30/148], Loss: 0.0206
Epoch [9/10], Batch [31/148], Loss: 0.0468
Epoch [9/10], Batch [32/148], Loss: 0.0134
Epoch [9/10], Batch [33/148], Loss: 0.1526
Epoch [9/10], Batch [34/148], Loss: 0.0275
Epoch [9/10], Batch [35/148], Loss: 0.1259
Epoch [9/10], Batch [36/148], Loss: 0.0307
Epoch [9/10], Batch [37/148], Loss: 0.0165
Epoch [9/10], Batch [38/148], Loss: 0.0184
Epoch [9/10], Batch [39/148], Loss: 0.0573
Epoch [9/10], Batch [40/148], Loss: 0.0339
Epoch [9/10], Batch [41/148], Loss: 0.0293
Epoch [9/10], Batch [42/148], Loss: 0.0752
Epoch [9/10], Batch [43/148], Loss: 0.1236
Epoch [9/10], Batch [44/148], Loss: 0.0163
Epoch [9/10], Batch [45/148], Loss: 0.0986
Epoch [9/10], Batch [46/148], Loss: 0.0215
Epoch [9/10], Batch [47/148], Loss: 0.0045
Epoch [9/10], Batch [48/148], Loss: 0.0430
Epoch [9/10], Batch [49/148], Loss: 0.0662
Epoch [9/10], Batch [50/148], Loss: 0.0120
Epoch [9/10], Batch [51/148], Loss: 0.1219
Epoch [9/10], Batch [52/148], Loss: 0.0077
Epoch [9/10], Batch [53/148], Loss: 0.1220
Epoch [9/10], Batch [54/148], Loss: 0.0219
Epoch [9/10], Batch [55/148], Loss: 0.0599
Epoch [9/10], Batch [56/148], Loss: 0.0112
Epoch [9/10], Batch [57/148], Loss: 0.0267
Epoch [9/10], Batch [58/148], Loss: 0.1857
Epoch [9/10], Batch [59/148], Loss: 0.0173
Epoch [9/10], Batch [60/148], Loss: 0.0694
Epoch [9/10], Batch [61/148], Loss: 0.0230
Epoch [9/10], Batch [62/148], Loss: 0.0985
Epoch [9/10], Batch [63/148], Loss: 0.0599
Epoch [9/10], Batch [64/148], Loss: 0.0533
Epoch [9/10], Batch [65/148], Loss: 0.1120
Epoch [9/10], Batch [66/148], Loss: 0.0240
Epoch [9/10], Batch [67/148], Loss: 0.0569
Epoch [9/10], Batch [68/148], Loss: 0.0992
Epoch [9/10], Batch [69/148], Loss: 0.0796
Epoch [9/10], Batch [70/148], Loss: 0.0472
Epoch [9/10], Batch [71/148], Loss: 0.0568
Epoch [9/10], Batch [72/148], Loss: 0.0215
Epoch [9/10], Batch [73/148], Loss: 0.1343
Epoch [9/10], Batch [74/148], Loss: 0.0679
Epoch [9/10], Batch [75/148], Loss: 0.0100
Epoch [9/10], Batch [76/148], Loss: 0.1404
Epoch [9/10], Batch [77/148], Loss: 0.0078
Epoch [9/10], Batch [78/148], Loss: 0.0218
Epoch [9/10], Batch [79/148], Loss: 0.0935
Epoch [9/10], Batch [80/148], Loss: 0.0155
Epoch [9/10], Batch [81/148], Loss: 0.0419
Epoch [9/10], Batch [82/148], Loss: 0.0177
Epoch [9/10], Batch [83/148], Loss: 0.0208
Epoch [9/10], Batch [84/148], Loss: 0.0327
Epoch [9/10], Batch [85/148], Loss: 0.2827
Epoch [9/10], Batch [86/148], Loss: 0.0305
Epoch [9/10], Batch [87/148], Loss: 0.1274
Epoch [9/10], Batch [88/148], Loss: 0.0312
Epoch [9/10], Batch [89/148], Loss: 0.0214
Epoch [9/10], Batch [90/148], Loss: 0.0768
Epoch [9/10], Batch [91/148], Loss: 0.1632
Epoch [9/10], Batch [92/148], Loss: 0.0829
Epoch [9/10], Batch [93/148], Loss: 0.0190
Epoch [9/10], Batch [94/148], Loss: 0.0349
Epoch [9/10], Batch [95/148], Loss: 0.0415
Epoch [9/10], Batch [96/148], Loss: 0.0445
Epoch [9/10], Batch [97/148], Loss: 0.0129
Epoch [9/10], Batch [98/148], Loss: 0.0486
Epoch [9/10], Batch [99/148], Loss: 0.0198
Epoch [9/10], Batch [100/148], Loss: 0.0336
Epoch [9/10], Batch [101/148], Loss: 0.0234
Epoch [9/10], Batch [102/148], Loss: 0.0145
Epoch [9/10], Batch [103/148], Loss: 0.0467
Epoch [9/10], Batch [104/148], Loss: 0.0214
Epoch [9/10], Batch [105/148], Loss: 0.0072
Epoch [9/10], Batch [106/148], Loss: 0.0258
Epoch [9/10], Batch [107/148], Loss: 0.0183
Epoch [9/10], Batch [108/148], Loss: 0.0104
Epoch [9/10], Batch [109/148], Loss: 0.0866
Epoch [9/10], Batch [110/148], Loss: 0.0482
Epoch [9/10], Batch [111/148], Loss: 0.0162
Epoch [9/10], Batch [112/148], Loss: 0.0382
Epoch [9/10], Batch [113/148], Loss: 0.0422
Epoch [9/10], Batch [114/148], Loss: 0.0107
Epoch [9/10], Batch [115/148], Loss: 0.0457
Epoch [9/10], Batch [116/148], Loss: 0.0776
Epoch [9/10], Batch [117/148], Loss: 0.0364
Epoch [9/10], Batch [118/148], Loss: 0.0910
Epoch [9/10], Batch [119/148], Loss: 0.0848
Epoch [9/10], Batch [120/148], Loss: 0.0046
Epoch [9/10], Batch [121/148], Loss: 0.0528
Epoch [9/10], Batch [122/148], Loss: 0.0212
Epoch [9/10], Batch [123/148], Loss: 0.0465
Epoch [9/10], Batch [124/148], Loss: 0.0285
Epoch [9/10], Batch [125/148], Loss: 0.0195
Epoch [9/10], Batch [126/148], Loss: 0.0753
Epoch [9/10], Batch [127/148], Loss: 0.0186
Epoch [9/10], Batch [128/148], Loss: 0.0617
Epoch [9/10], Batch [129/148], Loss: 0.0550
Epoch [9/10], Batch [130/148], Loss: 0.0136
Epoch [9/10], Batch [131/148], Loss: 0.0252
Epoch [9/10], Batch [132/148], Loss: 0.0277
Epoch [9/10], Batch [133/148], Loss: 0.0691
Epoch [9/10], Batch [134/148], Loss: 0.0176
Epoch [9/10], Batch [135/148], Loss: 0.0170
Epoch [9/10], Batch [136/148], Loss: 0.0888
Epoch [9/10], Batch [137/148], Loss: 0.0138
Epoch [9/10], Batch [138/148], Loss: 0.0565
Epoch [9/10], Batch [139/148], Loss: 0.0343
Epoch [9/10], Batch [140/148], Loss: 0.0119
Epoch [9/10], Batch [141/148], Loss: 0.0558
Epoch [9/10], Batch [142/148], Loss: 0.0826
Epoch [9/10], Batch [143/148], Loss: 0.0716
Epoch [9/10], Batch [144/148], Loss: 0.0186
Epoch [9/10], Batch [145/148], Loss: 0.0849
Epoch [9/10], Batch [146/148], Loss: 0.0354
Epoch [9/10], Batch [147/148], Loss: 0.0111
Epoch [9/10], Batch [148/148], Loss: 0.1455
Epoch [9/10], Average Loss: 0.0520
-----------------------------------------------------------
strategy: BEAM
iter: 7
epoch: 8
Test Loss: 0.3974
F1_overall: 0.5931
F1_AGENT: 0.7362
F1_TARGET: 0.4473
-----------------------------------------------------------
Epoch [10/10], Batch [1/148], Loss: 0.0272
Epoch [10/10], Batch [2/148], Loss: 0.0556
Epoch [10/10], Batch [3/148], Loss: 0.0054
Epoch [10/10], Batch [4/148], Loss: 0.0087
Epoch [10/10], Batch [5/148], Loss: 0.0098
Epoch [10/10], Batch [6/148], Loss: 0.0640
Epoch [10/10], Batch [7/148], Loss: 0.0671
Epoch [10/10], Batch [8/148], Loss: 0.0263
Epoch [10/10], Batch [9/148], Loss: 0.0232
Epoch [10/10], Batch [10/148], Loss: 0.0075
Epoch [10/10], Batch [11/148], Loss: 0.0042
Epoch [10/10], Batch [12/148], Loss: 0.0076
Epoch [10/10], Batch [13/148], Loss: 0.0038
Epoch [10/10], Batch [14/148], Loss: 0.0138
Epoch [10/10], Batch [15/148], Loss: 0.0624
Epoch [10/10], Batch [16/148], Loss: 0.0399
Epoch [10/10], Batch [17/148], Loss: 0.0216
Epoch [10/10], Batch [18/148], Loss: 0.0187
Epoch [10/10], Batch [19/148], Loss: 0.1973
Epoch [10/10], Batch [20/148], Loss: 0.0054
Epoch [10/10], Batch [21/148], Loss: 0.0544
Epoch [10/10], Batch [22/148], Loss: 0.0092
Epoch [10/10], Batch [23/148], Loss: 0.0565
Epoch [10/10], Batch [24/148], Loss: 0.0307
Epoch [10/10], Batch [25/148], Loss: 0.0506
Epoch [10/10], Batch [26/148], Loss: 0.0593
Epoch [10/10], Batch [27/148], Loss: 0.0085
Epoch [10/10], Batch [28/148], Loss: 0.0059
Epoch [10/10], Batch [29/148], Loss: 0.0388
Epoch [10/10], Batch [30/148], Loss: 0.0706
Epoch [10/10], Batch [31/148], Loss: 0.0091
Epoch [10/10], Batch [32/148], Loss: 0.0243
Epoch [10/10], Batch [33/148], Loss: 0.0110
Epoch [10/10], Batch [34/148], Loss: 0.0170
Epoch [10/10], Batch [35/148], Loss: 0.0035
Epoch [10/10], Batch [36/148], Loss: 0.0069
Epoch [10/10], Batch [37/148], Loss: 0.0679
Epoch [10/10], Batch [38/148], Loss: 0.0171
Epoch [10/10], Batch [39/148], Loss: 0.0079
Epoch [10/10], Batch [40/148], Loss: 0.0243
Epoch [10/10], Batch [41/148], Loss: 0.0115
Epoch [10/10], Batch [42/148], Loss: 0.0082
Epoch [10/10], Batch [43/148], Loss: 0.0348
Epoch [10/10], Batch [44/148], Loss: 0.0094
Epoch [10/10], Batch [45/148], Loss: 0.0076
Epoch [10/10], Batch [46/148], Loss: 0.0198
Epoch [10/10], Batch [47/148], Loss: 0.0297
Epoch [10/10], Batch [48/148], Loss: 0.0698
Epoch [10/10], Batch [49/148], Loss: 0.0253
Epoch [10/10], Batch [50/148], Loss: 0.0306
Epoch [10/10], Batch [51/148], Loss: 0.0197
Epoch [10/10], Batch [52/148], Loss: 0.0200
Epoch [10/10], Batch [53/148], Loss: 0.0477
Epoch [10/10], Batch [54/148], Loss: 0.0505
Epoch [10/10], Batch [55/148], Loss: 0.0700
Epoch [10/10], Batch [56/148], Loss: 0.0202
Epoch [10/10], Batch [57/148], Loss: 0.0378
Epoch [10/10], Batch [58/148], Loss: 0.0064
Epoch [10/10], Batch [59/148], Loss: 0.0481
Epoch [10/10], Batch [60/148], Loss: 0.0338
Epoch [10/10], Batch [61/148], Loss: 0.0208
Epoch [10/10], Batch [62/148], Loss: 0.0046
Epoch [10/10], Batch [63/148], Loss: 0.0037
Epoch [10/10], Batch [64/148], Loss: 0.0121
Epoch [10/10], Batch [65/148], Loss: 0.0245
Epoch [10/10], Batch [66/148], Loss: 0.0058
Epoch [10/10], Batch [67/148], Loss: 0.0182
Epoch [10/10], Batch [68/148], Loss: 0.0279
Epoch [10/10], Batch [69/148], Loss: 0.0391
Epoch [10/10], Batch [70/148], Loss: 0.0225
Epoch [10/10], Batch [71/148], Loss: 0.0114
Epoch [10/10], Batch [72/148], Loss: 0.0195
Epoch [10/10], Batch [73/148], Loss: 0.0549
Epoch [10/10], Batch [74/148], Loss: 0.0124
Epoch [10/10], Batch [75/148], Loss: 0.0226
Epoch [10/10], Batch [76/148], Loss: 0.0837
Epoch [10/10], Batch [77/148], Loss: 0.0063
Epoch [10/10], Batch [78/148], Loss: 0.0320
Epoch [10/10], Batch [79/148], Loss: 0.0363
Epoch [10/10], Batch [80/148], Loss: 0.0034
Epoch [10/10], Batch [81/148], Loss: 0.0152
Epoch [10/10], Batch [82/148], Loss: 0.0388
Epoch [10/10], Batch [83/148], Loss: 0.0190
Epoch [10/10], Batch [84/148], Loss: 0.0023
Epoch [10/10], Batch [85/148], Loss: 0.2030
Epoch [10/10], Batch [86/148], Loss: 0.0470
Epoch [10/10], Batch [87/148], Loss: 0.0161
Epoch [10/10], Batch [88/148], Loss: 0.0658
Epoch [10/10], Batch [89/148], Loss: 0.0629
Epoch [10/10], Batch [90/148], Loss: 0.0556
Epoch [10/10], Batch [91/148], Loss: 0.0060
Epoch [10/10], Batch [92/148], Loss: 0.0066
Epoch [10/10], Batch [93/148], Loss: 0.1142
Epoch [10/10], Batch [94/148], Loss: 0.0179
Epoch [10/10], Batch [95/148], Loss: 0.0720
Epoch [10/10], Batch [96/148], Loss: 0.0142
Epoch [10/10], Batch [97/148], Loss: 0.0285
Epoch [10/10], Batch [98/148], Loss: 0.0105
Epoch [10/10], Batch [99/148], Loss: 0.0354
Epoch [10/10], Batch [100/148], Loss: 0.1070
Epoch [10/10], Batch [101/148], Loss: 0.0069
Epoch [10/10], Batch [102/148], Loss: 0.0159
Epoch [10/10], Batch [103/148], Loss: 0.0954
Epoch [10/10], Batch [104/148], Loss: 0.0235
Epoch [10/10], Batch [105/148], Loss: 0.0078
Epoch [10/10], Batch [106/148], Loss: 0.0551
Epoch [10/10], Batch [107/148], Loss: 0.0267
Epoch [10/10], Batch [108/148], Loss: 0.0255
Epoch [10/10], Batch [109/148], Loss: 0.0215
Epoch [10/10], Batch [110/148], Loss: 0.0329
Epoch [10/10], Batch [111/148], Loss: 0.0319
Epoch [10/10], Batch [112/148], Loss: 0.0182
Epoch [10/10], Batch [113/148], Loss: 0.0761
Epoch [10/10], Batch [114/148], Loss: 0.0485
Epoch [10/10], Batch [115/148], Loss: 0.0479
Epoch [10/10], Batch [116/148], Loss: 0.0084
Epoch [10/10], Batch [117/148], Loss: 0.0643
Epoch [10/10], Batch [118/148], Loss: 0.0068
Epoch [10/10], Batch [119/148], Loss: 0.1127
Epoch [10/10], Batch [120/148], Loss: 0.0534
Epoch [10/10], Batch [121/148], Loss: 0.0340
Epoch [10/10], Batch [122/148], Loss: 0.0047
Epoch [10/10], Batch [123/148], Loss: 0.0379
Epoch [10/10], Batch [124/148], Loss: 0.0257
Epoch [10/10], Batch [125/148], Loss: 0.0051
Epoch [10/10], Batch [126/148], Loss: 0.0071
Epoch [10/10], Batch [127/148], Loss: 0.0049
Epoch [10/10], Batch [128/148], Loss: 0.0805
Epoch [10/10], Batch [129/148], Loss: 0.0042
Epoch [10/10], Batch [130/148], Loss: 0.0184
Epoch [10/10], Batch [131/148], Loss: 0.0077
Epoch [10/10], Batch [132/148], Loss: 0.0225
Epoch [10/10], Batch [133/148], Loss: 0.0328
Epoch [10/10], Batch [134/148], Loss: 0.1099
Epoch [10/10], Batch [135/148], Loss: 0.0067
Epoch [10/10], Batch [136/148], Loss: 0.0386
Epoch [10/10], Batch [137/148], Loss: 0.0327
Epoch [10/10], Batch [138/148], Loss: 0.0755
Epoch [10/10], Batch [139/148], Loss: 0.0082
Epoch [10/10], Batch [140/148], Loss: 0.1511
Epoch [10/10], Batch [141/148], Loss: 0.0016
Epoch [10/10], Batch [142/148], Loss: 0.0223
Epoch [10/10], Batch [143/148], Loss: 0.0596
Epoch [10/10], Batch [144/148], Loss: 0.0401
Epoch [10/10], Batch [145/148], Loss: 0.0164
Epoch [10/10], Batch [146/148], Loss: 0.0437
Epoch [10/10], Batch [147/148], Loss: 0.0243
Epoch [10/10], Batch [148/148], Loss: 0.0082
Epoch [10/10], Average Loss: 0.0334
-----------------------------------------------------------
strategy: BEAM
iter: 7
epoch: 9
Test Loss: 0.4349
F1_overall: 0.5763
F1_AGENT: 0.7179
F1_TARGET: 0.4358
-----------------------------------------------------------
sorted_beam_scores: [(281, tensor(-0.2519, dtype=torch.float64)), (122, tensor(-0.2358, dtype=torch.float64)), (1477, tensor(-0.2158, dtype=torch.float64)), (2017, tensor(-0.2050, dtype=torch.float64)), (597, tensor(-0.1944, dtype=torch.float64)), (209, tensor(-0.1765, dtype=torch.float64)), (1468, tensor(-0.1754, dtype=torch.float64)), (2304, tensor(-0.1726, dtype=torch.float64)), (2188, tensor(-0.1706, dtype=torch.float64)), (2245, tensor(-0.1692, dtype=torch.float64)), (801, tensor(-0.1638, dtype=torch.float64)), (894, tensor(-0.1514, dtype=torch.float64)), (726, tensor(-0.1450, dtype=torch.float64)), (938, tensor(-0.1447, dtype=torch.float64)), (22, tensor(-0.1430, dtype=torch.float64)), (1808, tensor(-0.1429, dtype=torch.float64)), (16, tensor(-0.1427, dtype=torch.float64)), (377, tensor(-0.1417, dtype=torch.float64)), (1827, tensor(-0.1399, dtype=torch.float64)), (2312, tensor(-0.1394, dtype=torch.float64)), (1255, tensor(-0.1394, dtype=torch.float64)), (606, tensor(-0.1378, dtype=torch.float64)), (1509, tensor(-0.1338, dtype=torch.float64)), (261, tensor(-0.1299, dtype=torch.float64)), (1713, tensor(-0.1287, dtype=torch.float64)), (908, tensor(-0.1232, dtype=torch.float64)), (319, tensor(-0.1227, dtype=torch.float64)), (1672, tensor(-0.1220, dtype=torch.float64)), (512, tensor(-0.1214, dtype=torch.float64)), (728, tensor(-0.1203, dtype=torch.float64)), (1568, tensor(-0.1194, dtype=torch.float64)), (462, tensor(-0.1188, dtype=torch.float64)), (425, tensor(-0.1187, dtype=torch.float64)), (1061, tensor(-0.1173, dtype=torch.float64)), (1161, tensor(-0.1167, dtype=torch.float64)), (1558, tensor(-0.1155, dtype=torch.float64)), (1739, tensor(-0.1153, dtype=torch.float64)), (1067, tensor(-0.1148, dtype=torch.float64)), (219, tensor(-0.1142, dtype=torch.float64)), (2197, tensor(-0.1130, dtype=torch.float64)), (1656, tensor(-0.1128, dtype=torch.float64)), (1019, tensor(-0.1122, dtype=torch.float64)), (508, tensor(-0.1121, dtype=torch.float64)), (21, tensor(-0.1103, dtype=torch.float64)), (384, tensor(-0.1101, dtype=torch.float64)), (1658, tensor(-0.1096, dtype=torch.float64)), (1463, tensor(-0.1090, dtype=torch.float64)), (686, tensor(-0.1089, dtype=torch.float64)), (1493, tensor(-0.1086, dtype=torch.float64)), (1418, tensor(-0.1077, dtype=torch.float64)), (1978, tensor(-0.1076, dtype=torch.float64)), (1213, tensor(-0.1076, dtype=torch.float64)), (1430, tensor(-0.1071, dtype=torch.float64)), (534, tensor(-0.1064, dtype=torch.float64)), (2172, tensor(-0.1058, dtype=torch.float64)), (2277, tensor(-0.1051, dtype=torch.float64)), (1427, tensor(-0.1050, dtype=torch.float64)), (18, tensor(-0.1047, dtype=torch.float64)), (2203, tensor(-0.1045, dtype=torch.float64)), (406, tensor(-0.1040, dtype=torch.float64)), (1459, tensor(-0.1039, dtype=torch.float64)), (2075, tensor(-0.1037, dtype=torch.float64)), (24, tensor(-0.1032, dtype=torch.float64)), (1205, tensor(-0.1027, dtype=torch.float64)), (749, tensor(-0.1025, dtype=torch.float64)), (1545, tensor(-0.1025, dtype=torch.float64)), (865, tensor(-0.1024, dtype=torch.float64)), (1919, tensor(-0.1019, dtype=torch.float64)), (1949, tensor(-0.1015, dtype=torch.float64)), (1180, tensor(-0.1011, dtype=torch.float64)), (1010, tensor(-0.1003, dtype=torch.float64)), (1228, tensor(-0.0987, dtype=torch.float64)), (340, tensor(-0.0986, dtype=torch.float64)), (240, tensor(-0.0985, dtype=torch.float64)), (1654, tensor(-0.0985, dtype=torch.float64)), (633, tensor(-0.0981, dtype=torch.float64)), (1830, tensor(-0.0976, dtype=torch.float64)), (2050, tensor(-0.0975, dtype=torch.float64)), (53, tensor(-0.0972, dtype=torch.float64)), (316, tensor(-0.0972, dtype=torch.float64)), (1637, tensor(-0.0969, dtype=torch.float64)), (937, tensor(-0.0969, dtype=torch.float64)), (2326, tensor(-0.0967, dtype=torch.float64)), (96, tensor(-0.0966, dtype=torch.float64)), (142, tensor(-0.0966, dtype=torch.float64)), (1317, tensor(-0.0961, dtype=torch.float64)), (309, tensor(-0.0959, dtype=torch.float64)), (667, tensor(-0.0958, dtype=torch.float64)), (1247, tensor(-0.0952, dtype=torch.float64)), (1264, tensor(-0.0951, dtype=torch.float64)), (1176, tensor(-0.0951, dtype=torch.float64)), (191, tensor(-0.0949, dtype=torch.float64)), (1082, tensor(-0.0946, dtype=torch.float64)), (169, tensor(-0.0943, dtype=torch.float64)), (1870, tensor(-0.0942, dtype=torch.float64)), (621, tensor(-0.0939, dtype=torch.float64)), (419, tensor(-0.0938, dtype=torch.float64)), (1963, tensor(-0.0936, dtype=torch.float64)), (1988, tensor(-0.0936, dtype=torch.float64)), (2225, tensor(-0.0933, dtype=torch.float64)), (1714, tensor(-0.0931, dtype=torch.float64)), (456, tensor(-0.0928, dtype=torch.float64)), (649, tensor(-0.0928, dtype=torch.float64)), (1460, tensor(-0.0925, dtype=torch.float64)), (1412, tensor(-0.0923, dtype=torch.float64)), (1863, tensor(-0.0918, dtype=torch.float64)), (1466, tensor(-0.0918, dtype=torch.float64)), (1300, tensor(-0.0918, dtype=torch.float64)), (405, tensor(-0.0917, dtype=torch.float64)), (1358, tensor(-0.0913, dtype=torch.float64)), (963, tensor(-0.0913, dtype=torch.float64)), (773, tensor(-0.0908, dtype=torch.float64)), (1277, tensor(-0.0906, dtype=torch.float64)), (775, tensor(-0.0903, dtype=torch.float64)), (600, tensor(-0.0899, dtype=torch.float64)), (1981, tensor(-0.0898, dtype=torch.float64)), (774, tensor(-0.0896, dtype=torch.float64)), (1175, tensor(-0.0890, dtype=torch.float64)), (185, tensor(-0.0888, dtype=torch.float64)), (1374, tensor(-0.0881, dtype=torch.float64)), (2131, tensor(-0.0874, dtype=torch.float64)), (1344, tensor(-0.0873, dtype=torch.float64)), (1157, tensor(-0.0872, dtype=torch.float64)), (2028, tensor(-0.0869, dtype=torch.float64)), (365, tensor(-0.0868, dtype=torch.float64)), (2140, tensor(-0.0864, dtype=torch.float64)), (677, tensor(-0.0860, dtype=torch.float64)), (1347, tensor(-0.0860, dtype=torch.float64)), (813, tensor(-0.0860, dtype=torch.float64)), (347, tensor(-0.0859, dtype=torch.float64)), (768, tensor(-0.0858, dtype=torch.float64)), (814, tensor(-0.0858, dtype=torch.float64)), (230, tensor(-0.0857, dtype=torch.float64)), (205, tensor(-0.0857, dtype=torch.float64)), (1614, tensor(-0.0856, dtype=torch.float64)), (218, tensor(-0.0853, dtype=torch.float64)), (89, tensor(-0.0853, dtype=torch.float64)), (370, tensor(-0.0853, dtype=torch.float64)), (1985, tensor(-0.0851, dtype=torch.float64)), (2042, tensor(-0.0846, dtype=torch.float64)), (1103, tensor(-0.0845, dtype=torch.float64)), (897, tensor(-0.0845, dtype=torch.float64)), (2080, tensor(-0.0844, dtype=torch.float64)), (743, tensor(-0.0843, dtype=torch.float64)), (1397, tensor(-0.0842, dtype=torch.float64)), (164, tensor(-0.0839, dtype=torch.float64)), (1470, tensor(-0.0839, dtype=torch.float64)), (771, tensor(-0.0835, dtype=torch.float64)), (159, tensor(-0.0834, dtype=torch.float64)), (2239, tensor(-0.0828, dtype=torch.float64)), (459, tensor(-0.0827, dtype=torch.float64)), (498, tensor(-0.0824, dtype=torch.float64)), (95, tensor(-0.0819, dtype=torch.float64)), (1043, tensor(-0.0817, dtype=torch.float64)), (1664, tensor(-0.0817, dtype=torch.float64)), (2055, tensor(-0.0816, dtype=torch.float64)), (445, tensor(-0.0815, dtype=torch.float64)), (1734, tensor(-0.0814, dtype=torch.float64)), (447, tensor(-0.0814, dtype=torch.float64)), (1698, tensor(-0.0812, dtype=torch.float64)), (2122, tensor(-0.0811, dtype=torch.float64)), (1616, tensor(-0.0806, dtype=torch.float64)), (2128, tensor(-0.0804, dtype=torch.float64)), (362, tensor(-0.0797, dtype=torch.float64)), (37, tensor(-0.0792, dtype=torch.float64)), (1424, tensor(-0.0791, dtype=torch.float64)), (1811, tensor(-0.0788, dtype=torch.float64)), (1303, tensor(-0.0785, dtype=torch.float64)), (1600, tensor(-0.0782, dtype=torch.float64)), (2224, tensor(-0.0779, dtype=torch.float64)), (658, tensor(-0.0777, dtype=torch.float64)), (1183, tensor(-0.0776, dtype=torch.float64)), (20, tensor(-0.0776, dtype=torch.float64)), (275, tensor(-0.0773, dtype=torch.float64)), (1939, tensor(-0.0769, dtype=torch.float64)), (956, tensor(-0.0767, dtype=torch.float64)), (1923, tensor(-0.0767, dtype=torch.float64)), (1937, tensor(-0.0765, dtype=torch.float64)), (1673, tensor(-0.0765, dtype=torch.float64)), (1194, tensor(-0.0762, dtype=torch.float64)), (291, tensor(-0.0759, dtype=torch.float64)), (72, tensor(-0.0758, dtype=torch.float64)), (1993, tensor(-0.0755, dtype=torch.float64)), (176, tensor(-0.0755, dtype=torch.float64)), (1389, tensor(-0.0755, dtype=torch.float64)), (2183, tensor(-0.0753, dtype=torch.float64)), (1382, tensor(-0.0752, dtype=torch.float64)), (2353, tensor(-0.0751, dtype=torch.float64)), (2046, tensor(-0.0750, dtype=torch.float64)), (1793, tensor(-0.0748, dtype=torch.float64)), (538, tensor(-0.0746, dtype=torch.float64)), (1694, tensor(-0.0745, dtype=torch.float64)), (2018, tensor(-0.0741, dtype=torch.float64)), (612, tensor(-0.0741, dtype=torch.float64)), (2082, tensor(-0.0740, dtype=torch.float64)), (1316, tensor(-0.0738, dtype=torch.float64)), (556, tensor(-0.0738, dtype=torch.float64)), (815, tensor(-0.0738, dtype=torch.float64)), (1474, tensor(-0.0738, dtype=torch.float64)), (645, tensor(-0.0736, dtype=torch.float64)), (1329, tensor(-0.0733, dtype=torch.float64)), (957, tensor(-0.0733, dtype=torch.float64)), (1221, tensor(-0.0733, dtype=torch.float64)), (540, tensor(-0.0731, dtype=torch.float64)), (1865, tensor(-0.0730, dtype=torch.float64)), (1500, tensor(-0.0729, dtype=torch.float64)), (86, tensor(-0.0728, dtype=torch.float64)), (1168, tensor(-0.0728, dtype=torch.float64)), (1234, tensor(-0.0726, dtype=torch.float64)), (480, tensor(-0.0726, dtype=torch.float64)), (637, tensor(-0.0725, dtype=torch.float64)), (1044, tensor(-0.0725, dtype=torch.float64)), (1711, tensor(-0.0724, dtype=torch.float64)), (2034, tensor(-0.0722, dtype=torch.float64)), (503, tensor(-0.0721, dtype=torch.float64)), (917, tensor(-0.0721, dtype=torch.float64)), (1151, tensor(-0.0715, dtype=torch.float64)), (2339, tensor(-0.0714, dtype=torch.float64)), (990, tensor(-0.0713, dtype=torch.float64)), (2189, tensor(-0.0712, dtype=torch.float64)), (1075, tensor(-0.0705, dtype=torch.float64)), (2109, tensor(-0.0704, dtype=torch.float64)), (1178, tensor(-0.0702, dtype=torch.float64)), (1052, tensor(-0.0701, dtype=torch.float64)), (2049, tensor(-0.0697, dtype=torch.float64)), (1878, tensor(-0.0697, dtype=torch.float64)), (1346, tensor(-0.0696, dtype=torch.float64)), (975, tensor(-0.0695, dtype=torch.float64)), (1116, tensor(-0.0694, dtype=torch.float64)), (1166, tensor(-0.0693, dtype=torch.float64)), (75, tensor(-0.0693, dtype=torch.float64)), (2211, tensor(-0.0692, dtype=torch.float64)), (354, tensor(-0.0690, dtype=torch.float64)), (1515, tensor(-0.0689, dtype=torch.float64)), (1237, tensor(-0.0687, dtype=torch.float64)), (299, tensor(-0.0685, dtype=torch.float64)), (1437, tensor(-0.0683, dtype=torch.float64)), (1279, tensor(-0.0683, dtype=torch.float64)), (1330, tensor(-0.0681, dtype=torch.float64)), (1302, tensor(-0.0681, dtype=torch.float64)), (2180, tensor(-0.0680, dtype=torch.float64)), (1805, tensor(-0.0679, dtype=torch.float64)), (1343, tensor(-0.0678, dtype=torch.float64)), (1471, tensor(-0.0678, dtype=torch.float64)), (758, tensor(-0.0677, dtype=torch.float64)), (592, tensor(-0.0677, dtype=torch.float64)), (502, tensor(-0.0677, dtype=torch.float64)), (816, tensor(-0.0675, dtype=torch.float64)), (1241, tensor(-0.0675, dtype=torch.float64)), (1529, tensor(-0.0675, dtype=torch.float64)), (1285, tensor(-0.0675, dtype=torch.float64)), (1432, tensor(-0.0674, dtype=torch.float64)), (837, tensor(-0.0673, dtype=torch.float64)), (1071, tensor(-0.0671, dtype=torch.float64)), (562, tensor(-0.0670, dtype=torch.float64)), (1485, tensor(-0.0668, dtype=torch.float64)), (1351, tensor(-0.0666, dtype=torch.float64)), (359, tensor(-0.0665, dtype=torch.float64)), (385, tensor(-0.0664, dtype=torch.float64)), (1581, tensor(-0.0664, dtype=torch.float64)), (1140, tensor(-0.0662, dtype=torch.float64)), (2142, tensor(-0.0662, dtype=torch.float64)), (2272, tensor(-0.0661, dtype=torch.float64)), (1369, tensor(-0.0661, dtype=torch.float64)), (225, tensor(-0.0660, dtype=torch.float64)), (546, tensor(-0.0659, dtype=torch.float64)), (1246, tensor(-0.0658, dtype=torch.float64)), (708, tensor(-0.0657, dtype=torch.float64)), (710, tensor(-0.0655, dtype=torch.float64)), (1187, tensor(-0.0653, dtype=torch.float64)), (803, tensor(-0.0653, dtype=torch.float64)), (742, tensor(-0.0653, dtype=torch.float64)), (1686, tensor(-0.0652, dtype=torch.float64)), (767, tensor(-0.0651, dtype=torch.float64)), (731, tensor(-0.0651, dtype=torch.float64)), (1716, tensor(-0.0650, dtype=torch.float64)), (964, tensor(-0.0649, dtype=torch.float64)), (2220, tensor(-0.0649, dtype=torch.float64)), (1541, tensor(-0.0649, dtype=torch.float64)), (353, tensor(-0.0648, dtype=torch.float64)), (2168, tensor(-0.0647, dtype=torch.float64)), (1806, tensor(-0.0647, dtype=torch.float64)), (1683, tensor(-0.0647, dtype=torch.float64)), (1527, tensor(-0.0645, dtype=torch.float64)), (2089, tensor(-0.0644, dtype=torch.float64)), (629, tensor(-0.0641, dtype=torch.float64)), (790, tensor(-0.0641, dtype=torch.float64)), (900, tensor(-0.0641, dtype=torch.float64)), (1260, tensor(-0.0639, dtype=torch.float64)), (2222, tensor(-0.0638, dtype=torch.float64)), (778, tensor(-0.0638, dtype=torch.float64)), (746, tensor(-0.0637, dtype=torch.float64)), (541, tensor(-0.0637, dtype=torch.float64)), (363, tensor(-0.0637, dtype=torch.float64)), (1718, tensor(-0.0637, dtype=torch.float64)), (380, tensor(-0.0636, dtype=torch.float64)), (822, tensor(-0.0636, dtype=torch.float64)), (1426, tensor(-0.0635, dtype=torch.float64)), (194, tensor(-0.0635, dtype=torch.float64)), (2002, tensor(-0.0634, dtype=torch.float64)), (424, tensor(-0.0634, dtype=torch.float64)), (525, tensor(-0.0633, dtype=torch.float64)), (1196, tensor(-0.0632, dtype=torch.float64)), (1832, tensor(-0.0632, dtype=torch.float64)), (1144, tensor(-0.0632, dtype=torch.float64)), (2256, tensor(-0.0630, dtype=torch.float64)), (784, tensor(-0.0630, dtype=torch.float64)), (2332, tensor(-0.0630, dtype=torch.float64)), (2007, tensor(-0.0629, dtype=torch.float64)), (1912, tensor(-0.0629, dtype=torch.float64)), (1635, tensor(-0.0629, dtype=torch.float64)), (54, tensor(-0.0628, dtype=torch.float64)), (1816, tensor(-0.0627, dtype=torch.float64)), (1812, tensor(-0.0626, dtype=torch.float64)), (2031, tensor(-0.0624, dtype=torch.float64)), (1997, tensor(-0.0624, dtype=torch.float64)), (1532, tensor(-0.0623, dtype=torch.float64)), (1795, tensor(-0.0623, dtype=torch.float64)), (945, tensor(-0.0622, dtype=torch.float64)), (2278, tensor(-0.0621, dtype=torch.float64)), (1406, tensor(-0.0621, dtype=torch.float64)), (1958, tensor(-0.0620, dtype=torch.float64)), (1661, tensor(-0.0620, dtype=torch.float64)), (972, tensor(-0.0619, dtype=torch.float64)), (2097, tensor(-0.0617, dtype=torch.float64)), (2134, tensor(-0.0616, dtype=torch.float64)), (1867, tensor(-0.0614, dtype=torch.float64)), (418, tensor(-0.0614, dtype=torch.float64)), (571, tensor(-0.0612, dtype=torch.float64)), (929, tensor(-0.0611, dtype=torch.float64)), (1983, tensor(-0.0611, dtype=torch.float64)), (1024, tensor(-0.0611, dtype=torch.float64)), (1844, tensor(-0.0610, dtype=torch.float64)), (1353, tensor(-0.0609, dtype=torch.float64)), (1320, tensor(-0.0607, dtype=torch.float64)), (1204, tensor(-0.0606, dtype=torch.float64)), (2009, tensor(-0.0605, dtype=torch.float64)), (1636, tensor(-0.0604, dtype=torch.float64)), (83, tensor(-0.0604, dtype=torch.float64)), (1227, tensor(-0.0601, dtype=torch.float64)), (528, tensor(-0.0598, dtype=torch.float64)), (1820, tensor(-0.0597, dtype=torch.float64)), (1927, tensor(-0.0597, dtype=torch.float64)), (1601, tensor(-0.0596, dtype=torch.float64)), (819, tensor(-0.0595, dtype=torch.float64)), (1105, tensor(-0.0594, dtype=torch.float64)), (175, tensor(-0.0591, dtype=torch.float64)), (939, tensor(-0.0591, dtype=torch.float64)), (829, tensor(-0.0589, dtype=torch.float64)), (337, tensor(-0.0589, dtype=torch.float64)), (2132, tensor(-0.0589, dtype=torch.float64)), (884, tensor(-0.0587, dtype=torch.float64)), (2208, tensor(-0.0587, dtype=torch.float64)), (714, tensor(-0.0586, dtype=torch.float64)), (420, tensor(-0.0586, dtype=torch.float64)), (716, tensor(-0.0586, dtype=torch.float64)), (537, tensor(-0.0586, dtype=torch.float64)), (338, tensor(-0.0586, dtype=torch.float64)), (1379, tensor(-0.0585, dtype=torch.float64)), (1179, tensor(-0.0585, dtype=torch.float64)), (1849, tensor(-0.0585, dtype=torch.float64)), (1848, tensor(-0.0584, dtype=torch.float64)), (821, tensor(-0.0582, dtype=torch.float64)), (928, tensor(-0.0581, dtype=torch.float64)), (251, tensor(-0.0580, dtype=torch.float64)), (547, tensor(-0.0579, dtype=torch.float64)), (1084, tensor(-0.0578, dtype=torch.float64)), (2091, tensor(-0.0577, dtype=torch.float64)), (1674, tensor(-0.0577, dtype=torch.float64)), (927, tensor(-0.0577, dtype=torch.float64)), (854, tensor(-0.0577, dtype=torch.float64)), (416, tensor(-0.0576, dtype=torch.float64)), (1243, tensor(-0.0574, dtype=torch.float64)), (1872, tensor(-0.0574, dtype=torch.float64)), (2244, tensor(-0.0573, dtype=torch.float64)), (483, tensor(-0.0572, dtype=torch.float64)), (876, tensor(-0.0572, dtype=torch.float64)), (616, tensor(-0.0572, dtype=torch.float64)), (121, tensor(-0.0569, dtype=torch.float64)), (1573, tensor(-0.0568, dtype=torch.float64)), (244, tensor(-0.0568, dtype=torch.float64)), (2290, tensor(-0.0567, dtype=torch.float64)), (733, tensor(-0.0566, dtype=torch.float64)), (263, tensor(-0.0565, dtype=torch.float64)), (1309, tensor(-0.0565, dtype=torch.float64)), (631, tensor(-0.0564, dtype=torch.float64)), (1994, tensor(-0.0562, dtype=torch.float64)), (1122, tensor(-0.0561, dtype=torch.float64)), (1720, tensor(-0.0560, dtype=torch.float64)), (431, tensor(-0.0560, dtype=torch.float64)), (350, tensor(-0.0559, dtype=torch.float64)), (2105, tensor(-0.0558, dtype=torch.float64)), (1377, tensor(-0.0557, dtype=torch.float64)), (1087, tensor(-0.0556, dtype=torch.float64)), (1677, tensor(-0.0556, dtype=torch.float64)), (1746, tensor(-0.0556, dtype=torch.float64)), (2012, tensor(-0.0556, dtype=torch.float64)), (1042, tensor(-0.0555, dtype=torch.float64)), (1173, tensor(-0.0555, dtype=torch.float64)), (2015, tensor(-0.0554, dtype=torch.float64)), (1337, tensor(-0.0552, dtype=torch.float64)), (2103, tensor(-0.0552, dtype=torch.float64)), (968, tensor(-0.0552, dtype=torch.float64)), (2079, tensor(-0.0551, dtype=torch.float64)), (1625, tensor(-0.0551, dtype=torch.float64)), (1191, tensor(-0.0550, dtype=torch.float64)), (108, tensor(-0.0550, dtype=torch.float64)), (839, tensor(-0.0549, dtype=torch.float64)), (1018, tensor(-0.0549, dtype=torch.float64)), (713, tensor(-0.0549, dtype=torch.float64)), (712, tensor(-0.0548, dtype=torch.float64)), (1249, tensor(-0.0548, dtype=torch.float64)), (437, tensor(-0.0547, dtype=torch.float64)), (190, tensor(-0.0546, dtype=torch.float64)), (1130, tensor(-0.0545, dtype=torch.float64)), (1926, tensor(-0.0544, dtype=torch.float64)), (1242, tensor(-0.0543, dtype=torch.float64)), (603, tensor(-0.0543, dtype=torch.float64)), (172, tensor(-0.0543, dtype=torch.float64)), (1450, tensor(-0.0542, dtype=torch.float64)), (1293, tensor(-0.0542, dtype=torch.float64)), (1165, tensor(-0.0538, dtype=torch.float64)), (1181, tensor(-0.0537, dtype=torch.float64)), (792, tensor(-0.0536, dtype=torch.float64)), (596, tensor(-0.0534, dtype=torch.float64)), (2029, tensor(-0.0532, dtype=torch.float64)), (923, tensor(-0.0531, dtype=torch.float64)), (1869, tensor(-0.0531, dtype=torch.float64)), (2148, tensor(-0.0531, dtype=torch.float64)), (1486, tensor(-0.0530, dtype=torch.float64)), (1314, tensor(-0.0530, dtype=torch.float64)), (223, tensor(-0.0529, dtype=torch.float64)), (585, tensor(-0.0528, dtype=torch.float64)), (1618, tensor(-0.0527, dtype=torch.float64)), (729, tensor(-0.0527, dtype=torch.float64)), (2232, tensor(-0.0527, dtype=torch.float64)), (2223, tensor(-0.0527, dtype=torch.float64)), (390, tensor(-0.0525, dtype=torch.float64)), (952, tensor(-0.0525, dtype=torch.float64)), (651, tensor(-0.0525, dtype=torch.float64)), (1009, tensor(-0.0525, dtype=torch.float64)), (1752, tensor(-0.0525, dtype=torch.float64)), (1881, tensor(-0.0525, dtype=torch.float64)), (46, tensor(-0.0524, dtype=torch.float64)), (591, tensor(-0.0523, dtype=torch.float64)), (1989, tensor(-0.0522, dtype=torch.float64)), (1271, tensor(-0.0522, dtype=torch.float64)), (2313, tensor(-0.0521, dtype=torch.float64)), (421, tensor(-0.0521, dtype=torch.float64)), (265, tensor(-0.0520, dtype=torch.float64)), (1992, tensor(-0.0519, dtype=torch.float64)), (1650, tensor(-0.0518, dtype=torch.float64)), (1921, tensor(-0.0517, dtype=torch.float64)), (328, tensor(-0.0515, dtype=torch.float64)), (2258, tensor(-0.0515, dtype=torch.float64)), (794, tensor(-0.0515, dtype=torch.float64)), (1852, tensor(-0.0515, dtype=torch.float64)), (1778, tensor(-0.0514, dtype=torch.float64)), (922, tensor(-0.0514, dtype=torch.float64)), (2182, tensor(-0.0513, dtype=torch.float64)), (542, tensor(-0.0511, dtype=torch.float64)), (1376, tensor(-0.0510, dtype=torch.float64)), (825, tensor(-0.0509, dtype=torch.float64)), (296, tensor(-0.0508, dtype=torch.float64)), (368, tensor(-0.0508, dtype=torch.float64)), (2112, tensor(-0.0508, dtype=torch.float64)), (1421, tensor(-0.0508, dtype=torch.float64)), (413, tensor(-0.0507, dtype=torch.float64)), (77, tensor(-0.0506, dtype=torch.float64)), (145, tensor(-0.0506, dtype=torch.float64)), (40, tensor(-0.0506, dtype=torch.float64)), (117, tensor(-0.0506, dtype=torch.float64)), (1967, tensor(-0.0506, dtype=torch.float64)), (496, tensor(-0.0506, dtype=torch.float64)), (1875, tensor(-0.0506, dtype=torch.float64)), (1688, tensor(-0.0505, dtype=torch.float64)), (754, tensor(-0.0505, dtype=torch.float64)), (1938, tensor(-0.0505, dtype=torch.float64)), (1670, tensor(-0.0504, dtype=torch.float64)), (1049, tensor(-0.0504, dtype=torch.float64)), (810, tensor(-0.0503, dtype=torch.float64)), (286, tensor(-0.0503, dtype=torch.float64)), (1124, tensor(-0.0502, dtype=torch.float64)), (2343, tensor(-0.0501, dtype=torch.float64)), (1770, tensor(-0.0500, dtype=torch.float64)), (619, tensor(-0.0500, dtype=torch.float64)), (2251, tensor(-0.0500, dtype=torch.float64)), (2074, tensor(-0.0498, dtype=torch.float64)), (165, tensor(-0.0496, dtype=torch.float64)), (400, tensor(-0.0496, dtype=torch.float64)), (2076, tensor(-0.0496, dtype=torch.float64)), (1373, tensor(-0.0496, dtype=torch.float64)), (1892, tensor(-0.0493, dtype=torch.float64)), (1006, tensor(-0.0492, dtype=torch.float64)), (1759, tensor(-0.0492, dtype=torch.float64)), (314, tensor(-0.0492, dtype=torch.float64)), (1944, tensor(-0.0491, dtype=torch.float64)), (935, tensor(-0.0490, dtype=torch.float64)), (1363, tensor(-0.0490, dtype=torch.float64)), (1101, tensor(-0.0489, dtype=torch.float64)), (722, tensor(-0.0489, dtype=torch.float64)), (1341, tensor(-0.0487, dtype=torch.float64)), (2276, tensor(-0.0486, dtype=torch.float64)), (2044, tensor(-0.0484, dtype=torch.float64)), (905, tensor(-0.0484, dtype=torch.float64)), (1059, tensor(-0.0484, dtype=torch.float64)), (1218, tensor(-0.0483, dtype=torch.float64)), (1534, tensor(-0.0483, dtype=torch.float64)), (1250, tensor(-0.0482, dtype=torch.float64)), (1842, tensor(-0.0482, dtype=torch.float64)), (1012, tensor(-0.0481, dtype=torch.float64)), (959, tensor(-0.0479, dtype=torch.float64)), (683, tensor(-0.0479, dtype=torch.float64)), (285, tensor(-0.0479, dtype=torch.float64)), (1099, tensor(-0.0479, dtype=torch.float64)), (247, tensor(-0.0479, dtype=torch.float64)), (341, tensor(-0.0477, dtype=torch.float64)), (777, tensor(-0.0477, dtype=torch.float64)), (1284, tensor(-0.0477, dtype=torch.float64)), (36, tensor(-0.0477, dtype=torch.float64)), (2263, tensor(-0.0475, dtype=torch.float64)), (2233, tensor(-0.0475, dtype=torch.float64)), (1920, tensor(-0.0475, dtype=torch.float64)), (1326, tensor(-0.0474, dtype=torch.float64)), (1815, tensor(-0.0474, dtype=torch.float64)), (1853, tensor(-0.0474, dtype=torch.float64)), (216, tensor(-0.0473, dtype=torch.float64)), (501, tensor(-0.0473, dtype=torch.float64)), (760, tensor(-0.0473, dtype=torch.float64)), (2265, tensor(-0.0473, dtype=torch.float64)), (128, tensor(-0.0472, dtype=torch.float64)), (1566, tensor(-0.0472, dtype=torch.float64)), (1960, tensor(-0.0471, dtype=torch.float64)), (1172, tensor(-0.0471, dtype=torch.float64)), (1605, tensor(-0.0471, dtype=torch.float64)), (812, tensor(-0.0471, dtype=torch.float64)), (1740, tensor(-0.0470, dtype=torch.float64)), (885, tensor(-0.0470, dtype=torch.float64)), (1041, tensor(-0.0470, dtype=torch.float64)), (1436, tensor(-0.0468, dtype=torch.float64)), (661, tensor(-0.0468, dtype=torch.float64)), (2110, tensor(-0.0467, dtype=torch.float64)), (1238, tensor(-0.0467, dtype=torch.float64)), (239, tensor(-0.0466, dtype=torch.float64)), (1256, tensor(-0.0466, dtype=torch.float64)), (532, tensor(-0.0466, dtype=torch.float64)), (2065, tensor(-0.0465, dtype=torch.float64)), (1577, tensor(-0.0464, dtype=torch.float64)), (1503, tensor(-0.0463, dtype=torch.float64)), (1366, tensor(-0.0463, dtype=torch.float64)), (302, tensor(-0.0462, dtype=torch.float64)), (766, tensor(-0.0461, dtype=torch.float64)), (688, tensor(-0.0461, dtype=torch.float64)), (475, tensor(-0.0460, dtype=torch.float64)), (705, tensor(-0.0460, dtype=torch.float64)), (2043, tensor(-0.0460, dtype=torch.float64)), (1880, tensor(-0.0458, dtype=torch.float64)), (1399, tensor(-0.0457, dtype=torch.float64)), (2330, tensor(-0.0456, dtype=torch.float64)), (1233, tensor(-0.0456, dtype=torch.float64)), (565, tensor(-0.0456, dtype=torch.float64)), (772, tensor(-0.0455, dtype=torch.float64)), (1380, tensor(-0.0455, dtype=torch.float64)), (468, tensor(-0.0454, dtype=torch.float64)), (357, tensor(-0.0454, dtype=torch.float64)), (197, tensor(-0.0454, dtype=torch.float64)), (1998, tensor(-0.0454, dtype=torch.float64)), (132, tensor(-0.0452, dtype=torch.float64)), (49, tensor(-0.0451, dtype=torch.float64)), (2141, tensor(-0.0451, dtype=torch.float64)), (1014, tensor(-0.0449, dtype=torch.float64)), (1451, tensor(-0.0448, dtype=torch.float64)), (1733, tensor(-0.0447, dtype=torch.float64)), (1072, tensor(-0.0447, dtype=torch.float64)), (485, tensor(-0.0446, dtype=torch.float64)), (1766, tensor(-0.0446, dtype=torch.float64)), (1328, tensor(-0.0446, dtype=torch.float64)), (1391, tensor(-0.0446, dtype=torch.float64)), (647, tensor(-0.0445, dtype=torch.float64)), (1877, tensor(-0.0445, dtype=torch.float64)), (930, tensor(-0.0445, dtype=torch.float64)), (1668, tensor(-0.0444, dtype=torch.float64)), (131, tensor(-0.0443, dtype=torch.float64)), (1195, tensor(-0.0442, dtype=torch.float64)), (2045, tensor(-0.0441, dtype=torch.float64)), (1289, tensor(-0.0440, dtype=torch.float64)), (66, tensor(-0.0440, dtype=torch.float64)), (568, tensor(-0.0440, dtype=torch.float64)), (740, tensor(-0.0440, dtype=torch.float64)), (254, tensor(-0.0440, dtype=torch.float64)), (130, tensor(-0.0439, dtype=torch.float64)), (2261, tensor(-0.0439, dtype=torch.float64)), (1522, tensor(-0.0439, dtype=torch.float64)), (1629, tensor(-0.0438, dtype=torch.float64)), (787, tensor(-0.0438, dtype=torch.float64)), (1150, tensor(-0.0435, dtype=torch.float64)), (550, tensor(-0.0435, dtype=torch.float64)), (1913, tensor(-0.0435, dtype=torch.float64)), (1669, tensor(-0.0435, dtype=torch.float64)), (12, tensor(-0.0434, dtype=torch.float64)), (1619, tensor(-0.0433, dtype=torch.float64)), (1445, tensor(-0.0433, dtype=torch.float64)), (268, tensor(-0.0432, dtype=torch.float64)), (833, tensor(-0.0432, dtype=torch.float64)), (2184, tensor(-0.0431, dtype=torch.float64)), (1666, tensor(-0.0430, dtype=torch.float64)), (1301, tensor(-0.0430, dtype=torch.float64)), (1047, tensor(-0.0430, dtype=torch.float64)), (1928, tensor(-0.0430, dtype=torch.float64)), (448, tensor(-0.0429, dtype=torch.float64)), (182, tensor(-0.0429, dtype=torch.float64)), (2099, tensor(-0.0429, dtype=torch.float64)), (2093, tensor(-0.0429, dtype=torch.float64)), (1990, tensor(-0.0428, dtype=torch.float64)), (2267, tensor(-0.0428, dtype=torch.float64)), (1667, tensor(-0.0427, dtype=torch.float64)), (672, tensor(-0.0426, dtype=torch.float64)), (940, tensor(-0.0425, dtype=torch.float64)), (2333, tensor(-0.0425, dtype=torch.float64)), (1013, tensor(-0.0425, dtype=torch.float64)), (593, tensor(-0.0425, dtype=torch.float64)), (1834, tensor(-0.0424, dtype=torch.float64)), (1730, tensor(-0.0424, dtype=torch.float64)), (805, tensor(-0.0424, dtype=torch.float64)), (2216, tensor(-0.0422, dtype=torch.float64)), (1334, tensor(-0.0422, dtype=torch.float64)), (999, tensor(-0.0420, dtype=torch.float64)), (1521, tensor(-0.0418, dtype=torch.float64)), (2008, tensor(-0.0417, dtype=torch.float64)), (2219, tensor(-0.0417, dtype=torch.float64)), (446, tensor(-0.0416, dtype=torch.float64)), (1596, tensor(-0.0416, dtype=torch.float64)), (1001, tensor(-0.0416, dtype=torch.float64)), (1048, tensor(-0.0415, dtype=torch.float64)), (248, tensor(-0.0415, dtype=torch.float64)), (136, tensor(-0.0415, dtype=torch.float64)), (1973, tensor(-0.0414, dtype=torch.float64)), (253, tensor(-0.0414, dtype=torch.float64)), (1773, tensor(-0.0412, dtype=torch.float64)), (1449, tensor(-0.0412, dtype=torch.float64)), (1791, tensor(-0.0412, dtype=torch.float64)), (1626, tensor(-0.0412, dtype=torch.float64)), (1972, tensor(-0.0411, dtype=torch.float64)), (2260, tensor(-0.0411, dtype=torch.float64)), (781, tensor(-0.0410, dtype=torch.float64)), (364, tensor(-0.0410, dtype=torch.float64)), (505, tensor(-0.0410, dtype=torch.float64)), (2328, tensor(-0.0409, dtype=torch.float64)), (1147, tensor(-0.0409, dtype=torch.float64)), (560, tensor(-0.0409, dtype=torch.float64)), (1375, tensor(-0.0409, dtype=torch.float64)), (76, tensor(-0.0408, dtype=torch.float64)), (763, tensor(-0.0408, dtype=torch.float64)), (1799, tensor(-0.0408, dtype=torch.float64)), (1975, tensor(-0.0408, dtype=torch.float64)), (548, tensor(-0.0407, dtype=torch.float64)), (68, tensor(-0.0407, dtype=torch.float64)), (2108, tensor(-0.0406, dtype=torch.float64)), (492, tensor(-0.0406, dtype=torch.float64)), (383, tensor(-0.0405, dtype=torch.float64)), (640, tensor(-0.0404, dtype=torch.float64)), (336, tensor(-0.0404, dtype=torch.float64)), (361, tensor(-0.0403, dtype=torch.float64)), (1296, tensor(-0.0403, dtype=torch.float64)), (1591, tensor(-0.0403, dtype=torch.float64)), (174, tensor(-0.0403, dtype=torch.float64)), (2119, tensor(-0.0402, dtype=torch.float64)), (236, tensor(-0.0402, dtype=torch.float64)), (2264, tensor(-0.0401, dtype=torch.float64)), (641, tensor(-0.0401, dtype=torch.float64)), (477, tensor(-0.0400, dtype=torch.float64)), (1203, tensor(-0.0400, dtype=torch.float64)), (1498, tensor(-0.0400, dtype=torch.float64)), (780, tensor(-0.0399, dtype=torch.float64)), (1054, tensor(-0.0399, dtype=torch.float64)), (1885, tensor(-0.0399, dtype=torch.float64)), (1520, tensor(-0.0399, dtype=torch.float64)), (1131, tensor(-0.0399, dtype=torch.float64)), (1253, tensor(-0.0398, dtype=torch.float64)), (2310, tensor(-0.0398, dtype=torch.float64)), (1091, tensor(-0.0398, dtype=torch.float64)), (256, tensor(-0.0397, dtype=torch.float64)), (233, tensor(-0.0397, dtype=torch.float64)), (2218, tensor(-0.0396, dtype=torch.float64)), (962, tensor(-0.0396, dtype=torch.float64)), (650, tensor(-0.0396, dtype=torch.float64)), (2150, tensor(-0.0396, dtype=torch.float64)), (1910, tensor(-0.0396, dtype=torch.float64)), (960, tensor(-0.0395, dtype=torch.float64)), (313, tensor(-0.0393, dtype=torch.float64)), (2158, tensor(-0.0389, dtype=torch.float64)), (1093, tensor(-0.0388, dtype=torch.float64)), (1392, tensor(-0.0388, dtype=torch.float64)), (1276, tensor(-0.0388, dtype=torch.float64)), (2133, tensor(-0.0388, dtype=torch.float64)), (1693, tensor(-0.0387, dtype=torch.float64)), (1039, tensor(-0.0387, dtype=torch.float64)), (1417, tensor(-0.0386, dtype=torch.float64)), (570, tensor(-0.0386, dtype=torch.float64)), (2269, tensor(-0.0385, dtype=torch.float64)), (465, tensor(-0.0385, dtype=torch.float64)), (2190, tensor(-0.0384, dtype=torch.float64)), (644, tensor(-0.0384, dtype=torch.float64)), (1813, tensor(-0.0383, dtype=torch.float64)), (1133, tensor(-0.0383, dtype=torch.float64)), (1555, tensor(-0.0383, dtype=torch.float64)), (242, tensor(-0.0383, dtype=torch.float64)), (1192, tensor(-0.0382, dtype=torch.float64)), (1586, tensor(-0.0382, dtype=torch.float64)), (1163, tensor(-0.0380, dtype=torch.float64)), (2176, tensor(-0.0380, dtype=torch.float64)), (1145, tensor(-0.0380, dtype=torch.float64)), (1405, tensor(-0.0380, dtype=torch.float64)), (104, tensor(-0.0380, dtype=torch.float64)), (150, tensor(-0.0379, dtype=torch.float64)), (627, tensor(-0.0379, dtype=torch.float64)), (1748, tensor(-0.0379, dtype=torch.float64)), (915, tensor(-0.0378, dtype=torch.float64)), (345, tensor(-0.0378, dtype=torch.float64)), (2162, tensor(-0.0377, dtype=torch.float64)), (797, tensor(-0.0377, dtype=torch.float64)), (373, tensor(-0.0376, dtype=torch.float64)), (2321, tensor(-0.0375, dtype=torch.float64)), (1843, tensor(-0.0375, dtype=torch.float64)), (1208, tensor(-0.0374, dtype=torch.float64)), (1248, tensor(-0.0374, dtype=torch.float64)), (199, tensor(-0.0373, dtype=torch.float64)), (2111, tensor(-0.0373, dtype=torch.float64)), (267, tensor(-0.0373, dtype=torch.float64)), (1355, tensor(-0.0372, dtype=torch.float64)), (2090, tensor(-0.0372, dtype=torch.float64)), (563, tensor(-0.0371, dtype=torch.float64)), (1585, tensor(-0.0370, dtype=torch.float64)), (1230, tensor(-0.0370, dtype=torch.float64)), (2061, tensor(-0.0369, dtype=torch.float64)), (1996, tensor(-0.0369, dtype=torch.float64)), (856, tensor(-0.0368, dtype=torch.float64)), (1754, tensor(-0.0368, dtype=torch.float64)), (1697, tensor(-0.0368, dtype=torch.float64)), (375, tensor(-0.0368, dtype=torch.float64)), (1646, tensor(-0.0368, dtype=torch.float64)), (1679, tensor(-0.0368, dtype=torch.float64)), (744, tensor(-0.0367, dtype=torch.float64)), (1456, tensor(-0.0367, dtype=torch.float64)), (610, tensor(-0.0367, dtype=torch.float64)), (1189, tensor(-0.0366, dtype=torch.float64)), (1779, tensor(-0.0366, dtype=torch.float64)), (1934, tensor(-0.0366, dtype=torch.float64)), (1119, tensor(-0.0365, dtype=torch.float64)), (116, tensor(-0.0365, dtype=torch.float64)), (29, tensor(-0.0365, dtype=torch.float64)), (2303, tensor(-0.0365, dtype=torch.float64)), (318, tensor(-0.0364, dtype=torch.float64)), (709, tensor(-0.0364, dtype=torch.float64)), (1127, tensor(-0.0364, dtype=torch.float64)), (931, tensor(-0.0363, dtype=torch.float64)), (770, tensor(-0.0363, dtype=torch.float64)), (310, tensor(-0.0363, dtype=torch.float64)), (331, tensor(-0.0362, dtype=torch.float64)), (1590, tensor(-0.0362, dtype=torch.float64)), (155, tensor(-0.0361, dtype=torch.float64)), (2166, tensor(-0.0361, dtype=torch.float64)), (1837, tensor(-0.0361, dtype=torch.float64)), (1155, tensor(-0.0361, dtype=torch.float64)), (1447, tensor(-0.0361, dtype=torch.float64)), (1333, tensor(-0.0360, dtype=torch.float64)), (1641, tensor(-0.0359, dtype=torch.float64)), (147, tensor(-0.0359, dtype=torch.float64)), (479, tensor(-0.0359, dtype=torch.float64)), (98, tensor(-0.0358, dtype=torch.float64)), (804, tensor(-0.0358, dtype=torch.float64)), (360, tensor(-0.0358, dtype=torch.float64)), (1751, tensor(-0.0357, dtype=torch.float64)), (290, tensor(-0.0357, dtype=torch.float64)), (493, tensor(-0.0357, dtype=torch.float64)), (1575, tensor(-0.0357, dtype=torch.float64)), (1796, tensor(-0.0357, dtype=torch.float64)), (2147, tensor(-0.0356, dtype=torch.float64)), (1597, tensor(-0.0356, dtype=torch.float64)), (415, tensor(-0.0353, dtype=torch.float64)), (1282, tensor(-0.0352, dtype=torch.float64)), (1904, tensor(-0.0352, dtype=torch.float64)), (1627, tensor(-0.0352, dtype=torch.float64)), (1823, tensor(-0.0352, dtype=torch.float64)), (2281, tensor(-0.0351, dtype=torch.float64)), (882, tensor(-0.0351, dtype=torch.float64)), (1404, tensor(-0.0351, dtype=torch.float64)), (1786, tensor(-0.0350, dtype=torch.float64)), (389, tensor(-0.0350, dtype=torch.float64)), (152, tensor(-0.0350, dtype=torch.float64)), (741, tensor(-0.0349, dtype=torch.float64)), (823, tensor(-0.0349, dtype=torch.float64)), (724, tensor(-0.0348, dtype=torch.float64)), (1164, tensor(-0.0347, dtype=torch.float64)), (1367, tensor(-0.0347, dtype=torch.float64)), (1523, tensor(-0.0346, dtype=torch.float64)), (1678, tensor(-0.0346, dtype=torch.float64)), (718, tensor(-0.0346, dtype=torch.float64)), (114, tensor(-0.0346, dtype=torch.float64)), (1416, tensor(-0.0346, dtype=torch.float64)), (315, tensor(-0.0346, dtype=torch.float64)), (1261, tensor(-0.0346, dtype=torch.float64)), (2331, tensor(-0.0345, dtype=torch.float64)), (2059, tensor(-0.0342, dtype=torch.float64)), (1015, tensor(-0.0342, dtype=torch.float64)), (1224, tensor(-0.0342, dtype=torch.float64)), (1446, tensor(-0.0341, dtype=torch.float64)), (1569, tensor(-0.0341, dtype=torch.float64)), (1550, tensor(-0.0340, dtype=torch.float64)), (1613, tensor(-0.0340, dtype=torch.float64)), (2067, tensor(-0.0339, dtype=torch.float64)), (41, tensor(-0.0338, dtype=torch.float64)), (1011, tensor(-0.0338, dtype=torch.float64)), (2315, tensor(-0.0337, dtype=torch.float64)), (1312, tensor(-0.0337, dtype=torch.float64)), (1583, tensor(-0.0337, dtype=torch.float64)), (2300, tensor(-0.0337, dtype=torch.float64)), (808, tensor(-0.0337, dtype=torch.float64)), (1538, tensor(-0.0336, dtype=torch.float64)), (402, tensor(-0.0336, dtype=torch.float64)), (1239, tensor(-0.0335, dtype=torch.float64)), (26, tensor(-0.0335, dtype=torch.float64)), (1086, tensor(-0.0335, dtype=torch.float64)), (950, tensor(-0.0334, dtype=torch.float64)), (1441, tensor(-0.0333, dtype=torch.float64)), (2001, tensor(-0.0333, dtype=torch.float64)), (2137, tensor(-0.0332, dtype=torch.float64)), (2348, tensor(-0.0332, dtype=torch.float64)), (2072, tensor(-0.0332, dtype=torch.float64)), (1066, tensor(-0.0332, dtype=torch.float64)), (2051, tensor(-0.0332, dtype=torch.float64)), (2297, tensor(-0.0331, dtype=torch.float64)), (1889, tensor(-0.0330, dtype=torch.float64)), (841, tensor(-0.0330, dtype=torch.float64)), (730, tensor(-0.0330, dtype=torch.float64)), (723, tensor(-0.0330, dtype=torch.float64)), (2280, tensor(-0.0329, dtype=torch.float64)), (450, tensor(-0.0329, dtype=torch.float64)), (436, tensor(-0.0329, dtype=torch.float64)), (711, tensor(-0.0328, dtype=torch.float64)), (266, tensor(-0.0328, dtype=torch.float64)), (2037, tensor(-0.0328, dtype=torch.float64)), (106, tensor(-0.0327, dtype=torch.float64)), (1882, tensor(-0.0327, dtype=torch.float64)), (1106, tensor(-0.0327, dtype=torch.float64)), (1630, tensor(-0.0327, dtype=torch.float64)), (1700, tensor(-0.0327, dtype=torch.float64)), (1305, tensor(-0.0327, dtype=torch.float64)), (227, tensor(-0.0326, dtype=torch.float64)), (676, tensor(-0.0326, dtype=torch.float64)), (1128, tensor(-0.0325, dtype=torch.float64)), (1898, tensor(-0.0324, dtype=torch.float64)), (2254, tensor(-0.0324, dtype=torch.float64)), (2171, tensor(-0.0324, dtype=torch.float64)), (1186, tensor(-0.0323, dtype=torch.float64)), (981, tensor(-0.0322, dtype=torch.float64)), (857, tensor(-0.0322, dtype=torch.float64)), (2242, tensor(-0.0322, dtype=torch.float64)), (2145, tensor(-0.0321, dtype=torch.float64)), (2230, tensor(-0.0321, dtype=torch.float64)), (23, tensor(-0.0320, dtype=torch.float64)), (2202, tensor(-0.0319, dtype=torch.float64)), (1744, tensor(-0.0319, dtype=torch.float64)), (579, tensor(-0.0319, dtype=torch.float64)), (1275, tensor(-0.0319, dtype=torch.float64)), (1663, tensor(-0.0318, dtype=torch.float64)), (1721, tensor(-0.0318, dtype=torch.float64)), (850, tensor(-0.0318, dtype=torch.float64)), (1290, tensor(-0.0317, dtype=torch.float64)), (2324, tensor(-0.0317, dtype=torch.float64)), (1323, tensor(-0.0317, dtype=torch.float64)), (1900, tensor(-0.0317, dtype=torch.float64)), (414, tensor(-0.0316, dtype=torch.float64)), (1053, tensor(-0.0316, dtype=torch.float64)), (466, tensor(-0.0316, dtype=torch.float64)), (1025, tensor(-0.0316, dtype=torch.float64)), (229, tensor(-0.0315, dtype=torch.float64)), (252, tensor(-0.0314, dtype=torch.float64)), (1201, tensor(-0.0314, dtype=torch.float64)), (1794, tensor(-0.0313, dtype=torch.float64)), (428, tensor(-0.0313, dtype=torch.float64)), (1034, tensor(-0.0313, dtype=torch.float64)), (1390, tensor(-0.0313, dtype=torch.float64)), (986, tensor(-0.0312, dtype=torch.float64)), (234, tensor(-0.0312, dtype=torch.float64)), (1587, tensor(-0.0312, dtype=torch.float64)), (1335, tensor(-0.0312, dtype=torch.float64)), (2155, tensor(-0.0312, dtype=torch.float64)), (1035, tensor(-0.0310, dtype=torch.float64)), (1120, tensor(-0.0310, dtype=torch.float64)), (520, tensor(-0.0309, dtype=torch.float64)), (1517, tensor(-0.0309, dtype=torch.float64)), (679, tensor(-0.0309, dtype=torch.float64)), (948, tensor(-0.0307, dtype=torch.float64)), (1753, tensor(-0.0307, dtype=torch.float64)), (1023, tensor(-0.0307, dtype=torch.float64)), (111, tensor(-0.0307, dtype=torch.float64)), (1348, tensor(-0.0306, dtype=torch.float64)), (2092, tensor(-0.0306, dtype=torch.float64)), (232, tensor(-0.0306, dtype=torch.float64)), (836, tensor(-0.0306, dtype=torch.float64)), (1226, tensor(-0.0306, dtype=torch.float64)), (840, tensor(-0.0305, dtype=torch.float64)), (1396, tensor(-0.0305, dtype=torch.float64)), (1750, tensor(-0.0305, dtype=torch.float64)), (998, tensor(-0.0304, dtype=torch.float64)), (1016, tensor(-0.0304, dtype=torch.float64)), (1158, tensor(-0.0304, dtype=torch.float64)), (806, tensor(-0.0304, dtype=torch.float64)), (137, tensor(-0.0304, dtype=torch.float64)), (991, tensor(-0.0304, dtype=torch.float64)), (499, tensor(-0.0303, dtype=torch.float64)), (535, tensor(-0.0302, dtype=torch.float64)), (1640, tensor(-0.0302, dtype=torch.float64)), (1420, tensor(-0.0302, dtype=torch.float64)), (171, tensor(-0.0301, dtype=torch.float64)), (1112, tensor(-0.0301, dtype=torch.float64)), (1903, tensor(-0.0301, dtype=torch.float64)), (941, tensor(-0.0301, dtype=torch.float64)), (1332, tensor(-0.0299, dtype=torch.float64)), (858, tensor(-0.0299, dtype=torch.float64)), (1274, tensor(-0.0298, dtype=torch.float64)), (2237, tensor(-0.0298, dtype=torch.float64)), (567, tensor(-0.0298, dtype=torch.float64)), (129, tensor(-0.0298, dtype=torch.float64)), (1304, tensor(-0.0298, dtype=torch.float64)), (1818, tensor(-0.0296, dtype=torch.float64)), (2217, tensor(-0.0296, dtype=torch.float64)), (913, tensor(-0.0296, dtype=torch.float64)), (969, tensor(-0.0296, dtype=torch.float64)), (1094, tensor(-0.0295, dtype=torch.float64)), (372, tensor(-0.0295, dtype=torch.float64)), (489, tensor(-0.0294, dtype=torch.float64)), (1135, tensor(-0.0294, dtype=torch.float64)), (259, tensor(-0.0294, dtype=torch.float64)), (2165, tensor(-0.0294, dtype=torch.float64)), (461, tensor(-0.0293, dtype=torch.float64)), (1873, tensor(-0.0293, dtype=torch.float64)), (2005, tensor(-0.0292, dtype=torch.float64)), (397, tensor(-0.0292, dtype=torch.float64)), (1029, tensor(-0.0292, dtype=torch.float64)), (846, tensor(-0.0291, dtype=torch.float64)), (692, tensor(-0.0291, dtype=torch.float64)), (795, tensor(-0.0291, dtype=torch.float64)), (1549, tensor(-0.0291, dtype=torch.float64)), (1270, tensor(-0.0290, dtype=torch.float64)), (868, tensor(-0.0290, dtype=torch.float64)), (1809, tensor(-0.0289, dtype=torch.float64)), (1765, tensor(-0.0289, dtype=torch.float64)), (700, tensor(-0.0288, dtype=torch.float64)), (659, tensor(-0.0288, dtype=torch.float64)), (536, tensor(-0.0288, dtype=torch.float64)), (444, tensor(-0.0288, dtype=torch.float64)), (1572, tensor(-0.0288, dtype=torch.float64)), (1579, tensor(-0.0287, dtype=torch.float64)), (1487, tensor(-0.0287, dtype=torch.float64)), (1448, tensor(-0.0286, dtype=torch.float64)), (1467, tensor(-0.0286, dtype=torch.float64)), (14, tensor(-0.0285, dtype=torch.float64)), (1360, tensor(-0.0285, dtype=torch.float64)), (932, tensor(-0.0284, dtype=torch.float64)), (386, tensor(-0.0284, dtype=torch.float64)), (2066, tensor(-0.0284, dtype=torch.float64)), (2227, tensor(-0.0284, dtype=torch.float64)), (2102, tensor(-0.0283, dtype=torch.float64)), (1995, tensor(-0.0283, dtype=torch.float64)), (1807, tensor(-0.0283, dtype=torch.float64)), (899, tensor(-0.0283, dtype=torch.float64)), (2026, tensor(-0.0282, dtype=torch.float64)), (464, tensor(-0.0282, dtype=torch.float64)), (434, tensor(-0.0282, dtype=torch.float64)), (1953, tensor(-0.0280, dtype=torch.float64)), (1272, tensor(-0.0280, dtype=torch.float64)), (105, tensor(-0.0280, dtype=torch.float64)), (1080, tensor(-0.0280, dtype=torch.float64)), (557, tensor(-0.0280, dtype=torch.float64)), (628, tensor(-0.0280, dtype=torch.float64)), (2262, tensor(-0.0279, dtype=torch.float64)), (1280, tensor(-0.0279, dtype=torch.float64)), (944, tensor(-0.0279, dtype=torch.float64)), (1193, tensor(-0.0278, dtype=torch.float64)), (1557, tensor(-0.0277, dtype=torch.float64)), (1068, tensor(-0.0277, dtype=torch.float64)), (392, tensor(-0.0276, dtype=torch.float64)), (188, tensor(-0.0276, dtype=torch.float64)), (2302, tensor(-0.0276, dtype=torch.float64)), (1542, tensor(-0.0275, dtype=torch.float64)), (33, tensor(-0.0275, dtype=torch.float64)), (995, tensor(-0.0274, dtype=torch.float64)), (1435, tensor(-0.0274, dtype=torch.float64)), (1564, tensor(-0.0274, dtype=torch.float64)), (1171, tensor(-0.0274, dtype=torch.float64)), (1496, tensor(-0.0273, dtype=torch.float64)), (632, tensor(-0.0273, dtype=torch.float64)), (1092, tensor(-0.0273, dtype=torch.float64)), (206, tensor(-0.0272, dtype=torch.float64)), (1800, tensor(-0.0272, dtype=torch.float64)), (312, tensor(-0.0272, dtype=torch.float64)), (1211, tensor(-0.0271, dtype=torch.float64)), (2063, tensor(-0.0271, dtype=torch.float64)), (1703, tensor(-0.0270, dtype=torch.float64)), (1709, tensor(-0.0270, dtype=torch.float64)), (1291, tensor(-0.0270, dtype=torch.float64)), (297, tensor(-0.0270, dtype=torch.float64)), (1866, tensor(-0.0269, dtype=torch.float64)), (1929, tensor(-0.0269, dtype=torch.float64)), (1787, tensor(-0.0269, dtype=torch.float64)), (864, tensor(-0.0269, dtype=torch.float64)), (59, tensor(-0.0269, dtype=torch.float64)), (154, tensor(-0.0268, dtype=torch.float64)), (533, tensor(-0.0268, dtype=torch.float64)), (1262, tensor(-0.0268, dtype=torch.float64)), (1252, tensor(-0.0268, dtype=torch.float64)), (2101, tensor(-0.0268, dtype=torch.float64)), (1747, tensor(-0.0268, dtype=torch.float64)), (1930, tensor(-0.0268, dtype=torch.float64)), (162, tensor(-0.0267, dtype=torch.float64)), (604, tensor(-0.0267, dtype=torch.float64)), (1287, tensor(-0.0266, dtype=torch.float64)), (682, tensor(-0.0265, dtype=torch.float64)), (664, tensor(-0.0265, dtype=torch.float64)), (2025, tensor(-0.0263, dtype=torch.float64)), (1378, tensor(-0.0263, dtype=torch.float64)), (84, tensor(-0.0263, dtype=torch.float64)), (2019, tensor(-0.0263, dtype=torch.float64)), (163, tensor(-0.0262, dtype=torch.float64)), (298, tensor(-0.0261, dtype=torch.float64)), (1111, tensor(-0.0260, dtype=torch.float64)), (196, tensor(-0.0260, dtype=torch.float64)), (280, tensor(-0.0260, dtype=torch.float64)), (184, tensor(-0.0259, dtype=torch.float64)), (321, tensor(-0.0259, dtype=torch.float64)), (2115, tensor(-0.0259, dtype=torch.float64)), (45, tensor(-0.0258, dtype=torch.float64)), (855, tensor(-0.0257, dtype=torch.float64)), (2041, tensor(-0.0257, dtype=torch.float64)), (2340, tensor(-0.0257, dtype=torch.float64)), (2209, tensor(-0.0257, dtype=torch.float64)), (2151, tensor(-0.0257, dtype=torch.float64)), (7, tensor(-0.0256, dtype=torch.float64)), (2308, tensor(-0.0256, dtype=torch.float64)), (690, tensor(-0.0256, dtype=torch.float64)), (779, tensor(-0.0256, dtype=torch.float64)), (149, tensor(-0.0255, dtype=torch.float64)), (183, tensor(-0.0255, dtype=torch.float64)), (1906, tensor(-0.0254, dtype=torch.float64)), (1464, tensor(-0.0254, dtype=torch.float64)), (1643, tensor(-0.0253, dtype=torch.float64)), (325, tensor(-0.0253, dtype=torch.float64)), (1095, tensor(-0.0253, dtype=torch.float64)), (588, tensor(-0.0253, dtype=torch.float64)), (1037, tensor(-0.0252, dtype=torch.float64)), (1506, tensor(-0.0252, dtype=torch.float64)), (457, tensor(-0.0252, dtype=torch.float64)), (898, tensor(-0.0251, dtype=torch.float64)), (1976, tensor(-0.0251, dtype=torch.float64)), (1836, tensor(-0.0251, dtype=torch.float64)), (720, tensor(-0.0250, dtype=torch.float64)), (101, tensor(-0.0250, dtype=torch.float64)), (1214, tensor(-0.0250, dtype=torch.float64)), (863, tensor(-0.0250, dtype=torch.float64)), (2095, tensor(-0.0250, dtype=torch.float64)), (394, tensor(-0.0250, dtype=torch.float64)), (82, tensor(-0.0250, dtype=torch.float64)), (1079, tensor(-0.0250, dtype=torch.float64)), (371, tensor(-0.0249, dtype=torch.float64)), (1535, tensor(-0.0249, dtype=torch.float64)), (1219, tensor(-0.0249, dtype=torch.float64)), (1696, tensor(-0.0249, dtype=torch.float64)), (2213, tensor(-0.0248, dtype=torch.float64)), (118, tensor(-0.0248, dtype=torch.float64)), (617, tensor(-0.0248, dtype=torch.float64)), (91, tensor(-0.0247, dtype=torch.float64)), (523, tensor(-0.0247, dtype=torch.float64)), (231, tensor(-0.0247, dtype=torch.float64)), (2215, tensor(-0.0246, dtype=torch.float64)), (2086, tensor(-0.0246, dtype=torch.float64)), (1931, tensor(-0.0246, dtype=torch.float64)), (429, tensor(-0.0246, dtype=torch.float64)), (886, tensor(-0.0245, dtype=torch.float64)), (374, tensor(-0.0245, dtype=torch.float64)), (735, tensor(-0.0245, dtype=torch.float64)), (237, tensor(-0.0245, dtype=torch.float64)), (2146, tensor(-0.0244, dtype=torch.float64)), (662, tensor(-0.0244, dtype=torch.float64)), (1862, tensor(-0.0244, dtype=torch.float64)), (1345, tensor(-0.0244, dtype=torch.float64)), (1826, tensor(-0.0244, dtype=torch.float64)), (1357, tensor(-0.0244, dtype=torch.float64)), (936, tensor(-0.0243, dtype=torch.float64)), (1839, tensor(-0.0243, dtype=torch.float64)), (179, tensor(-0.0242, dtype=torch.float64)), (618, tensor(-0.0242, dtype=torch.float64)), (958, tensor(-0.0242, dtype=torch.float64)), (611, tensor(-0.0242, dtype=torch.float64)), (1385, tensor(-0.0241, dtype=torch.float64)), (1685, tensor(-0.0241, dtype=torch.float64)), (732, tensor(-0.0241, dtype=torch.float64)), (605, tensor(-0.0241, dtype=torch.float64)), (2335, tensor(-0.0240, dtype=torch.float64)), (2282, tensor(-0.0240, dtype=torch.float64)), (1785, tensor(-0.0240, dtype=torch.float64)), (545, tensor(-0.0239, dtype=torch.float64)), (2100, tensor(-0.0238, dtype=torch.float64)), (1729, tensor(-0.0238, dtype=torch.float64)), (684, tensor(-0.0238, dtype=torch.float64)), (697, tensor(-0.0238, dtype=torch.float64)), (1847, tensor(-0.0237, dtype=torch.float64)), (192, tensor(-0.0237, dtype=torch.float64)), (2305, tensor(-0.0237, dtype=torch.float64)), (907, tensor(-0.0236, dtype=torch.float64)), (1617, tensor(-0.0236, dtype=torch.float64)), (980, tensor(-0.0236, dtype=torch.float64)), (61, tensor(-0.0236, dtype=torch.float64)), (2346, tensor(-0.0236, dtype=torch.float64)), (1321, tensor(-0.0235, dtype=torch.float64)), (1212, tensor(-0.0235, dtype=torch.float64)), (208, tensor(-0.0235, dtype=torch.float64)), (1152, tensor(-0.0234, dtype=torch.float64)), (564, tensor(-0.0234, dtype=torch.float64)), (135, tensor(-0.0234, dtype=torch.float64)), (1198, tensor(-0.0234, dtype=torch.float64)), (1413, tensor(-0.0233, dtype=torch.float64)), (1560, tensor(-0.0233, dtype=torch.float64)), (1660, tensor(-0.0233, dtype=torch.float64)), (838, tensor(-0.0233, dtype=torch.float64)), (124, tensor(-0.0233, dtype=torch.float64)), (860, tensor(-0.0233, dtype=torch.float64)), (921, tensor(-0.0232, dtype=torch.float64)), (1769, tensor(-0.0232, dtype=torch.float64)), (100, tensor(-0.0232, dtype=torch.float64)), (1801, tensor(-0.0231, dtype=torch.float64)), (2078, tensor(-0.0231, dtype=torch.float64)), (2169, tensor(-0.0231, dtype=torch.float64)), (1263, tensor(-0.0230, dtype=torch.float64)), (1381, tensor(-0.0230, dtype=torch.float64)), (615, tensor(-0.0229, dtype=torch.float64)), (2317, tensor(-0.0228, dtype=torch.float64)), (2118, tensor(-0.0228, dtype=torch.float64)), (1283, tensor(-0.0228, dtype=torch.float64)), (1143, tensor(-0.0228, dtype=torch.float64)), (277, tensor(-0.0228, dtype=torch.float64)), (624, tensor(-0.0228, dtype=torch.float64)), (646, tensor(-0.0227, dtype=torch.float64)), (153, tensor(-0.0227, dtype=torch.float64)), (2249, tensor(-0.0226, dtype=torch.float64)), (526, tensor(-0.0226, dtype=torch.float64)), (974, tensor(-0.0226, dtype=torch.float64)), (2174, tensor(-0.0225, dtype=torch.float64)), (1896, tensor(-0.0225, dtype=torch.float64)), (1113, tensor(-0.0225, dtype=torch.float64)), (504, tensor(-0.0223, dtype=torch.float64)), (2292, tensor(-0.0223, dtype=torch.float64)), (820, tensor(-0.0223, dtype=torch.float64)), (699, tensor(-0.0222, dtype=torch.float64)), (214, tensor(-0.0222, dtype=torch.float64)), (2096, tensor(-0.0222, dtype=torch.float64)), (1901, tensor(-0.0222, dtype=torch.float64)), (1797, tensor(-0.0222, dtype=torch.float64)), (511, tensor(-0.0222, dtype=torch.float64)), (755, tensor(-0.0222, dtype=torch.float64)), (2350, tensor(-0.0221, dtype=torch.float64)), (1481, tensor(-0.0221, dtype=torch.float64)), (668, tensor(-0.0221, dtype=torch.float64)), (818, tensor(-0.0221, dtype=torch.float64)), (1409, tensor(-0.0220, dtype=torch.float64)), (752, tensor(-0.0220, dtype=torch.float64)), (1458, tensor(-0.0220, dtype=torch.float64)), (412, tensor(-0.0219, dtype=torch.float64)), (2341, tensor(-0.0219, dtype=torch.float64)), (1267, tensor(-0.0219, dtype=torch.float64)), (1681, tensor(-0.0219, dtype=torch.float64)), (759, tensor(-0.0219, dtype=torch.float64)), (2124, tensor(-0.0218, dtype=torch.float64)), (1704, tensor(-0.0217, dtype=torch.float64)), (1860, tensor(-0.0216, dtype=torch.float64)), (1268, tensor(-0.0216, dtype=torch.float64)), (983, tensor(-0.0216, dtype=torch.float64)), (1022, tensor(-0.0216, dtype=torch.float64)), (1615, tensor(-0.0216, dtype=torch.float64)), (1731, tensor(-0.0216, dtype=torch.float64)), (1899, tensor(-0.0216, dtype=torch.float64)), (1638, tensor(-0.0216, dtype=torch.float64)), (1388, tensor(-0.0216, dtype=torch.float64)), (423, tensor(-0.0216, dtype=torch.float64)), (2069, tensor(-0.0215, dtype=torch.float64)), (28, tensor(-0.0215, dtype=torch.float64)), (2084, tensor(-0.0214, dtype=torch.float64)), (871, tensor(-0.0214, dtype=torch.float64)), (246, tensor(-0.0214, dtype=torch.float64)), (274, tensor(-0.0214, dtype=torch.float64)), (308, tensor(-0.0214, dtype=torch.float64)), (473, tensor(-0.0214, dtype=torch.float64)), (827, tensor(-0.0214, dtype=torch.float64)), (1139, tensor(-0.0213, dtype=torch.float64)), (2241, tensor(-0.0213, dtype=torch.float64)), (2014, tensor(-0.0213, dtype=torch.float64)), (783, tensor(-0.0212, dtype=torch.float64)), (1592, tensor(-0.0212, dtype=torch.float64)), (453, tensor(-0.0211, dtype=torch.float64)), (2288, tensor(-0.0211, dtype=torch.float64)), (202, tensor(-0.0210, dtype=torch.float64)), (848, tensor(-0.0210, dtype=torch.float64)), (1394, tensor(-0.0209, dtype=torch.float64)), (1945, tensor(-0.0209, dtype=torch.float64)), (2248, tensor(-0.0209, dtype=torch.float64)), (2205, tensor(-0.0209, dtype=torch.float64)), (1350, tensor(-0.0209, dtype=torch.float64)), (753, tensor(-0.0208, dtype=torch.float64)), (2020, tensor(-0.0208, dtype=torch.float64)), (1914, tensor(-0.0207, dtype=torch.float64)), (178, tensor(-0.0207, dtype=torch.float64)), (978, tensor(-0.0207, dtype=torch.float64)), (976, tensor(-0.0207, dtype=torch.float64)), (32, tensor(-0.0206, dtype=torch.float64)), (1964, tensor(-0.0206, dtype=torch.float64)), (2023, tensor(-0.0206, dtype=torch.float64)), (1254, tensor(-0.0206, dtype=torch.float64)), (1434, tensor(-0.0206, dtype=torch.float64)), (1845, tensor(-0.0206, dtype=torch.float64)), (1653, tensor(-0.0205, dtype=torch.float64)), (1102, tensor(-0.0205, dtype=torch.float64)), (1033, tensor(-0.0205, dtype=torch.float64)), (1315, tensor(-0.0204, dtype=torch.float64)), (595, tensor(-0.0203, dtype=torch.float64)), (168, tensor(-0.0202, dtype=torch.float64)), (2024, tensor(-0.0202, dtype=torch.float64)), (283, tensor(-0.0201, dtype=torch.float64)), (517, tensor(-0.0201, dtype=torch.float64)), (48, tensor(-0.0200, dtype=torch.float64)), (1174, tensor(-0.0200, dtype=torch.float64)), (1519, tensor(-0.0200, dtype=torch.float64)), (305, tensor(-0.0200, dtype=torch.float64)), (1970, tensor(-0.0199, dtype=torch.float64)), (1723, tensor(-0.0199, dtype=torch.float64)), (2070, tensor(-0.0199, dtype=torch.float64)), (410, tensor(-0.0199, dtype=torch.float64)), (1461, tensor(-0.0199, dtype=torch.float64)), (1735, tensor(-0.0198, dtype=torch.float64)), (2130, tensor(-0.0198, dtype=torch.float64)), (1400, tensor(-0.0197, dtype=torch.float64)), (522, tensor(-0.0197, dtype=torch.float64)), (1531, tensor(-0.0197, dtype=torch.float64)), (180, tensor(-0.0196, dtype=torch.float64)), (1319, tensor(-0.0196, dtype=torch.float64)), (2273, tensor(-0.0196, dtype=torch.float64)), (516, tensor(-0.0196, dtype=torch.float64)), (487, tensor(-0.0195, dtype=torch.float64)), (2107, tensor(-0.0195, dtype=torch.float64)), (1533, tensor(-0.0195, dtype=torch.float64)), (2298, tensor(-0.0194, dtype=torch.float64)), (1676, tensor(-0.0194, dtype=torch.float64)), (438, tensor(-0.0194, dtype=torch.float64)), (2056, tensor(-0.0194, dtype=torch.float64)), (177, tensor(-0.0194, dtype=torch.float64)), (8, tensor(-0.0194, dtype=torch.float64)), (1210, tensor(-0.0194, dtype=torch.float64)), (2238, tensor(-0.0193, dtype=torch.float64)), (2185, tensor(-0.0193, dtype=torch.float64)), (220, tensor(-0.0192, dtype=torch.float64)), (1229, tensor(-0.0192, dtype=torch.float64)), (393, tensor(-0.0192, dtype=torch.float64)), (1148, tensor(-0.0192, dtype=torch.float64)), (1056, tensor(-0.0192, dtype=torch.float64)), (2257, tensor(-0.0192, dtype=torch.float64)), (1603, tensor(-0.0192, dtype=torch.float64)), (670, tensor(-0.0191, dtype=torch.float64)), (926, tensor(-0.0191, dtype=torch.float64)), (933, tensor(-0.0191, dtype=torch.float64)), (530, tensor(-0.0191, dtype=torch.float64)), (1236, tensor(-0.0191, dtype=torch.float64)), (476, tensor(-0.0190, dtype=torch.float64)), (2010, tensor(-0.0190, dtype=torch.float64)), (1588, tensor(-0.0189, dtype=torch.float64)), (2104, tensor(-0.0189, dtype=torch.float64)), (1894, tensor(-0.0189, dtype=torch.float64)), (474, tensor(-0.0189, dtype=torch.float64)), (513, tensor(-0.0189, dtype=torch.float64)), (910, tensor(-0.0188, dtype=torch.float64)), (2167, tensor(-0.0188, dtype=torch.float64)), (323, tensor(-0.0188, dtype=torch.float64)), (1647, tensor(-0.0188, dtype=torch.float64)), (74, tensor(-0.0188, dtype=torch.float64)), (1177, tensor(-0.0187, dtype=torch.float64)), (874, tensor(-0.0187, dtype=torch.float64)), (701, tensor(-0.0186, dtype=torch.float64)), (1492, tensor(-0.0186, dtype=torch.float64)), (1107, tensor(-0.0185, dtype=torch.float64)), (320, tensor(-0.0185, dtype=torch.float64)), (949, tensor(-0.0185, dtype=torch.float64)), (966, tensor(-0.0185, dtype=torch.float64)), (1544, tensor(-0.0185, dtype=torch.float64)), (2252, tensor(-0.0184, dtype=torch.float64)), (830, tensor(-0.0184, dtype=torch.float64)), (160, tensor(-0.0184, dtype=torch.float64)), (1745, tensor(-0.0184, dtype=torch.float64)), (576, tensor(-0.0183, dtype=torch.float64)), (1425, tensor(-0.0183, dtype=torch.float64)), (1610, tensor(-0.0183, dtype=torch.float64)), (1952, tensor(-0.0183, dtype=torch.float64)), (388, tensor(-0.0183, dtype=torch.float64)), (1433, tensor(-0.0183, dtype=torch.float64)), (2175, tensor(-0.0182, dtype=torch.float64)), (685, tensor(-0.0182, dtype=torch.float64)), (62, tensor(-0.0182, dtype=torch.float64)), (1098, tensor(-0.0181, dtype=torch.float64)), (356, tensor(-0.0181, dtype=torch.float64)), (1136, tensor(-0.0181, dtype=torch.float64)), (623, tensor(-0.0181, dtype=torch.float64)), (1850, tensor(-0.0181, dtype=torch.float64)), (1790, tensor(-0.0180, dtype=torch.float64)), (620, tensor(-0.0180, dtype=torch.float64)), (1556, tensor(-0.0179, dtype=torch.float64)), (800, tensor(-0.0179, dtype=torch.float64)), (1840, tensor(-0.0179, dtype=torch.float64)), (657, tensor(-0.0179, dtype=torch.float64)), (2003, tensor(-0.0179, dtype=torch.float64)), (1611, tensor(-0.0179, dtype=torch.float64)), (382, tensor(-0.0179, dtype=torch.float64)), (1490, tensor(-0.0179, dtype=torch.float64)), (161, tensor(-0.0178, dtype=torch.float64)), (1403, tensor(-0.0177, dtype=torch.float64)), (2094, tensor(-0.0176, dtype=torch.float64)), (1386, tensor(-0.0176, dtype=torch.float64)), (207, tensor(-0.0176, dtype=torch.float64)), (1336, tensor(-0.0176, dtype=torch.float64)), (1154, tensor(-0.0176, dtype=torch.float64)), (879, tensor(-0.0175, dtype=torch.float64)), (2201, tensor(-0.0175, dtype=torch.float64)), (2240, tensor(-0.0175, dtype=torch.float64)), (1781, tensor(-0.0175, dtype=torch.float64)), (1511, tensor(-0.0173, dtype=torch.float64)), (614, tensor(-0.0173, dtype=torch.float64)), (2338, tensor(-0.0172, dtype=torch.float64)), (1281, tensor(-0.0172, dtype=torch.float64)), (422, tensor(-0.0172, dtype=torch.float64)), (594, tensor(-0.0172, dtype=torch.float64)), (9, tensor(-0.0171, dtype=torch.float64)), (891, tensor(-0.0171, dtype=torch.float64)), (653, tensor(-0.0171, dtype=torch.float64)), (1628, tensor(-0.0171, dtype=torch.float64)), (1644, tensor(-0.0171, dtype=torch.float64)), (660, tensor(-0.0171, dtype=torch.float64)), (666, tensor(-0.0171, dtype=torch.float64)), (1775, tensor(-0.0170, dtype=torch.float64)), (1387, tensor(-0.0170, dtype=torch.float64)), (578, tensor(-0.0170, dtype=torch.float64)), (1584, tensor(-0.0169, dtype=torch.float64)), (691, tensor(-0.0169, dtype=torch.float64)), (607, tensor(-0.0168, dtype=torch.float64)), (1497, tensor(-0.0168, dtype=torch.float64)), (608, tensor(-0.0168, dtype=torch.float64)), (598, tensor(-0.0168, dtype=torch.float64)), (1788, tensor(-0.0168, dtype=torch.float64)), (439, tensor(-0.0167, dtype=torch.float64)), (1917, tensor(-0.0167, dtype=torch.float64)), (1340, tensor(-0.0167, dtype=torch.float64)), (1036, tensor(-0.0166, dtype=torch.float64)), (1050, tensor(-0.0166, dtype=torch.float64)), (204, tensor(-0.0166, dtype=torch.float64)), (92, tensor(-0.0166, dtype=torch.float64)), (404, tensor(-0.0165, dtype=torch.float64)), (1642, tensor(-0.0165, dtype=torch.float64)), (97, tensor(-0.0165, dtype=torch.float64)), (1551, tensor(-0.0165, dtype=torch.float64)), (1911, tensor(-0.0165, dtype=torch.float64)), (1589, tensor(-0.0164, dtype=torch.float64)), (2294, tensor(-0.0164, dtype=torch.float64)), (625, tensor(-0.0164, dtype=torch.float64)), (866, tensor(-0.0163, dtype=torch.float64)), (1772, tensor(-0.0162, dtype=torch.float64)), (1819, tensor(-0.0162, dtype=torch.float64)), (1508, tensor(-0.0162, dtype=torch.float64)), (566, tensor(-0.0162, dtype=torch.float64)), (1076, tensor(-0.0162, dtype=torch.float64)), (2138, tensor(-0.0162, dtype=torch.float64)), (2057, tensor(-0.0161, dtype=torch.float64)), (1954, tensor(-0.0161, dtype=torch.float64)), (1370, tensor(-0.0161, dtype=torch.float64)), (1005, tensor(-0.0161, dtype=torch.float64)), (126, tensor(-0.0161, dtype=torch.float64)), (1160, tensor(-0.0161, dtype=torch.float64)), (38, tensor(-0.0160, dtype=torch.float64)), (982, tensor(-0.0160, dtype=torch.float64)), (1835, tensor(-0.0160, dtype=torch.float64)), (1580, tensor(-0.0159, dtype=torch.float64)), (1491, tensor(-0.0159, dtype=torch.float64)), (1743, tensor(-0.0159, dtype=torch.float64)), (295, tensor(-0.0159, dtype=torch.float64)), (1724, tensor(-0.0159, dtype=torch.float64)), (734, tensor(-0.0159, dtype=torch.float64)), (1798, tensor(-0.0159, dtype=torch.float64)), (1968, tensor(-0.0158, dtype=torch.float64)), (401, tensor(-0.0158, dtype=torch.float64)), (1749, tensor(-0.0158, dtype=torch.float64)), (2087, tensor(-0.0158, dtype=torch.float64)), (1792, tensor(-0.0158, dtype=torch.float64)), (977, tensor(-0.0158, dtype=torch.float64)), (1943, tensor(-0.0158, dtype=torch.float64)), (745, tensor(-0.0158, dtype=torch.float64)), (56, tensor(-0.0157, dtype=torch.float64)), (1726, tensor(-0.0157, dtype=torch.float64)), (1623, tensor(-0.0156, dtype=torch.float64)), (2083, tensor(-0.0156, dtype=torch.float64)), (2191, tensor(-0.0156, dtype=torch.float64)), (2060, tensor(-0.0155, dtype=torch.float64)), (241, tensor(-0.0155, dtype=torch.float64)), (408, tensor(-0.0154, dtype=torch.float64)), (987, tensor(-0.0154, dtype=torch.float64)), (1121, tensor(-0.0153, dtype=torch.float64)), (703, tensor(-0.0153, dtype=torch.float64)), (802, tensor(-0.0153, dtype=torch.float64)), (832, tensor(-0.0153, dtype=torch.float64)), (2196, tensor(-0.0153, dtype=torch.float64)), (47, tensor(-0.0153, dtype=torch.float64)), (2210, tensor(-0.0153, dtype=torch.float64)), (946, tensor(-0.0152, dtype=torch.float64)), (643, tensor(-0.0152, dtype=torch.float64)), (78, tensor(-0.0152, dtype=torch.float64)), (919, tensor(-0.0152, dtype=torch.float64)), (2129, tensor(-0.0152, dtype=torch.float64)), (2088, tensor(-0.0152, dtype=torch.float64)), (69, tensor(-0.0152, dtype=torch.float64)), (510, tensor(-0.0151, dtype=torch.float64)), (486, tensor(-0.0151, dtype=torch.float64)), (2030, tensor(-0.0151, dtype=torch.float64)), (134, tensor(-0.0151, dtype=torch.float64)), (1561, tensor(-0.0150, dtype=torch.float64)), (1907, tensor(-0.0150, dtype=torch.float64)), (433, tensor(-0.0150, dtype=torch.float64)), (1755, tensor(-0.0150, dtype=torch.float64)), (601, tensor(-0.0150, dtype=torch.float64)), (1225, tensor(-0.0150, dtype=torch.float64)), (1941, tensor(-0.0150, dtype=torch.float64)), (1632, tensor(-0.0149, dtype=torch.float64)), (903, tensor(-0.0149, dtype=torch.float64)), (689, tensor(-0.0149, dtype=torch.float64)), (1648, tensor(-0.0149, dtype=torch.float64)), (2307, tensor(-0.0149, dtype=torch.float64)), (2143, tensor(-0.0148, dtype=torch.float64)), (911, tensor(-0.0148, dtype=torch.float64)), (1777, tensor(-0.0148, dtype=torch.float64)), (1265, tensor(-0.0147, dtype=torch.float64)), (575, tensor(-0.0147, dtype=torch.float64)), (1553, tensor(-0.0147, dtype=torch.float64)), (1199, tensor(-0.0146, dtype=torch.float64)), (1576, tensor(-0.0145, dtype=torch.float64)), (1097, tensor(-0.0145, dtype=torch.float64)), (1489, tensor(-0.0145, dtype=torch.float64)), (1559, tensor(-0.0145, dtype=torch.float64)), (544, tensor(-0.0145, dtype=torch.float64)), (103, tensor(-0.0145, dtype=torch.float64)), (904, tensor(-0.0144, dtype=torch.float64)), (1081, tensor(-0.0144, dtype=torch.float64)), (1170, tensor(-0.0144, dtype=torch.float64)), (1547, tensor(-0.0144, dtype=torch.float64)), (2000, tensor(-0.0143, dtype=torch.float64)), (2323, tensor(-0.0143, dtype=torch.float64)), (1608, tensor(-0.0143, dtype=torch.float64)), (2309, tensor(-0.0142, dtype=torch.float64)), (586, tensor(-0.0141, dtype=torch.float64)), (102, tensor(-0.0141, dtype=torch.float64)), (914, tensor(-0.0141, dtype=torch.float64)), (1947, tensor(-0.0141, dtype=torch.float64)), (6, tensor(-0.0140, dtype=torch.float64)), (1675, tensor(-0.0140, dtype=torch.float64)), (1423, tensor(-0.0139, dtype=torch.float64)), (1662, tensor(-0.0139, dtype=torch.float64)), (1891, tensor(-0.0139, dtype=torch.float64)), (702, tensor(-0.0138, dtype=torch.float64)), (1948, tensor(-0.0138, dtype=torch.float64)), (1962, tensor(-0.0138, dtype=torch.float64)), (1607, tensor(-0.0138, dtype=torch.float64)), (521, tensor(-0.0137, dtype=torch.float64)), (1202, tensor(-0.0137, dtype=torch.float64)), (1096, tensor(-0.0137, dtype=torch.float64)), (580, tensor(-0.0137, dtype=torch.float64)), (1429, tensor(-0.0137, dtype=torch.float64)), (99, tensor(-0.0137, dtype=torch.float64)), (1114, tensor(-0.0136, dtype=torch.float64)), (1342, tensor(-0.0136, dtype=torch.float64)), (799, tensor(-0.0136, dtype=torch.float64)), (993, tensor(-0.0136, dtype=torch.float64)), (807, tensor(-0.0136, dtype=torch.float64)), (1727, tensor(-0.0136, dtype=torch.float64)), (1407, tensor(-0.0135, dtype=torch.float64)), (2177, tensor(-0.0135, dtype=torch.float64)), (2036, tensor(-0.0135, dtype=torch.float64)), (417, tensor(-0.0135, dtype=torch.float64)), (67, tensor(-0.0134, dtype=torch.float64)), (112, tensor(-0.0134, dtype=torch.float64)), (2126, tensor(-0.0134, dtype=torch.float64)), (343, tensor(-0.0134, dtype=torch.float64)), (333, tensor(-0.0134, dtype=torch.float64)), (970, tensor(-0.0133, dtype=torch.float64)), (138, tensor(-0.0133, dtype=torch.float64)), (115, tensor(-0.0133, dtype=torch.float64)), (852, tensor(-0.0132, dtype=torch.float64)), (2136, tensor(-0.0132, dtype=torch.float64)), (243, tensor(-0.0131, dtype=torch.float64)), (1563, tensor(-0.0131, dtype=torch.float64)), (1475, tensor(-0.0131, dtype=torch.float64)), (1814, tensor(-0.0131, dtype=torch.float64)), (2121, tensor(-0.0131, dtype=torch.float64)), (824, tensor(-0.0130, dtype=torch.float64)), (497, tensor(-0.0130, dtype=torch.float64)), (574, tensor(-0.0130, dtype=torch.float64)), (87, tensor(-0.0130, dtype=torch.float64)), (1292, tensor(-0.0130, dtype=torch.float64)), (943, tensor(-0.0130, dtype=torch.float64)), (552, tensor(-0.0130, dtype=torch.float64)), (942, tensor(-0.0130, dtype=torch.float64)), (369, tensor(-0.0130, dtype=torch.float64)), (88, tensor(-0.0129, dtype=torch.float64)), (1422, tensor(-0.0129, dtype=torch.float64)), (409, tensor(-0.0129, dtype=torch.float64)), (878, tensor(-0.0129, dtype=torch.float64)), (1134, tensor(-0.0129, dtype=torch.float64)), (349, tensor(-0.0128, dtype=torch.float64)), (1594, tensor(-0.0128, dtype=torch.float64)), (1725, tensor(-0.0128, dtype=torch.float64)), (1442, tensor(-0.0128, dtype=torch.float64)), (1465, tensor(-0.0128, dtype=torch.float64)), (1440, tensor(-0.0128, dtype=torch.float64)), (750, tensor(-0.0127, dtype=torch.float64)), (1055, tensor(-0.0127, dtype=torch.float64)), (1980, tensor(-0.0127, dtype=torch.float64)), (107, tensor(-0.0127, dtype=torch.float64)), (599, tensor(-0.0127, dtype=torch.float64)), (1065, tensor(-0.0126, dtype=torch.float64)), (892, tensor(-0.0126, dtype=torch.float64)), (1126, tensor(-0.0126, dtype=torch.float64)), (1251, tensor(-0.0126, dtype=torch.float64)), (971, tensor(-0.0125, dtype=torch.float64)), (1602, tensor(-0.0125, dtype=torch.float64)), (1123, tensor(-0.0125, dtype=torch.float64)), (2319, tensor(-0.0125, dtype=torch.float64)), (1710, tensor(-0.0125, dtype=torch.float64)), (867, tensor(-0.0124, dtype=torch.float64)), (1137, tensor(-0.0124, dtype=torch.float64)), (1942, tensor(-0.0124, dtype=torch.float64)), (1115, tensor(-0.0124, dtype=torch.float64)), (2135, tensor(-0.0123, dtype=torch.float64)), (706, tensor(-0.0123, dtype=torch.float64)), (1395, tensor(-0.0123, dtype=torch.float64)), (2299, tensor(-0.0123, dtype=torch.float64)), (573, tensor(-0.0123, dtype=torch.float64)), (584, tensor(-0.0123, dtype=torch.float64)), (1027, tensor(-0.0123, dtype=torch.float64)), (1003, tensor(-0.0123, dtype=torch.float64)), (166, tensor(-0.0122, dtype=torch.float64)), (1525, tensor(-0.0122, dtype=torch.float64)), (1736, tensor(-0.0122, dtype=torch.float64)), (1855, tensor(-0.0122, dtype=torch.float64)), (1570, tensor(-0.0122, dtype=torch.float64)), (1207, tensor(-0.0121, dtype=torch.float64)), (788, tensor(-0.0121, dtype=torch.float64)), (1722, tensor(-0.0121, dtype=torch.float64)), (1313, tensor(-0.0121, dtype=torch.float64)), (1651, tensor(-0.0121, dtype=torch.float64)), (1883, tensor(-0.0120, dtype=torch.float64)), (1129, tensor(-0.0120, dtype=torch.float64)), (1925, tensor(-0.0119, dtype=torch.float64)), (1138, tensor(-0.0119, dtype=torch.float64)), (1528, tensor(-0.0119, dtype=torch.float64)), (57, tensor(-0.0119, dtype=torch.float64)), (1817, tensor(-0.0119, dtype=torch.float64)), (1984, tensor(-0.0118, dtype=torch.float64)), (2159, tensor(-0.0118, dtype=torch.float64)), (193, tensor(-0.0118, dtype=torch.float64)), (1455, tensor(-0.0118, dtype=torch.float64)), (870, tensor(-0.0118, dtype=torch.float64)), (1364, tensor(-0.0118, dtype=torch.float64)), (1803, tensor(-0.0118, dtype=torch.float64)), (1804, tensor(-0.0118, dtype=torch.float64)), (558, tensor(-0.0117, dtype=torch.float64)), (1514, tensor(-0.0117, dtype=torch.float64)), (2318, tensor(-0.0117, dtype=torch.float64)), (1888, tensor(-0.0117, dtype=torch.float64)), (2199, tensor(-0.0117, dtype=torch.float64)), (577, tensor(-0.0116, dtype=torch.float64)), (761, tensor(-0.0116, dtype=torch.float64)), (381, tensor(-0.0116, dtype=torch.float64)), (2006, tensor(-0.0116, dtype=torch.float64)), (289, tensor(-0.0116, dtype=torch.float64)), (1368, tensor(-0.0115, dtype=torch.float64)), (1007, tensor(-0.0115, dtype=torch.float64)), (875, tensor(-0.0115, dtype=torch.float64)), (490, tensor(-0.0114, dtype=torch.float64)), (378, tensor(-0.0114, dtype=torch.float64)), (203, tensor(-0.0114, dtype=torch.float64)), (1, tensor(-0.0114, dtype=torch.float64)), (1763, tensor(-0.0114, dtype=torch.float64)), (1501, tensor(-0.0114, dtype=torch.float64)), (282, tensor(-0.0114, dtype=torch.float64)), (1476, tensor(-0.0114, dtype=torch.float64)), (455, tensor(-0.0113, dtype=torch.float64)), (211, tensor(-0.0113, dtype=torch.float64)), (1905, tensor(-0.0113, dtype=torch.float64)), (440, tensor(-0.0113, dtype=torch.float64)), (1530, tensor(-0.0113, dtype=torch.float64)), (529, tensor(-0.0113, dtype=torch.float64)), (844, tensor(-0.0113, dtype=torch.float64)), (1008, tensor(-0.0112, dtype=torch.float64)), (70, tensor(-0.0112, dtype=torch.float64)), (1438, tensor(-0.0111, dtype=torch.float64)), (1359, tensor(-0.0111, dtype=torch.float64)), (1063, tensor(-0.0111, dtype=torch.float64)), (756, tensor(-0.0110, dtype=torch.float64)), (635, tensor(-0.0110, dtype=torch.float64)), (996, tensor(-0.0110, dtype=torch.float64)), (961, tensor(-0.0109, dtype=torch.float64)), (1582, tensor(-0.0109, dtype=torch.float64)), (367, tensor(-0.0109, dtype=torch.float64)), (1222, tensor(-0.0108, dtype=torch.float64)), (27, tensor(-0.0107, dtype=torch.float64)), (1593, tensor(-0.0107, dtype=torch.float64)), (994, tensor(-0.0107, dtype=torch.float64)), (1987, tensor(-0.0106, dtype=torch.float64)), (1598, tensor(-0.0106, dtype=torch.float64)), (638, tensor(-0.0106, dtype=torch.float64)), (2192, tensor(-0.0106, dtype=torch.float64)), (50, tensor(-0.0106, dtype=torch.float64)), (1655, tensor(-0.0105, dtype=torch.float64)), (441, tensor(-0.0105, dtype=torch.float64)), (1979, tensor(-0.0105, dtype=torch.float64)), (60, tensor(-0.0105, dtype=torch.float64)), (1299, tensor(-0.0105, dtype=torch.float64)), (654, tensor(-0.0104, dtype=torch.float64)), (1269, tensor(-0.0104, dtype=torch.float64)), (2187, tensor(-0.0104, dtype=torch.float64)), (304, tensor(-0.0104, dtype=torch.float64)), (1784, tensor(-0.0104, dtype=torch.float64)), (1822, tensor(-0.0104, dtype=torch.float64)), (769, tensor(-0.0104, dtype=torch.float64)), (1516, tensor(-0.0104, dtype=torch.float64)), (1088, tensor(-0.0104, dtype=torch.float64)), (427, tensor(-0.0104, dtype=torch.float64)), (2268, tensor(-0.0103, dtype=torch.float64)), (834, tensor(-0.0102, dtype=torch.float64)), (35, tensor(-0.0102, dtype=torch.float64)), (1480, tensor(-0.0102, dtype=torch.float64)), (1854, tensor(-0.0101, dtype=torch.float64)), (139, tensor(-0.0101, dtype=torch.float64)), (1578, tensor(-0.0101, dtype=torch.float64)), (1684, tensor(-0.0101, dtype=torch.float64)), (1156, tensor(-0.0100, dtype=torch.float64)), (955, tensor(-0.0100, dtype=torch.float64)), (1057, tensor(-0.0100, dtype=torch.float64)), (2286, tensor(-0.0100, dtype=torch.float64)), (399, tensor(-0.0100, dtype=torch.float64)), (1621, tensor(-0.0099, dtype=torch.float64)), (877, tensor(-0.0099, dtype=torch.float64)), (613, tensor(-0.0099, dtype=torch.float64)), (1132, tensor(-0.0099, dtype=torch.float64)), (1956, tensor(-0.0099, dtype=torch.float64)), (181, tensor(-0.0099, dtype=torch.float64)), (1324, tensor(-0.0098, dtype=torch.float64)), (587, tensor(-0.0098, dtype=torch.float64)), (543, tensor(-0.0098, dtype=torch.float64)), (2246, tensor(-0.0098, dtype=torch.float64)), (1232, tensor(-0.0097, dtype=torch.float64)), (245, tensor(-0.0097, dtype=torch.float64)), (1539, tensor(-0.0097, dtype=torch.float64)), (2113, tensor(-0.0097, dtype=torch.float64)), (426, tensor(-0.0096, dtype=torch.float64)), (1554, tensor(-0.0096, dtype=torch.float64)), (997, tensor(-0.0096, dtype=torch.float64)), (470, tensor(-0.0096, dtype=torch.float64)), (1999, tensor(-0.0096, dtype=torch.float64)), (1507, tensor(-0.0095, dtype=torch.float64)), (1028, tensor(-0.0095, dtype=torch.float64)), (52, tensor(-0.0095, dtype=torch.float64)), (351, tensor(-0.0095, dtype=torch.float64)), (979, tensor(-0.0095, dtype=torch.float64)), (215, tensor(-0.0094, dtype=torch.float64)), (346, tensor(-0.0094, dtype=torch.float64)), (284, tensor(-0.0093, dtype=torch.float64)), (355, tensor(-0.0092, dtype=torch.float64)), (717, tensor(-0.0092, dtype=torch.float64)), (1383, tensor(-0.0092, dtype=torch.float64)), (42, tensor(-0.0092, dtype=torch.float64)), (1612, tensor(-0.0092, dtype=torch.float64)), (1831, tensor(-0.0092, dtype=torch.float64)), (2156, tensor(-0.0092, dtype=torch.float64)), (301, tensor(-0.0091, dtype=torch.float64)), (1620, tensor(-0.0091, dtype=torch.float64)), (1639, tensor(-0.0091, dtype=torch.float64)), (531, tensor(-0.0091, dtype=torch.float64)), (1259, tensor(-0.0091, dtype=torch.float64)), (2344, tensor(-0.0090, dtype=torch.float64)), (120, tensor(-0.0090, dtype=torch.float64)), (1200, tensor(-0.0090, dtype=torch.float64)), (721, tensor(-0.0090, dtype=torch.float64)), (2013, tensor(-0.0090, dtype=torch.float64)), (2250, tensor(-0.0090, dtype=torch.float64)), (491, tensor(-0.0090, dtype=torch.float64)), (13, tensor(-0.0090, dtype=torch.float64)), (2164, tensor(-0.0089, dtype=torch.float64)), (889, tensor(-0.0089, dtype=torch.float64)), (94, tensor(-0.0089, dtype=torch.float64)), (44, tensor(-0.0089, dtype=torch.float64)), (873, tensor(-0.0089, dtype=torch.float64)), (883, tensor(-0.0088, dtype=torch.float64)), (2255, tensor(-0.0088, dtype=torch.float64)), (2039, tensor(-0.0087, dtype=torch.float64)), (519, tensor(-0.0087, dtype=torch.float64)), (2038, tensor(-0.0087, dtype=torch.float64)), (947, tensor(-0.0087, dtype=torch.float64)), (1117, tensor(-0.0087, dtype=torch.float64)), (342, tensor(-0.0087, dtype=torch.float64)), (581, tensor(-0.0087, dtype=torch.float64)), (681, tensor(-0.0085, dtype=torch.float64)), (1821, tensor(-0.0085, dtype=torch.float64)), (1657, tensor(-0.0085, dtype=torch.float64)), (782, tensor(-0.0085, dtype=torch.float64)), (652, tensor(-0.0085, dtype=torch.float64)), (985, tensor(-0.0084, dtype=torch.float64)), (294, tensor(-0.0084, dtype=torch.float64)), (270, tensor(-0.0084, dtype=torch.float64)), (2027, tensor(-0.0084, dtype=torch.float64)), (559, tensor(-0.0084, dtype=torch.float64)), (1064, tensor(-0.0083, dtype=torch.float64)), (1902, tensor(-0.0083, dtype=torch.float64)), (1338, tensor(-0.0083, dtype=torch.float64)), (2342, tensor(-0.0083, dtype=torch.float64)), (747, tensor(-0.0083, dtype=torch.float64)), (934, tensor(-0.0083, dtype=torch.float64)), (189, tensor(-0.0083, dtype=torch.float64)), (1216, tensor(-0.0083, dtype=torch.float64)), (151, tensor(-0.0082, dtype=torch.float64)), (1732, tensor(-0.0082, dtype=torch.float64)), (2207, tensor(-0.0082, dtype=torch.float64)), (1266, tensor(-0.0082, dtype=torch.float64)), (506, tensor(-0.0082, dtype=torch.float64)), (1142, tensor(-0.0082, dtype=torch.float64)), (789, tensor(-0.0082, dtype=torch.float64)), (1565, tensor(-0.0082, dtype=torch.float64)), (478, tensor(-0.0081, dtype=torch.float64)), (2235, tensor(-0.0081, dtype=torch.float64)), (663, tensor(-0.0081, dtype=torch.float64)), (680, tensor(-0.0081, dtype=torch.float64)), (34, tensor(-0.0081, dtype=torch.float64)), (435, tensor(-0.0081, dtype=torch.float64)), (2068, tensor(-0.0080, dtype=torch.float64)), (912, tensor(-0.0080, dtype=torch.float64)), (2040, tensor(-0.0080, dtype=torch.float64)), (1002, tensor(-0.0080, dtype=torch.float64)), (925, tensor(-0.0080, dtype=torch.float64)), (992, tensor(-0.0080, dtype=torch.float64)), (472, tensor(-0.0080, dtype=torch.float64)), (2320, tensor(-0.0080, dtype=torch.float64)), (1741, tensor(-0.0080, dtype=torch.float64)), (2204, tensor(-0.0080, dtype=torch.float64)), (127, tensor(-0.0080, dtype=torch.float64)), (2295, tensor(-0.0079, dtype=torch.float64)), (1689, tensor(-0.0079, dtype=torch.float64)), (80, tensor(-0.0079, dtype=torch.float64)), (1294, tensor(-0.0079, dtype=torch.float64)), (1936, tensor(-0.0078, dtype=torch.float64)), (1371, tensor(-0.0078, dtype=torch.float64)), (1257, tensor(-0.0078, dtype=torch.float64)), (1955, tensor(-0.0078, dtype=torch.float64)), (2316, tensor(-0.0078, dtype=torch.float64)), (1223, tensor(-0.0077, dtype=torch.float64)), (572, tensor(-0.0077, dtype=torch.float64)), (2229, tensor(-0.0077, dtype=torch.float64)), (555, tensor(-0.0077, dtype=torch.float64)), (1125, tensor(-0.0077, dtype=torch.float64)), (2053, tensor(-0.0077, dtype=torch.float64)), (25, tensor(-0.0077, dtype=torch.float64)), (1702, tensor(-0.0077, dtype=torch.float64)), (828, tensor(-0.0076, dtype=torch.float64)), (1884, tensor(-0.0076, dtype=torch.float64)), (2004, tensor(-0.0076, dtype=torch.float64)), (786, tensor(-0.0075, dtype=torch.float64)), (2016, tensor(-0.0075, dtype=torch.float64)), (1874, tensor(-0.0075, dtype=torch.float64)), (1846, tensor(-0.0075, dtype=torch.float64)), (831, tensor(-0.0075, dtype=torch.float64)), (2231, tensor(-0.0074, dtype=torch.float64)), (1069, tensor(-0.0074, dtype=torch.float64)), (1513, tensor(-0.0074, dtype=torch.float64)), (2275, tensor(-0.0074, dtype=torch.float64)), (2334, tensor(-0.0073, dtype=torch.float64)), (2327, tensor(-0.0073, dtype=torch.float64)), (2120, tensor(-0.0073, dtype=torch.float64)), (2234, tensor(-0.0073, dtype=torch.float64)), (339, tensor(-0.0073, dtype=torch.float64)), (1622, tensor(-0.0073, dtype=torch.float64)), (1950, tensor(-0.0072, dtype=torch.float64)), (826, tensor(-0.0072, dtype=torch.float64)), (1046, tensor(-0.0072, dtype=torch.float64)), (1767, tensor(-0.0072, dtype=torch.float64)), (707, tensor(-0.0072, dtype=torch.float64)), (1401, tensor(-0.0071, dtype=torch.float64)), (1070, tensor(-0.0071, dtype=torch.float64)), (953, tensor(-0.0071, dtype=torch.float64)), (2021, tensor(-0.0071, dtype=torch.float64)), (1349, tensor(-0.0071, dtype=torch.float64)), (1918, tensor(-0.0071, dtype=torch.float64)), (1851, tensor(-0.0071, dtype=torch.float64)), (634, tensor(-0.0071, dtype=torch.float64)), (471, tensor(-0.0070, dtype=torch.float64)), (1073, tensor(-0.0070, dtype=torch.float64)), (888, tensor(-0.0070, dtype=torch.float64)), (1761, tensor(-0.0070, dtype=torch.float64)), (2058, tensor(-0.0070, dtype=torch.float64)), (719, tensor(-0.0070, dtype=torch.float64)), (1933, tensor(-0.0070, dtype=torch.float64)), (64, tensor(-0.0069, dtype=torch.float64)), (698, tensor(-0.0069, dtype=torch.float64)), (1483, tensor(-0.0069, dtype=torch.float64)), (2206, tensor(-0.0069, dtype=torch.float64)), (271, tensor(-0.0068, dtype=torch.float64)), (141, tensor(-0.0068, dtype=torch.float64)), (1957, tensor(-0.0068, dtype=torch.float64)), (2047, tensor(-0.0068, dtype=torch.float64)), (1411, tensor(-0.0068, dtype=torch.float64)), (1841, tensor(-0.0067, dtype=torch.float64)), (1562, tensor(-0.0067, dtype=torch.float64)), (862, tensor(-0.0067, dtype=torch.float64)), (1074, tensor(-0.0067, dtype=torch.float64)), (250, tensor(-0.0066, dtype=torch.float64)), (1141, tensor(-0.0066, dtype=torch.float64)), (224, tensor(-0.0065, dtype=torch.float64)), (1058, tensor(-0.0065, dtype=torch.float64)), (1571, tensor(-0.0065, dtype=torch.float64)), (2322, tensor(-0.0064, dtype=torch.float64)), (65, tensor(-0.0064, dtype=torch.float64)), (518, tensor(-0.0064, dtype=torch.float64)), (2351, tensor(-0.0064, dtype=torch.float64)), (1325, tensor(-0.0064, dtype=torch.float64)), (881, tensor(-0.0064, dtype=torch.float64)), (902, tensor(-0.0064, dtype=torch.float64)), (1000, tensor(-0.0064, dtype=torch.float64)), (1453, tensor(-0.0064, dtype=torch.float64)), (454, tensor(-0.0063, dtype=torch.float64)), (1273, tensor(-0.0063, dtype=torch.float64)), (452, tensor(-0.0063, dtype=torch.float64)), (561, tensor(-0.0063, dtype=torch.float64)), (1443, tensor(-0.0062, dtype=torch.float64)), (1031, tensor(-0.0062, dtype=torch.float64)), (495, tensor(-0.0062, dtype=torch.float64)), (217, tensor(-0.0062, dtype=torch.float64)), (2195, tensor(-0.0061, dtype=torch.float64)), (951, tensor(-0.0061, dtype=torch.float64)), (989, tensor(-0.0061, dtype=torch.float64)), (143, tensor(-0.0061, dtype=torch.float64)), (430, tensor(-0.0061, dtype=torch.float64)), (1567, tensor(-0.0060, dtype=torch.float64)), (2125, tensor(-0.0060, dtype=torch.float64)), (965, tensor(-0.0060, dtype=torch.float64)), (352, tensor(-0.0060, dtype=torch.float64)), (2098, tensor(-0.0060, dtype=torch.float64)), (1040, tensor(-0.0060, dtype=torch.float64)), (324, tensor(-0.0060, dtype=torch.float64)), (1595, tensor(-0.0059, dtype=torch.float64)), (636, tensor(-0.0059, dtype=torch.float64)), (738, tensor(-0.0059, dtype=torch.float64)), (1783, tensor(-0.0059, dtype=torch.float64)), (1090, tensor(-0.0059, dtype=torch.float64)), (1624, tensor(-0.0059, dtype=torch.float64)), (110, tensor(-0.0059, dtype=torch.float64)), (1278, tensor(-0.0059, dtype=torch.float64)), (2228, tensor(-0.0058, dtype=torch.float64)), (2035, tensor(-0.0058, dtype=torch.float64)), (639, tensor(-0.0058, dtype=torch.float64)), (2271, tensor(-0.0058, dtype=torch.float64)), (1691, tensor(-0.0058, dtype=torch.float64)), (1077, tensor(-0.0058, dtype=torch.float64)), (1909, tensor(-0.0057, dtype=torch.float64)), (2154, tensor(-0.0057, dtype=torch.float64)), (1895, tensor(-0.0057, dtype=torch.float64)), (1431, tensor(-0.0057, dtype=torch.float64)), (140, tensor(-0.0057, dtype=torch.float64)), (1398, tensor(-0.0057, dtype=torch.float64)), (195, tensor(-0.0056, dtype=torch.float64)), (15, tensor(-0.0056, dtype=torch.float64)), (1609, tensor(-0.0056, dtype=torch.float64)), (1991, tensor(-0.0056, dtype=torch.float64)), (334, tensor(-0.0056, dtype=torch.float64)), (2337, tensor(-0.0056, dtype=torch.float64)), (1959, tensor(-0.0056, dtype=torch.float64)), (167, tensor(-0.0056, dtype=torch.float64)), (1940, tensor(-0.0055, dtype=torch.float64)), (249, tensor(-0.0055, dtype=torch.float64)), (764, tensor(-0.0055, dtype=torch.float64)), (656, tensor(-0.0055, dtype=torch.float64)), (785, tensor(-0.0055, dtype=torch.float64)), (2152, tensor(-0.0055, dtype=torch.float64)), (1671, tensor(-0.0055, dtype=torch.float64)), (2212, tensor(-0.0055, dtype=torch.float64)), (322, tensor(-0.0055, dtype=torch.float64)), (213, tensor(-0.0054, dtype=torch.float64)), (1100, tensor(-0.0054, dtype=torch.float64)), (1982, tensor(-0.0054, dtype=torch.float64)), (1864, tensor(-0.0054, dtype=torch.float64)), (460, tensor(-0.0054, dtype=torch.float64)), (2236, tensor(-0.0054, dtype=torch.float64)), (1771, tensor(-0.0053, dtype=torch.float64)), (1062, tensor(-0.0053, dtype=torch.float64)), (973, tensor(-0.0053, dtype=torch.float64)), (924, tensor(-0.0053, dtype=torch.float64)), (895, tensor(-0.0053, dtype=torch.float64)), (1240, tensor(-0.0053, dtype=torch.float64)), (391, tensor(-0.0052, dtype=torch.float64)), (507, tensor(-0.0052, dtype=torch.float64)), (2144, tensor(-0.0052, dtype=torch.float64)), (642, tensor(-0.0052, dtype=torch.float64)), (1951, tensor(-0.0052, dtype=torch.float64)), (1887, tensor(-0.0052, dtype=torch.float64)), (1017, tensor(-0.0052, dtype=torch.float64)), (967, tensor(-0.0051, dtype=torch.float64)), (1083, tensor(-0.0051, dtype=torch.float64)), (19, tensor(-0.0051, dtype=torch.float64)), (2345, tensor(-0.0051, dtype=torch.float64)), (79, tensor(-0.0051, dtype=torch.float64)), (1190, tensor(-0.0051, dtype=torch.float64)), (1499, tensor(-0.0051, dtype=torch.float64)), (11, tensor(-0.0051, dtype=torch.float64)), (1868, tensor(-0.0051, dtype=torch.float64)), (1215, tensor(-0.0051, dtype=torch.float64)), (1185, tensor(-0.0050, dtype=torch.float64)), (358, tensor(-0.0050, dtype=torch.float64)), (1665, tensor(-0.0050, dtype=torch.float64)), (918, tensor(-0.0050, dtype=torch.float64)), (1184, tensor(-0.0050, dtype=torch.float64)), (2314, tensor(-0.0050, dtype=torch.float64)), (2064, tensor(-0.0050, dtype=torch.float64)), (1692, tensor(-0.0050, dtype=torch.float64)), (1859, tensor(-0.0049, dtype=torch.float64)), (2114, tensor(-0.0049, dtype=torch.float64)), (1026, tensor(-0.0048, dtype=torch.float64)), (1574, tensor(-0.0048, dtype=torch.float64)), (1295, tensor(-0.0048, dtype=torch.float64)), (509, tensor(-0.0047, dtype=torch.float64)), (1454, tensor(-0.0047, dtype=torch.float64)), (2032, tensor(-0.0047, dtype=torch.float64)), (2181, tensor(-0.0047, dtype=torch.float64)), (1078, tensor(-0.0047, dtype=torch.float64)), (395, tensor(-0.0047, dtype=torch.float64)), (173, tensor(-0.0047, dtype=torch.float64)), (817, tensor(-0.0047, dtype=torch.float64)), (1645, tensor(-0.0046, dtype=torch.float64)), (1308, tensor(-0.0046, dtype=torch.float64)), (842, tensor(-0.0046, dtype=torch.float64)), (43, tensor(-0.0046, dtype=torch.float64)), (1876, tensor(-0.0046, dtype=torch.float64)), (1060, tensor(-0.0046, dtype=torch.float64)), (1482, tensor(-0.0045, dtype=torch.float64)), (524, tensor(-0.0045, dtype=torch.float64)), (2274, tensor(-0.0045, dtype=torch.float64)), (366, tensor(-0.0045, dtype=torch.float64)), (2081, tensor(-0.0045, dtype=torch.float64)), (2253, tensor(-0.0045, dtype=torch.float64)), (1776, tensor(-0.0044, dtype=torch.float64)), (255, tensor(-0.0044, dtype=torch.float64)), (1244, tensor(-0.0044, dtype=torch.float64)), (2198, tensor(-0.0044, dtype=torch.float64)), (119, tensor(-0.0044, dtype=torch.float64)), (449, tensor(-0.0044, dtype=torch.float64)), (847, tensor(-0.0044, dtype=torch.float64)), (2054, tensor(-0.0044, dtype=torch.float64)), (293, tensor(-0.0044, dtype=torch.float64)), (1833, tensor(-0.0044, dtype=torch.float64)), (901, tensor(-0.0043, dtype=torch.float64)), (1473, tensor(-0.0043, dtype=torch.float64)), (10, tensor(-0.0043, dtype=torch.float64)), (85, tensor(-0.0043, dtype=torch.float64)), (1764, tensor(-0.0043, dtype=torch.float64)), (2161, tensor(-0.0043, dtype=torch.float64)), (1410, tensor(-0.0043, dtype=torch.float64)), (1472, tensor(-0.0043, dtype=torch.float64)), (1197, tensor(-0.0043, dtype=torch.float64)), (809, tensor(-0.0043, dtype=torch.float64)), (1110, tensor(-0.0042, dtype=torch.float64)), (451, tensor(-0.0042, dtype=torch.float64)), (1298, tensor(-0.0042, dtype=torch.float64)), (1457, tensor(-0.0042, dtype=torch.float64)), (238, tensor(-0.0042, dtype=torch.float64)), (1924, tensor(-0.0042, dtype=torch.float64)), (201, tensor(-0.0042, dtype=torch.float64)), (63, tensor(-0.0041, dtype=torch.float64)), (582, tensor(-0.0041, dtype=torch.float64)), (2247, tensor(-0.0041, dtype=torch.float64)), (1599, tensor(-0.0041, dtype=torch.float64)), (458, tensor(-0.0041, dtype=torch.float64)), (1886, tensor(-0.0041, dtype=torch.float64)), (748, tensor(-0.0041, dtype=torch.float64)), (1719, tensor(-0.0041, dtype=torch.float64)), (1706, tensor(-0.0041, dtype=torch.float64)), (198, tensor(-0.0040, dtype=torch.float64)), (693, tensor(-0.0040, dtype=torch.float64)), (1182, tensor(-0.0040, dtype=torch.float64)), (1362, tensor(-0.0040, dtype=torch.float64)), (39, tensor(-0.0040, dtype=torch.float64)), (2194, tensor(-0.0040, dtype=torch.float64)), (1690, tensor(-0.0040, dtype=torch.float64)), (123, tensor(-0.0040, dtype=torch.float64)), (1220, tensor(-0.0040, dtype=torch.float64)), (187, tensor(-0.0040, dtype=torch.float64)), (2179, tensor(-0.0040, dtype=torch.float64)), (2022, tensor(-0.0039, dtype=torch.float64)), (482, tensor(-0.0039, dtype=torch.float64)), (622, tensor(-0.0039, dtype=torch.float64)), (17, tensor(-0.0039, dtype=torch.float64)), (1893, tensor(-0.0039, dtype=torch.float64)), (2123, tensor(-0.0038, dtype=torch.float64)), (1118, tensor(-0.0038, dtype=torch.float64)), (1897, tensor(-0.0038, dtype=torch.float64)), (2352, tensor(-0.0038, dtype=torch.float64)), (1478, tensor(-0.0038, dtype=torch.float64)), (1030, tensor(-0.0038, dtype=torch.float64)), (1738, tensor(-0.0038, dtype=torch.float64)), (1356, tensor(-0.0038, dtype=torch.float64)), (1857, tensor(-0.0037, dtype=torch.float64)), (906, tensor(-0.0037, dtype=torch.float64)), (260, tensor(-0.0037, dtype=torch.float64)), (553, tensor(-0.0037, dtype=torch.float64)), (278, tensor(-0.0037, dtype=torch.float64)), (762, tensor(-0.0037, dtype=torch.float64)), (1524, tensor(-0.0037, dtype=torch.float64)), (2279, tensor(-0.0037, dtype=torch.float64)), (1829, tensor(-0.0037, dtype=torch.float64)), (1932, tensor(-0.0037, dtype=torch.float64)), (739, tensor(-0.0036, dtype=torch.float64)), (893, tensor(-0.0036, dtype=torch.float64)), (2336, tensor(-0.0036, dtype=torch.float64)), (113, tensor(-0.0036, dtype=torch.float64)), (376, tensor(-0.0036, dtype=torch.float64)), (687, tensor(-0.0036, dtype=torch.float64)), (2289, tensor(-0.0036, dtype=torch.float64)), (2117, tensor(-0.0036, dtype=torch.float64)), (648, tensor(-0.0036, dtype=torch.float64)), (2347, tensor(-0.0036, dtype=torch.float64)), (674, tensor(-0.0035, dtype=torch.float64)), (776, tensor(-0.0035, dtype=torch.float64)), (1469, tensor(-0.0035, dtype=torch.float64)), (276, tensor(-0.0035, dtype=torch.float64)), (1217, tensor(-0.0035, dtype=torch.float64)), (1946, tensor(-0.0035, dtype=torch.float64)), (1327, tensor(-0.0035, dtype=torch.float64)), (272, tensor(-0.0035, dtype=torch.float64)), (861, tensor(-0.0034, dtype=torch.float64)), (2048, tensor(-0.0034, dtype=torch.float64)), (1705, tensor(-0.0034, dtype=torch.float64)), (1782, tensor(-0.0034, dtype=torch.float64)), (1361, tensor(-0.0034, dtype=torch.float64)), (30, tensor(-0.0034, dtype=torch.float64)), (1414, tensor(-0.0034, dtype=torch.float64)), (1543, tensor(-0.0034, dtype=torch.float64)), (221, tensor(-0.0033, dtype=torch.float64)), (1717, tensor(-0.0033, dtype=torch.float64)), (1649, tensor(-0.0033, dtype=torch.float64)), (845, tensor(-0.0033, dtype=torch.float64)), (2052, tensor(-0.0033, dtype=torch.float64)), (811, tensor(-0.0033, dtype=torch.float64)), (1708, tensor(-0.0032, dtype=torch.float64)), (1021, tensor(-0.0032, dtype=torch.float64)), (1428, tensor(-0.0032, dtype=torch.float64)), (300, tensor(-0.0032, dtype=torch.float64)), (292, tensor(-0.0032, dtype=torch.float64)), (554, tensor(-0.0032, dtype=torch.float64)), (1153, tensor(-0.0032, dtype=torch.float64)), (2157, tensor(-0.0032, dtype=torch.float64)), (2243, tensor(-0.0032, dtype=torch.float64)), (1104, tensor(-0.0031, dtype=torch.float64)), (798, tensor(-0.0031, dtype=torch.float64)), (31, tensor(-0.0031, dtype=torch.float64)), (2296, tensor(-0.0031, dtype=torch.float64)), (484, tensor(-0.0030, dtype=torch.float64)), (2221, tensor(-0.0030, dtype=torch.float64)), (335, tensor(-0.0030, dtype=torch.float64)), (1372, tensor(-0.0030, dtype=torch.float64)), (1322, tensor(-0.0030, dtype=torch.float64)), (751, tensor(-0.0030, dtype=torch.float64)), (916, tensor(-0.0030, dtype=torch.float64)), (2011, tensor(-0.0029, dtype=torch.float64)), (527, tensor(-0.0029, dtype=torch.float64)), (488, tensor(-0.0029, dtype=torch.float64)), (1965, tensor(-0.0029, dtype=torch.float64)), (148, tensor(-0.0029, dtype=torch.float64)), (514, tensor(-0.0029, dtype=torch.float64)), (1789, tensor(-0.0029, dtype=torch.float64)), (222, tensor(-0.0029, dtype=torch.float64)), (590, tensor(-0.0029, dtype=torch.float64)), (1633, tensor(-0.0029, dtype=torch.float64)), (2293, tensor(-0.0029, dtype=torch.float64)), (589, tensor(-0.0028, dtype=torch.float64)), (1961, tensor(-0.0028, dtype=torch.float64)), (1908, tensor(-0.0028, dtype=torch.float64)), (887, tensor(-0.0028, dtype=torch.float64)), (2301, tensor(-0.0028, dtype=torch.float64)), (403, tensor(-0.0028, dtype=torch.float64)), (2173, tensor(-0.0028, dtype=torch.float64)), (1659, tensor(-0.0028, dtype=torch.float64)), (796, tensor(-0.0028, dtype=torch.float64)), (736, tensor(-0.0028, dtype=torch.float64)), (1701, tensor(-0.0028, dtype=torch.float64)), (872, tensor(-0.0028, dtype=torch.float64)), (1977, tensor(-0.0027, dtype=torch.float64)), (954, tensor(-0.0027, dtype=torch.float64)), (1085, tensor(-0.0027, dtype=torch.float64)), (2071, tensor(-0.0027, dtype=torch.float64)), (1188, tensor(-0.0027, dtype=torch.float64)), (1245, tensor(-0.0027, dtype=torch.float64)), (2153, tensor(-0.0027, dtype=torch.float64)), (727, tensor(-0.0027, dtype=torch.float64)), (757, tensor(-0.0027, dtype=torch.float64)), (1331, tensor(-0.0026, dtype=torch.float64)), (551, tensor(-0.0026, dtype=torch.float64)), (1352, tensor(-0.0026, dtype=torch.float64)), (896, tensor(-0.0026, dtype=torch.float64)), (1479, tensor(-0.0026, dtype=torch.float64)), (348, tensor(-0.0026, dtype=torch.float64)), (1518, tensor(-0.0026, dtype=torch.float64)), (144, tensor(-0.0025, dtype=torch.float64)), (1004, tensor(-0.0025, dtype=torch.float64)), (500, tensor(-0.0025, dtype=torch.float64)), (467, tensor(-0.0025, dtype=torch.float64)), (1986, tensor(-0.0025, dtype=torch.float64)), (344, tensor(-0.0025, dtype=torch.float64)), (170, tensor(-0.0025, dtype=torch.float64)), (1526, tensor(-0.0025, dtype=torch.float64)), (1306, tensor(-0.0025, dtype=torch.float64)), (1318, tensor(-0.0025, dtype=torch.float64)), (273, tensor(-0.0024, dtype=torch.float64)), (1206, tensor(-0.0024, dtype=torch.float64)), (695, tensor(-0.0024, dtype=torch.float64)), (765, tensor(-0.0024, dtype=torch.float64)), (1687, tensor(-0.0024, dtype=torch.float64)), (326, tensor(-0.0023, dtype=torch.float64)), (715, tensor(-0.0023, dtype=torch.float64)), (1504, tensor(-0.0023, dtype=torch.float64)), (1536, tensor(-0.0023, dtype=torch.float64)), (2, tensor(-0.0023, dtype=torch.float64)), (1038, tensor(-0.0023, dtype=torch.float64)), (1444, tensor(-0.0023, dtype=torch.float64)), (1916, tensor(-0.0023, dtype=torch.float64)), (257, tensor(-0.0023, dtype=torch.float64)), (2073, tensor(-0.0023, dtype=torch.float64)), (626, tensor(-0.0023, dtype=torch.float64)), (1699, tensor(-0.0023, dtype=torch.float64)), (1402, tensor(-0.0022, dtype=torch.float64)), (2127, tensor(-0.0022, dtype=torch.float64)), (515, tensor(-0.0022, dtype=torch.float64)), (1548, tensor(-0.0022, dtype=torch.float64)), (288, tensor(-0.0022, dtype=torch.float64)), (602, tensor(-0.0022, dtype=torch.float64)), (675, tensor(-0.0022, dtype=torch.float64)), (2283, tensor(-0.0021, dtype=torch.float64)), (791, tensor(-0.0021, dtype=torch.float64)), (1774, tensor(-0.0021, dtype=torch.float64)), (1634, tensor(-0.0021, dtype=torch.float64)), (432, tensor(-0.0021, dtype=torch.float64)), (1879, tensor(-0.0021, dtype=torch.float64)), (1484, tensor(-0.0021, dtype=torch.float64)), (843, tensor(-0.0020, dtype=torch.float64)), (5, tensor(-0.0020, dtype=torch.float64)), (2178, tensor(-0.0020, dtype=torch.float64)), (1231, tensor(-0.0020, dtype=torch.float64)), (920, tensor(-0.0020, dtype=torch.float64)), (1680, tensor(-0.0020, dtype=torch.float64)), (665, tensor(-0.0020, dtype=torch.float64)), (1971, tensor(-0.0020, dtype=torch.float64)), (1415, tensor(-0.0020, dtype=torch.float64)), (1505, tensor(-0.0019, dtype=torch.float64)), (2311, tensor(-0.0019, dtype=torch.float64)), (673, tensor(-0.0019, dtype=torch.float64)), (737, tensor(-0.0019, dtype=torch.float64)), (869, tensor(-0.0019, dtype=torch.float64)), (1756, tensor(-0.0019, dtype=torch.float64)), (311, tensor(-0.0019, dtype=torch.float64)), (469, tensor(-0.0019, dtype=torch.float64)), (109, tensor(-0.0019, dtype=torch.float64)), (2349, tensor(-0.0019, dtype=torch.float64)), (1162, tensor(-0.0019, dtype=torch.float64)), (678, tensor(-0.0019, dtype=torch.float64)), (1045, tensor(-0.0019, dtype=torch.float64)), (1606, tensor(-0.0019, dtype=torch.float64)), (73, tensor(-0.0019, dtype=torch.float64)), (235, tensor(-0.0019, dtype=torch.float64)), (212, tensor(-0.0018, dtype=torch.float64)), (1871, tensor(-0.0018, dtype=torch.float64)), (262, tensor(-0.0018, dtype=torch.float64)), (2170, tensor(-0.0018, dtype=torch.float64)), (2284, tensor(-0.0018, dtype=torch.float64)), (2160, tensor(-0.0018, dtype=torch.float64)), (2062, tensor(-0.0018, dtype=torch.float64)), (93, tensor(-0.0018, dtype=torch.float64)), (2306, tensor(-0.0017, dtype=torch.float64)), (1969, tensor(-0.0017, dtype=torch.float64)), (630, tensor(-0.0017, dtype=torch.float64)), (1856, tensor(-0.0017, dtype=torch.float64)), (1235, tensor(-0.0017, dtype=torch.float64)), (2149, tensor(-0.0017, dtype=torch.float64)), (1858, tensor(-0.0017, dtype=torch.float64)), (2200, tensor(-0.0017, dtype=torch.float64)), (1935, tensor(-0.0017, dtype=torch.float64)), (396, tensor(-0.0017, dtype=torch.float64)), (569, tensor(-0.0016, dtype=torch.float64)), (407, tensor(-0.0016, dtype=torch.float64)), (186, tensor(-0.0016, dtype=torch.float64)), (157, tensor(-0.0016, dtype=torch.float64)), (442, tensor(-0.0016, dtype=torch.float64)), (306, tensor(-0.0016, dtype=torch.float64)), (1974, tensor(-0.0016, dtype=torch.float64)), (332, tensor(-0.0016, dtype=torch.float64)), (1802, tensor(-0.0016, dtype=torch.float64)), (609, tensor(-0.0016, dtype=torch.float64)), (669, tensor(-0.0016, dtype=torch.float64)), (228, tensor(-0.0015, dtype=torch.float64)), (2287, tensor(-0.0015, dtype=torch.float64)), (1825, tensor(-0.0015, dtype=torch.float64)), (2214, tensor(-0.0015, dtype=torch.float64)), (1540, tensor(-0.0015, dtype=torch.float64)), (1495, tensor(-0.0015, dtype=torch.float64)), (411, tensor(-0.0015, dtype=torch.float64)), (1032, tensor(-0.0015, dtype=torch.float64)), (793, tensor(-0.0015, dtype=torch.float64)), (156, tensor(-0.0015, dtype=torch.float64)), (1419, tensor(-0.0015, dtype=torch.float64)), (1758, tensor(-0.0015, dtype=torch.float64)), (1494, tensor(-0.0014, dtype=torch.float64)), (880, tensor(-0.0014, dtype=torch.float64)), (694, tensor(-0.0014, dtype=torch.float64)), (226, tensor(-0.0014, dtype=torch.float64)), (1824, tensor(-0.0014, dtype=torch.float64)), (1384, tensor(-0.0014, dtype=torch.float64)), (1780, tensor(-0.0014, dtype=torch.float64)), (481, tensor(-0.0014, dtype=torch.float64)), (307, tensor(-0.0014, dtype=torch.float64)), (2291, tensor(-0.0014, dtype=torch.float64)), (210, tensor(-0.0014, dtype=torch.float64)), (1297, tensor(-0.0014, dtype=torch.float64)), (1159, tensor(-0.0014, dtype=torch.float64)), (327, tensor(-0.0014, dtype=torch.float64)), (146, tensor(-0.0014, dtype=torch.float64)), (51, tensor(-0.0014, dtype=torch.float64)), (330, tensor(-0.0014, dtype=torch.float64)), (849, tensor(-0.0014, dtype=torch.float64)), (988, tensor(-0.0014, dtype=torch.float64)), (1695, tensor(-0.0014, dtype=torch.float64)), (200, tensor(-0.0013, dtype=torch.float64)), (1512, tensor(-0.0013, dtype=torch.float64)), (909, tensor(-0.0013, dtype=torch.float64)), (1707, tensor(-0.0013, dtype=torch.float64)), (1108, tensor(-0.0013, dtype=torch.float64)), (1552, tensor(-0.0013, dtype=torch.float64)), (890, tensor(-0.0013, dtype=torch.float64)), (549, tensor(-0.0013, dtype=torch.float64)), (3, tensor(-0.0013, dtype=torch.float64)), (1109, tensor(-0.0013, dtype=torch.float64)), (55, tensor(-0.0012, dtype=torch.float64)), (2329, tensor(-0.0012, dtype=torch.float64)), (317, tensor(-0.0012, dtype=torch.float64)), (2116, tensor(-0.0012, dtype=torch.float64)), (1408, tensor(-0.0012, dtype=torch.float64)), (1510, tensor(-0.0012, dtype=torch.float64)), (2266, tensor(-0.0012, dtype=torch.float64)), (1810, tensor(-0.0012, dtype=torch.float64)), (1682, tensor(-0.0012, dtype=torch.float64)), (269, tensor(-0.0012, dtype=torch.float64)), (1258, tensor(-0.0012, dtype=torch.float64)), (1307, tensor(-0.0012, dtype=torch.float64)), (1020, tensor(-0.0012, dtype=torch.float64)), (2259, tensor(-0.0012, dtype=torch.float64)), (1537, tensor(-0.0012, dtype=torch.float64)), (1169, tensor(-0.0012, dtype=torch.float64)), (1146, tensor(-0.0012, dtype=torch.float64)), (1652, tensor(-0.0012, dtype=torch.float64)), (583, tensor(-0.0012, dtype=torch.float64)), (1452, tensor(-0.0012, dtype=torch.float64)), (851, tensor(-0.0011, dtype=torch.float64)), (1712, tensor(-0.0011, dtype=torch.float64)), (1546, tensor(-0.0011, dtype=torch.float64)), (2285, tensor(-0.0011, dtype=torch.float64)), (2139, tensor(-0.0011, dtype=torch.float64)), (379, tensor(-0.0011, dtype=torch.float64)), (859, tensor(-0.0011, dtype=torch.float64)), (133, tensor(-0.0010, dtype=torch.float64)), (1209, tensor(-0.0010, dtype=torch.float64)), (704, tensor(-0.0010, dtype=torch.float64)), (1631, tensor(-0.0010, dtype=torch.float64)), (2077, tensor(-0.0010, dtype=torch.float64)), (1462, tensor(-0.0010, dtype=torch.float64)), (853, tensor(-0.0010, dtype=torch.float64)), (1502, tensor(-0.0009, dtype=torch.float64)), (71, tensor(-0.0009, dtype=torch.float64)), (725, tensor(-0.0009, dtype=torch.float64)), (1339, tensor(-0.0009, dtype=torch.float64)), (2226, tensor(-0.0009, dtype=torch.float64)), (443, tensor(-0.0009, dtype=torch.float64)), (1915, tensor(-0.0009, dtype=torch.float64)), (398, tensor(-0.0009, dtype=torch.float64)), (2325, tensor(-0.0009, dtype=torch.float64)), (2033, tensor(-0.0009, dtype=torch.float64)), (655, tensor(-0.0009, dtype=torch.float64)), (90, tensor(-0.0009, dtype=torch.float64)), (58, tensor(-0.0009, dtype=torch.float64)), (1365, tensor(-0.0008, dtype=torch.float64)), (1762, tensor(-0.0008, dtype=torch.float64)), (287, tensor(-0.0008, dtype=torch.float64)), (1439, tensor(-0.0008, dtype=torch.float64)), (696, tensor(-0.0008, dtype=torch.float64)), (1828, tensor(-0.0008, dtype=torch.float64)), (1922, tensor(-0.0008, dtype=torch.float64)), (387, tensor(-0.0008, dtype=torch.float64)), (1604, tensor(-0.0008, dtype=torch.float64)), (1838, tensor(-0.0008, dtype=torch.float64)), (1089, tensor(-0.0007, dtype=torch.float64)), (463, tensor(-0.0007, dtype=torch.float64)), (258, tensor(-0.0007, dtype=torch.float64)), (158, tensor(-0.0007, dtype=torch.float64)), (329, tensor(-0.0007, dtype=torch.float64)), (2085, tensor(-0.0007, dtype=torch.float64)), (494, tensor(-0.0007, dtype=torch.float64)), (4, tensor(-0.0007, dtype=torch.float64)), (1861, tensor(-0.0007, dtype=torch.float64)), (2270, tensor(-0.0007, dtype=torch.float64)), (1354, tensor(-0.0007, dtype=torch.float64)), (1149, tensor(-0.0007, dtype=torch.float64)), (1728, tensor(-0.0007, dtype=torch.float64)), (671, tensor(-0.0006, dtype=torch.float64)), (1715, tensor(-0.0006, dtype=torch.float64)), (0, tensor(-0.0006, dtype=torch.float64)), (2163, tensor(-0.0006, dtype=torch.float64)), (1310, tensor(-0.0006, dtype=torch.float64)), (1286, tensor(-0.0006, dtype=torch.float64)), (984, tensor(-0.0006, dtype=torch.float64)), (2106, tensor(-0.0006, dtype=torch.float64)), (125, tensor(-0.0006, dtype=torch.float64)), (1051, tensor(-0.0005, dtype=torch.float64)), (279, tensor(-0.0005, dtype=torch.float64)), (1966, tensor(-0.0005, dtype=torch.float64)), (1890, tensor(-0.0005, dtype=torch.float64)), (1768, tensor(-0.0005, dtype=torch.float64)), (1760, tensor(-0.0005, dtype=torch.float64)), (1737, tensor(-0.0005, dtype=torch.float64)), (1167, tensor(-0.0005, dtype=torch.float64)), (81, tensor(-0.0004, dtype=torch.float64)), (539, tensor(-0.0004, dtype=torch.float64)), (1288, tensor(-0.0004, dtype=torch.float64)), (835, tensor(-0.0004, dtype=torch.float64)), (1393, tensor(-0.0004, dtype=torch.float64)), (2193, tensor(-0.0003, dtype=torch.float64)), (1488, tensor(-0.0003, dtype=torch.float64)), (1757, tensor(-0.0003, dtype=torch.float64)), (264, tensor(-0.0003, dtype=torch.float64)), (1311, tensor(-0.0002, dtype=torch.float64)), (2186, tensor(-0.0002, dtype=torch.float64)), (1742, tensor(-0.0002, dtype=torch.float64)), (303, tensor(-0.0001, dtype=torch.float64))]
annotated_samples_num: 1307
unannotated_samples_num: 2237
update datapool!
annotated_samples_num: 1307
unannotated_samples_num: 2237
iter: 8
annotated_samples_num: 1307
unannotated_samples_num: 2237
Epoch [1/10], Batch [1/163], Loss: 3.3816
Epoch [1/10], Batch [2/163], Loss: 2.8399
Epoch [1/10], Batch [3/163], Loss: 4.0329
Epoch [1/10], Batch [4/163], Loss: 2.2825
Epoch [1/10], Batch [5/163], Loss: 2.4280
Epoch [1/10], Batch [6/163], Loss: 1.6862
Epoch [1/10], Batch [7/163], Loss: 2.2041
Epoch [1/10], Batch [8/163], Loss: 1.6592
Epoch [1/10], Batch [9/163], Loss: 1.2665
Epoch [1/10], Batch [10/163], Loss: 1.2958
Epoch [1/10], Batch [11/163], Loss: 0.7491
Epoch [1/10], Batch [12/163], Loss: 1.0856
Epoch [1/10], Batch [13/163], Loss: 0.8223
Epoch [1/10], Batch [14/163], Loss: 0.6849
Epoch [1/10], Batch [15/163], Loss: 0.7054
Epoch [1/10], Batch [16/163], Loss: 0.5113
Epoch [1/10], Batch [17/163], Loss: 0.6450
Epoch [1/10], Batch [18/163], Loss: 0.5970
Epoch [1/10], Batch [19/163], Loss: 0.5995
Epoch [1/10], Batch [20/163], Loss: 0.5368
Epoch [1/10], Batch [21/163], Loss: 0.4359
Epoch [1/10], Batch [22/163], Loss: 0.5873
Epoch [1/10], Batch [23/163], Loss: 0.4262
Epoch [1/10], Batch [24/163], Loss: 0.6240
Epoch [1/10], Batch [25/163], Loss: 0.2419
Epoch [1/10], Batch [26/163], Loss: 0.6004
Epoch [1/10], Batch [27/163], Loss: 0.7853
Epoch [1/10], Batch [28/163], Loss: 0.5233
Epoch [1/10], Batch [29/163], Loss: 0.7162
Epoch [1/10], Batch [30/163], Loss: 0.4800
Epoch [1/10], Batch [31/163], Loss: 0.4202
Epoch [1/10], Batch [32/163], Loss: 0.6744
Epoch [1/10], Batch [33/163], Loss: 0.3401
Epoch [1/10], Batch [34/163], Loss: 0.6523
Epoch [1/10], Batch [35/163], Loss: 0.4599
Epoch [1/10], Batch [36/163], Loss: 0.4083
Epoch [1/10], Batch [37/163], Loss: 0.4363
Epoch [1/10], Batch [38/163], Loss: 0.9596
Epoch [1/10], Batch [39/163], Loss: 0.4108
Epoch [1/10], Batch [40/163], Loss: 0.3475
Epoch [1/10], Batch [41/163], Loss: 0.1949
Epoch [1/10], Batch [42/163], Loss: 0.4823
Epoch [1/10], Batch [43/163], Loss: 0.3348
Epoch [1/10], Batch [44/163], Loss: 0.3662
Epoch [1/10], Batch [45/163], Loss: 0.4574
Epoch [1/10], Batch [46/163], Loss: 0.4904
Epoch [1/10], Batch [47/163], Loss: 0.7414
Epoch [1/10], Batch [48/163], Loss: 0.4291
Epoch [1/10], Batch [49/163], Loss: 0.5125
Epoch [1/10], Batch [50/163], Loss: 0.5871
Epoch [1/10], Batch [51/163], Loss: 0.3603
Epoch [1/10], Batch [52/163], Loss: 0.2842
Epoch [1/10], Batch [53/163], Loss: 0.3127
Epoch [1/10], Batch [54/163], Loss: 0.2809
Epoch [1/10], Batch [55/163], Loss: 0.5009
Epoch [1/10], Batch [56/163], Loss: 0.6080
Epoch [1/10], Batch [57/163], Loss: 0.4111
Epoch [1/10], Batch [58/163], Loss: 0.2885
Epoch [1/10], Batch [59/163], Loss: 0.5710
Epoch [1/10], Batch [60/163], Loss: 0.3397
Epoch [1/10], Batch [61/163], Loss: 0.2953
Epoch [1/10], Batch [62/163], Loss: 0.6855
Epoch [1/10], Batch [63/163], Loss: 0.1951
Epoch [1/10], Batch [64/163], Loss: 0.3249
Epoch [1/10], Batch [65/163], Loss: 0.3749
Epoch [1/10], Batch [66/163], Loss: 0.4342
Epoch [1/10], Batch [67/163], Loss: 0.2422
Epoch [1/10], Batch [68/163], Loss: 0.4213
Epoch [1/10], Batch [69/163], Loss: 0.3205
Epoch [1/10], Batch [70/163], Loss: 0.3681
Epoch [1/10], Batch [71/163], Loss: 0.3617
Epoch [1/10], Batch [72/163], Loss: 0.4731
Epoch [1/10], Batch [73/163], Loss: 0.5841
Epoch [1/10], Batch [74/163], Loss: 0.3669
Epoch [1/10], Batch [75/163], Loss: 0.5838
Epoch [1/10], Batch [76/163], Loss: 0.2972
Epoch [1/10], Batch [77/163], Loss: 0.4617
Epoch [1/10], Batch [78/163], Loss: 0.5758
Epoch [1/10], Batch [79/163], Loss: 0.3973
Epoch [1/10], Batch [80/163], Loss: 0.3871
Epoch [1/10], Batch [81/163], Loss: 0.1704
Epoch [1/10], Batch [82/163], Loss: 0.3028
Epoch [1/10], Batch [83/163], Loss: 0.5992
Epoch [1/10], Batch [84/163], Loss: 0.4056
Epoch [1/10], Batch [85/163], Loss: 0.2413
Epoch [1/10], Batch [86/163], Loss: 0.5419
Epoch [1/10], Batch [87/163], Loss: 0.2382
Epoch [1/10], Batch [88/163], Loss: 0.5099
Epoch [1/10], Batch [89/163], Loss: 0.3130
Epoch [1/10], Batch [90/163], Loss: 0.3491
Epoch [1/10], Batch [91/163], Loss: 0.3700
Epoch [1/10], Batch [92/163], Loss: 0.2189
Epoch [1/10], Batch [93/163], Loss: 0.2707
Epoch [1/10], Batch [94/163], Loss: 0.2901
Epoch [1/10], Batch [95/163], Loss: 0.4980
Epoch [1/10], Batch [96/163], Loss: 0.2821
Epoch [1/10], Batch [97/163], Loss: 0.3266
Epoch [1/10], Batch [98/163], Loss: 0.2479
Epoch [1/10], Batch [99/163], Loss: 0.4912
Epoch [1/10], Batch [100/163], Loss: 0.5641
Epoch [1/10], Batch [101/163], Loss: 0.5273
Epoch [1/10], Batch [102/163], Loss: 0.3259
Epoch [1/10], Batch [103/163], Loss: 0.6248
Epoch [1/10], Batch [104/163], Loss: 0.2580
Epoch [1/10], Batch [105/163], Loss: 0.3701
Epoch [1/10], Batch [106/163], Loss: 0.6208
Epoch [1/10], Batch [107/163], Loss: 0.4828
Epoch [1/10], Batch [108/163], Loss: 0.3496
Epoch [1/10], Batch [109/163], Loss: 0.4587
Epoch [1/10], Batch [110/163], Loss: 0.4894
Epoch [1/10], Batch [111/163], Loss: 0.2584
Epoch [1/10], Batch [112/163], Loss: 0.3470
Epoch [1/10], Batch [113/163], Loss: 0.4302
Epoch [1/10], Batch [114/163], Loss: 0.2845
Epoch [1/10], Batch [115/163], Loss: 0.4784
Epoch [1/10], Batch [116/163], Loss: 0.4301
Epoch [1/10], Batch [117/163], Loss: 0.1931
Epoch [1/10], Batch [118/163], Loss: 0.2570
Epoch [1/10], Batch [119/163], Loss: 0.3772
Epoch [1/10], Batch [120/163], Loss: 0.2942
Epoch [1/10], Batch [121/163], Loss: 0.2891
Epoch [1/10], Batch [122/163], Loss: 0.3356
Epoch [1/10], Batch [123/163], Loss: 0.4617
Epoch [1/10], Batch [124/163], Loss: 0.5041
Epoch [1/10], Batch [125/163], Loss: 0.4124
Epoch [1/10], Batch [126/163], Loss: 0.2212
Epoch [1/10], Batch [127/163], Loss: 0.3975
Epoch [1/10], Batch [128/163], Loss: 0.6612
Epoch [1/10], Batch [129/163], Loss: 0.3594
Epoch [1/10], Batch [130/163], Loss: 0.4260
Epoch [1/10], Batch [131/163], Loss: 0.3352
Epoch [1/10], Batch [132/163], Loss: 0.2745
Epoch [1/10], Batch [133/163], Loss: 0.4793
Epoch [1/10], Batch [134/163], Loss: 0.2640
Epoch [1/10], Batch [135/163], Loss: 0.4567
Epoch [1/10], Batch [136/163], Loss: 0.5073
Epoch [1/10], Batch [137/163], Loss: 0.2944
Epoch [1/10], Batch [138/163], Loss: 0.2674
Epoch [1/10], Batch [139/163], Loss: 0.2442
Epoch [1/10], Batch [140/163], Loss: 0.3824
Epoch [1/10], Batch [141/163], Loss: 0.1328
Epoch [1/10], Batch [142/163], Loss: 0.4004
Epoch [1/10], Batch [143/163], Loss: 0.3558
Epoch [1/10], Batch [144/163], Loss: 0.2560
Epoch [1/10], Batch [145/163], Loss: 0.2192
Epoch [1/10], Batch [146/163], Loss: 0.5390
Epoch [1/10], Batch [147/163], Loss: 0.4230
Epoch [1/10], Batch [148/163], Loss: 0.2736
Epoch [1/10], Batch [149/163], Loss: 0.2835
Epoch [1/10], Batch [150/163], Loss: 0.2763
Epoch [1/10], Batch [151/163], Loss: 0.2467
Epoch [1/10], Batch [152/163], Loss: 0.3688
Epoch [1/10], Batch [153/163], Loss: 0.4445
Epoch [1/10], Batch [154/163], Loss: 0.2702
Epoch [1/10], Batch [155/163], Loss: 0.2876
Epoch [1/10], Batch [156/163], Loss: 0.3006
Epoch [1/10], Batch [157/163], Loss: 0.4010
Epoch [1/10], Batch [158/163], Loss: 0.1465
Epoch [1/10], Batch [159/163], Loss: 0.3986
Epoch [1/10], Batch [160/163], Loss: 0.3197
Epoch [1/10], Batch [161/163], Loss: 0.3664
Epoch [1/10], Batch [162/163], Loss: 0.6450
Epoch [1/10], Batch [163/163], Loss: 0.3541
Epoch [1/10], Average Loss: 0.5375
-----------------------------------------------------------
strategy: BEAM
iter: 8
epoch: 0
Test Loss: 0.2661
F1_overall: 0.5591
F1_AGENT: 0.7079
F1_TARGET: 0.4102
-----------------------------------------------------------
Epoch [2/10], Batch [1/163], Loss: 0.3100
Epoch [2/10], Batch [2/163], Loss: 0.3196
Epoch [2/10], Batch [3/163], Loss: 0.1951
Epoch [2/10], Batch [4/163], Loss: 0.1880
Epoch [2/10], Batch [5/163], Loss: 0.1355
Epoch [2/10], Batch [6/163], Loss: 0.2641
Epoch [2/10], Batch [7/163], Loss: 0.2436
Epoch [2/10], Batch [8/163], Loss: 0.1344
Epoch [2/10], Batch [9/163], Loss: 0.3247
Epoch [2/10], Batch [10/163], Loss: 0.2366
Epoch [2/10], Batch [11/163], Loss: 0.2213
Epoch [2/10], Batch [12/163], Loss: 0.2046
Epoch [2/10], Batch [13/163], Loss: 0.2041
Epoch [2/10], Batch [14/163], Loss: 0.2329
Epoch [2/10], Batch [15/163], Loss: 0.1665
Epoch [2/10], Batch [16/163], Loss: 0.2813
Epoch [2/10], Batch [17/163], Loss: 0.2208
Epoch [2/10], Batch [18/163], Loss: 0.3295
Epoch [2/10], Batch [19/163], Loss: 0.1836
Epoch [2/10], Batch [20/163], Loss: 0.1516
Epoch [2/10], Batch [21/163], Loss: 0.2617
Epoch [2/10], Batch [22/163], Loss: 0.1653
Epoch [2/10], Batch [23/163], Loss: 0.1858
Epoch [2/10], Batch [24/163], Loss: 0.2997
Epoch [2/10], Batch [25/163], Loss: 0.1897
Epoch [2/10], Batch [26/163], Loss: 0.1688
Epoch [2/10], Batch [27/163], Loss: 0.3412
Epoch [2/10], Batch [28/163], Loss: 0.1640
Epoch [2/10], Batch [29/163], Loss: 0.1737
Epoch [2/10], Batch [30/163], Loss: 0.2486
Epoch [2/10], Batch [31/163], Loss: 0.2519
Epoch [2/10], Batch [32/163], Loss: 0.3529
Epoch [2/10], Batch [33/163], Loss: 0.3317
Epoch [2/10], Batch [34/163], Loss: 0.1216
Epoch [2/10], Batch [35/163], Loss: 0.2682
Epoch [2/10], Batch [36/163], Loss: 0.1489
Epoch [2/10], Batch [37/163], Loss: 0.4050
Epoch [2/10], Batch [38/163], Loss: 0.1274
Epoch [2/10], Batch [39/163], Loss: 0.2894
Epoch [2/10], Batch [40/163], Loss: 0.2645
Epoch [2/10], Batch [41/163], Loss: 0.2458
Epoch [2/10], Batch [42/163], Loss: 0.3212
Epoch [2/10], Batch [43/163], Loss: 0.1071
Epoch [2/10], Batch [44/163], Loss: 0.3219
Epoch [2/10], Batch [45/163], Loss: 0.2240
Epoch [2/10], Batch [46/163], Loss: 0.3190
Epoch [2/10], Batch [47/163], Loss: 0.1541
Epoch [2/10], Batch [48/163], Loss: 0.2107
Epoch [2/10], Batch [49/163], Loss: 0.2985
Epoch [2/10], Batch [50/163], Loss: 0.2399
Epoch [2/10], Batch [51/163], Loss: 0.2986
Epoch [2/10], Batch [52/163], Loss: 0.3230
Epoch [2/10], Batch [53/163], Loss: 0.2073
Epoch [2/10], Batch [54/163], Loss: 0.3013
Epoch [2/10], Batch [55/163], Loss: 0.1286
Epoch [2/10], Batch [56/163], Loss: 0.2527
Epoch [2/10], Batch [57/163], Loss: 0.3231
Epoch [2/10], Batch [58/163], Loss: 0.2573
Epoch [2/10], Batch [59/163], Loss: 0.3971
Epoch [2/10], Batch [60/163], Loss: 0.2836
Epoch [2/10], Batch [61/163], Loss: 0.4193
Epoch [2/10], Batch [62/163], Loss: 0.3391
Epoch [2/10], Batch [63/163], Loss: 0.4171
Epoch [2/10], Batch [64/163], Loss: 0.2755
Epoch [2/10], Batch [65/163], Loss: 0.3090
Epoch [2/10], Batch [66/163], Loss: 0.1633
Epoch [2/10], Batch [67/163], Loss: 0.2889
Epoch [2/10], Batch [68/163], Loss: 0.1912
Epoch [2/10], Batch [69/163], Loss: 0.2841
Epoch [2/10], Batch [70/163], Loss: 0.1641
Epoch [2/10], Batch [71/163], Loss: 0.2538
Epoch [2/10], Batch [72/163], Loss: 0.1650
Epoch [2/10], Batch [73/163], Loss: 0.2982
Epoch [2/10], Batch [74/163], Loss: 0.2404
Epoch [2/10], Batch [75/163], Loss: 0.2704
Epoch [2/10], Batch [76/163], Loss: 0.3848
Epoch [2/10], Batch [77/163], Loss: 0.3817
Epoch [2/10], Batch [78/163], Loss: 0.3513
Epoch [2/10], Batch [79/163], Loss: 0.2164
Epoch [2/10], Batch [80/163], Loss: 0.2720
Epoch [2/10], Batch [81/163], Loss: 0.2297
Epoch [2/10], Batch [82/163], Loss: 0.1662
Epoch [2/10], Batch [83/163], Loss: 0.3779
Epoch [2/10], Batch [84/163], Loss: 0.1888
Epoch [2/10], Batch [85/163], Loss: 0.1922
Epoch [2/10], Batch [86/163], Loss: 0.1622
Epoch [2/10], Batch [87/163], Loss: 0.2813
Epoch [2/10], Batch [88/163], Loss: 0.2687
Epoch [2/10], Batch [89/163], Loss: 0.1949
Epoch [2/10], Batch [90/163], Loss: 0.4818
Epoch [2/10], Batch [91/163], Loss: 0.2739
Epoch [2/10], Batch [92/163], Loss: 0.1683
Epoch [2/10], Batch [93/163], Loss: 0.3655
Epoch [2/10], Batch [94/163], Loss: 0.2153
Epoch [2/10], Batch [95/163], Loss: 0.3148
Epoch [2/10], Batch [96/163], Loss: 0.3088
Epoch [2/10], Batch [97/163], Loss: 0.3019
Epoch [2/10], Batch [98/163], Loss: 0.3576
Epoch [2/10], Batch [99/163], Loss: 0.2462
Epoch [2/10], Batch [100/163], Loss: 0.1963
Epoch [2/10], Batch [101/163], Loss: 0.1968
Epoch [2/10], Batch [102/163], Loss: 0.3851
Epoch [2/10], Batch [103/163], Loss: 0.3488
Epoch [2/10], Batch [104/163], Loss: 0.6990
Epoch [2/10], Batch [105/163], Loss: 0.2109
Epoch [2/10], Batch [106/163], Loss: 0.1957
Epoch [2/10], Batch [107/163], Loss: 0.1677
Epoch [2/10], Batch [108/163], Loss: 0.2581
Epoch [2/10], Batch [109/163], Loss: 0.2334
Epoch [2/10], Batch [110/163], Loss: 0.2954
Epoch [2/10], Batch [111/163], Loss: 0.3289
Epoch [2/10], Batch [112/163], Loss: 0.2423
Epoch [2/10], Batch [113/163], Loss: 0.4840
Epoch [2/10], Batch [114/163], Loss: 0.1978
Epoch [2/10], Batch [115/163], Loss: 0.2463
Epoch [2/10], Batch [116/163], Loss: 0.4158
Epoch [2/10], Batch [117/163], Loss: 0.2857
Epoch [2/10], Batch [118/163], Loss: 0.2311
Epoch [2/10], Batch [119/163], Loss: 0.1340
Epoch [2/10], Batch [120/163], Loss: 0.3032
Epoch [2/10], Batch [121/163], Loss: 0.3273
Epoch [2/10], Batch [122/163], Loss: 0.3194
Epoch [2/10], Batch [123/163], Loss: 0.2780
Epoch [2/10], Batch [124/163], Loss: 0.2955
Epoch [2/10], Batch [125/163], Loss: 0.2519
Epoch [2/10], Batch [126/163], Loss: 0.1615
Epoch [2/10], Batch [127/163], Loss: 0.2173
Epoch [2/10], Batch [128/163], Loss: 0.3575
Epoch [2/10], Batch [129/163], Loss: 0.3861
Epoch [2/10], Batch [130/163], Loss: 0.2717
Epoch [2/10], Batch [131/163], Loss: 0.4538
Epoch [2/10], Batch [132/163], Loss: 0.2102
Epoch [2/10], Batch [133/163], Loss: 0.1821
Epoch [2/10], Batch [134/163], Loss: 0.1953
Epoch [2/10], Batch [135/163], Loss: 0.4254
Epoch [2/10], Batch [136/163], Loss: 0.2259
Epoch [2/10], Batch [137/163], Loss: 0.2369
Epoch [2/10], Batch [138/163], Loss: 0.2404
Epoch [2/10], Batch [139/163], Loss: 0.2524
Epoch [2/10], Batch [140/163], Loss: 0.2584
Epoch [2/10], Batch [141/163], Loss: 0.2262
Epoch [2/10], Batch [142/163], Loss: 0.3474
Epoch [2/10], Batch [143/163], Loss: 0.2698
Epoch [2/10], Batch [144/163], Loss: 0.1648
Epoch [2/10], Batch [145/163], Loss: 0.3775
Epoch [2/10], Batch [146/163], Loss: 0.1409
Epoch [2/10], Batch [147/163], Loss: 0.2740
Epoch [2/10], Batch [148/163], Loss: 0.1787
Epoch [2/10], Batch [149/163], Loss: 0.2566
Epoch [2/10], Batch [150/163], Loss: 0.1168
Epoch [2/10], Batch [151/163], Loss: 0.3568
Epoch [2/10], Batch [152/163], Loss: 0.3244
Epoch [2/10], Batch [153/163], Loss: 0.2341
Epoch [2/10], Batch [154/163], Loss: 0.2696
Epoch [2/10], Batch [155/163], Loss: 0.2533
Epoch [2/10], Batch [156/163], Loss: 0.2912
Epoch [2/10], Batch [157/163], Loss: 0.2745
Epoch [2/10], Batch [158/163], Loss: 0.2696
Epoch [2/10], Batch [159/163], Loss: 0.2244
Epoch [2/10], Batch [160/163], Loss: 0.2351
Epoch [2/10], Batch [161/163], Loss: 0.3298
Epoch [2/10], Batch [162/163], Loss: 0.4275
Epoch [2/10], Batch [163/163], Loss: 0.1172
Epoch [2/10], Average Loss: 0.2630
-----------------------------------------------------------
strategy: BEAM
iter: 8
epoch: 1
Test Loss: 0.2771
F1_overall: 0.5712
F1_AGENT: 0.7101
F1_TARGET: 0.4221
-----------------------------------------------------------
Epoch [3/10], Batch [1/163], Loss: 0.1668
Epoch [3/10], Batch [2/163], Loss: 0.0877
Epoch [3/10], Batch [3/163], Loss: 0.1930
Epoch [3/10], Batch [4/163], Loss: 0.6752
Epoch [3/10], Batch [5/163], Loss: 0.1909
Epoch [3/10], Batch [6/163], Loss: 0.1554
Epoch [3/10], Batch [7/163], Loss: 0.1379
Epoch [3/10], Batch [8/163], Loss: 0.1699
Epoch [3/10], Batch [9/163], Loss: 0.2373
Epoch [3/10], Batch [10/163], Loss: 0.1488
Epoch [3/10], Batch [11/163], Loss: 0.1703
Epoch [3/10], Batch [12/163], Loss: 0.1671
Epoch [3/10], Batch [13/163], Loss: 0.4375
Epoch [3/10], Batch [14/163], Loss: 0.3189
Epoch [3/10], Batch [15/163], Loss: 0.2530
Epoch [3/10], Batch [16/163], Loss: 0.2280
Epoch [3/10], Batch [17/163], Loss: 0.2360
Epoch [3/10], Batch [18/163], Loss: 0.1528
Epoch [3/10], Batch [19/163], Loss: 0.2703
Epoch [3/10], Batch [20/163], Loss: 0.1914
Epoch [3/10], Batch [21/163], Loss: 0.2195
Epoch [3/10], Batch [22/163], Loss: 0.1849
Epoch [3/10], Batch [23/163], Loss: 0.1379
Epoch [3/10], Batch [24/163], Loss: 0.1601
Epoch [3/10], Batch [25/163], Loss: 0.2235
Epoch [3/10], Batch [26/163], Loss: 0.3737
Epoch [3/10], Batch [27/163], Loss: 0.6532
Epoch [3/10], Batch [28/163], Loss: 0.2528
Epoch [3/10], Batch [29/163], Loss: 0.3250
Epoch [3/10], Batch [30/163], Loss: 0.2889
Epoch [3/10], Batch [31/163], Loss: 0.1522
Epoch [3/10], Batch [32/163], Loss: 0.1910
Epoch [3/10], Batch [33/163], Loss: 0.1398
Epoch [3/10], Batch [34/163], Loss: 0.2423
Epoch [3/10], Batch [35/163], Loss: 0.1604
Epoch [3/10], Batch [36/163], Loss: 0.2516
Epoch [3/10], Batch [37/163], Loss: 0.4459
Epoch [3/10], Batch [38/163], Loss: 0.2840
Epoch [3/10], Batch [39/163], Loss: 0.3622
Epoch [3/10], Batch [40/163], Loss: 0.5620
Epoch [3/10], Batch [41/163], Loss: 0.5827
Epoch [3/10], Batch [42/163], Loss: 0.1534
Epoch [3/10], Batch [43/163], Loss: 0.4141
Epoch [3/10], Batch [44/163], Loss: 0.4144
Epoch [3/10], Batch [45/163], Loss: 0.1293
Epoch [3/10], Batch [46/163], Loss: 0.1954
Epoch [3/10], Batch [47/163], Loss: 0.4355
Epoch [3/10], Batch [48/163], Loss: 0.1688
Epoch [3/10], Batch [49/163], Loss: 0.2411
Epoch [3/10], Batch [50/163], Loss: 0.2940
Epoch [3/10], Batch [51/163], Loss: 0.2365
Epoch [3/10], Batch [52/163], Loss: 0.2298
Epoch [3/10], Batch [53/163], Loss: 0.2430
Epoch [3/10], Batch [54/163], Loss: 0.7049
Epoch [3/10], Batch [55/163], Loss: 0.2545
Epoch [3/10], Batch [56/163], Loss: 0.2211
Epoch [3/10], Batch [57/163], Loss: 0.5125
Epoch [3/10], Batch [58/163], Loss: 0.2269
Epoch [3/10], Batch [59/163], Loss: 0.2867
Epoch [3/10], Batch [60/163], Loss: 0.5212
Epoch [3/10], Batch [61/163], Loss: 0.3931
Epoch [3/10], Batch [62/163], Loss: 0.2762
Epoch [3/10], Batch [63/163], Loss: 0.6014
Epoch [3/10], Batch [64/163], Loss: 0.2232
Epoch [3/10], Batch [65/163], Loss: 0.4109
Epoch [3/10], Batch [66/163], Loss: 0.3128
Epoch [3/10], Batch [67/163], Loss: 0.4066
Epoch [3/10], Batch [68/163], Loss: 0.4683
Epoch [3/10], Batch [69/163], Loss: 0.6112
Epoch [3/10], Batch [70/163], Loss: 0.3552
Epoch [3/10], Batch [71/163], Loss: 0.2242
Epoch [3/10], Batch [72/163], Loss: 0.3243
Epoch [3/10], Batch [73/163], Loss: 0.1584
Epoch [3/10], Batch [74/163], Loss: 0.2751
Epoch [3/10], Batch [75/163], Loss: 0.2447
Epoch [3/10], Batch [76/163], Loss: 0.2058
Epoch [3/10], Batch [77/163], Loss: 0.3637
Epoch [3/10], Batch [78/163], Loss: 0.3812
Epoch [3/10], Batch [79/163], Loss: 0.1884
Epoch [3/10], Batch [80/163], Loss: 0.2044
Epoch [3/10], Batch [81/163], Loss: 0.4596
Epoch [3/10], Batch [82/163], Loss: 0.1544
Epoch [3/10], Batch [83/163], Loss: 0.3553
Epoch [3/10], Batch [84/163], Loss: 0.1752
Epoch [3/10], Batch [85/163], Loss: 0.2107
Epoch [3/10], Batch [86/163], Loss: 0.1146
Epoch [3/10], Batch [87/163], Loss: 0.1356
Epoch [3/10], Batch [88/163], Loss: 0.4162
Epoch [3/10], Batch [89/163], Loss: 0.2440
Epoch [3/10], Batch [90/163], Loss: 0.3286
Epoch [3/10], Batch [91/163], Loss: 0.3372
Epoch [3/10], Batch [92/163], Loss: 0.0902
Epoch [3/10], Batch [93/163], Loss: 0.1286
Epoch [3/10], Batch [94/163], Loss: 0.3388
Epoch [3/10], Batch [95/163], Loss: 0.2274
Epoch [3/10], Batch [96/163], Loss: 0.2806
Epoch [3/10], Batch [97/163], Loss: 0.3068
Epoch [3/10], Batch [98/163], Loss: 0.3094
Epoch [3/10], Batch [99/163], Loss: 0.5438
Epoch [3/10], Batch [100/163], Loss: 0.1043
Epoch [3/10], Batch [101/163], Loss: 0.1509
Epoch [3/10], Batch [102/163], Loss: 0.2521
Epoch [3/10], Batch [103/163], Loss: 0.2788
Epoch [3/10], Batch [104/163], Loss: 0.3539
Epoch [3/10], Batch [105/163], Loss: 0.2306
Epoch [3/10], Batch [106/163], Loss: 0.2124
Epoch [3/10], Batch [107/163], Loss: 0.2708
Epoch [3/10], Batch [108/163], Loss: 0.2426
Epoch [3/10], Batch [109/163], Loss: 0.2217
Epoch [3/10], Batch [110/163], Loss: 0.2202
Epoch [3/10], Batch [111/163], Loss: 0.3807
Epoch [3/10], Batch [112/163], Loss: 0.0868
Epoch [3/10], Batch [113/163], Loss: 0.1141
Epoch [3/10], Batch [114/163], Loss: 0.1557
Epoch [3/10], Batch [115/163], Loss: 0.3453
Epoch [3/10], Batch [116/163], Loss: 0.2782
Epoch [3/10], Batch [117/163], Loss: 0.3766
Epoch [3/10], Batch [118/163], Loss: 0.3523
Epoch [3/10], Batch [119/163], Loss: 0.2644
Epoch [3/10], Batch [120/163], Loss: 0.0675
Epoch [3/10], Batch [121/163], Loss: 0.3448
Epoch [3/10], Batch [122/163], Loss: 0.1363
Epoch [3/10], Batch [123/163], Loss: 0.1282
Epoch [3/10], Batch [124/163], Loss: 0.2511
Epoch [3/10], Batch [125/163], Loss: 0.3010
Epoch [3/10], Batch [126/163], Loss: 0.3184
Epoch [3/10], Batch [127/163], Loss: 0.3468
Epoch [3/10], Batch [128/163], Loss: 0.6194
Epoch [3/10], Batch [129/163], Loss: 0.5280
Epoch [3/10], Batch [130/163], Loss: 0.2027
Epoch [3/10], Batch [131/163], Loss: 0.1287
Epoch [3/10], Batch [132/163], Loss: 0.2127
Epoch [3/10], Batch [133/163], Loss: 0.2385
Epoch [3/10], Batch [134/163], Loss: 0.1991
Epoch [3/10], Batch [135/163], Loss: 0.3086
Epoch [3/10], Batch [136/163], Loss: 0.2574
Epoch [3/10], Batch [137/163], Loss: 0.4908
Epoch [3/10], Batch [138/163], Loss: 0.2487
Epoch [3/10], Batch [139/163], Loss: 0.2861
Epoch [3/10], Batch [140/163], Loss: 0.3049
Epoch [3/10], Batch [141/163], Loss: 0.1992
Epoch [3/10], Batch [142/163], Loss: 0.3170
Epoch [3/10], Batch [143/163], Loss: 0.2075
Epoch [3/10], Batch [144/163], Loss: 0.2710
Epoch [3/10], Batch [145/163], Loss: 0.3571
Epoch [3/10], Batch [146/163], Loss: 0.1325
Epoch [3/10], Batch [147/163], Loss: 0.1421
Epoch [3/10], Batch [148/163], Loss: 0.2143
Epoch [3/10], Batch [149/163], Loss: 0.0933
Epoch [3/10], Batch [150/163], Loss: 0.2101
Epoch [3/10], Batch [151/163], Loss: 0.3120
Epoch [3/10], Batch [152/163], Loss: 0.1372
Epoch [3/10], Batch [153/163], Loss: 0.1381
Epoch [3/10], Batch [154/163], Loss: 0.3269
Epoch [3/10], Batch [155/163], Loss: 0.0984
Epoch [3/10], Batch [156/163], Loss: 0.2107
Epoch [3/10], Batch [157/163], Loss: 0.2024
Epoch [3/10], Batch [158/163], Loss: 0.2225
Epoch [3/10], Batch [159/163], Loss: 0.1528
Epoch [3/10], Batch [160/163], Loss: 0.1394
Epoch [3/10], Batch [161/163], Loss: 0.1783
Epoch [3/10], Batch [162/163], Loss: 0.1729
Epoch [3/10], Batch [163/163], Loss: 0.1277
Epoch [3/10], Average Loss: 0.2689
-----------------------------------------------------------
strategy: BEAM
iter: 8
epoch: 2
Test Loss: 0.3103
F1_overall: 0.5549
F1_AGENT: 0.6982
F1_TARGET: 0.4082
-----------------------------------------------------------
Epoch [4/10], Batch [1/163], Loss: 0.1500
Epoch [4/10], Batch [2/163], Loss: 0.1590
Epoch [4/10], Batch [3/163], Loss: 0.2289
Epoch [4/10], Batch [4/163], Loss: 0.3377
Epoch [4/10], Batch [5/163], Loss: 0.0767
Epoch [4/10], Batch [6/163], Loss: 0.1401
Epoch [4/10], Batch [7/163], Loss: 0.1532
Epoch [4/10], Batch [8/163], Loss: 0.0698
Epoch [4/10], Batch [9/163], Loss: 0.1263
Epoch [4/10], Batch [10/163], Loss: 0.0990
Epoch [4/10], Batch [11/163], Loss: 0.1568
Epoch [4/10], Batch [12/163], Loss: 0.2048
Epoch [4/10], Batch [13/163], Loss: 0.0688
Epoch [4/10], Batch [14/163], Loss: 0.1704
Epoch [4/10], Batch [15/163], Loss: 0.1684
Epoch [4/10], Batch [16/163], Loss: 0.1503
Epoch [4/10], Batch [17/163], Loss: 0.1299
Epoch [4/10], Batch [18/163], Loss: 0.1448
Epoch [4/10], Batch [19/163], Loss: 0.1414
Epoch [4/10], Batch [20/163], Loss: 0.1207
Epoch [4/10], Batch [21/163], Loss: 0.1189
Epoch [4/10], Batch [22/163], Loss: 0.1384
Epoch [4/10], Batch [23/163], Loss: 0.1036
Epoch [4/10], Batch [24/163], Loss: 0.1242
Epoch [4/10], Batch [25/163], Loss: 0.1169
Epoch [4/10], Batch [26/163], Loss: 0.0705
Epoch [4/10], Batch [27/163], Loss: 0.1168
Epoch [4/10], Batch [28/163], Loss: 0.2175
Epoch [4/10], Batch [29/163], Loss: 0.1769
Epoch [4/10], Batch [30/163], Loss: 0.1095
Epoch [4/10], Batch [31/163], Loss: 0.1746
Epoch [4/10], Batch [32/163], Loss: 0.3157
Epoch [4/10], Batch [33/163], Loss: 0.1960
Epoch [4/10], Batch [34/163], Loss: 0.2564
Epoch [4/10], Batch [35/163], Loss: 0.1491
Epoch [4/10], Batch [36/163], Loss: 0.1445
Epoch [4/10], Batch [37/163], Loss: 0.1044
Epoch [4/10], Batch [38/163], Loss: 0.2348
Epoch [4/10], Batch [39/163], Loss: 0.2138
Epoch [4/10], Batch [40/163], Loss: 0.2048
Epoch [4/10], Batch [41/163], Loss: 0.1614
Epoch [4/10], Batch [42/163], Loss: 0.1771
Epoch [4/10], Batch [43/163], Loss: 0.1981
Epoch [4/10], Batch [44/163], Loss: 0.1662
Epoch [4/10], Batch [45/163], Loss: 0.1570
Epoch [4/10], Batch [46/163], Loss: 0.1044
Epoch [4/10], Batch [47/163], Loss: 0.0816
Epoch [4/10], Batch [48/163], Loss: 0.2637
Epoch [4/10], Batch [49/163], Loss: 0.1752
Epoch [4/10], Batch [50/163], Loss: 0.0704
Epoch [4/10], Batch [51/163], Loss: 0.2192
Epoch [4/10], Batch [52/163], Loss: 0.1013
Epoch [4/10], Batch [53/163], Loss: 0.2067
Epoch [4/10], Batch [54/163], Loss: 0.2015
Epoch [4/10], Batch [55/163], Loss: 0.2004
Epoch [4/10], Batch [56/163], Loss: 0.0793
Epoch [4/10], Batch [57/163], Loss: 0.2141
Epoch [4/10], Batch [58/163], Loss: 0.0672
Epoch [4/10], Batch [59/163], Loss: 0.1311
Epoch [4/10], Batch [60/163], Loss: 0.0604
Epoch [4/10], Batch [61/163], Loss: 0.1340
Epoch [4/10], Batch [62/163], Loss: 0.1630
Epoch [4/10], Batch [63/163], Loss: 0.1269
Epoch [4/10], Batch [64/163], Loss: 0.1602
Epoch [4/10], Batch [65/163], Loss: 0.1595
Epoch [4/10], Batch [66/163], Loss: 0.1633
Epoch [4/10], Batch [67/163], Loss: 0.1087
Epoch [4/10], Batch [68/163], Loss: 0.1621
Epoch [4/10], Batch [69/163], Loss: 0.1834
Epoch [4/10], Batch [70/163], Loss: 0.0776
Epoch [4/10], Batch [71/163], Loss: 0.0805
Epoch [4/10], Batch [72/163], Loss: 0.1630
Epoch [4/10], Batch [73/163], Loss: 0.0911
Epoch [4/10], Batch [74/163], Loss: 0.1910
Epoch [4/10], Batch [75/163], Loss: 0.2577
Epoch [4/10], Batch [76/163], Loss: 0.1538
Epoch [4/10], Batch [77/163], Loss: 0.1926
Epoch [4/10], Batch [78/163], Loss: 0.2287
Epoch [4/10], Batch [79/163], Loss: 0.0661
Epoch [4/10], Batch [80/163], Loss: 0.1734
Epoch [4/10], Batch [81/163], Loss: 0.2032
Epoch [4/10], Batch [82/163], Loss: 0.1364
Epoch [4/10], Batch [83/163], Loss: 0.1020
Epoch [4/10], Batch [84/163], Loss: 0.2655
Epoch [4/10], Batch [85/163], Loss: 0.3048
Epoch [4/10], Batch [86/163], Loss: 0.0972
Epoch [4/10], Batch [87/163], Loss: 0.1551
Epoch [4/10], Batch [88/163], Loss: 0.2036
Epoch [4/10], Batch [89/163], Loss: 0.0942
Epoch [4/10], Batch [90/163], Loss: 0.2417
Epoch [4/10], Batch [91/163], Loss: 0.1247
Epoch [4/10], Batch [92/163], Loss: 0.2376
Epoch [4/10], Batch [93/163], Loss: 0.1685
Epoch [4/10], Batch [94/163], Loss: 0.2341
Epoch [4/10], Batch [95/163], Loss: 0.0819
Epoch [4/10], Batch [96/163], Loss: 0.1705
Epoch [4/10], Batch [97/163], Loss: 0.1518
Epoch [4/10], Batch [98/163], Loss: 0.1353
Epoch [4/10], Batch [99/163], Loss: 0.1791
Epoch [4/10], Batch [100/163], Loss: 0.1676
Epoch [4/10], Batch [101/163], Loss: 0.0851
Epoch [4/10], Batch [102/163], Loss: 0.2470
Epoch [4/10], Batch [103/163], Loss: 0.2255
Epoch [4/10], Batch [104/163], Loss: 0.0881
Epoch [4/10], Batch [105/163], Loss: 0.1728
Epoch [4/10], Batch [106/163], Loss: 0.2669
Epoch [4/10], Batch [107/163], Loss: 0.0637
Epoch [4/10], Batch [108/163], Loss: 0.1387
Epoch [4/10], Batch [109/163], Loss: 0.0641
Epoch [4/10], Batch [110/163], Loss: 0.1329
Epoch [4/10], Batch [111/163], Loss: 0.1519
Epoch [4/10], Batch [112/163], Loss: 0.1833
Epoch [4/10], Batch [113/163], Loss: 0.1394
Epoch [4/10], Batch [114/163], Loss: 0.2853
Epoch [4/10], Batch [115/163], Loss: 0.1293
Epoch [4/10], Batch [116/163], Loss: 0.0884
Epoch [4/10], Batch [117/163], Loss: 0.1455
Epoch [4/10], Batch [118/163], Loss: 0.1867
Epoch [4/10], Batch [119/163], Loss: 0.1666
Epoch [4/10], Batch [120/163], Loss: 0.1353
Epoch [4/10], Batch [121/163], Loss: 0.2205
Epoch [4/10], Batch [122/163], Loss: 0.1017
Epoch [4/10], Batch [123/163], Loss: 0.1687
Epoch [4/10], Batch [124/163], Loss: 0.1498
Epoch [4/10], Batch [125/163], Loss: 0.1158
Epoch [4/10], Batch [126/163], Loss: 0.3332
Epoch [4/10], Batch [127/163], Loss: 0.1513
Epoch [4/10], Batch [128/163], Loss: 0.1171
Epoch [4/10], Batch [129/163], Loss: 0.0870
Epoch [4/10], Batch [130/163], Loss: 0.2288
Epoch [4/10], Batch [131/163], Loss: 0.1040
Epoch [4/10], Batch [132/163], Loss: 0.1307
Epoch [4/10], Batch [133/163], Loss: 0.1122
Epoch [4/10], Batch [134/163], Loss: 0.0507
Epoch [4/10], Batch [135/163], Loss: 0.1435
Epoch [4/10], Batch [136/163], Loss: 0.1509
Epoch [4/10], Batch [137/163], Loss: 0.1032
Epoch [4/10], Batch [138/163], Loss: 0.3340
Epoch [4/10], Batch [139/163], Loss: 0.1083
Epoch [4/10], Batch [140/163], Loss: 0.2083
Epoch [4/10], Batch [141/163], Loss: 0.2815
Epoch [4/10], Batch [142/163], Loss: 0.1667
Epoch [4/10], Batch [143/163], Loss: 0.0655
Epoch [4/10], Batch [144/163], Loss: 0.0973
Epoch [4/10], Batch [145/163], Loss: 0.2179
Epoch [4/10], Batch [146/163], Loss: 0.2583
Epoch [4/10], Batch [147/163], Loss: 0.0743
Epoch [4/10], Batch [148/163], Loss: 0.1600
Epoch [4/10], Batch [149/163], Loss: 0.1360
Epoch [4/10], Batch [150/163], Loss: 0.1955
Epoch [4/10], Batch [151/163], Loss: 0.3058
Epoch [4/10], Batch [152/163], Loss: 0.2360
Epoch [4/10], Batch [153/163], Loss: 0.2209
Epoch [4/10], Batch [154/163], Loss: 0.1542
Epoch [4/10], Batch [155/163], Loss: 0.1646
Epoch [4/10], Batch [156/163], Loss: 0.1202
Epoch [4/10], Batch [157/163], Loss: 0.1181
Epoch [4/10], Batch [158/163], Loss: 0.1570
Epoch [4/10], Batch [159/163], Loss: 0.1581
Epoch [4/10], Batch [160/163], Loss: 0.1448
Epoch [4/10], Batch [161/163], Loss: 0.1549
Epoch [4/10], Batch [162/163], Loss: 0.3030
Epoch [4/10], Batch [163/163], Loss: 0.0756
Epoch [4/10], Average Loss: 0.1595
-----------------------------------------------------------
strategy: BEAM
iter: 8
epoch: 3
Test Loss: 0.3024
F1_overall: 0.5695
F1_AGENT: 0.7282
F1_TARGET: 0.4023
-----------------------------------------------------------
Epoch [5/10], Batch [1/163], Loss: 0.0846
Epoch [5/10], Batch [2/163], Loss: 0.2403
Epoch [5/10], Batch [3/163], Loss: 0.0572
Epoch [5/10], Batch [4/163], Loss: 0.2924
Epoch [5/10], Batch [5/163], Loss: 0.1018
Epoch [5/10], Batch [6/163], Loss: 0.1069
Epoch [5/10], Batch [7/163], Loss: 0.1171
Epoch [5/10], Batch [8/163], Loss: 0.0742
Epoch [5/10], Batch [9/163], Loss: 0.0580
Epoch [5/10], Batch [10/163], Loss: 0.0705
Epoch [5/10], Batch [11/163], Loss: 0.2213
Epoch [5/10], Batch [12/163], Loss: 0.0658
Epoch [5/10], Batch [13/163], Loss: 0.1226
Epoch [5/10], Batch [14/163], Loss: 0.0455
Epoch [5/10], Batch [15/163], Loss: 0.1689
Epoch [5/10], Batch [16/163], Loss: 0.1458
Epoch [5/10], Batch [17/163], Loss: 0.0662
Epoch [5/10], Batch [18/163], Loss: 0.1864
Epoch [5/10], Batch [19/163], Loss: 0.0740
Epoch [5/10], Batch [20/163], Loss: 0.2570
Epoch [5/10], Batch [21/163], Loss: 0.0941
Epoch [5/10], Batch [22/163], Loss: 0.1139
Epoch [5/10], Batch [23/163], Loss: 0.0580
Epoch [5/10], Batch [24/163], Loss: 0.0917
Epoch [5/10], Batch [25/163], Loss: 0.0492
Epoch [5/10], Batch [26/163], Loss: 0.1619
Epoch [5/10], Batch [27/163], Loss: 0.1236
Epoch [5/10], Batch [28/163], Loss: 0.0772
Epoch [5/10], Batch [29/163], Loss: 0.0995
Epoch [5/10], Batch [30/163], Loss: 0.1928
Epoch [5/10], Batch [31/163], Loss: 0.0306
Epoch [5/10], Batch [32/163], Loss: 0.0891
Epoch [5/10], Batch [33/163], Loss: 0.1060
Epoch [5/10], Batch [34/163], Loss: 0.2077
Epoch [5/10], Batch [35/163], Loss: 0.0721
Epoch [5/10], Batch [36/163], Loss: 0.0698
Epoch [5/10], Batch [37/163], Loss: 0.2245
Epoch [5/10], Batch [38/163], Loss: 0.0346
Epoch [5/10], Batch [39/163], Loss: 0.1035
Epoch [5/10], Batch [40/163], Loss: 0.0236
Epoch [5/10], Batch [41/163], Loss: 0.1410
Epoch [5/10], Batch [42/163], Loss: 0.1243
Epoch [5/10], Batch [43/163], Loss: 0.1654
Epoch [5/10], Batch [44/163], Loss: 0.0844
Epoch [5/10], Batch [45/163], Loss: 0.1695
Epoch [5/10], Batch [46/163], Loss: 0.2617
Epoch [5/10], Batch [47/163], Loss: 0.1067
Epoch [5/10], Batch [48/163], Loss: 0.1019
Epoch [5/10], Batch [49/163], Loss: 0.1065
Epoch [5/10], Batch [50/163], Loss: 0.0556
Epoch [5/10], Batch [51/163], Loss: 0.1206
Epoch [5/10], Batch [52/163], Loss: 0.1052
Epoch [5/10], Batch [53/163], Loss: 0.0664
Epoch [5/10], Batch [54/163], Loss: 0.0650
Epoch [5/10], Batch [55/163], Loss: 0.0506
Epoch [5/10], Batch [56/163], Loss: 0.0803
Epoch [5/10], Batch [57/163], Loss: 0.0345
Epoch [5/10], Batch [58/163], Loss: 0.0877
Epoch [5/10], Batch [59/163], Loss: 0.0397
Epoch [5/10], Batch [60/163], Loss: 0.1614
Epoch [5/10], Batch [61/163], Loss: 0.1279
Epoch [5/10], Batch [62/163], Loss: 0.1127
Epoch [5/10], Batch [63/163], Loss: 0.2347
Epoch [5/10], Batch [64/163], Loss: 0.1868
Epoch [5/10], Batch [65/163], Loss: 0.2359
Epoch [5/10], Batch [66/163], Loss: 0.1198
Epoch [5/10], Batch [67/163], Loss: 0.2063
Epoch [5/10], Batch [68/163], Loss: 0.0895
Epoch [5/10], Batch [69/163], Loss: 0.1894
Epoch [5/10], Batch [70/163], Loss: 0.0806
Epoch [5/10], Batch [71/163], Loss: 0.1167
Epoch [5/10], Batch [72/163], Loss: 0.1175
Epoch [5/10], Batch [73/163], Loss: 0.1149
Epoch [5/10], Batch [74/163], Loss: 0.0802
Epoch [5/10], Batch [75/163], Loss: 0.1165
Epoch [5/10], Batch [76/163], Loss: 0.1423
Epoch [5/10], Batch [77/163], Loss: 0.1736
Epoch [5/10], Batch [78/163], Loss: 0.2446
Epoch [5/10], Batch [79/163], Loss: 0.0607
Epoch [5/10], Batch [80/163], Loss: 0.0965
Epoch [5/10], Batch [81/163], Loss: 0.1375
Epoch [5/10], Batch [82/163], Loss: 0.1955
Epoch [5/10], Batch [83/163], Loss: 0.2366
Epoch [5/10], Batch [84/163], Loss: 0.1931
Epoch [5/10], Batch [85/163], Loss: 0.0894
Epoch [5/10], Batch [86/163], Loss: 0.1885
Epoch [5/10], Batch [87/163], Loss: 0.2725
Epoch [5/10], Batch [88/163], Loss: 0.1616
Epoch [5/10], Batch [89/163], Loss: 0.1882
Epoch [5/10], Batch [90/163], Loss: 0.0695
Epoch [5/10], Batch [91/163], Loss: 0.1410
Epoch [5/10], Batch [92/163], Loss: 0.0695
Epoch [5/10], Batch [93/163], Loss: 0.0883
Epoch [5/10], Batch [94/163], Loss: 0.0977
Epoch [5/10], Batch [95/163], Loss: 0.1685
Epoch [5/10], Batch [96/163], Loss: 0.1601
Epoch [5/10], Batch [97/163], Loss: 0.1351
Epoch [5/10], Batch [98/163], Loss: 0.0980
Epoch [5/10], Batch [99/163], Loss: 0.0750
Epoch [5/10], Batch [100/163], Loss: 0.0508
Epoch [5/10], Batch [101/163], Loss: 0.1114
Epoch [5/10], Batch [102/163], Loss: 0.0452
Epoch [5/10], Batch [103/163], Loss: 0.0767
Epoch [5/10], Batch [104/163], Loss: 0.0467
Epoch [5/10], Batch [105/163], Loss: 0.0984
Epoch [5/10], Batch [106/163], Loss: 0.1108
Epoch [5/10], Batch [107/163], Loss: 0.0804
Epoch [5/10], Batch [108/163], Loss: 0.0613
Epoch [5/10], Batch [109/163], Loss: 0.1471
Epoch [5/10], Batch [110/163], Loss: 0.1149
Epoch [5/10], Batch [111/163], Loss: 0.1479
Epoch [5/10], Batch [112/163], Loss: 0.1831
Epoch [5/10], Batch [113/163], Loss: 0.1991
Epoch [5/10], Batch [114/163], Loss: 0.0805
Epoch [5/10], Batch [115/163], Loss: 0.0497
Epoch [5/10], Batch [116/163], Loss: 0.0608
Epoch [5/10], Batch [117/163], Loss: 0.1020
Epoch [5/10], Batch [118/163], Loss: 0.1357
Epoch [5/10], Batch [119/163], Loss: 0.1792
Epoch [5/10], Batch [120/163], Loss: 0.3803
Epoch [5/10], Batch [121/163], Loss: 0.1905
Epoch [5/10], Batch [122/163], Loss: 0.1173
Epoch [5/10], Batch [123/163], Loss: 0.1973
Epoch [5/10], Batch [124/163], Loss: 0.0996
Epoch [5/10], Batch [125/163], Loss: 0.1243
Epoch [5/10], Batch [126/163], Loss: 0.0952
Epoch [5/10], Batch [127/163], Loss: 0.0455
Epoch [5/10], Batch [128/163], Loss: 0.0601
Epoch [5/10], Batch [129/163], Loss: 0.1027
Epoch [5/10], Batch [130/163], Loss: 0.0920
Epoch [5/10], Batch [131/163], Loss: 0.1500
Epoch [5/10], Batch [132/163], Loss: 0.1334
Epoch [5/10], Batch [133/163], Loss: 0.0734
Epoch [5/10], Batch [134/163], Loss: 0.0824
Epoch [5/10], Batch [135/163], Loss: 0.0838
Epoch [5/10], Batch [136/163], Loss: 0.1428
Epoch [5/10], Batch [137/163], Loss: 0.1240
Epoch [5/10], Batch [138/163], Loss: 0.0652
Epoch [5/10], Batch [139/163], Loss: 0.1351
Epoch [5/10], Batch [140/163], Loss: 0.1220
Epoch [5/10], Batch [141/163], Loss: 0.0678
Epoch [5/10], Batch [142/163], Loss: 0.0467
Epoch [5/10], Batch [143/163], Loss: 0.2076
Epoch [5/10], Batch [144/163], Loss: 0.2652
Epoch [5/10], Batch [145/163], Loss: 0.1522
Epoch [5/10], Batch [146/163], Loss: 0.1352
Epoch [5/10], Batch [147/163], Loss: 0.0417
Epoch [5/10], Batch [148/163], Loss: 0.0593
Epoch [5/10], Batch [149/163], Loss: 0.1074
Epoch [5/10], Batch [150/163], Loss: 0.1936
Epoch [5/10], Batch [151/163], Loss: 0.1150
Epoch [5/10], Batch [152/163], Loss: 0.0752
Epoch [5/10], Batch [153/163], Loss: 0.0637
Epoch [5/10], Batch [154/163], Loss: 0.1447
Epoch [5/10], Batch [155/163], Loss: 0.1825
Epoch [5/10], Batch [156/163], Loss: 0.0876
Epoch [5/10], Batch [157/163], Loss: 0.1179
Epoch [5/10], Batch [158/163], Loss: 0.2005
Epoch [5/10], Batch [159/163], Loss: 0.1068
Epoch [5/10], Batch [160/163], Loss: 0.1558
Epoch [5/10], Batch [161/163], Loss: 0.1093
Epoch [5/10], Batch [162/163], Loss: 0.0761
Epoch [5/10], Batch [163/163], Loss: 0.1197
Epoch [5/10], Average Loss: 0.1218
-----------------------------------------------------------
strategy: BEAM
iter: 8
epoch: 4
Test Loss: 0.3221
F1_overall: 0.5894
F1_AGENT: 0.7258
F1_TARGET: 0.4529
-----------------------------------------------------------
Epoch [6/10], Batch [1/163], Loss: 0.0380
Epoch [6/10], Batch [2/163], Loss: 0.0651
Epoch [6/10], Batch [3/163], Loss: 0.0961
Epoch [6/10], Batch [4/163], Loss: 0.0424
Epoch [6/10], Batch [5/163], Loss: 0.0849
Epoch [6/10], Batch [6/163], Loss: 0.0483
Epoch [6/10], Batch [7/163], Loss: 0.1771
Epoch [6/10], Batch [8/163], Loss: 0.2734
Epoch [6/10], Batch [9/163], Loss: 0.0946
Epoch [6/10], Batch [10/163], Loss: 0.0339
Epoch [6/10], Batch [11/163], Loss: 0.1625
Epoch [6/10], Batch [12/163], Loss: 0.0679
Epoch [6/10], Batch [13/163], Loss: 0.1020
Epoch [6/10], Batch [14/163], Loss: 0.2077
Epoch [6/10], Batch [15/163], Loss: 0.0747
Epoch [6/10], Batch [16/163], Loss: 0.0649
Epoch [6/10], Batch [17/163], Loss: 0.0319
Epoch [6/10], Batch [18/163], Loss: 0.0278
Epoch [6/10], Batch [19/163], Loss: 0.1328
Epoch [6/10], Batch [20/163], Loss: 0.1052
Epoch [6/10], Batch [21/163], Loss: 0.0581
Epoch [6/10], Batch [22/163], Loss: 0.0667
Epoch [6/10], Batch [23/163], Loss: 0.0922
Epoch [6/10], Batch [24/163], Loss: 0.0616
Epoch [6/10], Batch [25/163], Loss: 0.0764
Epoch [6/10], Batch [26/163], Loss: 0.0460
Epoch [6/10], Batch [27/163], Loss: 0.1590
Epoch [6/10], Batch [28/163], Loss: 0.0576
Epoch [6/10], Batch [29/163], Loss: 0.0655
Epoch [6/10], Batch [30/163], Loss: 0.0608
Epoch [6/10], Batch [31/163], Loss: 0.0790
Epoch [6/10], Batch [32/163], Loss: 0.1579
Epoch [6/10], Batch [33/163], Loss: 0.0271
Epoch [6/10], Batch [34/163], Loss: 0.0682
Epoch [6/10], Batch [35/163], Loss: 0.1816
Epoch [6/10], Batch [36/163], Loss: 0.0209
Epoch [6/10], Batch [37/163], Loss: 0.0336
Epoch [6/10], Batch [38/163], Loss: 0.0310
Epoch [6/10], Batch [39/163], Loss: 0.0553
Epoch [6/10], Batch [40/163], Loss: 0.1675
Epoch [6/10], Batch [41/163], Loss: 0.0208
Epoch [6/10], Batch [42/163], Loss: 0.1189
Epoch [6/10], Batch [43/163], Loss: 0.1045
Epoch [6/10], Batch [44/163], Loss: 0.1047
Epoch [6/10], Batch [45/163], Loss: 0.0484
Epoch [6/10], Batch [46/163], Loss: 0.1741
Epoch [6/10], Batch [47/163], Loss: 0.1232
Epoch [6/10], Batch [48/163], Loss: 0.1394
Epoch [6/10], Batch [49/163], Loss: 0.0877
Epoch [6/10], Batch [50/163], Loss: 0.0678
Epoch [6/10], Batch [51/163], Loss: 0.0156
Epoch [6/10], Batch [52/163], Loss: 0.1505
Epoch [6/10], Batch [53/163], Loss: 0.0965
Epoch [6/10], Batch [54/163], Loss: 0.0437
Epoch [6/10], Batch [55/163], Loss: 0.0384
Epoch [6/10], Batch [56/163], Loss: 0.0421
Epoch [6/10], Batch [57/163], Loss: 0.0480
Epoch [6/10], Batch [58/163], Loss: 0.1277
Epoch [6/10], Batch [59/163], Loss: 0.0519
Epoch [6/10], Batch [60/163], Loss: 0.0633
Epoch [6/10], Batch [61/163], Loss: 0.0639
Epoch [6/10], Batch [62/163], Loss: 0.0184
Epoch [6/10], Batch [63/163], Loss: 0.0451
Epoch [6/10], Batch [64/163], Loss: 0.0431
Epoch [6/10], Batch [65/163], Loss: 0.0713
Epoch [6/10], Batch [66/163], Loss: 0.0527
Epoch [6/10], Batch [67/163], Loss: 0.0702
Epoch [6/10], Batch [68/163], Loss: 0.0859
Epoch [6/10], Batch [69/163], Loss: 0.0815
Epoch [6/10], Batch [70/163], Loss: 0.0664
Epoch [6/10], Batch [71/163], Loss: 0.0567
Epoch [6/10], Batch [72/163], Loss: 0.1351
Epoch [6/10], Batch [73/163], Loss: 0.1254
Epoch [6/10], Batch [74/163], Loss: 0.0598
Epoch [6/10], Batch [75/163], Loss: 0.0545
Epoch [6/10], Batch [76/163], Loss: 0.0765
Epoch [6/10], Batch [77/163], Loss: 0.0271
Epoch [6/10], Batch [78/163], Loss: 0.0752
Epoch [6/10], Batch [79/163], Loss: 0.0460
Epoch [6/10], Batch [80/163], Loss: 0.0483
Epoch [6/10], Batch [81/163], Loss: 0.1397
Epoch [6/10], Batch [82/163], Loss: 0.0481
Epoch [6/10], Batch [83/163], Loss: 0.0310
Epoch [6/10], Batch [84/163], Loss: 0.0440
Epoch [6/10], Batch [85/163], Loss: 0.0430
Epoch [6/10], Batch [86/163], Loss: 0.0438
Epoch [6/10], Batch [87/163], Loss: 0.0990
Epoch [6/10], Batch [88/163], Loss: 0.0808
Epoch [6/10], Batch [89/163], Loss: 0.1115
Epoch [6/10], Batch [90/163], Loss: 0.1971
Epoch [6/10], Batch [91/163], Loss: 0.0405
Epoch [6/10], Batch [92/163], Loss: 0.1353
Epoch [6/10], Batch [93/163], Loss: 0.1432
Epoch [6/10], Batch [94/163], Loss: 0.0664
Epoch [6/10], Batch [95/163], Loss: 0.1199
Epoch [6/10], Batch [96/163], Loss: 0.0942
Epoch [6/10], Batch [97/163], Loss: 0.0281
Epoch [6/10], Batch [98/163], Loss: 0.0972
Epoch [6/10], Batch [99/163], Loss: 0.0472
Epoch [6/10], Batch [100/163], Loss: 0.0900
Epoch [6/10], Batch [101/163], Loss: 0.1437
Epoch [6/10], Batch [102/163], Loss: 0.0306
Epoch [6/10], Batch [103/163], Loss: 0.0328
Epoch [6/10], Batch [104/163], Loss: 0.0713
Epoch [6/10], Batch [105/163], Loss: 0.0786
Epoch [6/10], Batch [106/163], Loss: 0.0333
Epoch [6/10], Batch [107/163], Loss: 0.0680
Epoch [6/10], Batch [108/163], Loss: 0.0909
Epoch [6/10], Batch [109/163], Loss: 0.0566
Epoch [6/10], Batch [110/163], Loss: 0.1246
Epoch [6/10], Batch [111/163], Loss: 0.1356
Epoch [6/10], Batch [112/163], Loss: 0.0517
Epoch [6/10], Batch [113/163], Loss: 0.0224
Epoch [6/10], Batch [114/163], Loss: 0.0826
Epoch [6/10], Batch [115/163], Loss: 0.1091
Epoch [6/10], Batch [116/163], Loss: 0.0443
Epoch [6/10], Batch [117/163], Loss: 0.0634
Epoch [6/10], Batch [118/163], Loss: 0.1443
Epoch [6/10], Batch [119/163], Loss: 0.0922
Epoch [6/10], Batch [120/163], Loss: 0.1751
Epoch [6/10], Batch [121/163], Loss: 0.0547
Epoch [6/10], Batch [122/163], Loss: 0.1224
Epoch [6/10], Batch [123/163], Loss: 0.0430
Epoch [6/10], Batch [124/163], Loss: 0.0487
Epoch [6/10], Batch [125/163], Loss: 0.1160
Epoch [6/10], Batch [126/163], Loss: 0.1187
Epoch [6/10], Batch [127/163], Loss: 0.0337
Epoch [6/10], Batch [128/163], Loss: 0.0827
Epoch [6/10], Batch [129/163], Loss: 0.0556
Epoch [6/10], Batch [130/163], Loss: 0.1049
Epoch [6/10], Batch [131/163], Loss: 0.0261
Epoch [6/10], Batch [132/163], Loss: 0.0965
Epoch [6/10], Batch [133/163], Loss: 0.1392
Epoch [6/10], Batch [134/163], Loss: 0.0733
Epoch [6/10], Batch [135/163], Loss: 0.0155
Epoch [6/10], Batch [136/163], Loss: 0.0711
Epoch [6/10], Batch [137/163], Loss: 0.1758
Epoch [6/10], Batch [138/163], Loss: 0.1090
Epoch [6/10], Batch [139/163], Loss: 0.1007
Epoch [6/10], Batch [140/163], Loss: 0.0152
Epoch [6/10], Batch [141/163], Loss: 0.0449
Epoch [6/10], Batch [142/163], Loss: 0.0584
Epoch [6/10], Batch [143/163], Loss: 0.0542
Epoch [6/10], Batch [144/163], Loss: 0.0497
Epoch [6/10], Batch [145/163], Loss: 0.0591
Epoch [6/10], Batch [146/163], Loss: 0.1840
Epoch [6/10], Batch [147/163], Loss: 0.2228
Epoch [6/10], Batch [148/163], Loss: 0.0656
Epoch [6/10], Batch [149/163], Loss: 0.1066
Epoch [6/10], Batch [150/163], Loss: 0.1216
Epoch [6/10], Batch [151/163], Loss: 0.3113
Epoch [6/10], Batch [152/163], Loss: 0.0591
Epoch [6/10], Batch [153/163], Loss: 0.0506
Epoch [6/10], Batch [154/163], Loss: 0.0169
Epoch [6/10], Batch [155/163], Loss: 0.1302
Epoch [6/10], Batch [156/163], Loss: 0.0363
Epoch [6/10], Batch [157/163], Loss: 0.0517
Epoch [6/10], Batch [158/163], Loss: 0.0467
Epoch [6/10], Batch [159/163], Loss: 0.0914
Epoch [6/10], Batch [160/163], Loss: 0.1000
Epoch [6/10], Batch [161/163], Loss: 0.1418
Epoch [6/10], Batch [162/163], Loss: 0.1119
Epoch [6/10], Batch [163/163], Loss: 0.0476
Epoch [6/10], Average Loss: 0.0833
-----------------------------------------------------------
strategy: BEAM
iter: 8
epoch: 5
Test Loss: 0.3732
F1_overall: 0.5887
F1_AGENT: 0.7285
F1_TARGET: 0.4465
-----------------------------------------------------------
Epoch [7/10], Batch [1/163], Loss: 0.0283
Epoch [7/10], Batch [2/163], Loss: 0.0423
Epoch [7/10], Batch [3/163], Loss: 0.0432
Epoch [7/10], Batch [4/163], Loss: 0.0123
Epoch [7/10], Batch [5/163], Loss: 0.0836
Epoch [7/10], Batch [6/163], Loss: 0.0442
Epoch [7/10], Batch [7/163], Loss: 0.0269
Epoch [7/10], Batch [8/163], Loss: 0.0099
Epoch [7/10], Batch [9/163], Loss: 0.1027
Epoch [7/10], Batch [10/163], Loss: 0.0382
Epoch [7/10], Batch [11/163], Loss: 0.0661
Epoch [7/10], Batch [12/163], Loss: 0.1247
Epoch [7/10], Batch [13/163], Loss: 0.1025
Epoch [7/10], Batch [14/163], Loss: 0.1514
Epoch [7/10], Batch [15/163], Loss: 0.0634
Epoch [7/10], Batch [16/163], Loss: 0.0889
Epoch [7/10], Batch [17/163], Loss: 0.1750
Epoch [7/10], Batch [18/163], Loss: 0.1418
Epoch [7/10], Batch [19/163], Loss: 0.0785
Epoch [7/10], Batch [20/163], Loss: 0.0361
Epoch [7/10], Batch [21/163], Loss: 0.0865
Epoch [7/10], Batch [22/163], Loss: 0.0160
Epoch [7/10], Batch [23/163], Loss: 0.2217
Epoch [7/10], Batch [24/163], Loss: 0.0455
Epoch [7/10], Batch [25/163], Loss: 0.0632
Epoch [7/10], Batch [26/163], Loss: 0.0783
Epoch [7/10], Batch [27/163], Loss: 0.0187
Epoch [7/10], Batch [28/163], Loss: 0.0180
Epoch [7/10], Batch [29/163], Loss: 0.0155
Epoch [7/10], Batch [30/163], Loss: 0.0183
Epoch [7/10], Batch [31/163], Loss: 0.0552
Epoch [7/10], Batch [32/163], Loss: 0.0715
Epoch [7/10], Batch [33/163], Loss: 0.0810
Epoch [7/10], Batch [34/163], Loss: 0.2415
Epoch [7/10], Batch [35/163], Loss: 0.0466
Epoch [7/10], Batch [36/163], Loss: 0.0498
Epoch [7/10], Batch [37/163], Loss: 0.0258
Epoch [7/10], Batch [38/163], Loss: 0.0817
Epoch [7/10], Batch [39/163], Loss: 0.0333
Epoch [7/10], Batch [40/163], Loss: 0.0572
Epoch [7/10], Batch [41/163], Loss: 0.0657
Epoch [7/10], Batch [42/163], Loss: 0.1097
Epoch [7/10], Batch [43/163], Loss: 0.0891
Epoch [7/10], Batch [44/163], Loss: 0.0554
Epoch [7/10], Batch [45/163], Loss: 0.0680
Epoch [7/10], Batch [46/163], Loss: 0.0368
Epoch [7/10], Batch [47/163], Loss: 0.0402
Epoch [7/10], Batch [48/163], Loss: 0.0295
Epoch [7/10], Batch [49/163], Loss: 0.0759
Epoch [7/10], Batch [50/163], Loss: 0.0326
Epoch [7/10], Batch [51/163], Loss: 0.0570
Epoch [7/10], Batch [52/163], Loss: 0.0450
Epoch [7/10], Batch [53/163], Loss: 0.0518
Epoch [7/10], Batch [54/163], Loss: 0.1147
Epoch [7/10], Batch [55/163], Loss: 0.0533
Epoch [7/10], Batch [56/163], Loss: 0.0184
Epoch [7/10], Batch [57/163], Loss: 0.1220
Epoch [7/10], Batch [58/163], Loss: 0.0182
Epoch [7/10], Batch [59/163], Loss: 0.0509
Epoch [7/10], Batch [60/163], Loss: 0.0905
Epoch [7/10], Batch [61/163], Loss: 0.0172
Epoch [7/10], Batch [62/163], Loss: 0.0344
Epoch [7/10], Batch [63/163], Loss: 0.0421
Epoch [7/10], Batch [64/163], Loss: 0.0399
Epoch [7/10], Batch [65/163], Loss: 0.0188
Epoch [7/10], Batch [66/163], Loss: 0.0768
Epoch [7/10], Batch [67/163], Loss: 0.0162
Epoch [7/10], Batch [68/163], Loss: 0.0135
Epoch [7/10], Batch [69/163], Loss: 0.0931
Epoch [7/10], Batch [70/163], Loss: 0.0542
Epoch [7/10], Batch [71/163], Loss: 0.0786
Epoch [7/10], Batch [72/163], Loss: 0.1149
Epoch [7/10], Batch [73/163], Loss: 0.1336
Epoch [7/10], Batch [74/163], Loss: 0.0193
Epoch [7/10], Batch [75/163], Loss: 0.0041
Epoch [7/10], Batch [76/163], Loss: 0.0100
Epoch [7/10], Batch [77/163], Loss: 0.0293
Epoch [7/10], Batch [78/163], Loss: 0.0863
Epoch [7/10], Batch [79/163], Loss: 0.0587
Epoch [7/10], Batch [80/163], Loss: 0.0453
Epoch [7/10], Batch [81/163], Loss: 0.2333
Epoch [7/10], Batch [82/163], Loss: 0.0360
Epoch [7/10], Batch [83/163], Loss: 0.0331
Epoch [7/10], Batch [84/163], Loss: 0.0179
Epoch [7/10], Batch [85/163], Loss: 0.0314
Epoch [7/10], Batch [86/163], Loss: 0.0195
Epoch [7/10], Batch [87/163], Loss: 0.0614
Epoch [7/10], Batch [88/163], Loss: 0.0590
Epoch [7/10], Batch [89/163], Loss: 0.0357
Epoch [7/10], Batch [90/163], Loss: 0.0585
Epoch [7/10], Batch [91/163], Loss: 0.0830
Epoch [7/10], Batch [92/163], Loss: 0.1460
Epoch [7/10], Batch [93/163], Loss: 0.0267
Epoch [7/10], Batch [94/163], Loss: 0.1253
Epoch [7/10], Batch [95/163], Loss: 0.0598
Epoch [7/10], Batch [96/163], Loss: 0.0243
Epoch [7/10], Batch [97/163], Loss: 0.0178
Epoch [7/10], Batch [98/163], Loss: 0.0341
Epoch [7/10], Batch [99/163], Loss: 0.0482
Epoch [7/10], Batch [100/163], Loss: 0.0127
Epoch [7/10], Batch [101/163], Loss: 0.0668
Epoch [7/10], Batch [102/163], Loss: 0.0867
Epoch [7/10], Batch [103/163], Loss: 0.1201
Epoch [7/10], Batch [104/163], Loss: 0.0536
Epoch [7/10], Batch [105/163], Loss: 0.0215
Epoch [7/10], Batch [106/163], Loss: 0.0159
Epoch [7/10], Batch [107/163], Loss: 0.0730
Epoch [7/10], Batch [108/163], Loss: 0.0901
Epoch [7/10], Batch [109/163], Loss: 0.0208
Epoch [7/10], Batch [110/163], Loss: 0.0607
Epoch [7/10], Batch [111/163], Loss: 0.0776
Epoch [7/10], Batch [112/163], Loss: 0.0548
Epoch [7/10], Batch [113/163], Loss: 0.0529
Epoch [7/10], Batch [114/163], Loss: 0.0499
Epoch [7/10], Batch [115/163], Loss: 0.0736
Epoch [7/10], Batch [116/163], Loss: 0.0557
Epoch [7/10], Batch [117/163], Loss: 0.1698
Epoch [7/10], Batch [118/163], Loss: 0.0255
Epoch [7/10], Batch [119/163], Loss: 0.0132
Epoch [7/10], Batch [120/163], Loss: 0.0618
Epoch [7/10], Batch [121/163], Loss: 0.0378
Epoch [7/10], Batch [122/163], Loss: 0.0573
Epoch [7/10], Batch [123/163], Loss: 0.1018
Epoch [7/10], Batch [124/163], Loss: 0.0733
Epoch [7/10], Batch [125/163], Loss: 0.0345
Epoch [7/10], Batch [126/163], Loss: 0.0622
Epoch [7/10], Batch [127/163], Loss: 0.1264
Epoch [7/10], Batch [128/163], Loss: 0.1082
Epoch [7/10], Batch [129/163], Loss: 0.0521
Epoch [7/10], Batch [130/163], Loss: 0.0450
Epoch [7/10], Batch [131/163], Loss: 0.0451
Epoch [7/10], Batch [132/163], Loss: 0.0521
Epoch [7/10], Batch [133/163], Loss: 0.0615
Epoch [7/10], Batch [134/163], Loss: 0.0768
Epoch [7/10], Batch [135/163], Loss: 0.0890
Epoch [7/10], Batch [136/163], Loss: 0.0085
Epoch [7/10], Batch [137/163], Loss: 0.1047
Epoch [7/10], Batch [138/163], Loss: 0.0315
Epoch [7/10], Batch [139/163], Loss: 0.0174
Epoch [7/10], Batch [140/163], Loss: 0.0183
Epoch [7/10], Batch [141/163], Loss: 0.0234
Epoch [7/10], Batch [142/163], Loss: 0.0189
Epoch [7/10], Batch [143/163], Loss: 0.0783
Epoch [7/10], Batch [144/163], Loss: 0.0103
Epoch [7/10], Batch [145/163], Loss: 0.0942
Epoch [7/10], Batch [146/163], Loss: 0.1276
Epoch [7/10], Batch [147/163], Loss: 0.0374
Epoch [7/10], Batch [148/163], Loss: 0.0623
Epoch [7/10], Batch [149/163], Loss: 0.0225
Epoch [7/10], Batch [150/163], Loss: 0.0108
Epoch [7/10], Batch [151/163], Loss: 0.0295
Epoch [7/10], Batch [152/163], Loss: 0.1230
Epoch [7/10], Batch [153/163], Loss: 0.1197
Epoch [7/10], Batch [154/163], Loss: 0.0462
Epoch [7/10], Batch [155/163], Loss: 0.0493
Epoch [7/10], Batch [156/163], Loss: 0.0537
Epoch [7/10], Batch [157/163], Loss: 0.0788
Epoch [7/10], Batch [158/163], Loss: 0.0595
Epoch [7/10], Batch [159/163], Loss: 0.0133
Epoch [7/10], Batch [160/163], Loss: 0.1145
Epoch [7/10], Batch [161/163], Loss: 0.3702
Epoch [7/10], Batch [162/163], Loss: 0.0791
Epoch [7/10], Batch [163/163], Loss: 0.2419
Epoch [7/10], Average Loss: 0.0642
-----------------------------------------------------------
strategy: BEAM
iter: 8
epoch: 6
Test Loss: 0.3747
F1_overall: 0.5964
F1_AGENT: 0.7323
F1_TARGET: 0.4590
-----------------------------------------------------------
Epoch [8/10], Batch [1/163], Loss: 0.0114
Epoch [8/10], Batch [2/163], Loss: 0.0235
Epoch [8/10], Batch [3/163], Loss: 0.0117
Epoch [8/10], Batch [4/163], Loss: 0.0189
Epoch [8/10], Batch [5/163], Loss: 0.0356
Epoch [8/10], Batch [6/163], Loss: 0.0368
Epoch [8/10], Batch [7/163], Loss: 0.0975
Epoch [8/10], Batch [8/163], Loss: 0.1213
Epoch [8/10], Batch [9/163], Loss: 0.1684
Epoch [8/10], Batch [10/163], Loss: 0.0860
Epoch [8/10], Batch [11/163], Loss: 0.0525
Epoch [8/10], Batch [12/163], Loss: 0.0442
Epoch [8/10], Batch [13/163], Loss: 0.0320
Epoch [8/10], Batch [14/163], Loss: 0.0083
Epoch [8/10], Batch [15/163], Loss: 0.0443
Epoch [8/10], Batch [16/163], Loss: 0.0784
Epoch [8/10], Batch [17/163], Loss: 0.0427
Epoch [8/10], Batch [18/163], Loss: 0.0130
Epoch [8/10], Batch [19/163], Loss: 0.0386
Epoch [8/10], Batch [20/163], Loss: 0.1080
Epoch [8/10], Batch [21/163], Loss: 0.0190
Epoch [8/10], Batch [22/163], Loss: 0.0609
Epoch [8/10], Batch [23/163], Loss: 0.0590
Epoch [8/10], Batch [24/163], Loss: 0.0856
Epoch [8/10], Batch [25/163], Loss: 0.0098
Epoch [8/10], Batch [26/163], Loss: 0.0961
Epoch [8/10], Batch [27/163], Loss: 0.0444
Epoch [8/10], Batch [28/163], Loss: 0.0543
Epoch [8/10], Batch [29/163], Loss: 0.0270
Epoch [8/10], Batch [30/163], Loss: 0.0731
Epoch [8/10], Batch [31/163], Loss: 0.0462
Epoch [8/10], Batch [32/163], Loss: 0.0293
Epoch [8/10], Batch [33/163], Loss: 0.0253
Epoch [8/10], Batch [34/163], Loss: 0.0506
Epoch [8/10], Batch [35/163], Loss: 0.0404
Epoch [8/10], Batch [36/163], Loss: 0.0089
Epoch [8/10], Batch [37/163], Loss: 0.0499
Epoch [8/10], Batch [38/163], Loss: 0.0214
Epoch [8/10], Batch [39/163], Loss: 0.0110
Epoch [8/10], Batch [40/163], Loss: 0.0091
Epoch [8/10], Batch [41/163], Loss: 0.0235
Epoch [8/10], Batch [42/163], Loss: 0.0239
Epoch [8/10], Batch [43/163], Loss: 0.0501
Epoch [8/10], Batch [44/163], Loss: 0.0209
Epoch [8/10], Batch [45/163], Loss: 0.0627
Epoch [8/10], Batch [46/163], Loss: 0.0057
Epoch [8/10], Batch [47/163], Loss: 0.0447
Epoch [8/10], Batch [48/163], Loss: 0.0364
Epoch [8/10], Batch [49/163], Loss: 0.0777
Epoch [8/10], Batch [50/163], Loss: 0.0177
Epoch [8/10], Batch [51/163], Loss: 0.0145
Epoch [8/10], Batch [52/163], Loss: 0.0138
Epoch [8/10], Batch [53/163], Loss: 0.0059
Epoch [8/10], Batch [54/163], Loss: 0.0071
Epoch [8/10], Batch [55/163], Loss: 0.0409
Epoch [8/10], Batch [56/163], Loss: 0.1349
Epoch [8/10], Batch [57/163], Loss: 0.0748
Epoch [8/10], Batch [58/163], Loss: 0.0530
Epoch [8/10], Batch [59/163], Loss: 0.0425
Epoch [8/10], Batch [60/163], Loss: 0.1302
Epoch [8/10], Batch [61/163], Loss: 0.0773
Epoch [8/10], Batch [62/163], Loss: 0.0076
Epoch [8/10], Batch [63/163], Loss: 0.1329
Epoch [8/10], Batch [64/163], Loss: 0.0393
Epoch [8/10], Batch [65/163], Loss: 0.0330
Epoch [8/10], Batch [66/163], Loss: 0.0612
Epoch [8/10], Batch [67/163], Loss: 0.0240
Epoch [8/10], Batch [68/163], Loss: 0.0305
Epoch [8/10], Batch [69/163], Loss: 0.0699
Epoch [8/10], Batch [70/163], Loss: 0.0516
Epoch [8/10], Batch [71/163], Loss: 0.1064
Epoch [8/10], Batch [72/163], Loss: 0.0401
Epoch [8/10], Batch [73/163], Loss: 0.0808
Epoch [8/10], Batch [74/163], Loss: 0.1945
Epoch [8/10], Batch [75/163], Loss: 0.0685
Epoch [8/10], Batch [76/163], Loss: 0.0218
Epoch [8/10], Batch [77/163], Loss: 0.1175
Epoch [8/10], Batch [78/163], Loss: 0.0091
Epoch [8/10], Batch [79/163], Loss: 0.0510
Epoch [8/10], Batch [80/163], Loss: 0.0971
Epoch [8/10], Batch [81/163], Loss: 0.0205
Epoch [8/10], Batch [82/163], Loss: 0.0194
Epoch [8/10], Batch [83/163], Loss: 0.0152
Epoch [8/10], Batch [84/163], Loss: 0.1161
Epoch [8/10], Batch [85/163], Loss: 0.0524
Epoch [8/10], Batch [86/163], Loss: 0.0444
Epoch [8/10], Batch [87/163], Loss: 0.1330
Epoch [8/10], Batch [88/163], Loss: 0.0384
Epoch [8/10], Batch [89/163], Loss: 0.0317
Epoch [8/10], Batch [90/163], Loss: 0.0378
Epoch [8/10], Batch [91/163], Loss: 0.0164
Epoch [8/10], Batch [92/163], Loss: 0.0300
Epoch [8/10], Batch [93/163], Loss: 0.0477
Epoch [8/10], Batch [94/163], Loss: 0.0337
Epoch [8/10], Batch [95/163], Loss: 0.0605
Epoch [8/10], Batch [96/163], Loss: 0.0274
Epoch [8/10], Batch [97/163], Loss: 0.1135
Epoch [8/10], Batch [98/163], Loss: 0.0418
Epoch [8/10], Batch [99/163], Loss: 0.0423
Epoch [8/10], Batch [100/163], Loss: 0.0234
Epoch [8/10], Batch [101/163], Loss: 0.0839
Epoch [8/10], Batch [102/163], Loss: 0.1406
Epoch [8/10], Batch [103/163], Loss: 0.0808
Epoch [8/10], Batch [104/163], Loss: 0.0151
Epoch [8/10], Batch [105/163], Loss: 0.0040
Epoch [8/10], Batch [106/163], Loss: 0.0137
Epoch [8/10], Batch [107/163], Loss: 0.0200
Epoch [8/10], Batch [108/163], Loss: 0.0205
Epoch [8/10], Batch [109/163], Loss: 0.1379
Epoch [8/10], Batch [110/163], Loss: 0.0314
Epoch [8/10], Batch [111/163], Loss: 0.0370
Epoch [8/10], Batch [112/163], Loss: 0.0204
Epoch [8/10], Batch [113/163], Loss: 0.0101
Epoch [8/10], Batch [114/163], Loss: 0.0431
Epoch [8/10], Batch [115/163], Loss: 0.0176
Epoch [8/10], Batch [116/163], Loss: 0.0408
Epoch [8/10], Batch [117/163], Loss: 0.0764
Epoch [8/10], Batch [118/163], Loss: 0.1179
Epoch [8/10], Batch [119/163], Loss: 0.0159
Epoch [8/10], Batch [120/163], Loss: 0.0236
Epoch [8/10], Batch [121/163], Loss: 0.0276
Epoch [8/10], Batch [122/163], Loss: 0.0269
Epoch [8/10], Batch [123/163], Loss: 0.0496
Epoch [8/10], Batch [124/163], Loss: 0.0255
Epoch [8/10], Batch [125/163], Loss: 0.0239
Epoch [8/10], Batch [126/163], Loss: 0.0259
Epoch [8/10], Batch [127/163], Loss: 0.0668
Epoch [8/10], Batch [128/163], Loss: 0.0900
Epoch [8/10], Batch [129/163], Loss: 0.0402
Epoch [8/10], Batch [130/163], Loss: 0.0717
Epoch [8/10], Batch [131/163], Loss: 0.0796
Epoch [8/10], Batch [132/163], Loss: 0.0632
Epoch [8/10], Batch [133/163], Loss: 0.0188
Epoch [8/10], Batch [134/163], Loss: 0.0043
Epoch [8/10], Batch [135/163], Loss: 0.0448
Epoch [8/10], Batch [136/163], Loss: 0.0240
Epoch [8/10], Batch [137/163], Loss: 0.5814
Epoch [8/10], Batch [138/163], Loss: 0.0152
Epoch [8/10], Batch [139/163], Loss: 0.0189
Epoch [8/10], Batch [140/163], Loss: 0.0348
Epoch [8/10], Batch [141/163], Loss: 0.1371
Epoch [8/10], Batch [142/163], Loss: 0.0570
Epoch [8/10], Batch [143/163], Loss: 0.0815
Epoch [8/10], Batch [144/163], Loss: 0.0344
Epoch [8/10], Batch [145/163], Loss: 0.0255
Epoch [8/10], Batch [146/163], Loss: 0.0312
Epoch [8/10], Batch [147/163], Loss: 0.0695
Epoch [8/10], Batch [148/163], Loss: 0.0370
Epoch [8/10], Batch [149/163], Loss: 0.0474
Epoch [8/10], Batch [150/163], Loss: 0.0342
Epoch [8/10], Batch [151/163], Loss: 0.0520
Epoch [8/10], Batch [152/163], Loss: 0.0284
Epoch [8/10], Batch [153/163], Loss: 0.0640
Epoch [8/10], Batch [154/163], Loss: 0.0165
Epoch [8/10], Batch [155/163], Loss: 0.1252
Epoch [8/10], Batch [156/163], Loss: 0.0663
Epoch [8/10], Batch [157/163], Loss: 0.0207
Epoch [8/10], Batch [158/163], Loss: 0.0500
Epoch [8/10], Batch [159/163], Loss: 0.0463
Epoch [8/10], Batch [160/163], Loss: 0.1250
Epoch [8/10], Batch [161/163], Loss: 0.0450
Epoch [8/10], Batch [162/163], Loss: 0.0839
Epoch [8/10], Batch [163/163], Loss: 0.0491
Epoch [8/10], Average Loss: 0.0530
-----------------------------------------------------------
strategy: BEAM
iter: 8
epoch: 7
Test Loss: 0.3902
F1_overall: 0.5887
F1_AGENT: 0.7278
F1_TARGET: 0.4521
-----------------------------------------------------------
Epoch [9/10], Batch [1/163], Loss: 0.0479
Epoch [9/10], Batch [2/163], Loss: 0.0149
Epoch [9/10], Batch [3/163], Loss: 0.0152
Epoch [9/10], Batch [4/163], Loss: 0.0398
Epoch [9/10], Batch [5/163], Loss: 0.0229
Epoch [9/10], Batch [6/163], Loss: 0.0372
Epoch [9/10], Batch [7/163], Loss: 0.0189
Epoch [9/10], Batch [8/163], Loss: 0.0490
Epoch [9/10], Batch [9/163], Loss: 0.0106
Epoch [9/10], Batch [10/163], Loss: 0.0094
Epoch [9/10], Batch [11/163], Loss: 0.0119
Epoch [9/10], Batch [12/163], Loss: 0.0268
Epoch [9/10], Batch [13/163], Loss: 0.1366
Epoch [9/10], Batch [14/163], Loss: 0.0342
Epoch [9/10], Batch [15/163], Loss: 0.0270
Epoch [9/10], Batch [16/163], Loss: 0.0115
Epoch [9/10], Batch [17/163], Loss: 0.0228
Epoch [9/10], Batch [18/163], Loss: 0.0220
Epoch [9/10], Batch [19/163], Loss: 0.0181
Epoch [9/10], Batch [20/163], Loss: 0.0189
Epoch [9/10], Batch [21/163], Loss: 0.0261
Epoch [9/10], Batch [22/163], Loss: 0.1173
Epoch [9/10], Batch [23/163], Loss: 0.0189
Epoch [9/10], Batch [24/163], Loss: 0.0097
Epoch [9/10], Batch [25/163], Loss: 0.0417
Epoch [9/10], Batch [26/163], Loss: 0.1477
Epoch [9/10], Batch [27/163], Loss: 0.0114
Epoch [9/10], Batch [28/163], Loss: 0.1463
Epoch [9/10], Batch [29/163], Loss: 0.0059
Epoch [9/10], Batch [30/163], Loss: 0.0480
Epoch [9/10], Batch [31/163], Loss: 0.0195
Epoch [9/10], Batch [32/163], Loss: 0.0178
Epoch [9/10], Batch [33/163], Loss: 0.0387
Epoch [9/10], Batch [34/163], Loss: 0.0841
Epoch [9/10], Batch [35/163], Loss: 0.0289
Epoch [9/10], Batch [36/163], Loss: 0.0159
Epoch [9/10], Batch [37/163], Loss: 0.0312
Epoch [9/10], Batch [38/163], Loss: 0.0139
Epoch [9/10], Batch [39/163], Loss: 0.1239
Epoch [9/10], Batch [40/163], Loss: 0.0260
Epoch [9/10], Batch [41/163], Loss: 0.0131
Epoch [9/10], Batch [42/163], Loss: 0.0114
Epoch [9/10], Batch [43/163], Loss: 0.0073
Epoch [9/10], Batch [44/163], Loss: 0.0226
Epoch [9/10], Batch [45/163], Loss: 0.0288
Epoch [9/10], Batch [46/163], Loss: 0.0905
Epoch [9/10], Batch [47/163], Loss: 0.0066
Epoch [9/10], Batch [48/163], Loss: 0.0165
Epoch [9/10], Batch [49/163], Loss: 0.0278
Epoch [9/10], Batch [50/163], Loss: 0.0087
Epoch [9/10], Batch [51/163], Loss: 0.0640
Epoch [9/10], Batch [52/163], Loss: 0.0232
Epoch [9/10], Batch [53/163], Loss: 0.1074
Epoch [9/10], Batch [54/163], Loss: 0.0089
Epoch [9/10], Batch [55/163], Loss: 0.1900
Epoch [9/10], Batch [56/163], Loss: 0.0722
Epoch [9/10], Batch [57/163], Loss: 0.0087
Epoch [9/10], Batch [58/163], Loss: 0.1358
Epoch [9/10], Batch [59/163], Loss: 0.0169
Epoch [9/10], Batch [60/163], Loss: 0.0218
Epoch [9/10], Batch [61/163], Loss: 0.0167
Epoch [9/10], Batch [62/163], Loss: 0.0247
Epoch [9/10], Batch [63/163], Loss: 0.0072
Epoch [9/10], Batch [64/163], Loss: 0.0647
Epoch [9/10], Batch [65/163], Loss: 0.0847
Epoch [9/10], Batch [66/163], Loss: 0.0473
Epoch [9/10], Batch [67/163], Loss: 0.0284
Epoch [9/10], Batch [68/163], Loss: 0.0377
Epoch [9/10], Batch [69/163], Loss: 0.0072
Epoch [9/10], Batch [70/163], Loss: 0.1112
Epoch [9/10], Batch [71/163], Loss: 0.0074
Epoch [9/10], Batch [72/163], Loss: 0.0146
Epoch [9/10], Batch [73/163], Loss: 0.0182
Epoch [9/10], Batch [74/163], Loss: 0.0220
Epoch [9/10], Batch [75/163], Loss: 0.0345
Epoch [9/10], Batch [76/163], Loss: 0.0479
Epoch [9/10], Batch [77/163], Loss: 0.0088
Epoch [9/10], Batch [78/163], Loss: 0.0446
Epoch [9/10], Batch [79/163], Loss: 0.0049
Epoch [9/10], Batch [80/163], Loss: 0.0578
Epoch [9/10], Batch [81/163], Loss: 0.0750
Epoch [9/10], Batch [82/163], Loss: 0.0150
Epoch [9/10], Batch [83/163], Loss: 0.0080
Epoch [9/10], Batch [84/163], Loss: 0.0203
Epoch [9/10], Batch [85/163], Loss: 0.0551
Epoch [9/10], Batch [86/163], Loss: 0.1056
Epoch [9/10], Batch [87/163], Loss: 0.0093
Epoch [9/10], Batch [88/163], Loss: 0.0297
Epoch [9/10], Batch [89/163], Loss: 0.0398
Epoch [9/10], Batch [90/163], Loss: 0.0139
Epoch [9/10], Batch [91/163], Loss: 0.1014
Epoch [9/10], Batch [92/163], Loss: 0.0099
Epoch [9/10], Batch [93/163], Loss: 0.0172
Epoch [9/10], Batch [94/163], Loss: 0.1210
Epoch [9/10], Batch [95/163], Loss: 0.0193
Epoch [9/10], Batch [96/163], Loss: 0.0523
Epoch [9/10], Batch [97/163], Loss: 0.0711
Epoch [9/10], Batch [98/163], Loss: 0.0237
Epoch [9/10], Batch [99/163], Loss: 0.0390
Epoch [9/10], Batch [100/163], Loss: 0.0163
Epoch [9/10], Batch [101/163], Loss: 0.0057
Epoch [9/10], Batch [102/163], Loss: 0.1113
Epoch [9/10], Batch [103/163], Loss: 0.0196
Epoch [9/10], Batch [104/163], Loss: 0.0383
Epoch [9/10], Batch [105/163], Loss: 0.0122
Epoch [9/10], Batch [106/163], Loss: 0.1356
Epoch [9/10], Batch [107/163], Loss: 0.0295
Epoch [9/10], Batch [108/163], Loss: 0.0306
Epoch [9/10], Batch [109/163], Loss: 0.0148
Epoch [9/10], Batch [110/163], Loss: 0.0249
Epoch [9/10], Batch [111/163], Loss: 0.1540
Epoch [9/10], Batch [112/163], Loss: 0.0166
Epoch [9/10], Batch [113/163], Loss: 0.0144
Epoch [9/10], Batch [114/163], Loss: 0.0138
Epoch [9/10], Batch [115/163], Loss: 0.0675
Epoch [9/10], Batch [116/163], Loss: 0.0383
Epoch [9/10], Batch [117/163], Loss: 0.0087
Epoch [9/10], Batch [118/163], Loss: 0.0129
Epoch [9/10], Batch [119/163], Loss: 0.0122
Epoch [9/10], Batch [120/163], Loss: 0.0850
Epoch [9/10], Batch [121/163], Loss: 0.0602
Epoch [9/10], Batch [122/163], Loss: 0.0751
Epoch [9/10], Batch [123/163], Loss: 0.2556
Epoch [9/10], Batch [124/163], Loss: 0.0854
Epoch [9/10], Batch [125/163], Loss: 0.0596
Epoch [9/10], Batch [126/163], Loss: 0.0741
Epoch [9/10], Batch [127/163], Loss: 0.0240
Epoch [9/10], Batch [128/163], Loss: 0.0167
Epoch [9/10], Batch [129/163], Loss: 0.0348
Epoch [9/10], Batch [130/163], Loss: 0.0905
Epoch [9/10], Batch [131/163], Loss: 0.0221
Epoch [9/10], Batch [132/163], Loss: 0.0557
Epoch [9/10], Batch [133/163], Loss: 0.0184
Epoch [9/10], Batch [134/163], Loss: 0.0484
Epoch [9/10], Batch [135/163], Loss: 0.0574
Epoch [9/10], Batch [136/163], Loss: 0.0268
Epoch [9/10], Batch [137/163], Loss: 0.0757
Epoch [9/10], Batch [138/163], Loss: 0.0326
Epoch [9/10], Batch [139/163], Loss: 0.0569
Epoch [9/10], Batch [140/163], Loss: 0.0106
Epoch [9/10], Batch [141/163], Loss: 0.1840
Epoch [9/10], Batch [142/163], Loss: 0.0728
Epoch [9/10], Batch [143/163], Loss: 0.0285
Epoch [9/10], Batch [144/163], Loss: 0.0527
Epoch [9/10], Batch [145/163], Loss: 0.0462
Epoch [9/10], Batch [146/163], Loss: 0.0981
Epoch [9/10], Batch [147/163], Loss: 0.0802
Epoch [9/10], Batch [148/163], Loss: 0.0618
Epoch [9/10], Batch [149/163], Loss: 0.0099
Epoch [9/10], Batch [150/163], Loss: 0.0268
Epoch [9/10], Batch [151/163], Loss: 0.0834
Epoch [9/10], Batch [152/163], Loss: 0.0699
Epoch [9/10], Batch [153/163], Loss: 0.0480
Epoch [9/10], Batch [154/163], Loss: 0.0885
Epoch [9/10], Batch [155/163], Loss: 0.0341
Epoch [9/10], Batch [156/163], Loss: 0.0435
Epoch [9/10], Batch [157/163], Loss: 0.0125
Epoch [9/10], Batch [158/163], Loss: 0.0164
Epoch [9/10], Batch [159/163], Loss: 0.0583
Epoch [9/10], Batch [160/163], Loss: 0.0200
Epoch [9/10], Batch [161/163], Loss: 0.0841
Epoch [9/10], Batch [162/163], Loss: 0.0322
Epoch [9/10], Batch [163/163], Loss: 0.0487
Epoch [9/10], Average Loss: 0.0449
-----------------------------------------------------------
strategy: BEAM
iter: 8
epoch: 8
Test Loss: 0.4395
F1_overall: 0.5855
F1_AGENT: 0.7215
F1_TARGET: 0.4441
-----------------------------------------------------------
Epoch [10/10], Batch [1/163], Loss: 0.0185
Epoch [10/10], Batch [2/163], Loss: 0.0301
Epoch [10/10], Batch [3/163], Loss: 0.0238
Epoch [10/10], Batch [4/163], Loss: 0.0435
Epoch [10/10], Batch [5/163], Loss: 0.0202
Epoch [10/10], Batch [6/163], Loss: 0.0189
Epoch [10/10], Batch [7/163], Loss: 0.0676
Epoch [10/10], Batch [8/163], Loss: 0.0366
Epoch [10/10], Batch [9/163], Loss: 0.0556
Epoch [10/10], Batch [10/163], Loss: 0.0085
Epoch [10/10], Batch [11/163], Loss: 0.0293
Epoch [10/10], Batch [12/163], Loss: 0.0091
Epoch [10/10], Batch [13/163], Loss: 0.0259
Epoch [10/10], Batch [14/163], Loss: 0.0026
Epoch [10/10], Batch [15/163], Loss: 0.0874
Epoch [10/10], Batch [16/163], Loss: 0.0242
Epoch [10/10], Batch [17/163], Loss: 0.1399
Epoch [10/10], Batch [18/163], Loss: 0.0658
Epoch [10/10], Batch [19/163], Loss: 0.0144
Epoch [10/10], Batch [20/163], Loss: 0.0131
Epoch [10/10], Batch [21/163], Loss: 0.0205
Epoch [10/10], Batch [22/163], Loss: 0.0263
Epoch [10/10], Batch [23/163], Loss: 0.0279
Epoch [10/10], Batch [24/163], Loss: 0.0165
Epoch [10/10], Batch [25/163], Loss: 0.0063
Epoch [10/10], Batch [26/163], Loss: 0.0079
Epoch [10/10], Batch [27/163], Loss: 0.0817
Epoch [10/10], Batch [28/163], Loss: 0.0066
Epoch [10/10], Batch [29/163], Loss: 0.0130
Epoch [10/10], Batch [30/163], Loss: 0.0345
Epoch [10/10], Batch [31/163], Loss: 0.0600
Epoch [10/10], Batch [32/163], Loss: 0.0144
Epoch [10/10], Batch [33/163], Loss: 0.0202
Epoch [10/10], Batch [34/163], Loss: 0.0389
Epoch [10/10], Batch [35/163], Loss: 0.0151
Epoch [10/10], Batch [36/163], Loss: 0.0195
Epoch [10/10], Batch [37/163], Loss: 0.0192
Epoch [10/10], Batch [38/163], Loss: 0.0074
Epoch [10/10], Batch [39/163], Loss: 0.0051
Epoch [10/10], Batch [40/163], Loss: 0.0472
Epoch [10/10], Batch [41/163], Loss: 0.0266
Epoch [10/10], Batch [42/163], Loss: 0.0105
Epoch [10/10], Batch [43/163], Loss: 0.0606
Epoch [10/10], Batch [44/163], Loss: 0.2325
Epoch [10/10], Batch [45/163], Loss: 0.0286
Epoch [10/10], Batch [46/163], Loss: 0.2622
Epoch [10/10], Batch [47/163], Loss: 0.0120
Epoch [10/10], Batch [48/163], Loss: 0.0296
Epoch [10/10], Batch [49/163], Loss: 0.3199
Epoch [10/10], Batch [50/163], Loss: 0.0347
Epoch [10/10], Batch [51/163], Loss: 0.0334
Epoch [10/10], Batch [52/163], Loss: 0.0698
Epoch [10/10], Batch [53/163], Loss: 0.1173
Epoch [10/10], Batch [54/163], Loss: 0.0985
Epoch [10/10], Batch [55/163], Loss: 0.0221
Epoch [10/10], Batch [56/163], Loss: 0.0127
Epoch [10/10], Batch [57/163], Loss: 0.0208
Epoch [10/10], Batch [58/163], Loss: 0.4072
Epoch [10/10], Batch [59/163], Loss: 0.0158
Epoch [10/10], Batch [60/163], Loss: 0.0117
Epoch [10/10], Batch [61/163], Loss: 0.1405
Epoch [10/10], Batch [62/163], Loss: 0.1673
Epoch [10/10], Batch [63/163], Loss: 0.0471
Epoch [10/10], Batch [64/163], Loss: 0.0214
Epoch [10/10], Batch [65/163], Loss: 0.0532
Epoch [10/10], Batch [66/163], Loss: 0.0560
Epoch [10/10], Batch [67/163], Loss: 0.0333
Epoch [10/10], Batch [68/163], Loss: 0.0332
Epoch [10/10], Batch [69/163], Loss: 0.0100
Epoch [10/10], Batch [70/163], Loss: 0.1182
Epoch [10/10], Batch [71/163], Loss: 0.0285
Epoch [10/10], Batch [72/163], Loss: 0.0355
Epoch [10/10], Batch [73/163], Loss: 0.1427
Epoch [10/10], Batch [74/163], Loss: 0.0148
Epoch [10/10], Batch [75/163], Loss: 0.0639
Epoch [10/10], Batch [76/163], Loss: 0.0319
Epoch [10/10], Batch [77/163], Loss: 0.0557
Epoch [10/10], Batch [78/163], Loss: 0.0143
Epoch [10/10], Batch [79/163], Loss: 0.0769
Epoch [10/10], Batch [80/163], Loss: 0.0548
Epoch [10/10], Batch [81/163], Loss: 0.2401
Epoch [10/10], Batch [82/163], Loss: 0.0259
Epoch [10/10], Batch [83/163], Loss: 0.0278
Epoch [10/10], Batch [84/163], Loss: 0.0840
Epoch [10/10], Batch [85/163], Loss: 0.0641
Epoch [10/10], Batch [86/163], Loss: 0.0182
Epoch [10/10], Batch [87/163], Loss: 0.0309
Epoch [10/10], Batch [88/163], Loss: 0.0897
Epoch [10/10], Batch [89/163], Loss: 0.1291
Epoch [10/10], Batch [90/163], Loss: 0.0294
Epoch [10/10], Batch [91/163], Loss: 0.0130
Epoch [10/10], Batch [92/163], Loss: 0.0694
Epoch [10/10], Batch [93/163], Loss: 0.1155
Epoch [10/10], Batch [94/163], Loss: 0.0556
Epoch [10/10], Batch [95/163], Loss: 0.0260
Epoch [10/10], Batch [96/163], Loss: 0.1211
Epoch [10/10], Batch [97/163], Loss: 0.0187
Epoch [10/10], Batch [98/163], Loss: 0.0603
Epoch [10/10], Batch [99/163], Loss: 0.0852
Epoch [10/10], Batch [100/163], Loss: 0.0529
Epoch [10/10], Batch [101/163], Loss: 0.0961
Epoch [10/10], Batch [102/163], Loss: 0.0132
Epoch [10/10], Batch [103/163], Loss: 0.1150
Epoch [10/10], Batch [104/163], Loss: 0.0372
Epoch [10/10], Batch [105/163], Loss: 0.0735
Epoch [10/10], Batch [106/163], Loss: 0.0868
Epoch [10/10], Batch [107/163], Loss: 0.0071
Epoch [10/10], Batch [108/163], Loss: 0.0652
Epoch [10/10], Batch [109/163], Loss: 0.0379
Epoch [10/10], Batch [110/163], Loss: 0.0562
Epoch [10/10], Batch [111/163], Loss: 0.0418
Epoch [10/10], Batch [112/163], Loss: 0.0442
Epoch [10/10], Batch [113/163], Loss: 0.0235
Epoch [10/10], Batch [114/163], Loss: 0.0180
Epoch [10/10], Batch [115/163], Loss: 0.1247
Epoch [10/10], Batch [116/163], Loss: 0.1138
Epoch [10/10], Batch [117/163], Loss: 0.0582
Epoch [10/10], Batch [118/163], Loss: 0.0234
Epoch [10/10], Batch [119/163], Loss: 0.0656
Epoch [10/10], Batch [120/163], Loss: 0.2065
Epoch [10/10], Batch [121/163], Loss: 0.0522
Epoch [10/10], Batch [122/163], Loss: 0.0206
Epoch [10/10], Batch [123/163], Loss: 0.1387
Epoch [10/10], Batch [124/163], Loss: 0.0285
Epoch [10/10], Batch [125/163], Loss: 0.0555
Epoch [10/10], Batch [126/163], Loss: 0.0134
Epoch [10/10], Batch [127/163], Loss: 0.0967
Epoch [10/10], Batch [128/163], Loss: 0.0481
Epoch [10/10], Batch [129/163], Loss: 0.0989
Epoch [10/10], Batch [130/163], Loss: 0.0439
Epoch [10/10], Batch [131/163], Loss: 0.0715
Epoch [10/10], Batch [132/163], Loss: 0.0674
Epoch [10/10], Batch [133/163], Loss: 0.1927
Epoch [10/10], Batch [134/163], Loss: 0.3195
Epoch [10/10], Batch [135/163], Loss: 0.0656
Epoch [10/10], Batch [136/163], Loss: 0.0134
Epoch [10/10], Batch [137/163], Loss: 0.1401
Epoch [10/10], Batch [138/163], Loss: 0.1684
Epoch [10/10], Batch [139/163], Loss: 0.0243
Epoch [10/10], Batch [140/163], Loss: 0.0755
Epoch [10/10], Batch [141/163], Loss: 0.0462
Epoch [10/10], Batch [142/163], Loss: 0.0256
Epoch [10/10], Batch [143/163], Loss: 0.0214
Epoch [10/10], Batch [144/163], Loss: 0.1055
Epoch [10/10], Batch [145/163], Loss: 0.0393
Epoch [10/10], Batch [146/163], Loss: 0.0479
Epoch [10/10], Batch [147/163], Loss: 0.0061
Epoch [10/10], Batch [148/163], Loss: 0.1935
Epoch [10/10], Batch [149/163], Loss: 0.1257
Epoch [10/10], Batch [150/163], Loss: 0.2937
Epoch [10/10], Batch [151/163], Loss: 0.0682
Epoch [10/10], Batch [152/163], Loss: 0.0126
Epoch [10/10], Batch [153/163], Loss: 0.0765
Epoch [10/10], Batch [154/163], Loss: 0.0231
Epoch [10/10], Batch [155/163], Loss: 0.0402
Epoch [10/10], Batch [156/163], Loss: 0.0245
Epoch [10/10], Batch [157/163], Loss: 0.0142
Epoch [10/10], Batch [158/163], Loss: 0.0255
Epoch [10/10], Batch [159/163], Loss: 0.1151
Epoch [10/10], Batch [160/163], Loss: 0.1048
Epoch [10/10], Batch [161/163], Loss: 0.0460
Epoch [10/10], Batch [162/163], Loss: 0.0324
Epoch [10/10], Batch [163/163], Loss: 0.0416
Epoch [10/10], Average Loss: 0.0624
-----------------------------------------------------------
strategy: BEAM
iter: 8
epoch: 9
Test Loss: 0.4178
F1_overall: 0.5941
F1_AGENT: 0.7348
F1_TARGET: 0.4514
-----------------------------------------------------------
sorted_beam_scores: [(2176, tensor(-0.3761, dtype=torch.float64)), (299, tensor(-0.3573, dtype=torch.float64)), (2126, tensor(-0.2938, dtype=torch.float64)), (745, tensor(-0.2665, dtype=torch.float64)), (1398, tensor(-0.2645, dtype=torch.float64)), (36, tensor(-0.2566, dtype=torch.float64)), (1850, tensor(-0.2476, dtype=torch.float64)), (120, tensor(-0.2457, dtype=torch.float64)), (661, tensor(-0.2335, dtype=torch.float64)), (1482, tensor(-0.2054, dtype=torch.float64)), (1578, tensor(-0.2025, dtype=torch.float64)), (37, tensor(-0.1976, dtype=torch.float64)), (907, tensor(-0.1966, dtype=torch.float64)), (377, tensor(-0.1959, dtype=torch.float64)), (975, tensor(-0.1955, dtype=torch.float64)), (799, tensor(-0.1933, dtype=torch.float64)), (365, tensor(-0.1905, dtype=torch.float64)), (1087, tensor(-0.1896, dtype=torch.float64)), (326, tensor(-0.1832, dtype=torch.float64)), (1126, tensor(-0.1800, dtype=torch.float64)), (1273, tensor(-0.1714, dtype=torch.float64)), (411, tensor(-0.1709, dtype=torch.float64)), (1631, tensor(-0.1618, dtype=torch.float64)), (83, tensor(-0.1589, dtype=torch.float64)), (260, tensor(-0.1588, dtype=torch.float64)), (1216, tensor(-0.1588, dtype=torch.float64)), (2046, tensor(-0.1568, dtype=torch.float64)), (1715, tensor(-0.1565, dtype=torch.float64)), (314, tensor(-0.1557, dtype=torch.float64)), (28, tensor(-0.1552, dtype=torch.float64)), (776, tensor(-0.1543, dtype=torch.float64)), (2109, tensor(-0.1518, dtype=torch.float64)), (1238, tensor(-0.1515, dtype=torch.float64)), (1131, tensor(-0.1489, dtype=torch.float64)), (266, tensor(-0.1478, dtype=torch.float64)), (1006, tensor(-0.1478, dtype=torch.float64)), (1339, tensor(-0.1472, dtype=torch.float64)), (638, tensor(-0.1446, dtype=torch.float64)), (354, tensor(-0.1419, dtype=torch.float64)), (1840, tensor(-0.1414, dtype=torch.float64)), (531, tensor(-0.1412, dtype=torch.float64)), (336, tensor(-0.1406, dtype=torch.float64)), (397, tensor(-0.1379, dtype=torch.float64)), (1791, tensor(-0.1373, dtype=torch.float64)), (2155, tensor(-0.1368, dtype=torch.float64)), (1303, tensor(-0.1349, dtype=torch.float64)), (2048, tensor(-0.1343, dtype=torch.float64)), (1392, tensor(-0.1339, dtype=torch.float64)), (984, tensor(-0.1336, dtype=torch.float64)), (912, tensor(-0.1335, dtype=torch.float64)), (1356, tensor(-0.1330, dtype=torch.float64)), (603, tensor(-0.1330, dtype=torch.float64)), (701, tensor(-0.1328, dtype=torch.float64)), (1622, tensor(-0.1311, dtype=torch.float64)), (423, tensor(-0.1308, dtype=torch.float64)), (1329, tensor(-0.1307, dtype=torch.float64)), (368, tensor(-0.1302, dtype=torch.float64)), (1019, tensor(-0.1301, dtype=torch.float64)), (1318, tensor(-0.1301, dtype=torch.float64)), (1284, tensor(-0.1299, dtype=torch.float64)), (419, tensor(-0.1295, dtype=torch.float64)), (333, tensor(-0.1281, dtype=torch.float64)), (1892, tensor(-0.1274, dtype=torch.float64)), (1014, tensor(-0.1266, dtype=torch.float64)), (828, tensor(-0.1265, dtype=torch.float64)), (1035, tensor(-0.1263, dtype=torch.float64)), (342, tensor(-0.1262, dtype=torch.float64)), (421, tensor(-0.1258, dtype=torch.float64)), (7, tensor(-0.1247, dtype=torch.float64)), (1574, tensor(-0.1242, dtype=torch.float64)), (1086, tensor(-0.1235, dtype=torch.float64)), (1069, tensor(-0.1233, dtype=torch.float64)), (549, tensor(-0.1232, dtype=torch.float64)), (2131, tensor(-0.1224, dtype=torch.float64)), (733, tensor(-0.1215, dtype=torch.float64)), (974, tensor(-0.1213, dtype=torch.float64)), (418, tensor(-0.1194, dtype=torch.float64)), (1537, tensor(-0.1193, dtype=torch.float64)), (869, tensor(-0.1189, dtype=torch.float64)), (245, tensor(-0.1186, dtype=torch.float64)), (999, tensor(-0.1181, dtype=torch.float64)), (866, tensor(-0.1178, dtype=torch.float64)), (1956, tensor(-0.1177, dtype=torch.float64)), (1271, tensor(-0.1173, dtype=torch.float64)), (1360, tensor(-0.1172, dtype=torch.float64)), (880, tensor(-0.1170, dtype=torch.float64)), (140, tensor(-0.1168, dtype=torch.float64)), (1839, tensor(-0.1168, dtype=torch.float64)), (505, tensor(-0.1165, dtype=torch.float64)), (446, tensor(-0.1164, dtype=torch.float64)), (1459, tensor(-0.1161, dtype=torch.float64)), (1958, tensor(-0.1158, dtype=torch.float64)), (1485, tensor(-0.1155, dtype=torch.float64)), (250, tensor(-0.1151, dtype=torch.float64)), (283, tensor(-0.1151, dtype=torch.float64)), (878, tensor(-0.1151, dtype=torch.float64)), (341, tensor(-0.1148, dtype=torch.float64)), (1960, tensor(-0.1148, dtype=torch.float64)), (1623, tensor(-0.1147, dtype=torch.float64)), (434, tensor(-0.1140, dtype=torch.float64)), (1162, tensor(-0.1136, dtype=torch.float64)), (1998, tensor(-0.1132, dtype=torch.float64)), (1968, tensor(-0.1130, dtype=torch.float64)), (2104, tensor(-0.1130, dtype=torch.float64)), (675, tensor(-0.1130, dtype=torch.float64)), (1692, tensor(-0.1124, dtype=torch.float64)), (645, tensor(-0.1124, dtype=torch.float64)), (1502, tensor(-0.1123, dtype=torch.float64)), (1534, tensor(-0.1120, dtype=torch.float64)), (1312, tensor(-0.1120, dtype=torch.float64)), (751, tensor(-0.1119, dtype=torch.float64)), (1810, tensor(-0.1119, dtype=torch.float64)), (1248, tensor(-0.1115, dtype=torch.float64)), (1105, tensor(-0.1113, dtype=torch.float64)), (1056, tensor(-0.1101, dtype=torch.float64)), (1533, tensor(-0.1099, dtype=torch.float64)), (95, tensor(-0.1090, dtype=torch.float64)), (482, tensor(-0.1089, dtype=torch.float64)), (894, tensor(-0.1086, dtype=torch.float64)), (730, tensor(-0.1083, dtype=torch.float64)), (485, tensor(-0.1079, dtype=torch.float64)), (1556, tensor(-0.1077, dtype=torch.float64)), (1348, tensor(-0.1069, dtype=torch.float64)), (764, tensor(-0.1067, dtype=torch.float64)), (1939, tensor(-0.1064, dtype=torch.float64)), (597, tensor(-0.1063, dtype=torch.float64)), (990, tensor(-0.1061, dtype=torch.float64)), (1030, tensor(-0.1060, dtype=torch.float64)), (1262, tensor(-0.1059, dtype=torch.float64)), (2186, tensor(-0.1057, dtype=torch.float64)), (289, tensor(-0.1057, dtype=torch.float64)), (1805, tensor(-0.1055, dtype=torch.float64)), (1757, tensor(-0.1054, dtype=torch.float64)), (1561, tensor(-0.1053, dtype=torch.float64)), (651, tensor(-0.1052, dtype=torch.float64)), (1237, tensor(-0.1049, dtype=torch.float64)), (2105, tensor(-0.1047, dtype=torch.float64)), (1899, tensor(-0.1047, dtype=torch.float64)), (1183, tensor(-0.1047, dtype=torch.float64)), (2075, tensor(-0.1045, dtype=torch.float64)), (859, tensor(-0.1039, dtype=torch.float64)), (1990, tensor(-0.1038, dtype=torch.float64)), (1241, tensor(-0.1037, dtype=torch.float64)), (1996, tensor(-0.1034, dtype=torch.float64)), (1842, tensor(-0.1034, dtype=torch.float64)), (519, tensor(-0.1034, dtype=torch.float64)), (33, tensor(-0.1033, dtype=torch.float64)), (1927, tensor(-0.1029, dtype=torch.float64)), (2141, tensor(-0.1026, dtype=torch.float64)), (483, tensor(-0.1021, dtype=torch.float64)), (1949, tensor(-0.1012, dtype=torch.float64)), (1911, tensor(-0.1011, dtype=torch.float64)), (2164, tensor(-0.1010, dtype=torch.float64)), (2036, tensor(-0.1009, dtype=torch.float64)), (148, tensor(-0.1009, dtype=torch.float64)), (1944, tensor(-0.1009, dtype=torch.float64)), (330, tensor(-0.1008, dtype=torch.float64)), (160, tensor(-0.1003, dtype=torch.float64)), (1427, tensor(-0.0999, dtype=torch.float64)), (1365, tensor(-0.0996, dtype=torch.float64)), (206, tensor(-0.0995, dtype=torch.float64)), (1073, tensor(-0.0994, dtype=torch.float64)), (2183, tensor(-0.0991, dtype=torch.float64)), (1191, tensor(-0.0984, dtype=torch.float64)), (429, tensor(-0.0984, dtype=torch.float64)), (995, tensor(-0.0984, dtype=torch.float64)), (765, tensor(-0.0983, dtype=torch.float64)), (2096, tensor(-0.0983, dtype=torch.float64)), (2053, tensor(-0.0983, dtype=torch.float64)), (2084, tensor(-0.0981, dtype=torch.float64)), (1251, tensor(-0.0978, dtype=torch.float64)), (1474, tensor(-0.0976, dtype=torch.float64)), (1808, tensor(-0.0973, dtype=torch.float64)), (47, tensor(-0.0972, dtype=torch.float64)), (666, tensor(-0.0971, dtype=torch.float64)), (1168, tensor(-0.0970, dtype=torch.float64)), (713, tensor(-0.0966, dtype=torch.float64)), (357, tensor(-0.0964, dtype=torch.float64)), (1095, tensor(-0.0964, dtype=torch.float64)), (1467, tensor(-0.0962, dtype=torch.float64)), (917, tensor(-0.0962, dtype=torch.float64)), (658, tensor(-0.0960, dtype=torch.float64)), (92, tensor(-0.0960, dtype=torch.float64)), (207, tensor(-0.0959, dtype=torch.float64)), (1807, tensor(-0.0957, dtype=torch.float64)), (1640, tensor(-0.0954, dtype=torch.float64)), (436, tensor(-0.0951, dtype=torch.float64)), (1439, tensor(-0.0950, dtype=torch.float64)), (1924, tensor(-0.0949, dtype=torch.float64)), (399, tensor(-0.0949, dtype=torch.float64)), (193, tensor(-0.0944, dtype=torch.float64)), (1018, tensor(-0.0942, dtype=torch.float64)), (1177, tensor(-0.0942, dtype=torch.float64)), (852, tensor(-0.0938, dtype=torch.float64)), (979, tensor(-0.0936, dtype=torch.float64)), (528, tensor(-0.0936, dtype=torch.float64)), (1822, tensor(-0.0934, dtype=torch.float64)), (590, tensor(-0.0927, dtype=torch.float64)), (921, tensor(-0.0924, dtype=torch.float64)), (678, tensor(-0.0919, dtype=torch.float64)), (2197, tensor(-0.0919, dtype=torch.float64)), (2178, tensor(-0.0917, dtype=torch.float64)), (1480, tensor(-0.0916, dtype=torch.float64)), (1786, tensor(-0.0915, dtype=torch.float64)), (1104, tensor(-0.0914, dtype=torch.float64)), (1999, tensor(-0.0913, dtype=torch.float64)), (136, tensor(-0.0910, dtype=torch.float64)), (88, tensor(-0.0905, dtype=torch.float64)), (982, tensor(-0.0904, dtype=torch.float64)), (1935, tensor(-0.0901, dtype=torch.float64)), (1529, tensor(-0.0901, dtype=torch.float64)), (462, tensor(-0.0900, dtype=torch.float64)), (2222, tensor(-0.0899, dtype=torch.float64)), (34, tensor(-0.0898, dtype=torch.float64)), (1966, tensor(-0.0897, dtype=torch.float64)), (1050, tensor(-0.0897, dtype=torch.float64)), (440, tensor(-0.0896, dtype=torch.float64)), (669, tensor(-0.0895, dtype=torch.float64)), (1889, tensor(-0.0895, dtype=torch.float64)), (895, tensor(-0.0895, dtype=torch.float64)), (902, tensor(-0.0893, dtype=torch.float64)), (1005, tensor(-0.0893, dtype=torch.float64)), (339, tensor(-0.0892, dtype=torch.float64)), (216, tensor(-0.0892, dtype=torch.float64)), (814, tensor(-0.0892, dtype=torch.float64)), (288, tensor(-0.0888, dtype=torch.float64)), (1358, tensor(-0.0886, dtype=torch.float64)), (2008, tensor(-0.0886, dtype=torch.float64)), (373, tensor(-0.0885, dtype=torch.float64)), (356, tensor(-0.0884, dtype=torch.float64)), (1372, tensor(-0.0882, dtype=torch.float64)), (1695, tensor(-0.0882, dtype=torch.float64)), (1471, tensor(-0.0881, dtype=torch.float64)), (1032, tensor(-0.0880, dtype=torch.float64)), (1425, tensor(-0.0880, dtype=torch.float64)), (888, tensor(-0.0880, dtype=torch.float64)), (1740, tensor(-0.0877, dtype=torch.float64)), (454, tensor(-0.0873, dtype=torch.float64)), (86, tensor(-0.0871, dtype=torch.float64)), (1909, tensor(-0.0869, dtype=torch.float64)), (41, tensor(-0.0868, dtype=torch.float64)), (633, tensor(-0.0868, dtype=torch.float64)), (1997, tensor(-0.0866, dtype=torch.float64)), (2107, tensor(-0.0864, dtype=torch.float64)), (42, tensor(-0.0863, dtype=torch.float64)), (1166, tensor(-0.0862, dtype=torch.float64)), (1877, tensor(-0.0862, dtype=torch.float64)), (10, tensor(-0.0860, dtype=torch.float64)), (154, tensor(-0.0854, dtype=torch.float64)), (1721, tensor(-0.0853, dtype=torch.float64)), (728, tensor(-0.0852, dtype=torch.float64)), (971, tensor(-0.0852, dtype=torch.float64)), (1347, tensor(-0.0851, dtype=torch.float64)), (2077, tensor(-0.0851, dtype=torch.float64)), (1848, tensor(-0.0849, dtype=torch.float64)), (710, tensor(-0.0849, dtype=torch.float64)), (1147, tensor(-0.0849, dtype=torch.float64)), (1849, tensor(-0.0848, dtype=torch.float64)), (1332, tensor(-0.0847, dtype=torch.float64)), (1254, tensor(-0.0845, dtype=torch.float64)), (495, tensor(-0.0845, dtype=torch.float64)), (682, tensor(-0.0844, dtype=torch.float64)), (962, tensor(-0.0841, dtype=torch.float64)), (2217, tensor(-0.0841, dtype=torch.float64)), (344, tensor(-0.0841, dtype=torch.float64)), (2059, tensor(-0.0841, dtype=torch.float64)), (179, tensor(-0.0840, dtype=torch.float64)), (1308, tensor(-0.0840, dtype=torch.float64)), (542, tensor(-0.0838, dtype=torch.float64)), (317, tensor(-0.0838, dtype=torch.float64)), (64, tensor(-0.0836, dtype=torch.float64)), (394, tensor(-0.0836, dtype=torch.float64)), (1541, tensor(-0.0836, dtype=torch.float64)), (1641, tensor(-0.0831, dtype=torch.float64)), (1864, tensor(-0.0830, dtype=torch.float64)), (1346, tensor(-0.0827, dtype=torch.float64)), (823, tensor(-0.0827, dtype=torch.float64)), (926, tensor(-0.0826, dtype=torch.float64)), (2025, tensor(-0.0826, dtype=torch.float64)), (1229, tensor(-0.0826, dtype=torch.float64)), (1633, tensor(-0.0825, dtype=torch.float64)), (367, tensor(-0.0823, dtype=torch.float64)), (1389, tensor(-0.0822, dtype=torch.float64)), (1726, tensor(-0.0822, dtype=torch.float64)), (739, tensor(-0.0819, dtype=torch.float64)), (287, tensor(-0.0818, dtype=torch.float64)), (744, tensor(-0.0816, dtype=torch.float64)), (879, tensor(-0.0815, dtype=torch.float64)), (2173, tensor(-0.0814, dtype=torch.float64)), (983, tensor(-0.0813, dtype=torch.float64)), (1290, tensor(-0.0812, dtype=torch.float64)), (2134, tensor(-0.0810, dtype=torch.float64)), (702, tensor(-0.0804, dtype=torch.float64)), (1758, tensor(-0.0802, dtype=torch.float64)), (229, tensor(-0.0801, dtype=torch.float64)), (1330, tensor(-0.0801, dtype=torch.float64)), (1319, tensor(-0.0799, dtype=torch.float64)), (1401, tensor(-0.0796, dtype=torch.float64)), (2006, tensor(-0.0795, dtype=torch.float64)), (525, tensor(-0.0794, dtype=torch.float64)), (583, tensor(-0.0791, dtype=torch.float64)), (2061, tensor(-0.0790, dtype=torch.float64)), (1963, tensor(-0.0789, dtype=torch.float64)), (1046, tensor(-0.0788, dtype=torch.float64)), (159, tensor(-0.0787, dtype=torch.float64)), (2231, tensor(-0.0785, dtype=torch.float64)), (2177, tensor(-0.0785, dtype=torch.float64)), (541, tensor(-0.0785, dtype=torch.float64)), (1083, tensor(-0.0782, dtype=torch.float64)), (1187, tensor(-0.0781, dtype=torch.float64)), (937, tensor(-0.0779, dtype=torch.float64)), (481, tensor(-0.0778, dtype=torch.float64)), (430, tensor(-0.0778, dtype=torch.float64)), (2092, tensor(-0.0778, dtype=torch.float64)), (1661, tensor(-0.0778, dtype=torch.float64)), (153, tensor(-0.0778, dtype=torch.float64)), (143, tensor(-0.0777, dtype=torch.float64)), (1553, tensor(-0.0776, dtype=torch.float64)), (1749, tensor(-0.0774, dtype=torch.float64)), (1754, tensor(-0.0770, dtype=torch.float64)), (562, tensor(-0.0769, dtype=torch.float64)), (349, tensor(-0.0769, dtype=torch.float64)), (2193, tensor(-0.0768, dtype=torch.float64)), (1449, tensor(-0.0767, dtype=torch.float64)), (1004, tensor(-0.0766, dtype=torch.float64)), (650, tensor(-0.0766, dtype=torch.float64)), (889, tensor(-0.0765, dtype=torch.float64)), (1684, tensor(-0.0765, dtype=torch.float64)), (9, tensor(-0.0762, dtype=torch.float64)), (1951, tensor(-0.0762, dtype=torch.float64)), (465, tensor(-0.0761, dtype=torch.float64)), (361, tensor(-0.0760, dtype=torch.float64)), (186, tensor(-0.0759, dtype=torch.float64)), (202, tensor(-0.0759, dtype=torch.float64)), (580, tensor(-0.0757, dtype=torch.float64)), (1632, tensor(-0.0757, dtype=torch.float64)), (862, tensor(-0.0756, dtype=torch.float64)), (232, tensor(-0.0754, dtype=torch.float64)), (201, tensor(-0.0754, dtype=torch.float64)), (124, tensor(-0.0753, dtype=torch.float64)), (835, tensor(-0.0752, dtype=torch.float64)), (927, tensor(-0.0750, dtype=torch.float64)), (1865, tensor(-0.0748, dtype=torch.float64)), (1518, tensor(-0.0748, dtype=torch.float64)), (2017, tensor(-0.0747, dtype=torch.float64)), (1472, tensor(-0.0746, dtype=torch.float64)), (1811, tensor(-0.0744, dtype=torch.float64)), (1501, tensor(-0.0743, dtype=torch.float64)), (80, tensor(-0.0741, dtype=torch.float64)), (1731, tensor(-0.0740, dtype=torch.float64)), (664, tensor(-0.0740, dtype=torch.float64)), (502, tensor(-0.0738, dtype=torch.float64)), (1681, tensor(-0.0733, dtype=torch.float64)), (929, tensor(-0.0732, dtype=torch.float64)), (2166, tensor(-0.0730, dtype=torch.float64)), (1076, tensor(-0.0730, dtype=torch.float64)), (1769, tensor(-0.0728, dtype=torch.float64)), (1180, tensor(-0.0728, dtype=torch.float64)), (2168, tensor(-0.0728, dtype=torch.float64)), (1313, tensor(-0.0726, dtype=torch.float64)), (1281, tensor(-0.0726, dtype=torch.float64)), (53, tensor(-0.0726, dtype=torch.float64)), (2074, tensor(-0.0724, dtype=torch.float64)), (508, tensor(-0.0723, dtype=torch.float64)), (980, tensor(-0.0722, dtype=torch.float64)), (1702, tensor(-0.0720, dtype=torch.float64)), (447, tensor(-0.0720, dtype=torch.float64)), (116, tensor(-0.0719, dtype=torch.float64)), (1923, tensor(-0.0719, dtype=torch.float64)), (1797, tensor(-0.0719, dtype=torch.float64)), (1986, tensor(-0.0718, dtype=torch.float64)), (184, tensor(-0.0718, dtype=torch.float64)), (1666, tensor(-0.0717, dtype=torch.float64)), (1735, tensor(-0.0717, dtype=torch.float64)), (380, tensor(-0.0717, dtype=torch.float64)), (26, tensor(-0.0717, dtype=torch.float64)), (1724, tensor(-0.0716, dtype=torch.float64)), (414, tensor(-0.0716, dtype=torch.float64)), (2108, tensor(-0.0715, dtype=torch.float64)), (886, tensor(-0.0714, dtype=torch.float64)), (1058, tensor(-0.0711, dtype=torch.float64)), (636, tensor(-0.0710, dtype=torch.float64)), (1097, tensor(-0.0709, dtype=torch.float64)), (1563, tensor(-0.0709, dtype=torch.float64)), (102, tensor(-0.0708, dtype=torch.float64)), (1426, tensor(-0.0708, dtype=torch.float64)), (2021, tensor(-0.0707, dtype=torch.float64)), (1395, tensor(-0.0706, dtype=torch.float64)), (1246, tensor(-0.0706, dtype=torch.float64)), (87, tensor(-0.0706, dtype=torch.float64)), (854, tensor(-0.0705, dtype=torch.float64)), (2032, tensor(-0.0704, dtype=torch.float64)), (2233, tensor(-0.0704, dtype=torch.float64)), (2148, tensor(-0.0704, dtype=torch.float64)), (498, tensor(-0.0703, dtype=torch.float64)), (2099, tensor(-0.0702, dtype=torch.float64)), (1310, tensor(-0.0701, dtype=torch.float64)), (949, tensor(-0.0700, dtype=torch.float64)), (2024, tensor(-0.0699, dtype=torch.float64)), (1029, tensor(-0.0698, dtype=torch.float64)), (774, tensor(-0.0698, dtype=torch.float64)), (1025, tensor(-0.0698, dtype=torch.float64)), (644, tensor(-0.0698, dtype=torch.float64)), (1292, tensor(-0.0696, dtype=torch.float64)), (375, tensor(-0.0696, dtype=torch.float64)), (663, tensor(-0.0696, dtype=torch.float64)), (1375, tensor(-0.0695, dtype=torch.float64)), (1832, tensor(-0.0695, dtype=torch.float64)), (1621, tensor(-0.0694, dtype=torch.float64)), (1300, tensor(-0.0692, dtype=torch.float64)), (594, tensor(-0.0689, dtype=torch.float64)), (1660, tensor(-0.0688, dtype=torch.float64)), (1539, tensor(-0.0688, dtype=torch.float64)), (2211, tensor(-0.0688, dtype=torch.float64)), (1082, tensor(-0.0688, dtype=torch.float64)), (1153, tensor(-0.0688, dtype=torch.float64)), (1824, tensor(-0.0687, dtype=torch.float64)), (1510, tensor(-0.0687, dtype=torch.float64)), (941, tensor(-0.0686, dtype=torch.float64)), (2022, tensor(-0.0686, dtype=torch.float64)), (806, tensor(-0.0685, dtype=torch.float64)), (923, tensor(-0.0684, dtype=torch.float64)), (1910, tensor(-0.0684, dtype=torch.float64)), (93, tensor(-0.0684, dtype=torch.float64)), (722, tensor(-0.0683, dtype=torch.float64)), (1174, tensor(-0.0683, dtype=torch.float64)), (155, tensor(-0.0683, dtype=torch.float64)), (2051, tensor(-0.0683, dtype=torch.float64)), (1503, tensor(-0.0681, dtype=torch.float64)), (2054, tensor(-0.0681, dtype=torch.float64)), (817, tensor(-0.0681, dtype=torch.float64)), (1920, tensor(-0.0680, dtype=torch.float64)), (1140, tensor(-0.0679, dtype=torch.float64)), (1993, tensor(-0.0679, dtype=torch.float64)), (1882, tensor(-0.0677, dtype=torch.float64)), (2111, tensor(-0.0676, dtype=torch.float64)), (832, tensor(-0.0676, dtype=torch.float64)), (1706, tensor(-0.0676, dtype=torch.float64)), (370, tensor(-0.0675, dtype=torch.float64)), (1674, tensor(-0.0674, dtype=torch.float64)), (332, tensor(-0.0674, dtype=torch.float64)), (1867, tensor(-0.0673, dtype=torch.float64)), (1031, tensor(-0.0673, dtype=torch.float64)), (218, tensor(-0.0673, dtype=torch.float64)), (1907, tensor(-0.0667, dtype=torch.float64)), (1406, tensor(-0.0667, dtype=torch.float64)), (348, tensor(-0.0665, dtype=torch.float64)), (1895, tensor(-0.0665, dtype=torch.float64)), (620, tensor(-0.0664, dtype=torch.float64)), (1071, tensor(-0.0664, dtype=torch.float64)), (1169, tensor(-0.0664, dtype=torch.float64)), (1700, tensor(-0.0664, dtype=torch.float64)), (316, tensor(-0.0663, dtype=torch.float64)), (1204, tensor(-0.0662, dtype=torch.float64)), (1650, tensor(-0.0662, dtype=torch.float64)), (785, tensor(-0.0661, dtype=torch.float64)), (1774, tensor(-0.0661, dtype=torch.float64)), (920, tensor(-0.0661, dtype=torch.float64)), (1275, tensor(-0.0661, dtype=torch.float64)), (1349, tensor(-0.0661, dtype=torch.float64)), (1897, tensor(-0.0660, dtype=torch.float64)), (2060, tensor(-0.0660, dtype=torch.float64)), (1916, tensor(-0.0657, dtype=torch.float64)), (2130, tensor(-0.0657, dtype=torch.float64)), (1070, tensor(-0.0655, dtype=torch.float64)), (1369, tensor(-0.0654, dtype=torch.float64)), (1412, tensor(-0.0653, dtype=torch.float64)), (1363, tensor(-0.0653, dtype=torch.float64)), (1820, tensor(-0.0652, dtype=torch.float64)), (1078, tensor(-0.0652, dtype=torch.float64)), (1894, tensor(-0.0651, dtype=torch.float64)), (89, tensor(-0.0650, dtype=torch.float64)), (2115, tensor(-0.0649, dtype=torch.float64)), (849, tensor(-0.0649, dtype=torch.float64)), (1201, tensor(-0.0649, dtype=torch.float64)), (2136, tensor(-0.0648, dtype=torch.float64)), (408, tensor(-0.0648, dtype=torch.float64)), (355, tensor(-0.0647, dtype=torch.float64)), (406, tensor(-0.0647, dtype=torch.float64)), (1630, tensor(-0.0647, dtype=torch.float64)), (797, tensor(-0.0646, dtype=torch.float64)), (2220, tensor(-0.0643, dtype=torch.float64)), (1835, tensor(-0.0643, dtype=torch.float64)), (611, tensor(-0.0643, dtype=torch.float64)), (1333, tensor(-0.0643, dtype=torch.float64)), (1040, tensor(-0.0642, dtype=torch.float64)), (32, tensor(-0.0642, dtype=torch.float64)), (1858, tensor(-0.0641, dtype=torch.float64)), (1431, tensor(-0.0640, dtype=torch.float64)), (1550, tensor(-0.0640, dtype=torch.float64)), (1943, tensor(-0.0640, dtype=torch.float64)), (1451, tensor(-0.0640, dtype=torch.float64)), (1793, tensor(-0.0639, dtype=torch.float64)), (641, tensor(-0.0637, dtype=torch.float64)), (1491, tensor(-0.0636, dtype=torch.float64)), (1984, tensor(-0.0636, dtype=torch.float64)), (1685, tensor(-0.0635, dtype=torch.float64)), (2055, tensor(-0.0635, dtype=torch.float64)), (2223, tensor(-0.0633, dtype=torch.float64)), (915, tensor(-0.0633, dtype=torch.float64)), (691, tensor(-0.0633, dtype=torch.float64)), (1377, tensor(-0.0633, dtype=torch.float64)), (970, tensor(-0.0632, dtype=torch.float64)), (977, tensor(-0.0631, dtype=torch.float64)), (778, tensor(-0.0631, dtype=torch.float64)), (1766, tensor(-0.0631, dtype=torch.float64)), (1732, tensor(-0.0631, dtype=torch.float64)), (1334, tensor(-0.0630, dtype=torch.float64)), (1061, tensor(-0.0630, dtype=torch.float64)), (347, tensor(-0.0630, dtype=torch.float64)), (1917, tensor(-0.0629, dtype=torch.float64)), (719, tensor(-0.0629, dtype=torch.float64)), (1429, tensor(-0.0628, dtype=torch.float64)), (196, tensor(-0.0628, dtype=torch.float64)), (350, tensor(-0.0628, dtype=torch.float64)), (1321, tensor(-0.0627, dtype=torch.float64)), (855, tensor(-0.0627, dtype=torch.float64)), (57, tensor(-0.0626, dtype=torch.float64)), (175, tensor(-0.0626, dtype=torch.float64)), (1286, tensor(-0.0625, dtype=torch.float64)), (104, tensor(-0.0624, dtype=torch.float64)), (885, tensor(-0.0621, dtype=torch.float64)), (71, tensor(-0.0617, dtype=torch.float64)), (2007, tensor(-0.0616, dtype=torch.float64)), (1625, tensor(-0.0615, dtype=torch.float64)), (1418, tensor(-0.0613, dtype=torch.float64)), (359, tensor(-0.0613, dtype=torch.float64)), (1644, tensor(-0.0613, dtype=torch.float64)), (1240, tensor(-0.0612, dtype=torch.float64)), (1979, tensor(-0.0611, dtype=torch.float64)), (2005, tensor(-0.0610, dtype=torch.float64)), (1049, tensor(-0.0610, dtype=torch.float64)), (2140, tensor(-0.0610, dtype=torch.float64)), (1987, tensor(-0.0609, dtype=torch.float64)), (391, tensor(-0.0609, dtype=torch.float64)), (1469, tensor(-0.0609, dtype=torch.float64)), (165, tensor(-0.0609, dtype=torch.float64)), (989, tensor(-0.0609, dtype=torch.float64)), (857, tensor(-0.0608, dtype=torch.float64)), (1157, tensor(-0.0607, dtype=torch.float64)), (1711, tensor(-0.0606, dtype=torch.float64)), (389, tensor(-0.0606, dtype=torch.float64)), (30, tensor(-0.0606, dtype=torch.float64)), (210, tensor(-0.0605, dtype=torch.float64)), (534, tensor(-0.0605, dtype=torch.float64)), (757, tensor(-0.0604, dtype=torch.float64)), (2082, tensor(-0.0603, dtype=torch.float64)), (1611, tensor(-0.0603, dtype=torch.float64)), (267, tensor(-0.0601, dtype=torch.float64)), (998, tensor(-0.0601, dtype=torch.float64)), (238, tensor(-0.0601, dtype=torch.float64)), (891, tensor(-0.0601, dtype=torch.float64)), (749, tensor(-0.0600, dtype=torch.float64)), (1001, tensor(-0.0599, dtype=torch.float64)), (1242, tensor(-0.0598, dtype=torch.float64)), (1024, tensor(-0.0596, dtype=torch.float64)), (563, tensor(-0.0595, dtype=torch.float64)), (905, tensor(-0.0594, dtype=torch.float64)), (601, tensor(-0.0594, dtype=torch.float64)), (1465, tensor(-0.0593, dtype=torch.float64)), (1693, tensor(-0.0592, dtype=torch.float64)), (343, tensor(-0.0592, dtype=torch.float64)), (1297, tensor(-0.0592, dtype=torch.float64)), (2112, tensor(-0.0591, dtype=torch.float64)), (1668, tensor(-0.0591, dtype=torch.float64)), (212, tensor(-0.0591, dtype=torch.float64)), (1340, tensor(-0.0591, dtype=torch.float64)), (1388, tensor(-0.0591, dtype=torch.float64)), (1589, tensor(-0.0590, dtype=torch.float64)), (137, tensor(-0.0589, dtype=torch.float64)), (756, tensor(-0.0589, dtype=torch.float64)), (947, tensor(-0.0589, dtype=torch.float64)), (1102, tensor(-0.0588, dtype=torch.float64)), (1904, tensor(-0.0588, dtype=torch.float64)), (627, tensor(-0.0587, dtype=torch.float64)), (863, tensor(-0.0587, dtype=torch.float64)), (872, tensor(-0.0587, dtype=torch.float64)), (1940, tensor(-0.0586, dtype=torch.float64)), (1596, tensor(-0.0586, dtype=torch.float64)), (908, tensor(-0.0586, dtype=torch.float64)), (2042, tensor(-0.0586, dtype=torch.float64)), (117, tensor(-0.0586, dtype=torch.float64)), (1122, tensor(-0.0585, dtype=torch.float64)), (1223, tensor(-0.0585, dtype=torch.float64)), (2033, tensor(-0.0584, dtype=torch.float64)), (1753, tensor(-0.0584, dtype=torch.float64)), (497, tensor(-0.0583, dtype=torch.float64)), (1974, tensor(-0.0583, dtype=torch.float64)), (111, tensor(-0.0582, dtype=torch.float64)), (1343, tensor(-0.0582, dtype=torch.float64)), (382, tensor(-0.0581, dtype=torch.float64)), (543, tensor(-0.0579, dtype=torch.float64)), (1283, tensor(-0.0579, dtype=torch.float64)), (629, tensor(-0.0577, dtype=torch.float64)), (1067, tensor(-0.0577, dtype=torch.float64)), (2228, tensor(-0.0577, dtype=torch.float64)), (839, tensor(-0.0576, dtype=torch.float64)), (161, tensor(-0.0575, dtype=torch.float64)), (1624, tensor(-0.0575, dtype=torch.float64)), (23, tensor(-0.0575, dtype=torch.float64)), (1307, tensor(-0.0574, dtype=torch.float64)), (911, tensor(-0.0574, dtype=torch.float64)), (150, tensor(-0.0574, dtype=torch.float64)), (1213, tensor(-0.0573, dtype=torch.float64)), (2201, tensor(-0.0572, dtype=torch.float64)), (1302, tensor(-0.0572, dtype=torch.float64)), (1896, tensor(-0.0571, dtype=torch.float64)), (1301, tensor(-0.0568, dtype=torch.float64)), (1544, tensor(-0.0568, dtype=torch.float64)), (1971, tensor(-0.0568, dtype=torch.float64)), (169, tensor(-0.0568, dtype=torch.float64)), (532, tensor(-0.0567, dtype=torch.float64)), (244, tensor(-0.0567, dtype=torch.float64)), (2101, tensor(-0.0566, dtype=torch.float64)), (221, tensor(-0.0566, dtype=torch.float64)), (304, tensor(-0.0564, dtype=torch.float64)), (868, tensor(-0.0562, dtype=torch.float64)), (2160, tensor(-0.0562, dtype=torch.float64)), (2146, tensor(-0.0561, dtype=torch.float64)), (1190, tensor(-0.0561, dtype=torch.float64)), (1688, tensor(-0.0560, dtype=torch.float64)), (654, tensor(-0.0560, dtype=torch.float64)), (718, tensor(-0.0559, dtype=torch.float64)), (1498, tensor(-0.0558, dtype=torch.float64)), (1821, tensor(-0.0558, dtype=torch.float64)), (573, tensor(-0.0556, dtype=torch.float64)), (727, tensor(-0.0556, dtype=torch.float64)), (1278, tensor(-0.0556, dtype=torch.float64)), (1838, tensor(-0.0554, dtype=torch.float64)), (1938, tensor(-0.0553, dtype=torch.float64)), (1341, tensor(-0.0553, dtype=torch.float64)), (453, tensor(-0.0552, dtype=torch.float64)), (1627, tensor(-0.0552, dtype=torch.float64)), (958, tensor(-0.0552, dtype=torch.float64)), (461, tensor(-0.0551, dtype=torch.float64)), (1342, tensor(-0.0549, dtype=torch.float64)), (378, tensor(-0.0549, dtype=torch.float64)), (804, tensor(-0.0548, dtype=torch.float64)), (1729, tensor(-0.0547, dtype=torch.float64)), (1453, tensor(-0.0546, dtype=torch.float64)), (2000, tensor(-0.0545, dtype=torch.float64)), (759, tensor(-0.0545, dtype=torch.float64)), (2011, tensor(-0.0544, dtype=torch.float64)), (402, tensor(-0.0544, dtype=torch.float64)), (840, tensor(-0.0543, dtype=torch.float64)), (988, tensor(-0.0543, dtype=torch.float64)), (1642, tensor(-0.0543, dtype=torch.float64)), (1138, tensor(-0.0541, dtype=torch.float64)), (327, tensor(-0.0541, dtype=torch.float64)), (1139, tensor(-0.0540, dtype=torch.float64)), (717, tensor(-0.0539, dtype=torch.float64)), (2204, tensor(-0.0539, dtype=torch.float64)), (1777, tensor(-0.0539, dtype=torch.float64)), (616, tensor(-0.0538, dtype=torch.float64)), (1085, tensor(-0.0538, dtype=torch.float64)), (2102, tensor(-0.0538, dtype=torch.float64)), (1446, tensor(-0.0537, dtype=torch.float64)), (1165, tensor(-0.0537, dtype=torch.float64)), (1326, tensor(-0.0537, dtype=torch.float64)), (231, tensor(-0.0536, dtype=torch.float64)), (2004, tensor(-0.0536, dtype=torch.float64)), (1651, tensor(-0.0536, dtype=torch.float64)), (1778, tensor(-0.0535, dtype=torch.float64)), (1499, tensor(-0.0535, dtype=torch.float64)), (1977, tensor(-0.0535, dtype=torch.float64)), (199, tensor(-0.0534, dtype=torch.float64)), (2214, tensor(-0.0534, dtype=torch.float64)), (472, tensor(-0.0534, dtype=torch.float64)), (1100, tensor(-0.0534, dtype=torch.float64)), (1828, tensor(-0.0533, dtype=torch.float64)), (1876, tensor(-0.0532, dtype=torch.float64)), (1737, tensor(-0.0532, dtype=torch.float64)), (477, tensor(-0.0532, dtype=torch.float64)), (576, tensor(-0.0530, dtype=torch.float64)), (121, tensor(-0.0530, dtype=torch.float64)), (234, tensor(-0.0530, dtype=torch.float64)), (731, tensor(-0.0529, dtype=torch.float64)), (1217, tensor(-0.0529, dtype=torch.float64)), (901, tensor(-0.0529, dtype=torch.float64)), (540, tensor(-0.0529, dtype=torch.float64)), (1912, tensor(-0.0528, dtype=torch.float64)), (103, tensor(-0.0528, dtype=torch.float64)), (123, tensor(-0.0528, dtype=torch.float64)), (1479, tensor(-0.0528, dtype=torch.float64)), (1868, tensor(-0.0528, dtype=torch.float64)), (1722, tensor(-0.0526, dtype=torch.float64)), (1299, tensor(-0.0526, dtype=torch.float64)), (618, tensor(-0.0525, dtype=torch.float64)), (1918, tensor(-0.0525, dtype=torch.float64)), (291, tensor(-0.0525, dtype=torch.float64)), (1433, tensor(-0.0525, dtype=torch.float64)), (506, tensor(-0.0524, dtype=torch.float64)), (1484, tensor(-0.0524, dtype=torch.float64)), (1972, tensor(-0.0523, dtype=torch.float64)), (1750, tensor(-0.0523, dtype=torch.float64)), (2147, tensor(-0.0523, dtype=torch.float64)), (1710, tensor(-0.0523, dtype=torch.float64)), (1155, tensor(-0.0522, dtype=torch.float64)), (589, tensor(-0.0522, dtype=torch.float64)), (78, tensor(-0.0521, dtype=torch.float64)), (358, tensor(-0.0521, dtype=torch.float64)), (2218, tensor(-0.0520, dtype=torch.float64)), (1331, tensor(-0.0519, dtype=torch.float64)), (581, tensor(-0.0519, dtype=torch.float64)), (572, tensor(-0.0518, dtype=torch.float64)), (1626, tensor(-0.0518, dtype=torch.float64)), (932, tensor(-0.0517, dtype=torch.float64)), (166, tensor(-0.0517, dtype=torch.float64)), (554, tensor(-0.0516, dtype=torch.float64)), (15, tensor(-0.0516, dtype=torch.float64)), (1107, tensor(-0.0515, dtype=torch.float64)), (2191, tensor(-0.0515, dtype=torch.float64)), (1137, tensor(-0.0514, dtype=torch.float64)), (128, tensor(-0.0514, dtype=torch.float64)), (653, tensor(-0.0513, dtype=torch.float64)), (381, tensor(-0.0513, dtype=torch.float64)), (1245, tensor(-0.0512, dtype=torch.float64)), (1637, tensor(-0.0512, dtype=torch.float64)), (1476, tensor(-0.0512, dtype=torch.float64)), (1571, tensor(-0.0510, dtype=torch.float64)), (2189, tensor(-0.0509, dtype=torch.float64)), (2052, tensor(-0.0509, dtype=torch.float64)), (1094, tensor(-0.0509, dtype=torch.float64)), (433, tensor(-0.0509, dtype=torch.float64)), (1585, tensor(-0.0508, dtype=torch.float64)), (360, tensor(-0.0507, dtype=torch.float64)), (1454, tensor(-0.0507, dtype=torch.float64)), (471, tensor(-0.0505, dtype=torch.float64)), (1747, tensor(-0.0504, dtype=torch.float64)), (157, tensor(-0.0504, dtype=torch.float64)), (455, tensor(-0.0504, dtype=torch.float64)), (1495, tensor(-0.0504, dtype=torch.float64)), (1738, tensor(-0.0503, dtype=torch.float64)), (100, tensor(-0.0503, dtype=torch.float64)), (622, tensor(-0.0503, dtype=torch.float64)), (1853, tensor(-0.0502, dtype=torch.float64)), (674, tensor(-0.0502, dtype=torch.float64)), (170, tensor(-0.0501, dtype=torch.float64)), (1610, tensor(-0.0501, dtype=torch.float64)), (352, tensor(-0.0500, dtype=torch.float64)), (1976, tensor(-0.0500, dtype=torch.float64)), (1500, tensor(-0.0499, dtype=torch.float64)), (803, tensor(-0.0499, dtype=torch.float64)), (115, tensor(-0.0499, dtype=torch.float64)), (1773, tensor(-0.0498, dtype=torch.float64)), (192, tensor(-0.0497, dtype=torch.float64)), (783, tensor(-0.0496, dtype=torch.float64)), (1437, tensor(-0.0495, dtype=torch.float64)), (1673, tensor(-0.0495, dtype=torch.float64)), (2185, tensor(-0.0494, dtype=torch.float64)), (684, tensor(-0.0494, dtype=torch.float64)), (692, tensor(-0.0492, dtype=torch.float64)), (149, tensor(-0.0492, dtype=torch.float64)), (1594, tensor(-0.0492, dtype=torch.float64)), (1263, tensor(-0.0491, dtype=torch.float64)), (670, tensor(-0.0491, dtype=torch.float64)), (1709, tensor(-0.0491, dtype=torch.float64)), (242, tensor(-0.0491, dtype=torch.float64)), (18, tensor(-0.0490, dtype=torch.float64)), (754, tensor(-0.0489, dtype=torch.float64)), (1316, tensor(-0.0488, dtype=torch.float64)), (1236, tensor(-0.0488, dtype=torch.float64)), (113, tensor(-0.0487, dtype=torch.float64)), (771, tensor(-0.0487, dtype=torch.float64)), (2216, tensor(-0.0486, dtype=torch.float64)), (800, tensor(-0.0486, dtype=torch.float64)), (518, tensor(-0.0486, dtype=torch.float64)), (1399, tensor(-0.0484, dtype=torch.float64)), (1989, tensor(-0.0484, dtype=torch.float64)), (2229, tensor(-0.0483, dtype=torch.float64)), (1080, tensor(-0.0483, dtype=torch.float64)), (2035, tensor(-0.0483, dtype=torch.float64)), (474, tensor(-0.0483, dtype=torch.float64)), (1783, tensor(-0.0482, dtype=torch.float64)), (168, tensor(-0.0482, dtype=torch.float64)), (2152, tensor(-0.0482, dtype=torch.float64)), (588, tensor(-0.0481, dtype=torch.float64)), (1599, tensor(-0.0481, dtype=torch.float64)), (1679, tensor(-0.0481, dtype=torch.float64)), (1906, tensor(-0.0481, dtype=torch.float64)), (1075, tensor(-0.0480, dtype=torch.float64)), (16, tensor(-0.0480, dtype=torch.float64)), (1419, tensor(-0.0479, dtype=torch.float64)), (773, tensor(-0.0478, dtype=torch.float64)), (70, tensor(-0.0476, dtype=torch.float64)), (334, tensor(-0.0476, dtype=torch.float64)), (2156, tensor(-0.0476, dtype=torch.float64)), (1816, tensor(-0.0475, dtype=torch.float64)), (1099, tensor(-0.0473, dtype=torch.float64)), (608, tensor(-0.0472, dtype=torch.float64)), (1119, tensor(-0.0471, dtype=torch.float64)), (248, tensor(-0.0471, dtype=torch.float64)), (1873, tensor(-0.0470, dtype=torch.float64)), (2144, tensor(-0.0470, dtype=torch.float64)), (1680, tensor(-0.0469, dtype=torch.float64)), (2200, tensor(-0.0469, dtype=torch.float64)), (2121, tensor(-0.0468, dtype=torch.float64)), (1785, tensor(-0.0468, dtype=torch.float64)), (2049, tensor(-0.0468, dtype=torch.float64)), (1955, tensor(-0.0467, dtype=torch.float64)), (864, tensor(-0.0467, dtype=torch.float64)), (1959, tensor(-0.0466, dtype=torch.float64)), (1597, tensor(-0.0465, dtype=torch.float64)), (1438, tensor(-0.0465, dtype=torch.float64)), (1364, tensor(-0.0465, dtype=torch.float64)), (1462, tensor(-0.0465, dtype=torch.float64)), (1829, tensor(-0.0465, dtype=torch.float64)), (277, tensor(-0.0463, dtype=torch.float64)), (392, tensor(-0.0463, dtype=torch.float64)), (1961, tensor(-0.0463, dtype=torch.float64)), (1184, tensor(-0.0462, dtype=torch.float64)), (1008, tensor(-0.0462, dtype=torch.float64)), (913, tensor(-0.0461, dtype=torch.float64)), (2149, tensor(-0.0460, dtype=torch.float64)), (1855, tensor(-0.0460, dtype=torch.float64)), (281, tensor(-0.0460, dtype=torch.float64)), (2157, tensor(-0.0459, dtype=torch.float64)), (967, tensor(-0.0459, dtype=torch.float64)), (2230, tensor(-0.0459, dtype=torch.float64)), (1512, tensor(-0.0458, dtype=torch.float64)), (496, tensor(-0.0457, dtype=torch.float64)), (458, tensor(-0.0457, dtype=torch.float64)), (746, tensor(-0.0456, dtype=torch.float64)), (2066, tensor(-0.0456, dtype=torch.float64)), (1106, tensor(-0.0456, dtype=torch.float64)), (2125, tensor(-0.0455, dtype=torch.float64)), (190, tensor(-0.0455, dtype=torch.float64)), (2172, tensor(-0.0455, dtype=torch.float64)), (712, tensor(-0.0455, dtype=torch.float64)), (1831, tensor(-0.0454, dtype=torch.float64)), (1874, tensor(-0.0454, dtype=torch.float64)), (230, tensor(-0.0453, dtype=torch.float64)), (2028, tensor(-0.0452, dtype=torch.float64)), (954, tensor(-0.0452, dtype=torch.float64)), (1995, tensor(-0.0451, dtype=torch.float64)), (2103, tensor(-0.0450, dtype=torch.float64)), (986, tensor(-0.0449, dtype=torch.float64)), (1455, tensor(-0.0449, dtype=torch.float64)), (1686, tensor(-0.0448, dtype=torch.float64)), (1226, tensor(-0.0448, dtype=torch.float64)), (1228, tensor(-0.0447, dtype=torch.float64)), (748, tensor(-0.0447, dtype=torch.float64)), (575, tensor(-0.0446, dtype=torch.float64)), (533, tensor(-0.0446, dtype=torch.float64)), (1552, tensor(-0.0444, dtype=torch.float64)), (1516, tensor(-0.0444, dtype=torch.float64)), (91, tensor(-0.0443, dtype=torch.float64)), (1239, tensor(-0.0443, dtype=torch.float64)), (1579, tensor(-0.0443, dtype=torch.float64)), (1452, tensor(-0.0443, dtype=torch.float64)), (241, tensor(-0.0442, dtype=torch.float64)), (2150, tensor(-0.0441, dtype=torch.float64)), (615, tensor(-0.0441, dtype=torch.float64)), (1345, tensor(-0.0441, dtype=torch.float64)), (522, tensor(-0.0440, dtype=torch.float64)), (997, tensor(-0.0440, dtype=torch.float64)), (1215, tensor(-0.0440, dtype=torch.float64)), (596, tensor(-0.0439, dtype=torch.float64)), (1186, tensor(-0.0439, dtype=torch.float64)), (1548, tensor(-0.0439, dtype=torch.float64)), (1048, tensor(-0.0439, dtype=torch.float64)), (969, tensor(-0.0438, dtype=torch.float64)), (740, tensor(-0.0438, dtype=torch.float64)), (487, tensor(-0.0437, dtype=torch.float64)), (459, tensor(-0.0437, dtype=torch.float64)), (1257, tensor(-0.0437, dtype=torch.float64)), (43, tensor(-0.0437, dtype=torch.float64)), (301, tensor(-0.0437, dtype=torch.float64)), (1787, tensor(-0.0435, dtype=torch.float64)), (510, tensor(-0.0434, dtype=torch.float64)), (435, tensor(-0.0434, dtype=torch.float64)), (1090, tensor(-0.0434, dtype=torch.float64)), (12, tensor(-0.0433, dtype=torch.float64)), (904, tensor(-0.0433, dtype=torch.float64)), (2089, tensor(-0.0433, dtype=torch.float64)), (504, tensor(-0.0432, dtype=torch.float64)), (1809, tensor(-0.0432, dtype=torch.float64)), (1092, tensor(-0.0432, dtype=torch.float64)), (698, tensor(-0.0430, dtype=torch.float64)), (1443, tensor(-0.0429, dtype=torch.float64)), (1648, tensor(-0.0428, dtype=torch.float64)), (293, tensor(-0.0428, dtype=torch.float64)), (1133, tensor(-0.0428, dtype=torch.float64)), (1830, tensor(-0.0427, dtype=torch.float64)), (966, tensor(-0.0426, dtype=torch.float64)), (1466, tensor(-0.0426, dtype=torch.float64)), (2098, tensor(-0.0426, dtype=torch.float64)), (786, tensor(-0.0426, dtype=torch.float64)), (209, tensor(-0.0425, dtype=torch.float64)), (1320, tensor(-0.0425, dtype=torch.float64)), (492, tensor(-0.0424, dtype=torch.float64)), (228, tensor(-0.0424, dtype=torch.float64)), (486, tensor(-0.0423, dtype=torch.float64)), (1662, tensor(-0.0422, dtype=torch.float64)), (1120, tensor(-0.0422, dtype=torch.float64)), (514, tensor(-0.0421, dtype=torch.float64)), (319, tensor(-0.0421, dtype=torch.float64)), (475, tensor(-0.0421, dtype=torch.float64)), (816, tensor(-0.0421, dtype=torch.float64)), (884, tensor(-0.0420, dtype=torch.float64)), (1179, tensor(-0.0420, dtype=torch.float64)), (1422, tensor(-0.0420, dtype=torch.float64)), (1209, tensor(-0.0419, dtype=torch.float64)), (480, tensor(-0.0419, dtype=torch.float64)), (17, tensor(-0.0419, dtype=torch.float64)), (577, tensor(-0.0419, dtype=torch.float64)), (2162, tensor(-0.0416, dtype=torch.float64)), (1929, tensor(-0.0416, dtype=torch.float64)), (19, tensor(-0.0416, dtype=torch.float64)), (1967, tensor(-0.0416, dtype=torch.float64)), (2068, tensor(-0.0415, dtype=torch.float64)), (787, tensor(-0.0415, dtype=torch.float64)), (101, tensor(-0.0415, dtype=torch.float64)), (993, tensor(-0.0415, dtype=torch.float64)), (290, tensor(-0.0414, dtype=torch.float64)), (2003, tensor(-0.0414, dtype=torch.float64)), (176, tensor(-0.0414, dtype=torch.float64)), (1003, tensor(-0.0413, dtype=torch.float64)), (1468, tensor(-0.0412, dtype=torch.float64)), (239, tensor(-0.0412, dtype=torch.float64)), (819, tensor(-0.0412, dtype=torch.float64)), (550, tensor(-0.0412, dtype=torch.float64)), (1178, tensor(-0.0412, dtype=torch.float64)), (1124, tensor(-0.0411, dtype=torch.float64)), (697, tensor(-0.0411, dtype=torch.float64)), (768, tensor(-0.0411, dtype=torch.float64)), (387, tensor(-0.0410, dtype=torch.float64)), (973, tensor(-0.0410, dtype=torch.float64)), (830, tensor(-0.0410, dtype=torch.float64)), (1233, tensor(-0.0410, dtype=torch.float64)), (2194, tensor(-0.0410, dtype=torch.float64)), (548, tensor(-0.0410, dtype=torch.float64)), (331, tensor(-0.0409, dtype=torch.float64)), (63, tensor(-0.0408, dtype=torch.float64)), (1062, tensor(-0.0408, dtype=torch.float64)), (2119, tensor(-0.0407, dtype=torch.float64)), (1181, tensor(-0.0407, dtype=torch.float64)), (1866, tensor(-0.0407, dtype=torch.float64)), (2142, tensor(-0.0407, dtype=torch.float64)), (527, tensor(-0.0407, dtype=torch.float64)), (625, tensor(-0.0406, dtype=torch.float64)), (938, tensor(-0.0406, dtype=torch.float64)), (1486, tensor(-0.0405, dtype=torch.float64)), (687, tensor(-0.0405, dtype=torch.float64)), (345, tensor(-0.0405, dtype=torch.float64)), (2014, tensor(-0.0404, dtype=torch.float64)), (144, tensor(-0.0404, dtype=torch.float64)), (716, tensor(-0.0404, dtype=torch.float64)), (1717, tensor(-0.0403, dtype=torch.float64)), (1402, tensor(-0.0403, dtype=torch.float64)), (1132, tensor(-0.0403, dtype=torch.float64)), (1287, tensor(-0.0402, dtype=torch.float64)), (1836, tensor(-0.0401, dtype=torch.float64)), (444, tensor(-0.0400, dtype=torch.float64)), (812, tensor(-0.0399, dtype=torch.float64)), (1846, tensor(-0.0399, dtype=torch.float64)), (515, tensor(-0.0398, dtype=torch.float64)), (882, tensor(-0.0398, dtype=torch.float64)), (844, tensor(-0.0397, dtype=torch.float64)), (1081, tensor(-0.0397, dtype=torch.float64)), (40, tensor(-0.0397, dtype=torch.float64)), (1591, tensor(-0.0397, dtype=torch.float64)), (499, tensor(-0.0393, dtype=torch.float64)), (579, tensor(-0.0393, dtype=torch.float64)), (1250, tensor(-0.0392, dtype=torch.float64)), (1719, tensor(-0.0392, dtype=torch.float64)), (1736, tensor(-0.0392, dtype=torch.float64)), (72, tensor(-0.0392, dtype=torch.float64)), (950, tensor(-0.0392, dtype=torch.float64)), (1336, tensor(-0.0391, dtype=torch.float64)), (943, tensor(-0.0391, dtype=torch.float64)), (1652, tensor(-0.0390, dtype=torch.float64)), (1282, tensor(-0.0390, dtype=torch.float64)), (762, tensor(-0.0389, dtype=torch.float64)), (1037, tensor(-0.0389, dtype=torch.float64)), (770, tensor(-0.0389, dtype=torch.float64)), (171, tensor(-0.0389, dtype=torch.float64)), (5, tensor(-0.0388, dtype=torch.float64)), (1583, tensor(-0.0388, dtype=torch.float64)), (935, tensor(-0.0388, dtype=torch.float64)), (503, tensor(-0.0388, dtype=torch.float64)), (568, tensor(-0.0387, dtype=torch.float64)), (167, tensor(-0.0387, dtype=torch.float64)), (836, tensor(-0.0386, dtype=torch.float64)), (1044, tensor(-0.0385, dtype=torch.float64)), (899, tensor(-0.0385, dtype=torch.float64)), (794, tensor(-0.0385, dtype=torch.float64)), (595, tensor(-0.0384, dtype=torch.float64)), (516, tensor(-0.0384, dtype=torch.float64)), (353, tensor(-0.0384, dtype=torch.float64)), (530, tensor(-0.0383, dtype=torch.float64)), (1407, tensor(-0.0383, dtype=torch.float64)), (79, tensor(-0.0383, dtype=torch.float64)), (940, tensor(-0.0383, dtype=torch.float64)), (1741, tensor(-0.0382, dtype=torch.float64)), (1404, tensor(-0.0381, dtype=torch.float64)), (2132, tensor(-0.0381, dtype=torch.float64)), (1712, tensor(-0.0380, dtype=torch.float64)), (2044, tensor(-0.0379, dtype=torch.float64)), (2064, tensor(-0.0379, dtype=torch.float64)), (200, tensor(-0.0379, dtype=torch.float64)), (2180, tensor(-0.0379, dtype=torch.float64)), (1386, tensor(-0.0379, dtype=torch.float64)), (1317, tensor(-0.0378, dtype=torch.float64)), (1409, tensor(-0.0378, dtype=torch.float64)), (1403, tensor(-0.0377, dtype=torch.float64)), (1266, tensor(-0.0377, dtype=torch.float64)), (246, tensor(-0.0377, dtype=torch.float64)), (1562, tensor(-0.0376, dtype=torch.float64)), (328, tensor(-0.0376, dtype=torch.float64)), (90, tensor(-0.0376, dtype=torch.float64)), (2158, tensor(-0.0375, dtype=torch.float64)), (97, tensor(-0.0375, dtype=torch.float64)), (337, tensor(-0.0374, dtype=torch.float64)), (523, tensor(-0.0373, dtype=torch.float64)), (1845, tensor(-0.0372, dtype=torch.float64)), (1026, tensor(-0.0372, dtype=torch.float64)), (214, tensor(-0.0371, dtype=torch.float64)), (82, tensor(-0.0370, dtype=torch.float64)), (1782, tensor(-0.0370, dtype=torch.float64)), (188, tensor(-0.0370, dtype=torch.float64)), (1442, tensor(-0.0370, dtype=torch.float64)), (1079, tensor(-0.0370, dtype=torch.float64)), (1420, tensor(-0.0369, dtype=torch.float64)), (582, tensor(-0.0368, dtype=torch.float64)), (897, tensor(-0.0368, dtype=torch.float64)), (1072, tensor(-0.0367, dtype=torch.float64)), (507, tensor(-0.0367, dtype=torch.float64)), (1149, tensor(-0.0367, dtype=torch.float64)), (237, tensor(-0.0367, dtype=torch.float64)), (1522, tensor(-0.0367, dtype=torch.float64)), (322, tensor(-0.0366, dtype=torch.float64)), (767, tensor(-0.0366, dtype=torch.float64)), (700, tensor(-0.0365, dtype=torch.float64)), (2124, tensor(-0.0365, dtype=torch.float64)), (2154, tensor(-0.0364, dtype=torch.float64)), (1779, tensor(-0.0364, dtype=torch.float64)), (1798, tensor(-0.0364, dtype=torch.float64)), (758, tensor(-0.0363, dtype=torch.float64)), (2073, tensor(-0.0363, dtype=torch.float64)), (1994, tensor(-0.0363, dtype=torch.float64)), (732, tensor(-0.0363, dtype=torch.float64)), (253, tensor(-0.0362, dtype=torch.float64)), (415, tensor(-0.0362, dtype=torch.float64)), (180, tensor(-0.0362, dtype=torch.float64)), (173, tensor(-0.0362, dtype=torch.float64)), (235, tensor(-0.0362, dtype=torch.float64)), (1055, tensor(-0.0361, dtype=torch.float64)), (422, tensor(-0.0361, dtype=torch.float64)), (1053, tensor(-0.0361, dtype=torch.float64)), (829, tensor(-0.0361, dtype=torch.float64)), (1373, tensor(-0.0361, dtype=torch.float64)), (1463, tensor(-0.0360, dtype=torch.float64)), (1926, tensor(-0.0360, dtype=torch.float64)), (1088, tensor(-0.0360, dtype=torch.float64)), (1361, tensor(-0.0360, dtype=torch.float64)), (637, tensor(-0.0359, dtype=torch.float64)), (321, tensor(-0.0358, dtype=torch.float64)), (865, tensor(-0.0358, dtype=torch.float64)), (1598, tensor(-0.0357, dtype=torch.float64)), (1823, tensor(-0.0355, dtype=torch.float64)), (45, tensor(-0.0355, dtype=torch.float64)), (463, tensor(-0.0355, dtype=torch.float64)), (887, tensor(-0.0355, dtype=torch.float64)), (1098, tensor(-0.0354, dtype=torch.float64)), (1146, tensor(-0.0354, dtype=torch.float64)), (1945, tensor(-0.0354, dtype=torch.float64)), (491, tensor(-0.0354, dtype=torch.float64)), (755, tensor(-0.0352, dtype=torch.float64)), (1116, tensor(-0.0352, dtype=torch.float64)), (2065, tensor(-0.0351, dtype=torch.float64)), (145, tensor(-0.0350, dtype=torch.float64)), (396, tensor(-0.0349, dtype=torch.float64)), (1218, tensor(-0.0349, dtype=torch.float64)), (39, tensor(-0.0349, dtype=torch.float64)), (1224, tensor(-0.0349, dtype=torch.float64)), (1508, tensor(-0.0348, dtype=torch.float64)), (1790, tensor(-0.0348, dtype=torch.float64)), (1915, tensor(-0.0348, dtype=torch.float64)), (163, tensor(-0.0347, dtype=torch.float64)), (1629, tensor(-0.0346, dtype=torch.float64)), (1880, tensor(-0.0346, dtype=torch.float64)), (1885, tensor(-0.0346, dtype=torch.float64)), (410, tensor(-0.0346, dtype=torch.float64)), (1914, tensor(-0.0346, dtype=torch.float64)), (240, tensor(-0.0345, dtype=torch.float64)), (1134, tensor(-0.0345, dtype=torch.float64)), (158, tensor(-0.0344, dtype=torch.float64)), (1531, tensor(-0.0344, dtype=torch.float64)), (335, tensor(-0.0344, dtype=torch.float64)), (761, tensor(-0.0343, dtype=torch.float64)), (1378, tensor(-0.0343, dtype=torch.float64)), (1272, tensor(-0.0343, dtype=torch.float64)), (211, tensor(-0.0342, dtype=torch.float64)), (363, tensor(-0.0342, dtype=torch.float64)), (1690, tensor(-0.0342, dtype=torch.float64)), (1705, tensor(-0.0342, dtype=torch.float64)), (1919, tensor(-0.0341, dtype=torch.float64)), (2120, tensor(-0.0339, dtype=torch.float64)), (695, tensor(-0.0339, dtype=torch.float64)), (164, tensor(-0.0337, dtype=torch.float64)), (1130, tensor(-0.0336, dtype=torch.float64)), (1863, tensor(-0.0336, dtype=torch.float64)), (265, tensor(-0.0336, dtype=torch.float64)), (1617, tensor(-0.0336, dtype=torch.float64)), (280, tensor(-0.0336, dtype=torch.float64)), (1619, tensor(-0.0335, dtype=torch.float64)), (1261, tensor(-0.0335, dtype=torch.float64)), (677, tensor(-0.0335, dtype=torch.float64)), (703, tensor(-0.0335, dtype=torch.float64)), (1101, tensor(-0.0334, dtype=torch.float64)), (388, tensor(-0.0334, dtype=torch.float64)), (689, tensor(-0.0334, dtype=torch.float64)), (539, tensor(-0.0333, dtype=torch.float64)), (1123, tensor(-0.0333, dtype=torch.float64)), (1580, tensor(-0.0333, dtype=torch.float64)), (134, tensor(-0.0332, dtype=torch.float64)), (1575, tensor(-0.0332, dtype=torch.float64)), (2050, tensor(-0.0331, dtype=torch.float64)), (1497, tensor(-0.0331, dtype=torch.float64)), (2236, tensor(-0.0330, dtype=torch.float64)), (405, tensor(-0.0330, dtype=torch.float64)), (737, tensor(-0.0329, dtype=torch.float64)), (1767, tensor(-0.0329, dtype=torch.float64)), (711, tensor(-0.0328, dtype=torch.float64)), (1255, tensor(-0.0328, dtype=torch.float64)), (329, tensor(-0.0328, dtype=torch.float64)), (1171, tensor(-0.0327, dtype=torch.float64)), (667, tensor(-0.0327, dtype=torch.float64)), (2165, tensor(-0.0326, dtype=torch.float64)), (300, tensor(-0.0326, dtype=torch.float64)), (914, tensor(-0.0326, dtype=torch.float64)), (425, tensor(-0.0326, dtype=torch.float64)), (2206, tensor(-0.0326, dtype=torch.float64)), (1405, tensor(-0.0326, dtype=torch.float64)), (724, tensor(-0.0325, dtype=torch.float64)), (1612, tensor(-0.0325, dtype=torch.float64)), (613, tensor(-0.0325, dtype=torch.float64)), (257, tensor(-0.0325, dtype=torch.float64)), (1634, tensor(-0.0324, dtype=torch.float64)), (1554, tensor(-0.0324, dtype=torch.float64)), (1410, tensor(-0.0324, dtype=torch.float64)), (1601, tensor(-0.0324, dtype=torch.float64)), (2210, tensor(-0.0323, dtype=torch.float64)), (1198, tensor(-0.0323, dtype=torch.float64)), (269, tensor(-0.0323, dtype=torch.float64)), (85, tensor(-0.0323, dtype=torch.float64)), (1770, tensor(-0.0323, dtype=torch.float64)), (182, tensor(-0.0322, dtype=torch.float64)), (2225, tensor(-0.0322, dtype=torch.float64)), (598, tensor(-0.0322, dtype=torch.float64)), (1643, tensor(-0.0322, dtype=torch.float64)), (593, tensor(-0.0322, dtype=torch.float64)), (896, tensor(-0.0321, dtype=torch.float64)), (1423, tensor(-0.0321, dtype=torch.float64)), (68, tensor(-0.0321, dtype=torch.float64)), (1635, tensor(-0.0320, dtype=torch.float64)), (1475, tensor(-0.0320, dtype=torch.float64)), (801, tensor(-0.0319, dtype=torch.float64)), (688, tensor(-0.0319, dtype=torch.float64)), (1647, tensor(-0.0318, dtype=torch.float64)), (129, tensor(-0.0317, dtype=torch.float64)), (1536, tensor(-0.0317, dtype=torch.float64)), (403, tensor(-0.0316, dtype=torch.float64)), (1528, tensor(-0.0316, dtype=torch.float64)), (1888, tensor(-0.0316, dtype=torch.float64)), (610, tensor(-0.0315, dtype=torch.float64)), (151, tensor(-0.0315, dtype=torch.float64)), (1509, tensor(-0.0314, dtype=torch.float64)), (66, tensor(-0.0314, dtype=torch.float64)), (285, tensor(-0.0314, dtype=torch.float64)), (1901, tensor(-0.0314, dtype=torch.float64)), (146, tensor(-0.0313, dtype=torch.float64)), (930, tensor(-0.0313, dtype=torch.float64)), (1982, tensor(-0.0313, dtype=torch.float64)), (1946, tensor(-0.0313, dtype=torch.float64)), (1861, tensor(-0.0313, dtype=torch.float64)), (346, tensor(-0.0312, dtype=torch.float64)), (1063, tensor(-0.0312, dtype=torch.float64)), (1795, tensor(-0.0312, dtype=torch.float64)), (1448, tensor(-0.0311, dtype=torch.float64)), (1794, tensor(-0.0310, dtype=torch.float64)), (802, tensor(-0.0310, dtype=torch.float64)), (20, tensor(-0.0309, dtype=torch.float64)), (220, tensor(-0.0309, dtype=torch.float64)), (2030, tensor(-0.0309, dtype=torch.float64)), (1464, tensor(-0.0308, dtype=torch.float64)), (1672, tensor(-0.0308, dtype=torch.float64)), (753, tensor(-0.0308, dtype=torch.float64)), (1129, tensor(-0.0308, dtype=torch.float64)), (1440, tensor(-0.0307, dtype=torch.float64)), (2114, tensor(-0.0307, dtype=torch.float64)), (2202, tensor(-0.0307, dtype=torch.float64)), (1586, tensor(-0.0307, dtype=torch.float64)), (945, tensor(-0.0307, dtype=torch.float64)), (138, tensor(-0.0306, dtype=torch.float64)), (1970, tensor(-0.0305, dtype=torch.float64)), (1436, tensor(-0.0305, dtype=torch.float64)), (1447, tensor(-0.0305, dtype=torch.float64)), (133, tensor(-0.0305, dtype=torch.float64)), (1708, tensor(-0.0304, dtype=torch.float64)), (1905, tensor(-0.0303, dtype=torch.float64)), (448, tensor(-0.0302, dtype=torch.float64)), (1775, tensor(-0.0301, dtype=torch.float64)), (735, tensor(-0.0301, dtype=torch.float64)), (1837, tensor(-0.0301, dtype=torch.float64)), (965, tensor(-0.0301, dtype=torch.float64)), (1526, tensor(-0.0301, dtype=torch.float64)), (1564, tensor(-0.0300, dtype=torch.float64)), (1608, tensor(-0.0300, dtype=torch.float64)), (642, tensor(-0.0300, dtype=torch.float64)), (1432, tensor(-0.0300, dtype=torch.float64)), (2145, tensor(-0.0299, dtype=torch.float64)), (1206, tensor(-0.0299, dtype=torch.float64)), (649, tensor(-0.0299, dtype=torch.float64)), (62, tensor(-0.0299, dtype=torch.float64)), (226, tensor(-0.0299, dtype=torch.float64)), (738, tensor(-0.0298, dtype=torch.float64)), (1376, tensor(-0.0298, dtype=torch.float64)), (1833, tensor(-0.0298, dtype=torch.float64)), (386, tensor(-0.0298, dtype=torch.float64)), (827, tensor(-0.0297, dtype=torch.float64)), (1743, tensor(-0.0296, dtype=torch.float64)), (1815, tensor(-0.0296, dtype=torch.float64)), (2205, tensor(-0.0296, dtype=torch.float64)), (1230, tensor(-0.0295, dtype=torch.float64)), (870, tensor(-0.0295, dtype=torch.float64)), (1108, tensor(-0.0295, dtype=torch.float64)), (1458, tensor(-0.0295, dtype=torch.float64)), (308, tensor(-0.0294, dtype=torch.float64)), (1557, tensor(-0.0294, dtype=torch.float64)), (1588, tensor(-0.0293, dtype=torch.float64)), (968, tensor(-0.0293, dtype=torch.float64)), (604, tensor(-0.0293, dtype=torch.float64)), (599, tensor(-0.0292, dtype=torch.float64)), (906, tensor(-0.0292, dtype=torch.float64)), (561, tensor(-0.0291, dtype=torch.float64)), (877, tensor(-0.0291, dtype=torch.float64)), (21, tensor(-0.0290, dtype=torch.float64)), (795, tensor(-0.0290, dtype=torch.float64)), (1315, tensor(-0.0290, dtype=torch.float64)), (131, tensor(-0.0290, dtype=torch.float64)), (985, tensor(-0.0290, dtype=torch.float64)), (464, tensor(-0.0289, dtype=torch.float64)), (1572, tensor(-0.0289, dtype=torch.float64)), (1351, tensor(-0.0289, dtype=torch.float64)), (25, tensor(-0.0288, dtype=torch.float64)), (1513, tensor(-0.0288, dtype=torch.float64)), (1653, tensor(-0.0287, dtype=torch.float64)), (890, tensor(-0.0287, dtype=torch.float64)), (1047, tensor(-0.0286, dtype=torch.float64)), (648, tensor(-0.0286, dtype=torch.float64)), (351, tensor(-0.0286, dtype=torch.float64)), (2196, tensor(-0.0284, dtype=torch.float64)), (2037, tensor(-0.0284, dtype=torch.float64)), (704, tensor(-0.0284, dtype=torch.float64)), (933, tensor(-0.0284, dtype=torch.float64)), (696, tensor(-0.0284, dtype=torch.float64)), (1925, tensor(-0.0284, dtype=torch.float64)), (1677, tensor(-0.0284, dtype=torch.float64)), (407, tensor(-0.0283, dtype=torch.float64)), (537, tensor(-0.0282, dtype=torch.float64)), (1158, tensor(-0.0282, dtype=torch.float64)), (680, tensor(-0.0282, dtype=torch.float64)), (204, tensor(-0.0281, dtype=torch.float64)), (1170, tensor(-0.0280, dtype=torch.float64)), (147, tensor(-0.0280, dtype=torch.float64)), (1932, tensor(-0.0280, dtype=torch.float64)), (1559, tensor(-0.0279, dtype=torch.float64)), (634, tensor(-0.0279, dtype=torch.float64)), (512, tensor(-0.0279, dtype=torch.float64)), (1144, tensor(-0.0278, dtype=torch.float64)), (643, tensor(-0.0278, dtype=torch.float64)), (457, tensor(-0.0275, dtype=torch.float64)), (122, tensor(-0.0275, dtype=torch.float64)), (110, tensor(-0.0275, dtype=torch.float64)), (831, tensor(-0.0274, dtype=torch.float64)), (552, tensor(-0.0274, dtype=torch.float64)), (1202, tensor(-0.0274, dtype=torch.float64)), (1355, tensor(-0.0273, dtype=torch.float64)), (1039, tensor(-0.0273, dtype=torch.float64)), (1421, tensor(-0.0273, dtype=torch.float64)), (1818, tensor(-0.0271, dtype=torch.float64)), (784, tensor(-0.0271, dtype=torch.float64)), (1768, tensor(-0.0270, dtype=torch.float64)), (2110, tensor(-0.0270, dtype=torch.float64)), (451, tensor(-0.0270, dtype=torch.float64)), (2175, tensor(-0.0270, dtype=torch.float64)), (1957, tensor(-0.0270, dtype=torch.float64)), (556, tensor(-0.0270, dtype=torch.float64)), (1059, tensor(-0.0270, dtype=torch.float64)), (1615, tensor(-0.0269, dtype=torch.float64)), (1159, tensor(-0.0268, dtype=torch.float64)), (1714, tensor(-0.0267, dtype=torch.float64)), (1568, tensor(-0.0267, dtype=torch.float64)), (67, tensor(-0.0265, dtype=torch.float64)), (1456, tensor(-0.0265, dtype=torch.float64)), (660, tensor(-0.0265, dtype=torch.float64)), (2031, tensor(-0.0265, dtype=torch.float64)), (574, tensor(-0.0265, dtype=torch.float64)), (948, tensor(-0.0264, dtype=torch.float64)), (1002, tensor(-0.0264, dtype=torch.float64)), (263, tensor(-0.0263, dtype=torch.float64)), (1983, tensor(-0.0263, dtype=torch.float64)), (1819, tensor(-0.0262, dtype=torch.float64)), (2018, tensor(-0.0262, dtype=torch.float64)), (1751, tensor(-0.0261, dtype=torch.float64)), (1936, tensor(-0.0261, dtype=torch.float64)), (1156, tensor(-0.0261, dtype=torch.float64)), (1511, tensor(-0.0261, dtype=torch.float64)), (1270, tensor(-0.0260, dtype=torch.float64)), (2062, tensor(-0.0259, dtype=torch.float64)), (2143, tensor(-0.0259, dtype=torch.float64)), (1952, tensor(-0.0258, dtype=torch.float64)), (2181, tensor(-0.0258, dtype=torch.float64)), (311, tensor(-0.0258, dtype=torch.float64)), (1494, tensor(-0.0258, dtype=torch.float64)), (2127, tensor(-0.0257, dtype=torch.float64)), (2232, tensor(-0.0257, dtype=torch.float64)), (1551, tensor(-0.0257, dtype=torch.float64)), (1234, tensor(-0.0257, dtype=torch.float64)), (315, tensor(-0.0256, dtype=torch.float64)), (1428, tensor(-0.0256, dtype=torch.float64)), (1065, tensor(-0.0256, dtype=torch.float64)), (2095, tensor(-0.0255, dtype=torch.float64)), (1881, tensor(-0.0255, dtype=torch.float64)), (900, tensor(-0.0253, dtype=torch.float64)), (679, tensor(-0.0253, dtype=torch.float64)), (1802, tensor(-0.0252, dtype=torch.float64)), (624, tensor(-0.0252, dtype=torch.float64)), (1902, tensor(-0.0251, dtype=torch.float64)), (2002, tensor(-0.0251, dtype=torch.float64)), (707, tensor(-0.0251, dtype=torch.float64)), (2058, tensor(-0.0250, dtype=torch.float64)), (1205, tensor(-0.0250, dtype=torch.float64)), (1620, tensor(-0.0249, dtype=torch.float64)), (1654, tensor(-0.0249, dtype=torch.float64)), (777, tensor(-0.0249, dtype=torch.float64)), (51, tensor(-0.0249, dtype=torch.float64)), (55, tensor(-0.0249, dtype=torch.float64)), (1164, tensor(-0.0249, dtype=torch.float64)), (725, tensor(-0.0248, dtype=torch.float64)), (2016, tensor(-0.0247, dtype=torch.float64)), (544, tensor(-0.0247, dtype=torch.float64)), (420, tensor(-0.0247, dtype=torch.float64)), (1127, tensor(-0.0247, dtype=torch.float64)), (279, tensor(-0.0246, dtype=torch.float64)), (578, tensor(-0.0246, dtype=torch.float64)), (639, tensor(-0.0246, dtype=torch.float64)), (1212, tensor(-0.0244, dtype=torch.float64)), (2163, tensor(-0.0244, dtype=torch.float64)), (992, tensor(-0.0243, dtype=torch.float64)), (126, tensor(-0.0243, dtype=torch.float64)), (1309, tensor(-0.0243, dtype=torch.float64)), (1411, tensor(-0.0242, dtype=torch.float64)), (1280, tensor(-0.0242, dtype=torch.float64)), (1614, tensor(-0.0241, dtype=torch.float64)), (931, tensor(-0.0241, dtype=torch.float64)), (2118, tensor(-0.0241, dtype=torch.float64)), (1718, tensor(-0.0239, dtype=torch.float64)), (2184, tensor(-0.0239, dtype=torch.float64)), (1357, tensor(-0.0239, dtype=torch.float64)), (845, tensor(-0.0239, dtype=torch.float64)), (953, tensor(-0.0239, dtype=torch.float64)), (439, tensor(-0.0238, dtype=torch.float64)), (1235, tensor(-0.0238, dtype=torch.float64)), (1034, tensor(-0.0238, dtype=torch.float64)), (1694, tensor(-0.0238, dtype=torch.float64)), (426, tensor(-0.0237, dtype=torch.float64)), (623, tensor(-0.0237, dtype=torch.float64)), (1381, tensor(-0.0236, dtype=torch.float64)), (1771, tensor(-0.0235, dtype=torch.float64)), (916, tensor(-0.0235, dtype=torch.float64)), (978, tensor(-0.0235, dtype=torch.float64)), (2069, tensor(-0.0234, dtype=torch.float64)), (374, tensor(-0.0234, dtype=torch.float64)), (152, tensor(-0.0234, dtype=torch.float64)), (1656, tensor(-0.0233, dtype=torch.float64)), (961, tensor(-0.0233, dtype=torch.float64)), (681, tensor(-0.0233, dtype=torch.float64)), (2071, tensor(-0.0233, dtype=torch.float64)), (278, tensor(-0.0233, dtype=torch.float64)), (2083, tensor(-0.0232, dtype=torch.float64)), (3, tensor(-0.0229, dtype=torch.float64)), (1396, tensor(-0.0229, dtype=torch.float64)), (1817, tensor(-0.0229, dtype=torch.float64)), (646, tensor(-0.0229, dtype=torch.float64)), (456, tensor(-0.0229, dtype=torch.float64)), (834, tensor(-0.0228, dtype=torch.float64)), (1111, tensor(-0.0228, dtype=torch.float64)), (107, tensor(-0.0228, dtype=torch.float64)), (824, tensor(-0.0228, dtype=torch.float64)), (609, tensor(-0.0227, dtype=torch.float64)), (2139, tensor(-0.0227, dtype=torch.float64)), (815, tensor(-0.0226, dtype=torch.float64)), (476, tensor(-0.0226, dtype=torch.float64)), (385, tensor(-0.0225, dtype=torch.float64)), (1268, tensor(-0.0225, dtype=torch.float64)), (2085, tensor(-0.0225, dtype=torch.float64)), (511, tensor(-0.0225, dtype=torch.float64)), (2235, tensor(-0.0224, dtype=torch.float64)), (1593, tensor(-0.0224, dtype=torch.float64)), (1560, tensor(-0.0224, dtype=torch.float64)), (1221, tensor(-0.0223, dtype=torch.float64)), (1277, tensor(-0.0223, dtype=torch.float64)), (1859, tensor(-0.0223, dtype=torch.float64)), (820, tensor(-0.0223, dtype=torch.float64)), (1555, tensor(-0.0222, dtype=torch.float64)), (959, tensor(-0.0222, dtype=torch.float64)), (1582, tensor(-0.0222, dtype=torch.float64)), (401, tensor(-0.0222, dtype=torch.float64)), (893, tensor(-0.0222, dtype=torch.float64)), (312, tensor(-0.0222, dtype=torch.float64)), (46, tensor(-0.0221, dtype=torch.float64)), (752, tensor(-0.0221, dtype=torch.float64)), (181, tensor(-0.0221, dtype=torch.float64)), (2208, tensor(-0.0220, dtype=torch.float64)), (96, tensor(-0.0220, dtype=torch.float64)), (1659, tensor(-0.0218, dtype=torch.float64)), (1813, tensor(-0.0218, dtype=torch.float64)), (1305, tensor(-0.0218, dtype=torch.float64)), (810, tensor(-0.0217, dtype=torch.float64)), (1203, tensor(-0.0216, dtype=torch.float64)), (1096, tensor(-0.0216, dtype=torch.float64)), (676, tensor(-0.0216, dtype=torch.float64)), (1160, tensor(-0.0215, dtype=torch.float64)), (2219, tensor(-0.0215, dtype=torch.float64)), (2224, tensor(-0.0215, dtype=torch.float64)), (470, tensor(-0.0215, dtype=torch.float64)), (1921, tensor(-0.0215, dtype=torch.float64)), (838, tensor(-0.0214, dtype=torch.float64)), (22, tensor(-0.0214, dtype=torch.float64)), (1264, tensor(-0.0214, dtype=torch.float64)), (1739, tensor(-0.0214, dtype=torch.float64)), (261, tensor(-0.0213, dtype=torch.float64)), (468, tensor(-0.0213, dtype=torch.float64)), (1908, tensor(-0.0213, dtype=torch.float64)), (652, tensor(-0.0213, dtype=torch.float64)), (1942, tensor(-0.0213, dtype=torch.float64)), (84, tensor(-0.0212, dtype=torch.float64)), (1176, tensor(-0.0212, dtype=torch.float64)), (1291, tensor(-0.0212, dtype=torch.float64)), (626, tensor(-0.0212, dtype=torch.float64)), (934, tensor(-0.0211, dtype=torch.float64)), (994, tensor(-0.0211, dtype=torch.float64)), (909, tensor(-0.0211, dtype=torch.float64)), (174, tensor(-0.0211, dtype=torch.float64)), (1064, tensor(-0.0211, dtype=torch.float64)), (1328, tensor(-0.0211, dtype=torch.float64)), (469, tensor(-0.0210, dtype=torch.float64)), (520, tensor(-0.0209, dtype=torch.float64)), (873, tensor(-0.0209, dtype=torch.float64)), (811, tensor(-0.0209, dtype=torch.float64)), (272, tensor(-0.0209, dtype=torch.float64)), (2234, tensor(-0.0208, dtype=torch.float64)), (1834, tensor(-0.0208, dtype=torch.float64)), (821, tensor(-0.0207, dtype=torch.float64)), (98, tensor(-0.0205, dtype=torch.float64)), (1514, tensor(-0.0205, dtype=torch.float64)), (1362, tensor(-0.0204, dtype=torch.float64)), (1701, tensor(-0.0203, dtype=torch.float64)), (1506, tensor(-0.0203, dtype=torch.float64)), (567, tensor(-0.0203, dtype=torch.float64)), (2087, tensor(-0.0203, dtype=torch.float64)), (1185, tensor(-0.0202, dtype=torch.float64)), (630, tensor(-0.0202, dtype=torch.float64)), (1658, tensor(-0.0202, dtype=torch.float64)), (1007, tensor(-0.0201, dtype=torch.float64)), (1489, tensor(-0.0201, dtype=torch.float64)), (2188, tensor(-0.0201, dtype=torch.float64)), (1776, tensor(-0.0201, dtype=torch.float64)), (560, tensor(-0.0200, dtype=torch.float64)), (1558, tensor(-0.0200, dtype=torch.float64)), (1477, tensor(-0.0200, dtype=torch.float64)), (2043, tensor(-0.0199, dtype=torch.float64)), (1487, tensor(-0.0199, dtype=torch.float64)), (1057, tensor(-0.0199, dtype=torch.float64)), (1084, tensor(-0.0198, dtype=torch.float64)), (2091, tensor(-0.0198, dtype=torch.float64)), (996, tensor(-0.0197, dtype=torch.float64)), (307, tensor(-0.0197, dtype=torch.float64)), (292, tensor(-0.0196, dtype=torch.float64)), (619, tensor(-0.0196, dtype=torch.float64)), (1220, tensor(-0.0196, dtype=torch.float64)), (621, tensor(-0.0195, dtype=torch.float64)), (395, tensor(-0.0195, dtype=torch.float64)), (1222, tensor(-0.0195, dtype=torch.float64)), (1416, tensor(-0.0195, dtype=torch.float64)), (2072, tensor(-0.0194, dtype=torch.float64)), (1110, tensor(-0.0194, dtype=torch.float64)), (1678, tensor(-0.0194, dtype=torch.float64)), (1167, tensor(-0.0194, dtype=torch.float64)), (38, tensor(-0.0193, dtype=torch.float64)), (685, tensor(-0.0193, dtype=torch.float64)), (606, tensor(-0.0193, dtype=torch.float64)), (197, tensor(-0.0193, dtype=torch.float64)), (600, tensor(-0.0192, dtype=torch.float64)), (517, tensor(-0.0192, dtype=torch.float64)), (547, tensor(-0.0190, dtype=torch.float64)), (2009, tensor(-0.0190, dtype=torch.float64)), (1457, tensor(-0.0189, dtype=torch.float64)), (313, tensor(-0.0189, dtype=torch.float64)), (956, tensor(-0.0188, dtype=torch.float64)), (2138, tensor(-0.0187, dtype=torch.float64)), (1569, tensor(-0.0187, dtype=torch.float64)), (526, tensor(-0.0186, dtype=torch.float64)), (1755, tensor(-0.0186, dtype=torch.float64)), (1730, tensor(-0.0186, dtype=torch.float64)), (1827, tensor(-0.0186, dtype=torch.float64)), (189, tensor(-0.0185, dtype=torch.float64)), (1490, tensor(-0.0185, dtype=torch.float64)), (24, tensor(-0.0185, dtype=torch.float64)), (1655, tensor(-0.0185, dtype=torch.float64)), (1150, tensor(-0.0185, dtype=torch.float64)), (963, tensor(-0.0184, dtype=torch.float64)), (1609, tensor(-0.0184, dtype=torch.float64)), (177, tensor(-0.0184, dtype=torch.float64)), (1172, tensor(-0.0184, dtype=torch.float64)), (1441, tensor(-0.0184, dtype=torch.float64)), (1424, tensor(-0.0184, dtype=torch.float64)), (1199, tensor(-0.0184, dtype=torch.float64)), (1414, tensor(-0.0184, dtype=torch.float64)), (1434, tensor(-0.0183, dtype=torch.float64)), (114, tensor(-0.0183, dtype=torch.float64)), (183, tensor(-0.0183, dtype=torch.float64)), (668, tensor(-0.0183, dtype=torch.float64)), (1387, tensor(-0.0181, dtype=torch.float64)), (2029, tensor(-0.0181, dtype=torch.float64)), (686, tensor(-0.0180, dtype=torch.float64)), (1581, tensor(-0.0179, dtype=torch.float64)), (1566, tensor(-0.0179, dtype=torch.float64)), (1135, tensor(-0.0179, dtype=torch.float64)), (841, tensor(-0.0179, dtype=torch.float64)), (1733, tensor(-0.0179, dtype=torch.float64)), (617, tensor(-0.0178, dtype=torch.float64)), (781, tensor(-0.0178, dtype=torch.float64)), (1871, tensor(-0.0177, dtype=torch.float64)), (1964, tensor(-0.0177, dtype=torch.float64)), (1350, tensor(-0.0176, dtype=torch.float64)), (655, tensor(-0.0175, dtype=torch.float64)), (1267, tensor(-0.0175, dtype=torch.float64)), (1279, tensor(-0.0175, dtype=torch.float64)), (1397, tensor(-0.0175, dtype=torch.float64)), (1327, tensor(-0.0175, dtype=torch.float64)), (1163, tensor(-0.0175, dtype=torch.float64)), (219, tensor(-0.0175, dtype=torch.float64)), (1368, tensor(-0.0174, dtype=torch.float64)), (1587, tensor(-0.0174, dtype=torch.float64)), (1194, tensor(-0.0174, dtype=torch.float64)), (1891, tensor(-0.0174, dtype=torch.float64)), (1208, tensor(-0.0173, dtype=torch.float64)), (35, tensor(-0.0173, dtype=torch.float64)), (1391, tensor(-0.0173, dtype=torch.float64)), (369, tensor(-0.0172, dtype=torch.float64)), (1195, tensor(-0.0171, dtype=torch.float64)), (412, tensor(-0.0171, dtype=torch.float64)), (284, tensor(-0.0171, dtype=torch.float64)), (1152, tensor(-0.0170, dtype=torch.float64)), (309, tensor(-0.0170, dtype=torch.float64)), (706, tensor(-0.0170, dtype=torch.float64)), (1015, tensor(-0.0169, dtype=torch.float64)), (939, tensor(-0.0168, dtype=torch.float64)), (105, tensor(-0.0168, dtype=torch.float64)), (449, tensor(-0.0168, dtype=torch.float64)), (1862, tensor(-0.0168, dtype=torch.float64)), (273, tensor(-0.0168, dtype=torch.float64)), (509, tensor(-0.0167, dtype=torch.float64)), (1211, tensor(-0.0167, dtype=torch.float64)), (2171, tensor(-0.0167, dtype=torch.float64)), (1460, tensor(-0.0167, dtype=torch.float64)), (605, tensor(-0.0167, dtype=torch.float64)), (524, tensor(-0.0167, dtype=torch.float64)), (416, tensor(-0.0166, dtype=torch.float64)), (460, tensor(-0.0166, dtype=torch.float64)), (1931, tensor(-0.0165, dtype=torch.float64)), (808, tensor(-0.0164, dtype=torch.float64)), (445, tensor(-0.0164, dtype=torch.float64)), (1713, tensor(-0.0163, dtype=torch.float64)), (198, tensor(-0.0163, dtype=torch.float64)), (521, tensor(-0.0162, dtype=torch.float64)), (1772, tensor(-0.0161, dtype=torch.float64)), (1517, tensor(-0.0161, dtype=torch.float64)), (1671, tensor(-0.0161, dtype=torch.float64)), (1636, tensor(-0.0161, dtype=torch.float64)), (546, tensor(-0.0160, dtype=torch.float64)), (2070, tensor(-0.0160, dtype=torch.float64)), (132, tensor(-0.0160, dtype=torch.float64)), (1337, tensor(-0.0160, dtype=torch.float64)), (298, tensor(-0.0160, dtype=torch.float64)), (690, tensor(-0.0160, dtype=torch.float64)), (2190, tensor(-0.0160, dtype=torch.float64)), (135, tensor(-0.0159, dtype=torch.float64)), (1527, tensor(-0.0158, dtype=torch.float64)), (428, tensor(-0.0158, dtype=torch.float64)), (187, tensor(-0.0158, dtype=torch.float64)), (2221, tensor(-0.0158, dtype=torch.float64)), (1118, tensor(-0.0157, dtype=torch.float64)), (297, tensor(-0.0157, dtype=torch.float64)), (2027, tensor(-0.0157, dtype=torch.float64)), (837, tensor(-0.0157, dtype=torch.float64)), (720, tensor(-0.0157, dtype=torch.float64)), (1584, tensor(-0.0156, dtype=torch.float64)), (1801, tensor(-0.0156, dtype=torch.float64)), (673, tensor(-0.0156, dtype=torch.float64)), (545, tensor(-0.0155, dtype=torch.float64)), (671, tensor(-0.0154, dtype=torch.float64)), (1415, tensor(-0.0154, dtype=torch.float64)), (1941, tensor(-0.0154, dtype=torch.float64)), (925, tensor(-0.0154, dtype=torch.float64)), (1592, tensor(-0.0153, dtype=torch.float64)), (13, tensor(-0.0153, dtype=torch.float64)), (2040, tensor(-0.0152, dtype=torch.float64)), (1188, tensor(-0.0152, dtype=torch.float64)), (60, tensor(-0.0152, dtype=torch.float64)), (2209, tensor(-0.0152, dtype=torch.float64)), (438, tensor(-0.0152, dtype=torch.float64)), (2213, tensor(-0.0151, dtype=torch.float64)), (262, tensor(-0.0151, dtype=torch.float64)), (44, tensor(-0.0150, dtype=torch.float64)), (1028, tensor(-0.0150, dtype=torch.float64)), (1852, tensor(-0.0150, dtype=torch.float64)), (796, tensor(-0.0150, dtype=torch.float64)), (49, tensor(-0.0150, dtype=torch.float64)), (1734, tensor(-0.0149, dtype=torch.float64)), (2094, tensor(-0.0149, dtype=torch.float64)), (417, tensor(-0.0148, dtype=torch.float64)), (1000, tensor(-0.0148, dtype=torch.float64)), (536, tensor(-0.0148, dtype=torch.float64)), (693, tensor(-0.0147, dtype=torch.float64)), (952, tensor(-0.0146, dtype=torch.float64)), (1023, tensor(-0.0146, dtype=torch.float64)), (318, tensor(-0.0146, dtype=torch.float64)), (1965, tensor(-0.0145, dtype=torch.float64)), (750, tensor(-0.0145, dtype=torch.float64)), (1074, tensor(-0.0145, dtype=torch.float64)), (2174, tensor(-0.0145, dtype=torch.float64)), (1151, tensor(-0.0144, dtype=torch.float64)), (1843, tensor(-0.0143, dtype=torch.float64)), (792, tensor(-0.0143, dtype=torch.float64)), (1478, tensor(-0.0143, dtype=torch.float64)), (825, tensor(-0.0143, dtype=torch.float64)), (1042, tensor(-0.0143, dtype=torch.float64)), (398, tensor(-0.0143, dtype=torch.float64)), (376, tensor(-0.0143, dtype=torch.float64)), (1249, tensor(-0.0142, dtype=torch.float64)), (1689, tensor(-0.0142, dtype=torch.float64)), (99, tensor(-0.0142, dtype=torch.float64)), (1367, tensor(-0.0141, dtype=torch.float64)), (1276, tensor(-0.0140, dtype=torch.float64)), (1021, tensor(-0.0140, dtype=torch.float64)), (1141, tensor(-0.0140, dtype=torch.float64)), (647, tensor(-0.0139, dtype=torch.float64)), (1227, tensor(-0.0139, dtype=torch.float64)), (1981, tensor(-0.0139, dtype=torch.float64)), (513, tensor(-0.0139, dtype=torch.float64)), (1748, tensor(-0.0138, dtype=torch.float64)), (592, tensor(-0.0138, dtype=torch.float64)), (191, tensor(-0.0137, dtype=torch.float64)), (1930, tensor(-0.0136, dtype=torch.float64)), (452, tensor(-0.0136, dtype=torch.float64)), (860, tensor(-0.0136, dtype=torch.float64)), (662, tensor(-0.0136, dtype=torch.float64)), (2034, tensor(-0.0135, dtype=torch.float64)), (856, tensor(-0.0135, dtype=torch.float64)), (1973, tensor(-0.0135, dtype=torch.float64)), (1020, tensor(-0.0134, dtype=torch.float64)), (1628, tensor(-0.0134, dtype=torch.float64)), (960, tensor(-0.0134, dtype=torch.float64)), (559, tensor(-0.0133, dtype=torch.float64)), (2090, tensor(-0.0133, dtype=torch.float64)), (1496, tensor(-0.0132, dtype=torch.float64)), (310, tensor(-0.0132, dtype=torch.float64)), (1535, tensor(-0.0132, dtype=torch.float64)), (1814, tensor(-0.0131, dtype=torch.float64)), (1530, tensor(-0.0131, dtype=torch.float64)), (1670, tensor(-0.0130, dtype=torch.float64)), (286, tensor(-0.0130, dtype=torch.float64)), (1520, tensor(-0.0130, dtype=torch.float64)), (217, tensor(-0.0129, dtype=torch.float64)), (294, tensor(-0.0129, dtype=torch.float64)), (1335, tensor(-0.0129, dtype=torch.float64)), (1043, tensor(-0.0129, dtype=torch.float64)), (848, tensor(-0.0128, dtype=torch.float64)), (951, tensor(-0.0128, dtype=torch.float64)), (1370, tensor(-0.0128, dtype=torch.float64)), (119, tensor(-0.0128, dtype=torch.float64)), (1546, tensor(-0.0128, dtype=torch.float64)), (400, tensor(-0.0127, dtype=torch.float64)), (1492, tensor(-0.0127, dtype=torch.float64)), (780, tensor(-0.0127, dtype=torch.float64)), (1435, tensor(-0.0127, dtype=torch.float64)), (570, tensor(-0.0127, dtype=torch.float64)), (2093, tensor(-0.0126, dtype=torch.float64)), (1214, tensor(-0.0126, dtype=torch.float64)), (1933, tensor(-0.0126, dtype=torch.float64)), (861, tensor(-0.0126, dtype=torch.float64)), (306, tensor(-0.0125, dtype=torch.float64)), (493, tensor(-0.0125, dtype=torch.float64)), (1182, tensor(-0.0125, dtype=torch.float64)), (1038, tensor(-0.0125, dtype=torch.float64)), (1196, tensor(-0.0125, dtype=torch.float64)), (1542, tensor(-0.0125, dtype=torch.float64)), (807, tensor(-0.0124, dtype=torch.float64)), (747, tensor(-0.0124, dtype=torch.float64)), (393, tensor(-0.0124, dtype=torch.float64)), (741, tensor(-0.0123, dtype=torch.float64)), (991, tensor(-0.0123, dtype=torch.float64)), (1752, tensor(-0.0123, dtype=torch.float64)), (1886, tensor(-0.0123, dtype=torch.float64)), (1947, tensor(-0.0123, dtype=torch.float64)), (1525, tensor(-0.0123, dtype=torch.float64)), (1872, tensor(-0.0122, dtype=torch.float64)), (1352, tensor(-0.0122, dtype=torch.float64)), (1017, tensor(-0.0122, dtype=torch.float64)), (1875, tensor(-0.0122, dtype=torch.float64)), (2198, tensor(-0.0122, dtype=torch.float64)), (529, tensor(-0.0121, dtype=torch.float64)), (2026, tensor(-0.0121, dtype=torch.float64)), (2123, tensor(-0.0120, dtype=torch.float64)), (1604, tensor(-0.0120, dtype=torch.float64)), (2013, tensor(-0.0120, dtype=torch.float64)), (1143, tensor(-0.0119, dtype=torch.float64)), (1948, tensor(-0.0119, dtype=torch.float64)), (826, tensor(-0.0119, dtype=torch.float64)), (1600, tensor(-0.0119, dtype=torch.float64)), (384, tensor(-0.0118, dtype=torch.float64)), (59, tensor(-0.0118, dtype=torch.float64)), (809, tensor(-0.0118, dtype=torch.float64)), (252, tensor(-0.0117, dtype=torch.float64)), (721, tensor(-0.0117, dtype=torch.float64)), (1606, tensor(-0.0117, dtype=torch.float64)), (488, tensor(-0.0116, dtype=torch.float64)), (760, tensor(-0.0116, dtype=torch.float64)), (2128, tensor(-0.0116, dtype=torch.float64)), (1884, tensor(-0.0116, dtype=torch.float64)), (413, tensor(-0.0116, dtype=torch.float64)), (743, tensor(-0.0116, dtype=torch.float64)), (1878, tensor(-0.0116, dtype=torch.float64)), (274, tensor(-0.0116, dtype=torch.float64)), (1338, tensor(-0.0115, dtype=torch.float64)), (203, tensor(-0.0115, dtype=torch.float64)), (818, tensor(-0.0114, dtype=torch.float64)), (1121, tensor(-0.0114, dtype=torch.float64)), (1704, tensor(-0.0113, dtype=torch.float64)), (205, tensor(-0.0113, dtype=torch.float64)), (1844, tensor(-0.0113, dtype=torch.float64)), (1450, tensor(-0.0112, dtype=torch.float64)), (1789, tensor(-0.0112, dtype=torch.float64)), (565, tensor(-0.0112, dtype=torch.float64)), (585, tensor(-0.0112, dtype=torch.float64)), (1870, tensor(-0.0112, dtype=torch.float64)), (2080, tensor(-0.0111, dtype=torch.float64)), (450, tensor(-0.0111, dtype=torch.float64)), (2129, tensor(-0.0110, dtype=torch.float64)), (1667, tensor(-0.0110, dtype=torch.float64)), (1306, tensor(-0.0110, dtype=torch.float64)), (1804, tensor(-0.0109, dtype=torch.float64)), (726, tensor(-0.0109, dtype=torch.float64)), (320, tensor(-0.0109, dtype=torch.float64)), (227, tensor(-0.0109, dtype=torch.float64)), (1488, tensor(-0.0109, dtype=torch.float64)), (1036, tensor(-0.0108, dtype=torch.float64)), (2023, tensor(-0.0108, dtype=torch.float64)), (2122, tensor(-0.0108, dtype=torch.float64)), (2001, tensor(-0.0108, dtype=torch.float64)), (1253, tensor(-0.0108, dtype=torch.float64)), (1288, tensor(-0.0107, dtype=torch.float64)), (2076, tensor(-0.0107, dtype=torch.float64)), (1953, tensor(-0.0107, dtype=torch.float64)), (1117, tensor(-0.0107, dtype=torch.float64)), (1856, tensor(-0.0107, dtype=torch.float64)), (1016, tensor(-0.0107, dtype=torch.float64)), (362, tensor(-0.0107, dtype=torch.float64)), (6, tensor(-0.0107, dtype=torch.float64)), (694, tensor(-0.0106, dtype=torch.float64)), (1607, tensor(-0.0106, dtype=torch.float64)), (255, tensor(-0.0106, dtype=torch.float64)), (772, tensor(-0.0106, dtype=torch.float64)), (708, tensor(-0.0106, dtype=torch.float64)), (94, tensor(-0.0105, dtype=torch.float64)), (2015, tensor(-0.0105, dtype=torch.float64)), (714, tensor(-0.0105, dtype=torch.float64)), (2159, tensor(-0.0104, dtype=torch.float64)), (4, tensor(-0.0104, dtype=torch.float64)), (1869, tensor(-0.0104, dtype=torch.float64)), (2169, tensor(-0.0104, dtype=torch.float64)), (875, tensor(-0.0104, dtype=torch.float64)), (883, tensor(-0.0103, dtype=torch.float64)), (1543, tensor(-0.0103, dtype=torch.float64)), (296, tensor(-0.0103, dtype=torch.float64)), (1645, tensor(-0.0103, dtype=torch.float64)), (432, tensor(-0.0103, dtype=torch.float64)), (614, tensor(-0.0103, dtype=torch.float64)), (1507, tensor(-0.0103, dtype=torch.float64)), (268, tensor(-0.0103, dtype=torch.float64)), (790, tensor(-0.0103, dtype=torch.float64)), (2117, tensor(-0.0102, dtype=torch.float64)), (1699, tensor(-0.0102, dtype=torch.float64)), (1374, tensor(-0.0102, dtype=torch.float64)), (736, tensor(-0.0102, dtype=torch.float64)), (390, tensor(-0.0102, dtype=torch.float64)), (1359, tensor(-0.0102, dtype=torch.float64)), (734, tensor(-0.0102, dtype=torch.float64)), (1928, tensor(-0.0101, dtype=torch.float64)), (1812, tensor(-0.0101, dtype=torch.float64)), (987, tensor(-0.0101, dtype=torch.float64)), (1723, tensor(-0.0101, dtype=torch.float64)), (1, tensor(-0.0101, dtype=torch.float64)), (75, tensor(-0.0100, dtype=torch.float64)), (1707, tensor(-0.0100, dtype=torch.float64)), (798, tensor(-0.0100, dtype=torch.float64)), (1857, tensor(-0.0100, dtype=torch.float64)), (1505, tensor(-0.0099, dtype=torch.float64)), (1103, tensor(-0.0099, dtype=torch.float64)), (1193, tensor(-0.0099, dtype=torch.float64)), (1613, tensor(-0.0099, dtype=torch.float64)), (1649, tensor(-0.0098, dtype=torch.float64)), (846, tensor(-0.0097, dtype=torch.float64)), (1344, tensor(-0.0097, dtype=torch.float64)), (251, tensor(-0.0097, dtype=torch.float64)), (858, tensor(-0.0097, dtype=torch.float64)), (2, tensor(-0.0096, dtype=torch.float64)), (791, tensor(-0.0096, dtype=torch.float64)), (1638, tensor(-0.0096, dtype=torch.float64)), (364, tensor(-0.0096, dtype=torch.float64)), (1136, tensor(-0.0096, dtype=torch.float64)), (0, tensor(-0.0096, dtype=torch.float64)), (632, tensor(-0.0095, dtype=torch.float64)), (1324, tensor(-0.0095, dtype=torch.float64)), (569, tensor(-0.0095, dtype=torch.float64)), (1323, tensor(-0.0094, dtype=torch.float64)), (52, tensor(-0.0094, dtype=torch.float64)), (631, tensor(-0.0094, dtype=torch.float64)), (1289, tensor(-0.0093, dtype=torch.float64)), (1547, tensor(-0.0093, dtype=torch.float64)), (1727, tensor(-0.0093, dtype=torch.float64)), (871, tensor(-0.0093, dtype=torch.float64)), (1219, tensor(-0.0093, dtype=torch.float64)), (919, tensor(-0.0093, dtype=torch.float64)), (1274, tensor(-0.0093, dtype=torch.float64)), (81, tensor(-0.0092, dtype=torch.float64)), (1682, tensor(-0.0092, dtype=torch.float64)), (77, tensor(-0.0091, dtype=torch.float64)), (1992, tensor(-0.0091, dtype=torch.float64)), (1400, tensor(-0.0091, dtype=torch.float64)), (1969, tensor(-0.0091, dtype=torch.float64)), (2170, tensor(-0.0091, dtype=torch.float64)), (1256, tensor(-0.0090, dtype=torch.float64)), (1366, tensor(-0.0090, dtype=torch.float64)), (442, tensor(-0.0090, dtype=torch.float64)), (1532, tensor(-0.0090, dtype=torch.float64)), (1616, tensor(-0.0089, dtype=torch.float64)), (1322, tensor(-0.0089, dtype=torch.float64)), (490, tensor(-0.0089, dtype=torch.float64)), (936, tensor(-0.0089, dtype=torch.float64)), (851, tensor(-0.0089, dtype=torch.float64)), (584, tensor(-0.0089, dtype=torch.float64)), (1603, tensor(-0.0089, dtype=torch.float64)), (2215, tensor(-0.0088, dtype=torch.float64)), (282, tensor(-0.0088, dtype=torch.float64)), (178, tensor(-0.0088, dtype=torch.float64)), (1470, tensor(-0.0088, dtype=torch.float64)), (2161, tensor(-0.0088, dtype=torch.float64)), (1985, tensor(-0.0088, dtype=torch.float64)), (922, tensor(-0.0087, dtype=torch.float64)), (566, tensor(-0.0087, dtype=torch.float64)), (1538, tensor(-0.0087, dtype=torch.float64)), (1826, tensor(-0.0087, dtype=torch.float64)), (31, tensor(-0.0087, dtype=torch.float64)), (1113, tensor(-0.0087, dtype=torch.float64)), (2019, tensor(-0.0086, dtype=torch.float64)), (793, tensor(-0.0086, dtype=torch.float64)), (1013, tensor(-0.0085, dtype=torch.float64)), (1545, tensor(-0.0085, dtype=torch.float64)), (918, tensor(-0.0085, dtype=torch.float64)), (323, tensor(-0.0085, dtype=torch.float64)), (2097, tensor(-0.0085, dtype=torch.float64)), (275, tensor(-0.0085, dtype=torch.float64)), (8, tensor(-0.0084, dtype=torch.float64)), (1760, tensor(-0.0084, dtype=torch.float64)), (557, tensor(-0.0084, dtype=torch.float64)), (1210, tensor(-0.0084, dtype=torch.float64)), (1515, tensor(-0.0083, dtype=torch.float64)), (1890, tensor(-0.0083, dtype=torch.float64)), (1393, tensor(-0.0083, dtype=torch.float64)), (259, tensor(-0.0082, dtype=torch.float64)), (1481, tensor(-0.0082, dtype=torch.float64)), (424, tensor(-0.0082, dtype=torch.float64)), (236, tensor(-0.0081, dtype=torch.float64)), (1379, tensor(-0.0081, dtype=torch.float64)), (1311, tensor(-0.0081, dtype=torch.float64)), (243, tensor(-0.0081, dtype=torch.float64)), (2151, tensor(-0.0081, dtype=torch.float64)), (1887, tensor(-0.0081, dtype=torch.float64)), (553, tensor(-0.0081, dtype=torch.float64)), (850, tensor(-0.0081, dtype=torch.float64)), (431, tensor(-0.0080, dtype=torch.float64)), (769, tensor(-0.0080, dtype=torch.float64)), (11, tensor(-0.0080, dtype=torch.float64)), (1052, tensor(-0.0079, dtype=torch.float64)), (1207, tensor(-0.0079, dtype=torch.float64)), (1294, tensor(-0.0079, dtype=torch.float64)), (1383, tensor(-0.0079, dtype=torch.float64)), (571, tensor(-0.0078, dtype=torch.float64)), (1913, tensor(-0.0078, dtype=torch.float64)), (371, tensor(-0.0077, dtype=torch.float64)), (366, tensor(-0.0077, dtype=torch.float64)), (1298, tensor(-0.0077, dtype=torch.float64)), (194, tensor(-0.0077, dtype=torch.float64)), (1697, tensor(-0.0077, dtype=torch.float64)), (1382, tensor(-0.0076, dtype=torch.float64)), (2167, tensor(-0.0075, dtype=torch.float64)), (1385, tensor(-0.0075, dtype=torch.float64)), (58, tensor(-0.0074, dtype=torch.float64)), (1314, tensor(-0.0074, dtype=torch.float64)), (972, tensor(-0.0074, dtype=torch.float64)), (1567, tensor(-0.0074, dtype=torch.float64)), (957, tensor(-0.0073, dtype=torch.float64)), (372, tensor(-0.0073, dtype=torch.float64)), (1646, tensor(-0.0073, dtype=torch.float64)), (225, tensor(-0.0073, dtype=torch.float64)), (215, tensor(-0.0072, dtype=torch.float64)), (612, tensor(-0.0072, dtype=torch.float64)), (501, tensor(-0.0072, dtype=torch.float64)), (1639, tensor(-0.0072, dtype=torch.float64)), (1860, tensor(-0.0071, dtype=torch.float64)), (500, tensor(-0.0071, dtype=torch.float64)), (1027, tensor(-0.0071, dtype=torch.float64)), (1937, tensor(-0.0071, dtype=torch.float64)), (564, tensor(-0.0071, dtype=torch.float64)), (1371, tensor(-0.0070, dtype=torch.float64)), (1461, tensor(-0.0069, dtype=torch.float64)), (437, tensor(-0.0069, dtype=torch.float64)), (1922, tensor(-0.0069, dtype=torch.float64)), (1759, tensor(-0.0069, dtype=torch.float64)), (1112, tensor(-0.0069, dtype=torch.float64)), (1806, tensor(-0.0068, dtype=torch.float64)), (208, tensor(-0.0068, dtype=torch.float64)), (1128, tensor(-0.0068, dtype=torch.float64)), (1676, tensor(-0.0067, dtype=torch.float64)), (1353, tensor(-0.0067, dtype=torch.float64)), (1570, tensor(-0.0067, dtype=torch.float64)), (723, tensor(-0.0067, dtype=torch.float64)), (1663, tensor(-0.0066, dtype=torch.float64)), (1742, tensor(-0.0066, dtype=torch.float64)), (1115, tensor(-0.0065, dtype=torch.float64)), (1683, tensor(-0.0065, dtype=torch.float64)), (142, tensor(-0.0065, dtype=torch.float64)), (258, tensor(-0.0064, dtype=torch.float64)), (1523, tensor(-0.0064, dtype=torch.float64)), (1408, tensor(-0.0064, dtype=torch.float64)), (14, tensor(-0.0064, dtype=torch.float64)), (659, tensor(-0.0064, dtype=torch.float64)), (2088, tensor(-0.0063, dtype=torch.float64)), (224, tensor(-0.0063, dtype=torch.float64)), (130, tensor(-0.0063, dtype=torch.float64)), (2020, tensor(-0.0063, dtype=torch.float64)), (1060, tensor(-0.0063, dtype=torch.float64)), (1665, tensor(-0.0062, dtype=torch.float64)), (1893, tensor(-0.0062, dtype=torch.float64)), (1009, tensor(-0.0062, dtype=torch.float64)), (1675, tensor(-0.0061, dtype=torch.float64)), (1189, tensor(-0.0061, dtype=torch.float64)), (1483, tensor(-0.0061, dtype=torch.float64)), (2038, tensor(-0.0061, dtype=torch.float64)), (2187, tensor(-0.0061, dtype=torch.float64)), (1954, tensor(-0.0060, dtype=torch.float64)), (29, tensor(-0.0060, dtype=torch.float64)), (1934, tensor(-0.0060, dtype=torch.float64)), (256, tensor(-0.0060, dtype=torch.float64)), (742, tensor(-0.0060, dtype=torch.float64)), (535, tensor(-0.0059, dtype=torch.float64)), (1549, tensor(-0.0059, dtype=torch.float64)), (1788, tensor(-0.0059, dtype=torch.float64)), (1898, tensor(-0.0058, dtype=torch.float64)), (276, tensor(-0.0058, dtype=torch.float64)), (1980, tensor(-0.0058, dtype=torch.float64)), (494, tensor(-0.0058, dtype=torch.float64)), (1304, tensor(-0.0058, dtype=torch.float64)), (1231, tensor(-0.0058, dtype=torch.float64)), (1540, tensor(-0.0058, dtype=torch.float64)), (903, tensor(-0.0058, dtype=torch.float64)), (1576, tensor(-0.0057, dtype=torch.float64)), (1033, tensor(-0.0057, dtype=torch.float64)), (172, tensor(-0.0057, dtype=torch.float64)), (1175, tensor(-0.0057, dtype=torch.float64)), (1764, tensor(-0.0057, dtype=torch.float64)), (249, tensor(-0.0057, dtype=torch.float64)), (763, tensor(-0.0057, dtype=torch.float64)), (1762, tensor(-0.0057, dtype=torch.float64)), (1780, tensor(-0.0056, dtype=torch.float64)), (302, tensor(-0.0056, dtype=torch.float64)), (1975, tensor(-0.0056, dtype=torch.float64)), (2086, tensor(-0.0056, dtype=torch.float64)), (842, tensor(-0.0056, dtype=torch.float64)), (715, tensor(-0.0055, dtype=torch.float64)), (1703, tensor(-0.0055, dtype=torch.float64)), (27, tensor(-0.0055, dtype=torch.float64)), (2047, tensor(-0.0054, dtype=torch.float64)), (73, tensor(-0.0054, dtype=torch.float64)), (775, tensor(-0.0054, dtype=torch.float64)), (1413, tensor(-0.0054, dtype=torch.float64)), (847, tensor(-0.0054, dtype=torch.float64)), (106, tensor(-0.0054, dtype=torch.float64)), (1142, tensor(-0.0053, dtype=torch.float64)), (1390, tensor(-0.0052, dtype=torch.float64)), (853, tensor(-0.0052, dtype=torch.float64)), (473, tensor(-0.0052, dtype=torch.float64)), (478, tensor(-0.0052, dtype=torch.float64)), (195, tensor(-0.0052, dtype=torch.float64)), (843, tensor(-0.0052, dtype=torch.float64)), (898, tensor(-0.0051, dtype=torch.float64)), (1010, tensor(-0.0051, dtype=torch.float64)), (1384, tensor(-0.0051, dtype=torch.float64)), (303, tensor(-0.0051, dtype=torch.float64)), (2227, tensor(-0.0050, dtype=torch.float64)), (1524, tensor(-0.0050, dtype=torch.float64)), (1041, tensor(-0.0050, dtype=torch.float64)), (2113, tensor(-0.0050, dtype=torch.float64)), (379, tensor(-0.0050, dtype=torch.float64)), (1595, tensor(-0.0050, dtype=torch.float64)), (782, tensor(-0.0050, dtype=torch.float64)), (2012, tensor(-0.0049, dtype=torch.float64)), (156, tensor(-0.0049, dtype=torch.float64)), (2199, tensor(-0.0049, dtype=torch.float64)), (805, tensor(-0.0049, dtype=torch.float64)), (1841, tensor(-0.0049, dtype=torch.float64)), (295, tensor(-0.0048, dtype=torch.float64)), (443, tensor(-0.0048, dtype=torch.float64)), (1244, tensor(-0.0048, dtype=torch.float64)), (779, tensor(-0.0047, dtype=torch.float64)), (409, tensor(-0.0047, dtype=torch.float64)), (1573, tensor(-0.0047, dtype=torch.float64)), (1054, tensor(-0.0047, dtype=torch.float64)), (766, tensor(-0.0046, dtype=torch.float64)), (1011, tensor(-0.0046, dtype=torch.float64)), (1761, tensor(-0.0046, dtype=torch.float64)), (2067, tensor(-0.0046, dtype=torch.float64)), (1799, tensor(-0.0046, dtype=torch.float64)), (1445, tensor(-0.0046, dtype=torch.float64)), (709, tensor(-0.0046, dtype=torch.float64)), (1293, tensor(-0.0046, dtype=torch.float64)), (1744, tensor(-0.0045, dtype=torch.float64)), (338, tensor(-0.0045, dtype=torch.float64)), (1728, tensor(-0.0045, dtype=torch.float64)), (1148, tensor(-0.0044, dtype=torch.float64)), (586, tensor(-0.0044, dtype=torch.float64)), (729, tensor(-0.0044, dtype=torch.float64)), (635, tensor(-0.0043, dtype=torch.float64)), (1091, tensor(-0.0043, dtype=torch.float64)), (892, tensor(-0.0043, dtype=torch.float64)), (233, tensor(-0.0043, dtype=torch.float64)), (1260, tensor(-0.0043, dtype=torch.float64)), (1077, tensor(-0.0042, dtype=torch.float64)), (223, tensor(-0.0042, dtype=torch.float64)), (1161, tensor(-0.0042, dtype=torch.float64)), (479, tensor(-0.0042, dtype=torch.float64)), (602, tensor(-0.0042, dtype=torch.float64)), (1045, tensor(-0.0041, dtype=torch.float64)), (2057, tensor(-0.0041, dtype=torch.float64)), (2045, tensor(-0.0041, dtype=torch.float64)), (587, tensor(-0.0040, dtype=torch.float64)), (833, tensor(-0.0040, dtype=torch.float64)), (1903, tensor(-0.0040, dtype=torch.float64)), (2133, tensor(-0.0039, dtype=torch.float64)), (125, tensor(-0.0039, dtype=torch.float64)), (1691, tensor(-0.0038, dtype=torch.float64)), (1978, tensor(-0.0038, dtype=torch.float64)), (1879, tensor(-0.0037, dtype=torch.float64)), (324, tensor(-0.0037, dtype=torch.float64)), (976, tensor(-0.0037, dtype=torch.float64)), (699, tensor(-0.0037, dtype=torch.float64)), (1394, tensor(-0.0037, dtype=torch.float64)), (2195, tensor(-0.0037, dtype=torch.float64)), (247, tensor(-0.0037, dtype=torch.float64)), (1473, tensor(-0.0037, dtype=torch.float64)), (1900, tensor(-0.0037, dtype=torch.float64)), (1784, tensor(-0.0037, dtype=torch.float64)), (1988, tensor(-0.0036, dtype=torch.float64)), (876, tensor(-0.0036, dtype=torch.float64)), (944, tensor(-0.0036, dtype=torch.float64)), (50, tensor(-0.0036, dtype=torch.float64)), (942, tensor(-0.0035, dtype=torch.float64)), (1269, tensor(-0.0035, dtype=torch.float64)), (1173, tensor(-0.0035, dtype=torch.float64)), (162, tensor(-0.0035, dtype=torch.float64)), (1664, tensor(-0.0035, dtype=torch.float64)), (924, tensor(-0.0035, dtype=torch.float64)), (2182, tensor(-0.0035, dtype=torch.float64)), (1354, tensor(-0.0035, dtype=torch.float64)), (1265, tensor(-0.0035, dtype=torch.float64)), (264, tensor(-0.0034, dtype=torch.float64)), (54, tensor(-0.0034, dtype=torch.float64)), (1296, tensor(-0.0034, dtype=torch.float64)), (1725, tensor(-0.0034, dtype=torch.float64)), (1258, tensor(-0.0034, dtype=torch.float64)), (1745, tensor(-0.0034, dtype=torch.float64)), (112, tensor(-0.0034, dtype=torch.float64)), (1746, tensor(-0.0034, dtype=torch.float64)), (427, tensor(-0.0033, dtype=torch.float64)), (946, tensor(-0.0033, dtype=torch.float64)), (1197, tensor(-0.0033, dtype=torch.float64)), (1325, tensor(-0.0033, dtype=torch.float64)), (1698, tensor(-0.0033, dtype=torch.float64)), (108, tensor(-0.0033, dtype=torch.float64)), (551, tensor(-0.0032, dtype=torch.float64)), (56, tensor(-0.0032, dtype=torch.float64)), (1796, tensor(-0.0032, dtype=torch.float64)), (2203, tensor(-0.0032, dtype=torch.float64)), (874, tensor(-0.0032, dtype=torch.float64)), (788, tensor(-0.0032, dtype=torch.float64)), (1192, tensor(-0.0032, dtype=torch.float64)), (404, tensor(-0.0032, dtype=torch.float64)), (910, tensor(-0.0031, dtype=torch.float64)), (2100, tensor(-0.0031, dtype=torch.float64)), (1093, tensor(-0.0031, dtype=torch.float64)), (558, tensor(-0.0031, dtype=torch.float64)), (1696, tensor(-0.0031, dtype=torch.float64)), (1051, tensor(-0.0031, dtype=torch.float64)), (2010, tensor(-0.0031, dtype=torch.float64)), (2192, tensor(-0.0031, dtype=torch.float64)), (1012, tensor(-0.0030, dtype=torch.float64)), (141, tensor(-0.0030, dtype=torch.float64)), (1825, tensor(-0.0030, dtype=torch.float64)), (270, tensor(-0.0030, dtype=torch.float64)), (1417, tensor(-0.0030, dtype=torch.float64)), (1657, tensor(-0.0030, dtype=torch.float64)), (340, tensor(-0.0029, dtype=torch.float64)), (1022, tensor(-0.0029, dtype=torch.float64)), (607, tensor(-0.0029, dtype=torch.float64)), (1114, tensor(-0.0029, dtype=torch.float64)), (1243, tensor(-0.0028, dtype=torch.float64)), (1504, tensor(-0.0028, dtype=torch.float64)), (76, tensor(-0.0028, dtype=torch.float64)), (2056, tensor(-0.0028, dtype=torch.float64)), (1950, tensor(-0.0028, dtype=torch.float64)), (484, tensor(-0.0028, dtype=torch.float64)), (1380, tensor(-0.0027, dtype=torch.float64)), (628, tensor(-0.0027, dtype=torch.float64)), (69, tensor(-0.0027, dtype=torch.float64)), (2079, tensor(-0.0026, dtype=torch.float64)), (705, tensor(-0.0026, dtype=torch.float64)), (1854, tensor(-0.0026, dtype=torch.float64)), (955, tensor(-0.0026, dtype=torch.float64)), (2116, tensor(-0.0026, dtype=torch.float64)), (1847, tensor(-0.0025, dtype=torch.float64)), (2226, tensor(-0.0025, dtype=torch.float64)), (1519, tensor(-0.0025, dtype=torch.float64)), (1232, tensor(-0.0025, dtype=torch.float64)), (657, tensor(-0.0024, dtype=torch.float64)), (2041, tensor(-0.0024, dtype=torch.float64)), (2039, tensor(-0.0024, dtype=torch.float64)), (222, tensor(-0.0023, dtype=torch.float64)), (1781, tensor(-0.0023, dtype=torch.float64)), (928, tensor(-0.0023, dtype=torch.float64)), (325, tensor(-0.0023, dtype=torch.float64)), (1247, tensor(-0.0023, dtype=torch.float64)), (1154, tensor(-0.0023, dtype=torch.float64)), (466, tensor(-0.0022, dtype=torch.float64)), (2179, tensor(-0.0022, dtype=torch.float64)), (2153, tensor(-0.0022, dtype=torch.float64)), (2135, tensor(-0.0021, dtype=torch.float64)), (1763, tensor(-0.0021, dtype=torch.float64)), (74, tensor(-0.0021, dtype=torch.float64)), (867, tensor(-0.0021, dtype=torch.float64)), (1252, tensor(-0.0021, dtype=torch.float64)), (1756, tensor(-0.0021, dtype=torch.float64)), (1716, tensor(-0.0020, dtype=torch.float64)), (964, tensor(-0.0020, dtype=torch.float64)), (118, tensor(-0.0020, dtype=torch.float64)), (305, tensor(-0.0020, dtype=torch.float64)), (1602, tensor(-0.0020, dtype=torch.float64)), (1577, tensor(-0.0020, dtype=torch.float64)), (48, tensor(-0.0019, dtype=torch.float64)), (656, tensor(-0.0019, dtype=torch.float64)), (65, tensor(-0.0018, dtype=torch.float64)), (1991, tensor(-0.0018, dtype=torch.float64)), (640, tensor(-0.0018, dtype=torch.float64)), (1225, tensor(-0.0017, dtype=torch.float64)), (789, tensor(-0.0017, dtype=torch.float64)), (665, tensor(-0.0017, dtype=torch.float64)), (2207, tensor(-0.0017, dtype=torch.float64)), (1259, tensor(-0.0017, dtype=torch.float64)), (1565, tensor(-0.0016, dtype=torch.float64)), (1720, tensor(-0.0016, dtype=torch.float64)), (1089, tensor(-0.0016, dtype=torch.float64)), (555, tensor(-0.0016, dtype=torch.float64)), (1687, tensor(-0.0016, dtype=torch.float64)), (1521, tensor(-0.0016, dtype=torch.float64)), (271, tensor(-0.0015, dtype=torch.float64)), (1444, tensor(-0.0015, dtype=torch.float64)), (591, tensor(-0.0015, dtype=torch.float64)), (2137, tensor(-0.0015, dtype=torch.float64)), (1125, tensor(-0.0015, dtype=torch.float64)), (1962, tensor(-0.0015, dtype=torch.float64)), (2063, tensor(-0.0014, dtype=torch.float64)), (1883, tensor(-0.0014, dtype=torch.float64)), (1605, tensor(-0.0014, dtype=torch.float64)), (1109, tensor(-0.0013, dtype=torch.float64)), (1068, tensor(-0.0013, dtype=torch.float64)), (981, tensor(-0.0013, dtype=torch.float64)), (1590, tensor(-0.0012, dtype=torch.float64)), (672, tensor(-0.0012, dtype=torch.float64)), (1792, tensor(-0.0012, dtype=torch.float64)), (1803, tensor(-0.0012, dtype=torch.float64)), (127, tensor(-0.0012, dtype=torch.float64)), (139, tensor(-0.0012, dtype=torch.float64)), (2212, tensor(-0.0011, dtype=torch.float64)), (1285, tensor(-0.0010, dtype=torch.float64)), (822, tensor(-0.0010, dtype=torch.float64)), (1669, tensor(-0.0010, dtype=torch.float64)), (1430, tensor(-0.0010, dtype=torch.float64)), (1851, tensor(-0.0010, dtype=torch.float64)), (1493, tensor(-0.0010, dtype=torch.float64)), (881, tensor(-0.0009, dtype=torch.float64)), (383, tensor(-0.0009, dtype=torch.float64)), (1295, tensor(-0.0008, dtype=torch.float64)), (1200, tensor(-0.0008, dtype=torch.float64)), (1618, tensor(-0.0008, dtype=torch.float64)), (2081, tensor(-0.0008, dtype=torch.float64)), (61, tensor(-0.0008, dtype=torch.float64)), (683, tensor(-0.0007, dtype=torch.float64)), (1800, tensor(-0.0007, dtype=torch.float64)), (109, tensor(-0.0007, dtype=torch.float64)), (1066, tensor(-0.0006, dtype=torch.float64)), (2106, tensor(-0.0006, dtype=torch.float64)), (1765, tensor(-0.0006, dtype=torch.float64)), (213, tensor(-0.0005, dtype=torch.float64)), (467, tensor(-0.0005, dtype=torch.float64)), (185, tensor(-0.0005, dtype=torch.float64)), (813, tensor(-0.0004, dtype=torch.float64)), (441, tensor(-0.0004, dtype=torch.float64)), (489, tensor(-0.0003, dtype=torch.float64)), (1145, tensor(-0.0003, dtype=torch.float64)), (254, tensor(-0.0003, dtype=torch.float64)), (2078, tensor(-0.0002, dtype=torch.float64)), (538, tensor(-0.0001, dtype=torch.float64))]
annotated_samples_num: 1418
unannotated_samples_num: 2126
update datapool!
annotated_samples_num: 1418
unannotated_samples_num: 2126
iter: 9
annotated_samples_num: 1418
unannotated_samples_num: 2126
Epoch [1/10], Batch [1/177], Loss: 2.9145
Epoch [1/10], Batch [2/177], Loss: 3.9820
Epoch [1/10], Batch [3/177], Loss: 2.4076
Epoch [1/10], Batch [4/177], Loss: 1.1719
Epoch [1/10], Batch [5/177], Loss: 1.7543
Epoch [1/10], Batch [6/177], Loss: 1.2272
Epoch [1/10], Batch [7/177], Loss: 1.1765
Epoch [1/10], Batch [8/177], Loss: 1.2126
Epoch [1/10], Batch [9/177], Loss: 1.2939
Epoch [1/10], Batch [10/177], Loss: 1.0289
Epoch [1/10], Batch [11/177], Loss: 0.5642
Epoch [1/10], Batch [12/177], Loss: 1.0300
Epoch [1/10], Batch [13/177], Loss: 0.5689
Epoch [1/10], Batch [14/177], Loss: 0.8686
Epoch [1/10], Batch [15/177], Loss: 0.9030
Epoch [1/10], Batch [16/177], Loss: 0.5802
Epoch [1/10], Batch [17/177], Loss: 0.7545
Epoch [1/10], Batch [18/177], Loss: 0.5127
Epoch [1/10], Batch [19/177], Loss: 0.4471
Epoch [1/10], Batch [20/177], Loss: 0.6696
Epoch [1/10], Batch [21/177], Loss: 0.5148
Epoch [1/10], Batch [22/177], Loss: 0.4122
Epoch [1/10], Batch [23/177], Loss: 0.6197
Epoch [1/10], Batch [24/177], Loss: 0.4368
Epoch [1/10], Batch [25/177], Loss: 0.3434
Epoch [1/10], Batch [26/177], Loss: 0.5546
Epoch [1/10], Batch [27/177], Loss: 0.3778
Epoch [1/10], Batch [28/177], Loss: 0.5041
Epoch [1/10], Batch [29/177], Loss: 0.6584
Epoch [1/10], Batch [30/177], Loss: 0.6947
Epoch [1/10], Batch [31/177], Loss: 0.4119
Epoch [1/10], Batch [32/177], Loss: 0.6443
Epoch [1/10], Batch [33/177], Loss: 0.2526
Epoch [1/10], Batch [34/177], Loss: 0.3969
Epoch [1/10], Batch [35/177], Loss: 0.3721
Epoch [1/10], Batch [36/177], Loss: 0.3243
Epoch [1/10], Batch [37/177], Loss: 0.5354
Epoch [1/10], Batch [38/177], Loss: 0.6774
Epoch [1/10], Batch [39/177], Loss: 0.9613
Epoch [1/10], Batch [40/177], Loss: 0.5067
Epoch [1/10], Batch [41/177], Loss: 0.5092
Epoch [1/10], Batch [42/177], Loss: 0.2529
Epoch [1/10], Batch [43/177], Loss: 0.6721
Epoch [1/10], Batch [44/177], Loss: 0.6254
Epoch [1/10], Batch [45/177], Loss: 0.8682
Epoch [1/10], Batch [46/177], Loss: 0.3038
Epoch [1/10], Batch [47/177], Loss: 0.4728
Epoch [1/10], Batch [48/177], Loss: 0.4876
Epoch [1/10], Batch [49/177], Loss: 0.3143
Epoch [1/10], Batch [50/177], Loss: 0.2015
Epoch [1/10], Batch [51/177], Loss: 0.3525
Epoch [1/10], Batch [52/177], Loss: 0.4552
Epoch [1/10], Batch [53/177], Loss: 0.4372
Epoch [1/10], Batch [54/177], Loss: 0.2483
Epoch [1/10], Batch [55/177], Loss: 0.2630
Epoch [1/10], Batch [56/177], Loss: 0.3681
Epoch [1/10], Batch [57/177], Loss: 0.4336
Epoch [1/10], Batch [58/177], Loss: 0.6507
Epoch [1/10], Batch [59/177], Loss: 0.2756
Epoch [1/10], Batch [60/177], Loss: 0.3481
Epoch [1/10], Batch [61/177], Loss: 0.6092
Epoch [1/10], Batch [62/177], Loss: 0.3768
Epoch [1/10], Batch [63/177], Loss: 0.4625
Epoch [1/10], Batch [64/177], Loss: 0.3499
Epoch [1/10], Batch [65/177], Loss: 0.3157
Epoch [1/10], Batch [66/177], Loss: 0.3947
Epoch [1/10], Batch [67/177], Loss: 0.2682
Epoch [1/10], Batch [68/177], Loss: 0.2918
Epoch [1/10], Batch [69/177], Loss: 0.3605
Epoch [1/10], Batch [70/177], Loss: 0.3041
Epoch [1/10], Batch [71/177], Loss: 0.6669
Epoch [1/10], Batch [72/177], Loss: 0.4368
Epoch [1/10], Batch [73/177], Loss: 0.2915
Epoch [1/10], Batch [74/177], Loss: 0.2996
Epoch [1/10], Batch [75/177], Loss: 0.2679
Epoch [1/10], Batch [76/177], Loss: 0.2977
Epoch [1/10], Batch [77/177], Loss: 0.5181
Epoch [1/10], Batch [78/177], Loss: 0.2862
Epoch [1/10], Batch [79/177], Loss: 0.5937
Epoch [1/10], Batch [80/177], Loss: 0.5428
Epoch [1/10], Batch [81/177], Loss: 0.4625
Epoch [1/10], Batch [82/177], Loss: 0.2961
Epoch [1/10], Batch [83/177], Loss: 0.5933
Epoch [1/10], Batch [84/177], Loss: 0.3386
Epoch [1/10], Batch [85/177], Loss: 0.1941
Epoch [1/10], Batch [86/177], Loss: 0.2699
Epoch [1/10], Batch [87/177], Loss: 0.4771
Epoch [1/10], Batch [88/177], Loss: 0.3366
Epoch [1/10], Batch [89/177], Loss: 0.2749
Epoch [1/10], Batch [90/177], Loss: 0.3784
Epoch [1/10], Batch [91/177], Loss: 0.4098
Epoch [1/10], Batch [92/177], Loss: 0.5744
Epoch [1/10], Batch [93/177], Loss: 0.5036
Epoch [1/10], Batch [94/177], Loss: 0.2970
Epoch [1/10], Batch [95/177], Loss: 0.2687
Epoch [1/10], Batch [96/177], Loss: 0.4757
Epoch [1/10], Batch [97/177], Loss: 0.2431
Epoch [1/10], Batch [98/177], Loss: 0.4823
Epoch [1/10], Batch [99/177], Loss: 0.3317
Epoch [1/10], Batch [100/177], Loss: 0.2284
Epoch [1/10], Batch [101/177], Loss: 0.1764
Epoch [1/10], Batch [102/177], Loss: 0.2559
Epoch [1/10], Batch [103/177], Loss: 0.5580
Epoch [1/10], Batch [104/177], Loss: 0.4075
Epoch [1/10], Batch [105/177], Loss: 0.3621
Epoch [1/10], Batch [106/177], Loss: 0.4136
Epoch [1/10], Batch [107/177], Loss: 0.2059
Epoch [1/10], Batch [108/177], Loss: 0.2505
Epoch [1/10], Batch [109/177], Loss: 0.3941
Epoch [1/10], Batch [110/177], Loss: 0.4637
Epoch [1/10], Batch [111/177], Loss: 0.3042
Epoch [1/10], Batch [112/177], Loss: 0.2257
Epoch [1/10], Batch [113/177], Loss: 0.3213
Epoch [1/10], Batch [114/177], Loss: 0.3405
Epoch [1/10], Batch [115/177], Loss: 0.3977
Epoch [1/10], Batch [116/177], Loss: 0.6008
Epoch [1/10], Batch [117/177], Loss: 0.3046
Epoch [1/10], Batch [118/177], Loss: 0.4631
Epoch [1/10], Batch [119/177], Loss: 0.2753
Epoch [1/10], Batch [120/177], Loss: 0.5100
Epoch [1/10], Batch [121/177], Loss: 0.3083
Epoch [1/10], Batch [122/177], Loss: 0.3641
Epoch [1/10], Batch [123/177], Loss: 0.5870
Epoch [1/10], Batch [124/177], Loss: 0.4208
Epoch [1/10], Batch [125/177], Loss: 0.1603
Epoch [1/10], Batch [126/177], Loss: 0.3709
Epoch [1/10], Batch [127/177], Loss: 0.3993
Epoch [1/10], Batch [128/177], Loss: 0.5918
Epoch [1/10], Batch [129/177], Loss: 0.4091
Epoch [1/10], Batch [130/177], Loss: 0.2714
Epoch [1/10], Batch [131/177], Loss: 0.2212
Epoch [1/10], Batch [132/177], Loss: 0.3641
Epoch [1/10], Batch [133/177], Loss: 0.1968
Epoch [1/10], Batch [134/177], Loss: 0.3883
Epoch [1/10], Batch [135/177], Loss: 0.2978
Epoch [1/10], Batch [136/177], Loss: 0.2498
Epoch [1/10], Batch [137/177], Loss: 0.2057
Epoch [1/10], Batch [138/177], Loss: 0.2404
Epoch [1/10], Batch [139/177], Loss: 0.2823
Epoch [1/10], Batch [140/177], Loss: 0.3162
Epoch [1/10], Batch [141/177], Loss: 0.3349
Epoch [1/10], Batch [142/177], Loss: 0.2747
Epoch [1/10], Batch [143/177], Loss: 0.2125
Epoch [1/10], Batch [144/177], Loss: 0.2272
Epoch [1/10], Batch [145/177], Loss: 0.2971
Epoch [1/10], Batch [146/177], Loss: 0.1323
Epoch [1/10], Batch [147/177], Loss: 0.3699
Epoch [1/10], Batch [148/177], Loss: 0.3013
Epoch [1/10], Batch [149/177], Loss: 0.2527
Epoch [1/10], Batch [150/177], Loss: 0.4029
Epoch [1/10], Batch [151/177], Loss: 0.2917
Epoch [1/10], Batch [152/177], Loss: 0.5598
Epoch [1/10], Batch [153/177], Loss: 0.1982
Epoch [1/10], Batch [154/177], Loss: 0.2777
Epoch [1/10], Batch [155/177], Loss: 0.3332
Epoch [1/10], Batch [156/177], Loss: 0.3634
Epoch [1/10], Batch [157/177], Loss: 0.3302
Epoch [1/10], Batch [158/177], Loss: 0.4743
Epoch [1/10], Batch [159/177], Loss: 0.2917
Epoch [1/10], Batch [160/177], Loss: 0.4571
Epoch [1/10], Batch [161/177], Loss: 0.4261
Epoch [1/10], Batch [162/177], Loss: 0.3655
Epoch [1/10], Batch [163/177], Loss: 0.3579
Epoch [1/10], Batch [164/177], Loss: 0.4021
Epoch [1/10], Batch [165/177], Loss: 0.2414
Epoch [1/10], Batch [166/177], Loss: 0.5524
Epoch [1/10], Batch [167/177], Loss: 0.4340
Epoch [1/10], Batch [168/177], Loss: 0.3095
Epoch [1/10], Batch [169/177], Loss: 0.3392
Epoch [1/10], Batch [170/177], Loss: 0.3169
Epoch [1/10], Batch [171/177], Loss: 0.3512
Epoch [1/10], Batch [172/177], Loss: 0.2739
Epoch [1/10], Batch [173/177], Loss: 0.3947
Epoch [1/10], Batch [174/177], Loss: 0.2913
Epoch [1/10], Batch [175/177], Loss: 0.2127
Epoch [1/10], Batch [176/177], Loss: 0.4176
Epoch [1/10], Batch [177/177], Loss: 0.2598
Epoch [1/10], Average Loss: 0.4824
-----------------------------------------------------------
strategy: BEAM
iter: 9
epoch: 0
Test Loss: 0.2820
F1_overall: 0.5263
F1_AGENT: 0.6831
F1_TARGET: 0.3541
-----------------------------------------------------------
Epoch [2/10], Batch [1/177], Loss: 0.2318
Epoch [2/10], Batch [2/177], Loss: 0.2741
Epoch [2/10], Batch [3/177], Loss: 0.2364
Epoch [2/10], Batch [4/177], Loss: 0.3267
Epoch [2/10], Batch [5/177], Loss: 0.2692
Epoch [2/10], Batch [6/177], Loss: 0.1549
Epoch [2/10], Batch [7/177], Loss: 0.4889
Epoch [2/10], Batch [8/177], Loss: 0.2283
Epoch [2/10], Batch [9/177], Loss: 0.4513
Epoch [2/10], Batch [10/177], Loss: 0.2857
Epoch [2/10], Batch [11/177], Loss: 0.3212
Epoch [2/10], Batch [12/177], Loss: 0.3227
Epoch [2/10], Batch [13/177], Loss: 0.2688
Epoch [2/10], Batch [14/177], Loss: 0.3500
Epoch [2/10], Batch [15/177], Loss: 0.4607
Epoch [2/10], Batch [16/177], Loss: 0.3327
Epoch [2/10], Batch [17/177], Loss: 0.2681
Epoch [2/10], Batch [18/177], Loss: 0.1809
Epoch [2/10], Batch [19/177], Loss: 0.2783
Epoch [2/10], Batch [20/177], Loss: 0.3040
Epoch [2/10], Batch [21/177], Loss: 0.2953
Epoch [2/10], Batch [22/177], Loss: 0.4130
Epoch [2/10], Batch [23/177], Loss: 0.1735
Epoch [2/10], Batch [24/177], Loss: 0.3391
Epoch [2/10], Batch [25/177], Loss: 0.3028
Epoch [2/10], Batch [26/177], Loss: 0.1847
Epoch [2/10], Batch [27/177], Loss: 0.2151
Epoch [2/10], Batch [28/177], Loss: 0.5504
Epoch [2/10], Batch [29/177], Loss: 0.1990
Epoch [2/10], Batch [30/177], Loss: 0.5652
Epoch [2/10], Batch [31/177], Loss: 0.3757
Epoch [2/10], Batch [32/177], Loss: 0.1206
Epoch [2/10], Batch [33/177], Loss: 0.1803
Epoch [2/10], Batch [34/177], Loss: 0.2072
Epoch [2/10], Batch [35/177], Loss: 0.4772
Epoch [2/10], Batch [36/177], Loss: 0.2610
Epoch [2/10], Batch [37/177], Loss: 0.1920
Epoch [2/10], Batch [38/177], Loss: 0.2540
Epoch [2/10], Batch [39/177], Loss: 0.1752
Epoch [2/10], Batch [40/177], Loss: 0.3425
Epoch [2/10], Batch [41/177], Loss: 0.3019
Epoch [2/10], Batch [42/177], Loss: 0.1579
Epoch [2/10], Batch [43/177], Loss: 0.3279
Epoch [2/10], Batch [44/177], Loss: 0.1407
Epoch [2/10], Batch [45/177], Loss: 0.2065
Epoch [2/10], Batch [46/177], Loss: 0.4469
Epoch [2/10], Batch [47/177], Loss: 0.1447
Epoch [2/10], Batch [48/177], Loss: 0.1475
Epoch [2/10], Batch [49/177], Loss: 0.1662
Epoch [2/10], Batch [50/177], Loss: 0.3686
Epoch [2/10], Batch [51/177], Loss: 0.3317
Epoch [2/10], Batch [52/177], Loss: 0.3879
Epoch [2/10], Batch [53/177], Loss: 0.2884
Epoch [2/10], Batch [54/177], Loss: 0.2670
Epoch [2/10], Batch [55/177], Loss: 0.1980
Epoch [2/10], Batch [56/177], Loss: 0.2971
Epoch [2/10], Batch [57/177], Loss: 0.2749
Epoch [2/10], Batch [58/177], Loss: 0.1936
Epoch [2/10], Batch [59/177], Loss: 0.1858
Epoch [2/10], Batch [60/177], Loss: 0.2489
Epoch [2/10], Batch [61/177], Loss: 0.3529
Epoch [2/10], Batch [62/177], Loss: 0.3210
Epoch [2/10], Batch [63/177], Loss: 0.2891
Epoch [2/10], Batch [64/177], Loss: 0.2750
Epoch [2/10], Batch [65/177], Loss: 0.2087
Epoch [2/10], Batch [66/177], Loss: 0.1759
Epoch [2/10], Batch [67/177], Loss: 0.3768
Epoch [2/10], Batch [68/177], Loss: 0.2036
Epoch [2/10], Batch [69/177], Loss: 0.2275
Epoch [2/10], Batch [70/177], Loss: 0.2049
Epoch [2/10], Batch [71/177], Loss: 0.2036
Epoch [2/10], Batch [72/177], Loss: 0.3837
Epoch [2/10], Batch [73/177], Loss: 0.3813
Epoch [2/10], Batch [74/177], Loss: 0.1794
Epoch [2/10], Batch [75/177], Loss: 0.1442
Epoch [2/10], Batch [76/177], Loss: 0.4086
Epoch [2/10], Batch [77/177], Loss: 0.2161
Epoch [2/10], Batch [78/177], Loss: 0.4633
Epoch [2/10], Batch [79/177], Loss: 0.2244
Epoch [2/10], Batch [80/177], Loss: 0.1785
Epoch [2/10], Batch [81/177], Loss: 0.5095
Epoch [2/10], Batch [82/177], Loss: 0.2108
Epoch [2/10], Batch [83/177], Loss: 0.2420
Epoch [2/10], Batch [84/177], Loss: 0.4387
Epoch [2/10], Batch [85/177], Loss: 0.2321
Epoch [2/10], Batch [86/177], Loss: 0.2499
Epoch [2/10], Batch [87/177], Loss: 0.2517
Epoch [2/10], Batch [88/177], Loss: 0.2578
Epoch [2/10], Batch [89/177], Loss: 0.2351
Epoch [2/10], Batch [90/177], Loss: 0.1974
Epoch [2/10], Batch [91/177], Loss: 0.1365
Epoch [2/10], Batch [92/177], Loss: 0.3913
Epoch [2/10], Batch [93/177], Loss: 0.2519
Epoch [2/10], Batch [94/177], Loss: 0.4450
Epoch [2/10], Batch [95/177], Loss: 0.1984
Epoch [2/10], Batch [96/177], Loss: 0.1976
Epoch [2/10], Batch [97/177], Loss: 0.3767
Epoch [2/10], Batch [98/177], Loss: 0.1701
Epoch [2/10], Batch [99/177], Loss: 0.1639
Epoch [2/10], Batch [100/177], Loss: 0.4529
Epoch [2/10], Batch [101/177], Loss: 0.1758
Epoch [2/10], Batch [102/177], Loss: 0.1182
Epoch [2/10], Batch [103/177], Loss: 0.4163
Epoch [2/10], Batch [104/177], Loss: 0.3199
Epoch [2/10], Batch [105/177], Loss: 0.3129
Epoch [2/10], Batch [106/177], Loss: 0.2719
Epoch [2/10], Batch [107/177], Loss: 0.3721
Epoch [2/10], Batch [108/177], Loss: 0.3231
Epoch [2/10], Batch [109/177], Loss: 0.3509
Epoch [2/10], Batch [110/177], Loss: 0.2120
Epoch [2/10], Batch [111/177], Loss: 0.3333
Epoch [2/10], Batch [112/177], Loss: 0.2150
Epoch [2/10], Batch [113/177], Loss: 0.4682
Epoch [2/10], Batch [114/177], Loss: 0.3308
Epoch [2/10], Batch [115/177], Loss: 0.1193
Epoch [2/10], Batch [116/177], Loss: 0.1834
Epoch [2/10], Batch [117/177], Loss: 0.3027
Epoch [2/10], Batch [118/177], Loss: 0.2071
Epoch [2/10], Batch [119/177], Loss: 0.4758
Epoch [2/10], Batch [120/177], Loss: 0.3618
Epoch [2/10], Batch [121/177], Loss: 0.2714
Epoch [2/10], Batch [122/177], Loss: 0.1466
Epoch [2/10], Batch [123/177], Loss: 0.2253
Epoch [2/10], Batch [124/177], Loss: 0.2170
Epoch [2/10], Batch [125/177], Loss: 0.3302
Epoch [2/10], Batch [126/177], Loss: 0.2161
Epoch [2/10], Batch [127/177], Loss: 0.2614
Epoch [2/10], Batch [128/177], Loss: 0.1776
Epoch [2/10], Batch [129/177], Loss: 0.2268
Epoch [2/10], Batch [130/177], Loss: 0.2607
Epoch [2/10], Batch [131/177], Loss: 0.2597
Epoch [2/10], Batch [132/177], Loss: 0.2379
Epoch [2/10], Batch [133/177], Loss: 0.4016
Epoch [2/10], Batch [134/177], Loss: 0.1185
Epoch [2/10], Batch [135/177], Loss: 0.1734
Epoch [2/10], Batch [136/177], Loss: 0.1378
Epoch [2/10], Batch [137/177], Loss: 0.1190
Epoch [2/10], Batch [138/177], Loss: 0.3498
Epoch [2/10], Batch [139/177], Loss: 0.3604
Epoch [2/10], Batch [140/177], Loss: 0.1841
Epoch [2/10], Batch [141/177], Loss: 0.1038
Epoch [2/10], Batch [142/177], Loss: 0.1672
Epoch [2/10], Batch [143/177], Loss: 0.2457
Epoch [2/10], Batch [144/177], Loss: 0.1344
Epoch [2/10], Batch [145/177], Loss: 0.4613
Epoch [2/10], Batch [146/177], Loss: 0.1154
Epoch [2/10], Batch [147/177], Loss: 0.6148
Epoch [2/10], Batch [148/177], Loss: 0.2587
Epoch [2/10], Batch [149/177], Loss: 0.1671
Epoch [2/10], Batch [150/177], Loss: 0.1606
Epoch [2/10], Batch [151/177], Loss: 0.2215
Epoch [2/10], Batch [152/177], Loss: 0.1706
Epoch [2/10], Batch [153/177], Loss: 0.3200
Epoch [2/10], Batch [154/177], Loss: 0.2644
Epoch [2/10], Batch [155/177], Loss: 0.2221
Epoch [2/10], Batch [156/177], Loss: 0.1909
Epoch [2/10], Batch [157/177], Loss: 0.2407
Epoch [2/10], Batch [158/177], Loss: 0.1165
Epoch [2/10], Batch [159/177], Loss: 0.1428
Epoch [2/10], Batch [160/177], Loss: 0.2241
Epoch [2/10], Batch [161/177], Loss: 0.5121
Epoch [2/10], Batch [162/177], Loss: 0.5495
Epoch [2/10], Batch [163/177], Loss: 0.2516
Epoch [2/10], Batch [164/177], Loss: 0.2853
Epoch [2/10], Batch [165/177], Loss: 0.2444
Epoch [2/10], Batch [166/177], Loss: 0.1439
Epoch [2/10], Batch [167/177], Loss: 0.2798
Epoch [2/10], Batch [168/177], Loss: 0.1378
Epoch [2/10], Batch [169/177], Loss: 0.2401
Epoch [2/10], Batch [170/177], Loss: 0.3190
Epoch [2/10], Batch [171/177], Loss: 0.3825
Epoch [2/10], Batch [172/177], Loss: 0.3090
Epoch [2/10], Batch [173/177], Loss: 0.2624
Epoch [2/10], Batch [174/177], Loss: 0.2219
Epoch [2/10], Batch [175/177], Loss: 0.2962
Epoch [2/10], Batch [176/177], Loss: 0.2147
Epoch [2/10], Batch [177/177], Loss: 0.3288
Epoch [2/10], Average Loss: 0.2714
-----------------------------------------------------------
strategy: BEAM
iter: 9
epoch: 1
Test Loss: 0.2714
F1_overall: 0.5823
F1_AGENT: 0.7283
F1_TARGET: 0.4152
-----------------------------------------------------------
Epoch [3/10], Batch [1/177], Loss: 0.1202
Epoch [3/10], Batch [2/177], Loss: 0.2043
Epoch [3/10], Batch [3/177], Loss: 0.2035
Epoch [3/10], Batch [4/177], Loss: 0.1810
Epoch [3/10], Batch [5/177], Loss: 0.1542
Epoch [3/10], Batch [6/177], Loss: 0.2103
Epoch [3/10], Batch [7/177], Loss: 0.1352
Epoch [3/10], Batch [8/177], Loss: 0.0954
Epoch [3/10], Batch [9/177], Loss: 0.1571
Epoch [3/10], Batch [10/177], Loss: 0.2167
Epoch [3/10], Batch [11/177], Loss: 0.1263
Epoch [3/10], Batch [12/177], Loss: 0.0593
Epoch [3/10], Batch [13/177], Loss: 0.1052
Epoch [3/10], Batch [14/177], Loss: 0.1511
Epoch [3/10], Batch [15/177], Loss: 0.1197
Epoch [3/10], Batch [16/177], Loss: 0.2126
Epoch [3/10], Batch [17/177], Loss: 0.4016
Epoch [3/10], Batch [18/177], Loss: 0.0786
Epoch [3/10], Batch [19/177], Loss: 0.1257
Epoch [3/10], Batch [20/177], Loss: 0.0964
Epoch [3/10], Batch [21/177], Loss: 0.1882
Epoch [3/10], Batch [22/177], Loss: 0.1578
Epoch [3/10], Batch [23/177], Loss: 0.1179
Epoch [3/10], Batch [24/177], Loss: 0.2253
Epoch [3/10], Batch [25/177], Loss: 0.1018
Epoch [3/10], Batch [26/177], Loss: 0.2423
Epoch [3/10], Batch [27/177], Loss: 0.1321
Epoch [3/10], Batch [28/177], Loss: 0.1943
Epoch [3/10], Batch [29/177], Loss: 0.1655
Epoch [3/10], Batch [30/177], Loss: 0.1742
Epoch [3/10], Batch [31/177], Loss: 0.2306
Epoch [3/10], Batch [32/177], Loss: 0.1507
Epoch [3/10], Batch [33/177], Loss: 0.2742
Epoch [3/10], Batch [34/177], Loss: 0.1568
Epoch [3/10], Batch [35/177], Loss: 0.0982
Epoch [3/10], Batch [36/177], Loss: 0.1700
Epoch [3/10], Batch [37/177], Loss: 0.3942
Epoch [3/10], Batch [38/177], Loss: 0.1312
Epoch [3/10], Batch [39/177], Loss: 0.0866
Epoch [3/10], Batch [40/177], Loss: 0.1991
Epoch [3/10], Batch [41/177], Loss: 0.1198
Epoch [3/10], Batch [42/177], Loss: 0.3929
Epoch [3/10], Batch [43/177], Loss: 0.1538
Epoch [3/10], Batch [44/177], Loss: 0.1434
Epoch [3/10], Batch [45/177], Loss: 0.1402
Epoch [3/10], Batch [46/177], Loss: 0.1422
Epoch [3/10], Batch [47/177], Loss: 0.1487
Epoch [3/10], Batch [48/177], Loss: 0.2251
Epoch [3/10], Batch [49/177], Loss: 0.0978
Epoch [3/10], Batch [50/177], Loss: 0.1207
Epoch [3/10], Batch [51/177], Loss: 0.1127
Epoch [3/10], Batch [52/177], Loss: 0.1788
Epoch [3/10], Batch [53/177], Loss: 0.2964
Epoch [3/10], Batch [54/177], Loss: 0.1741
Epoch [3/10], Batch [55/177], Loss: 0.1588
Epoch [3/10], Batch [56/177], Loss: 0.0973
Epoch [3/10], Batch [57/177], Loss: 0.1919
Epoch [3/10], Batch [58/177], Loss: 0.1704
Epoch [3/10], Batch [59/177], Loss: 0.0924
Epoch [3/10], Batch [60/177], Loss: 0.2181
Epoch [3/10], Batch [61/177], Loss: 0.3841
Epoch [3/10], Batch [62/177], Loss: 0.1382
Epoch [3/10], Batch [63/177], Loss: 0.1160
Epoch [3/10], Batch [64/177], Loss: 0.2025
Epoch [3/10], Batch [65/177], Loss: 0.2587
Epoch [3/10], Batch [66/177], Loss: 0.1971
Epoch [3/10], Batch [67/177], Loss: 0.1585
Epoch [3/10], Batch [68/177], Loss: 0.1604
Epoch [3/10], Batch [69/177], Loss: 0.1694
Epoch [3/10], Batch [70/177], Loss: 0.2963
Epoch [3/10], Batch [71/177], Loss: 0.2301
Epoch [3/10], Batch [72/177], Loss: 0.1757
Epoch [3/10], Batch [73/177], Loss: 0.2049
Epoch [3/10], Batch [74/177], Loss: 0.2092
Epoch [3/10], Batch [75/177], Loss: 0.1727
Epoch [3/10], Batch [76/177], Loss: 0.1795
Epoch [3/10], Batch [77/177], Loss: 0.1894
Epoch [3/10], Batch [78/177], Loss: 0.0885
Epoch [3/10], Batch [79/177], Loss: 0.2137
Epoch [3/10], Batch [80/177], Loss: 0.1571
Epoch [3/10], Batch [81/177], Loss: 0.0740
Epoch [3/10], Batch [82/177], Loss: 0.2304
Epoch [3/10], Batch [83/177], Loss: 0.2266
Epoch [3/10], Batch [84/177], Loss: 0.1740
Epoch [3/10], Batch [85/177], Loss: 0.2114
Epoch [3/10], Batch [86/177], Loss: 0.1268
Epoch [3/10], Batch [87/177], Loss: 0.0988
Epoch [3/10], Batch [88/177], Loss: 0.1751
Epoch [3/10], Batch [89/177], Loss: 0.1047
Epoch [3/10], Batch [90/177], Loss: 0.3250
Epoch [3/10], Batch [91/177], Loss: 0.2020
Epoch [3/10], Batch [92/177], Loss: 0.1588
Epoch [3/10], Batch [93/177], Loss: 0.2549
Epoch [3/10], Batch [94/177], Loss: 0.2987
Epoch [3/10], Batch [95/177], Loss: 0.0802
Epoch [3/10], Batch [96/177], Loss: 0.2920
Epoch [3/10], Batch [97/177], Loss: 0.2019
Epoch [3/10], Batch [98/177], Loss: 0.1344
Epoch [3/10], Batch [99/177], Loss: 0.1313
Epoch [3/10], Batch [100/177], Loss: 0.0553
Epoch [3/10], Batch [101/177], Loss: 0.1706
Epoch [3/10], Batch [102/177], Loss: 0.1727
Epoch [3/10], Batch [103/177], Loss: 0.2707
Epoch [3/10], Batch [104/177], Loss: 0.1971
Epoch [3/10], Batch [105/177], Loss: 0.0941
Epoch [3/10], Batch [106/177], Loss: 0.0590
Epoch [3/10], Batch [107/177], Loss: 0.1889
Epoch [3/10], Batch [108/177], Loss: 0.2390
Epoch [3/10], Batch [109/177], Loss: 0.2033
Epoch [3/10], Batch [110/177], Loss: 0.2503
Epoch [3/10], Batch [111/177], Loss: 0.1106
Epoch [3/10], Batch [112/177], Loss: 0.1343
Epoch [3/10], Batch [113/177], Loss: 0.2889
Epoch [3/10], Batch [114/177], Loss: 0.0999
Epoch [3/10], Batch [115/177], Loss: 0.0772
Epoch [3/10], Batch [116/177], Loss: 0.2173
Epoch [3/10], Batch [117/177], Loss: 0.2480
Epoch [3/10], Batch [118/177], Loss: 0.1088
Epoch [3/10], Batch [119/177], Loss: 0.3249
Epoch [3/10], Batch [120/177], Loss: 0.2480
Epoch [3/10], Batch [121/177], Loss: 0.1848
Epoch [3/10], Batch [122/177], Loss: 0.1106
Epoch [3/10], Batch [123/177], Loss: 0.0862
Epoch [3/10], Batch [124/177], Loss: 0.1778
Epoch [3/10], Batch [125/177], Loss: 0.2009
Epoch [3/10], Batch [126/177], Loss: 0.2212
Epoch [3/10], Batch [127/177], Loss: 0.3177
Epoch [3/10], Batch [128/177], Loss: 0.1975
Epoch [3/10], Batch [129/177], Loss: 0.0664
Epoch [3/10], Batch [130/177], Loss: 0.1618
Epoch [3/10], Batch [131/177], Loss: 0.1405
Epoch [3/10], Batch [132/177], Loss: 0.1019
Epoch [3/10], Batch [133/177], Loss: 0.2409
Epoch [3/10], Batch [134/177], Loss: 0.1201
Epoch [3/10], Batch [135/177], Loss: 0.2220
Epoch [3/10], Batch [136/177], Loss: 0.1669
Epoch [3/10], Batch [137/177], Loss: 0.3753
Epoch [3/10], Batch [138/177], Loss: 0.2839
Epoch [3/10], Batch [139/177], Loss: 0.1443
Epoch [3/10], Batch [140/177], Loss: 0.1109
Epoch [3/10], Batch [141/177], Loss: 0.0863
Epoch [3/10], Batch [142/177], Loss: 0.1696
Epoch [3/10], Batch [143/177], Loss: 0.1348
Epoch [3/10], Batch [144/177], Loss: 0.1176
Epoch [3/10], Batch [145/177], Loss: 0.2169
Epoch [3/10], Batch [146/177], Loss: 0.1688
Epoch [3/10], Batch [147/177], Loss: 0.1519
Epoch [3/10], Batch [148/177], Loss: 0.1111
Epoch [3/10], Batch [149/177], Loss: 0.3746
Epoch [3/10], Batch [150/177], Loss: 0.4333
Epoch [3/10], Batch [151/177], Loss: 0.0839
Epoch [3/10], Batch [152/177], Loss: 0.2883
Epoch [3/10], Batch [153/177], Loss: 0.1179
Epoch [3/10], Batch [154/177], Loss: 0.1724
Epoch [3/10], Batch [155/177], Loss: 0.1713
Epoch [3/10], Batch [156/177], Loss: 0.1170
Epoch [3/10], Batch [157/177], Loss: 0.1571
Epoch [3/10], Batch [158/177], Loss: 0.1681
Epoch [3/10], Batch [159/177], Loss: 0.1305
Epoch [3/10], Batch [160/177], Loss: 0.2005
Epoch [3/10], Batch [161/177], Loss: 0.3682
Epoch [3/10], Batch [162/177], Loss: 0.1911
Epoch [3/10], Batch [163/177], Loss: 0.1317
Epoch [3/10], Batch [164/177], Loss: 0.0774
Epoch [3/10], Batch [165/177], Loss: 0.1551
Epoch [3/10], Batch [166/177], Loss: 0.0955
Epoch [3/10], Batch [167/177], Loss: 0.0844
Epoch [3/10], Batch [168/177], Loss: 0.2031
Epoch [3/10], Batch [169/177], Loss: 0.1465
Epoch [3/10], Batch [170/177], Loss: 0.2545
Epoch [3/10], Batch [171/177], Loss: 0.1151
Epoch [3/10], Batch [172/177], Loss: 0.2331
Epoch [3/10], Batch [173/177], Loss: 0.0856
Epoch [3/10], Batch [174/177], Loss: 0.2565
Epoch [3/10], Batch [175/177], Loss: 0.1508
Epoch [3/10], Batch [176/177], Loss: 0.1056
Epoch [3/10], Batch [177/177], Loss: 0.2923
Epoch [3/10], Average Loss: 0.1776
-----------------------------------------------------------
strategy: BEAM
iter: 9
epoch: 2
Test Loss: 0.2816
F1_overall: 0.5877
F1_AGENT: 0.7365
F1_TARGET: 0.4197
-----------------------------------------------------------
Epoch [4/10], Batch [1/177], Loss: 0.0951
Epoch [4/10], Batch [2/177], Loss: 0.0609
Epoch [4/10], Batch [3/177], Loss: 0.2076
Epoch [4/10], Batch [4/177], Loss: 0.0572
Epoch [4/10], Batch [5/177], Loss: 0.0825
Epoch [4/10], Batch [6/177], Loss: 0.1490
Epoch [4/10], Batch [7/177], Loss: 0.2016
Epoch [4/10], Batch [8/177], Loss: 0.1187
Epoch [4/10], Batch [9/177], Loss: 0.1643
Epoch [4/10], Batch [10/177], Loss: 0.1354
Epoch [4/10], Batch [11/177], Loss: 0.1090
Epoch [4/10], Batch [12/177], Loss: 0.5340
Epoch [4/10], Batch [13/177], Loss: 0.1424
Epoch [4/10], Batch [14/177], Loss: 0.0864
Epoch [4/10], Batch [15/177], Loss: 0.1367
Epoch [4/10], Batch [16/177], Loss: 0.0649
Epoch [4/10], Batch [17/177], Loss: 0.0932
Epoch [4/10], Batch [18/177], Loss: 0.0793
Epoch [4/10], Batch [19/177], Loss: 0.0283
Epoch [4/10], Batch [20/177], Loss: 0.0801
Epoch [4/10], Batch [21/177], Loss: 0.1052
Epoch [4/10], Batch [22/177], Loss: 0.1110
Epoch [4/10], Batch [23/177], Loss: 0.1390
Epoch [4/10], Batch [24/177], Loss: 0.0291
Epoch [4/10], Batch [25/177], Loss: 0.0433
Epoch [4/10], Batch [26/177], Loss: 0.1676
Epoch [4/10], Batch [27/177], Loss: 0.1019
Epoch [4/10], Batch [28/177], Loss: 0.0916
Epoch [4/10], Batch [29/177], Loss: 0.1021
Epoch [4/10], Batch [30/177], Loss: 0.1808
Epoch [4/10], Batch [31/177], Loss: 0.1264
Epoch [4/10], Batch [32/177], Loss: 0.0929
Epoch [4/10], Batch [33/177], Loss: 0.0701
Epoch [4/10], Batch [34/177], Loss: 0.1189
Epoch [4/10], Batch [35/177], Loss: 0.0893
Epoch [4/10], Batch [36/177], Loss: 0.0741
Epoch [4/10], Batch [37/177], Loss: 0.0568
Epoch [4/10], Batch [38/177], Loss: 0.0673
Epoch [4/10], Batch [39/177], Loss: 0.0678
Epoch [4/10], Batch [40/177], Loss: 0.1119
Epoch [4/10], Batch [41/177], Loss: 0.0626
Epoch [4/10], Batch [42/177], Loss: 0.1128
Epoch [4/10], Batch [43/177], Loss: 0.0656
Epoch [4/10], Batch [44/177], Loss: 0.0869
Epoch [4/10], Batch [45/177], Loss: 0.1194
Epoch [4/10], Batch [46/177], Loss: 0.2384
Epoch [4/10], Batch [47/177], Loss: 0.0983
Epoch [4/10], Batch [48/177], Loss: 0.1148
Epoch [4/10], Batch [49/177], Loss: 0.1753
Epoch [4/10], Batch [50/177], Loss: 0.1221
Epoch [4/10], Batch [51/177], Loss: 0.0815
Epoch [4/10], Batch [52/177], Loss: 0.1479
Epoch [4/10], Batch [53/177], Loss: 0.1933
Epoch [4/10], Batch [54/177], Loss: 0.2305
Epoch [4/10], Batch [55/177], Loss: 0.0672
Epoch [4/10], Batch [56/177], Loss: 0.0700
Epoch [4/10], Batch [57/177], Loss: 0.1406
Epoch [4/10], Batch [58/177], Loss: 0.1001
Epoch [4/10], Batch [59/177], Loss: 0.0827
Epoch [4/10], Batch [60/177], Loss: 0.1539
Epoch [4/10], Batch [61/177], Loss: 0.1025
Epoch [4/10], Batch [62/177], Loss: 0.0885
Epoch [4/10], Batch [63/177], Loss: 0.1319
Epoch [4/10], Batch [64/177], Loss: 0.0719
Epoch [4/10], Batch [65/177], Loss: 0.1362
Epoch [4/10], Batch [66/177], Loss: 0.1206
Epoch [4/10], Batch [67/177], Loss: 0.1239
Epoch [4/10], Batch [68/177], Loss: 0.1171
Epoch [4/10], Batch [69/177], Loss: 0.1405
Epoch [4/10], Batch [70/177], Loss: 0.1963
Epoch [4/10], Batch [71/177], Loss: 0.1196
Epoch [4/10], Batch [72/177], Loss: 0.1162
Epoch [4/10], Batch [73/177], Loss: 0.0886
Epoch [4/10], Batch [74/177], Loss: 0.1026
Epoch [4/10], Batch [75/177], Loss: 0.1286
Epoch [4/10], Batch [76/177], Loss: 0.0868
Epoch [4/10], Batch [77/177], Loss: 0.1640
Epoch [4/10], Batch [78/177], Loss: 0.0815
Epoch [4/10], Batch [79/177], Loss: 0.0648
Epoch [4/10], Batch [80/177], Loss: 0.0614
Epoch [4/10], Batch [81/177], Loss: 0.1478
Epoch [4/10], Batch [82/177], Loss: 0.0501
Epoch [4/10], Batch [83/177], Loss: 0.1558
Epoch [4/10], Batch [84/177], Loss: 0.1175
Epoch [4/10], Batch [85/177], Loss: 0.2209
Epoch [4/10], Batch [86/177], Loss: 0.1442
Epoch [4/10], Batch [87/177], Loss: 0.0936
Epoch [4/10], Batch [88/177], Loss: 0.1811
Epoch [4/10], Batch [89/177], Loss: 0.0988
Epoch [4/10], Batch [90/177], Loss: 0.1125
Epoch [4/10], Batch [91/177], Loss: 0.1087
Epoch [4/10], Batch [92/177], Loss: 0.2472
Epoch [4/10], Batch [93/177], Loss: 0.1068
Epoch [4/10], Batch [94/177], Loss: 0.1015
Epoch [4/10], Batch [95/177], Loss: 0.0937
Epoch [4/10], Batch [96/177], Loss: 0.0404
Epoch [4/10], Batch [97/177], Loss: 0.1033
Epoch [4/10], Batch [98/177], Loss: 0.0945
Epoch [4/10], Batch [99/177], Loss: 0.0871
Epoch [4/10], Batch [100/177], Loss: 0.1088
Epoch [4/10], Batch [101/177], Loss: 0.1125
Epoch [4/10], Batch [102/177], Loss: 0.1147
Epoch [4/10], Batch [103/177], Loss: 0.0427
Epoch [4/10], Batch [104/177], Loss: 0.2177
Epoch [4/10], Batch [105/177], Loss: 0.1116
Epoch [4/10], Batch [106/177], Loss: 0.2265
Epoch [4/10], Batch [107/177], Loss: 0.0861
Epoch [4/10], Batch [108/177], Loss: 0.1270
Epoch [4/10], Batch [109/177], Loss: 0.1366
Epoch [4/10], Batch [110/177], Loss: 0.0692
Epoch [4/10], Batch [111/177], Loss: 0.0519
Epoch [4/10], Batch [112/177], Loss: 0.2530
Epoch [4/10], Batch [113/177], Loss: 0.0725
Epoch [4/10], Batch [114/177], Loss: 0.0401
Epoch [4/10], Batch [115/177], Loss: 0.1602
Epoch [4/10], Batch [116/177], Loss: 0.0353
Epoch [4/10], Batch [117/177], Loss: 0.0822
Epoch [4/10], Batch [118/177], Loss: 0.0619
Epoch [4/10], Batch [119/177], Loss: 0.0810
Epoch [4/10], Batch [120/177], Loss: 0.2033
Epoch [4/10], Batch [121/177], Loss: 0.0704
Epoch [4/10], Batch [122/177], Loss: 0.1237
Epoch [4/10], Batch [123/177], Loss: 0.1539
Epoch [4/10], Batch [124/177], Loss: 0.1066
Epoch [4/10], Batch [125/177], Loss: 0.2905
Epoch [4/10], Batch [126/177], Loss: 0.0891
Epoch [4/10], Batch [127/177], Loss: 0.1386
Epoch [4/10], Batch [128/177], Loss: 0.1028
Epoch [4/10], Batch [129/177], Loss: 0.0787
Epoch [4/10], Batch [130/177], Loss: 0.1520
Epoch [4/10], Batch [131/177], Loss: 0.1391
Epoch [4/10], Batch [132/177], Loss: 0.2718
Epoch [4/10], Batch [133/177], Loss: 0.0451
Epoch [4/10], Batch [134/177], Loss: 0.3052
Epoch [4/10], Batch [135/177], Loss: 0.1216
Epoch [4/10], Batch [136/177], Loss: 0.0804
Epoch [4/10], Batch [137/177], Loss: 0.1298
Epoch [4/10], Batch [138/177], Loss: 0.0687
Epoch [4/10], Batch [139/177], Loss: 0.1239
Epoch [4/10], Batch [140/177], Loss: 0.1370
Epoch [4/10], Batch [141/177], Loss: 0.1706
Epoch [4/10], Batch [142/177], Loss: 0.1311
Epoch [4/10], Batch [143/177], Loss: 0.0295
Epoch [4/10], Batch [144/177], Loss: 0.1022
Epoch [4/10], Batch [145/177], Loss: 0.1144
Epoch [4/10], Batch [146/177], Loss: 0.0981
Epoch [4/10], Batch [147/177], Loss: 0.0794
Epoch [4/10], Batch [148/177], Loss: 0.0987
Epoch [4/10], Batch [149/177], Loss: 0.1362
Epoch [4/10], Batch [150/177], Loss: 0.2191
Epoch [4/10], Batch [151/177], Loss: 0.0750
Epoch [4/10], Batch [152/177], Loss: 0.0665
Epoch [4/10], Batch [153/177], Loss: 0.2064
Epoch [4/10], Batch [154/177], Loss: 0.1160
Epoch [4/10], Batch [155/177], Loss: 0.3155
Epoch [4/10], Batch [156/177], Loss: 0.1038
Epoch [4/10], Batch [157/177], Loss: 0.1968
Epoch [4/10], Batch [158/177], Loss: 0.1482
Epoch [4/10], Batch [159/177], Loss: 0.0678
Epoch [4/10], Batch [160/177], Loss: 0.1036
Epoch [4/10], Batch [161/177], Loss: 0.2555
Epoch [4/10], Batch [162/177], Loss: 0.0508
Epoch [4/10], Batch [163/177], Loss: 0.1028
Epoch [4/10], Batch [164/177], Loss: 0.0784
Epoch [4/10], Batch [165/177], Loss: 0.1088
Epoch [4/10], Batch [166/177], Loss: 0.2271
Epoch [4/10], Batch [167/177], Loss: 0.1704
Epoch [4/10], Batch [168/177], Loss: 0.1165
Epoch [4/10], Batch [169/177], Loss: 0.0902
Epoch [4/10], Batch [170/177], Loss: 0.1647
Epoch [4/10], Batch [171/177], Loss: 0.0748
Epoch [4/10], Batch [172/177], Loss: 0.2736
Epoch [4/10], Batch [173/177], Loss: 0.1282
Epoch [4/10], Batch [174/177], Loss: 0.1307
Epoch [4/10], Batch [175/177], Loss: 0.2170
Epoch [4/10], Batch [176/177], Loss: 0.1077
Epoch [4/10], Batch [177/177], Loss: 0.1607
Epoch [4/10], Average Loss: 0.1229
-----------------------------------------------------------
strategy: BEAM
iter: 9
epoch: 3
Test Loss: 0.2966
F1_overall: 0.5985
F1_AGENT: 0.7286
F1_TARGET: 0.4770
-----------------------------------------------------------
Epoch [5/10], Batch [1/177], Loss: 0.0808
Epoch [5/10], Batch [2/177], Loss: 0.0695
Epoch [5/10], Batch [3/177], Loss: 0.1601
Epoch [5/10], Batch [4/177], Loss: 0.0452
Epoch [5/10], Batch [5/177], Loss: 0.0469
Epoch [5/10], Batch [6/177], Loss: 0.0452
Epoch [5/10], Batch [7/177], Loss: 0.0509
Epoch [5/10], Batch [8/177], Loss: 0.1582
Epoch [5/10], Batch [9/177], Loss: 0.1444
Epoch [5/10], Batch [10/177], Loss: 0.1367
Epoch [5/10], Batch [11/177], Loss: 0.1133
Epoch [5/10], Batch [12/177], Loss: 0.1601
Epoch [5/10], Batch [13/177], Loss: 0.0547
Epoch [5/10], Batch [14/177], Loss: 0.0720
Epoch [5/10], Batch [15/177], Loss: 0.1520
Epoch [5/10], Batch [16/177], Loss: 0.0849
Epoch [5/10], Batch [17/177], Loss: 0.0428
Epoch [5/10], Batch [18/177], Loss: 0.1211
Epoch [5/10], Batch [19/177], Loss: 0.0209
Epoch [5/10], Batch [20/177], Loss: 0.0285
Epoch [5/10], Batch [21/177], Loss: 0.1092
Epoch [5/10], Batch [22/177], Loss: 0.0358
Epoch [5/10], Batch [23/177], Loss: 0.0419
Epoch [5/10], Batch [24/177], Loss: 0.0990
Epoch [5/10], Batch [25/177], Loss: 0.0655
Epoch [5/10], Batch [26/177], Loss: 0.1121
Epoch [5/10], Batch [27/177], Loss: 0.1158
Epoch [5/10], Batch [28/177], Loss: 0.0405
Epoch [5/10], Batch [29/177], Loss: 0.0490
Epoch [5/10], Batch [30/177], Loss: 0.0363
Epoch [5/10], Batch [31/177], Loss: 0.0398
Epoch [5/10], Batch [32/177], Loss: 0.1380
Epoch [5/10], Batch [33/177], Loss: 0.1592
Epoch [5/10], Batch [34/177], Loss: 0.0755
Epoch [5/10], Batch [35/177], Loss: 0.0337
Epoch [5/10], Batch [36/177], Loss: 0.0549
Epoch [5/10], Batch [37/177], Loss: 0.1163
Epoch [5/10], Batch [38/177], Loss: 0.0649
Epoch [5/10], Batch [39/177], Loss: 0.0985
Epoch [5/10], Batch [40/177], Loss: 0.1286
Epoch [5/10], Batch [41/177], Loss: 0.0288
Epoch [5/10], Batch [42/177], Loss: 0.1057
Epoch [5/10], Batch [43/177], Loss: 0.0565
Epoch [5/10], Batch [44/177], Loss: 0.0911
Epoch [5/10], Batch [45/177], Loss: 0.1060
Epoch [5/10], Batch [46/177], Loss: 0.0723
Epoch [5/10], Batch [47/177], Loss: 0.0500
Epoch [5/10], Batch [48/177], Loss: 0.1402
Epoch [5/10], Batch [49/177], Loss: 0.0726
Epoch [5/10], Batch [50/177], Loss: 0.1034
Epoch [5/10], Batch [51/177], Loss: 0.0925
Epoch [5/10], Batch [52/177], Loss: 0.1223
Epoch [5/10], Batch [53/177], Loss: 0.0323
Epoch [5/10], Batch [54/177], Loss: 0.1531
Epoch [5/10], Batch [55/177], Loss: 0.2043
Epoch [5/10], Batch [56/177], Loss: 0.0591
Epoch [5/10], Batch [57/177], Loss: 0.0859
Epoch [5/10], Batch [58/177], Loss: 0.1083
Epoch [5/10], Batch [59/177], Loss: 0.1506
Epoch [5/10], Batch [60/177], Loss: 0.0874
Epoch [5/10], Batch [61/177], Loss: 0.0515
Epoch [5/10], Batch [62/177], Loss: 0.1138
Epoch [5/10], Batch [63/177], Loss: 0.0397
Epoch [5/10], Batch [64/177], Loss: 0.0866
Epoch [5/10], Batch [65/177], Loss: 0.0281
Epoch [5/10], Batch [66/177], Loss: 0.0925
Epoch [5/10], Batch [67/177], Loss: 0.1641
Epoch [5/10], Batch [68/177], Loss: 0.1354
Epoch [5/10], Batch [69/177], Loss: 0.1500
Epoch [5/10], Batch [70/177], Loss: 0.0188
Epoch [5/10], Batch [71/177], Loss: 0.2495
Epoch [5/10], Batch [72/177], Loss: 0.0804
Epoch [5/10], Batch [73/177], Loss: 0.0810
Epoch [5/10], Batch [74/177], Loss: 0.1249
Epoch [5/10], Batch [75/177], Loss: 0.0708
Epoch [5/10], Batch [76/177], Loss: 0.0314
Epoch [5/10], Batch [77/177], Loss: 0.0406
Epoch [5/10], Batch [78/177], Loss: 0.0760
Epoch [5/10], Batch [79/177], Loss: 0.1075
Epoch [5/10], Batch [80/177], Loss: 0.0411
Epoch [5/10], Batch [81/177], Loss: 0.0647
Epoch [5/10], Batch [82/177], Loss: 0.0827
Epoch [5/10], Batch [83/177], Loss: 0.1236
Epoch [5/10], Batch [84/177], Loss: 0.0682
Epoch [5/10], Batch [85/177], Loss: 0.2924
Epoch [5/10], Batch [86/177], Loss: 0.0818
Epoch [5/10], Batch [87/177], Loss: 0.0687
Epoch [5/10], Batch [88/177], Loss: 0.0876
Epoch [5/10], Batch [89/177], Loss: 0.1831
Epoch [5/10], Batch [90/177], Loss: 0.0213
Epoch [5/10], Batch [91/177], Loss: 0.0430
Epoch [5/10], Batch [92/177], Loss: 0.2301
Epoch [5/10], Batch [93/177], Loss: 0.1420
Epoch [5/10], Batch [94/177], Loss: 0.0697
Epoch [5/10], Batch [95/177], Loss: 0.1025
Epoch [5/10], Batch [96/177], Loss: 0.0632
Epoch [5/10], Batch [97/177], Loss: 0.0487
Epoch [5/10], Batch [98/177], Loss: 0.1122
Epoch [5/10], Batch [99/177], Loss: 0.0706
Epoch [5/10], Batch [100/177], Loss: 0.0501
Epoch [5/10], Batch [101/177], Loss: 0.1532
Epoch [5/10], Batch [102/177], Loss: 0.1347
Epoch [5/10], Batch [103/177], Loss: 0.1058
Epoch [5/10], Batch [104/177], Loss: 0.0761
Epoch [5/10], Batch [105/177], Loss: 0.0254
Epoch [5/10], Batch [106/177], Loss: 0.0649
Epoch [5/10], Batch [107/177], Loss: 0.0277
Epoch [5/10], Batch [108/177], Loss: 0.0354
Epoch [5/10], Batch [109/177], Loss: 0.1271
Epoch [5/10], Batch [110/177], Loss: 0.0413
Epoch [5/10], Batch [111/177], Loss: 0.0694
Epoch [5/10], Batch [112/177], Loss: 0.0433
Epoch [5/10], Batch [113/177], Loss: 0.1600
Epoch [5/10], Batch [114/177], Loss: 0.1038
Epoch [5/10], Batch [115/177], Loss: 0.0567
Epoch [5/10], Batch [116/177], Loss: 0.0410
Epoch [5/10], Batch [117/177], Loss: 0.2143
Epoch [5/10], Batch [118/177], Loss: 0.1653
Epoch [5/10], Batch [119/177], Loss: 0.0699
Epoch [5/10], Batch [120/177], Loss: 0.1603
Epoch [5/10], Batch [121/177], Loss: 0.0960
Epoch [5/10], Batch [122/177], Loss: 0.0761
Epoch [5/10], Batch [123/177], Loss: 0.1874
Epoch [5/10], Batch [124/177], Loss: 0.0680
Epoch [5/10], Batch [125/177], Loss: 0.0398
Epoch [5/10], Batch [126/177], Loss: 0.1132
Epoch [5/10], Batch [127/177], Loss: 0.0859
Epoch [5/10], Batch [128/177], Loss: 0.1157
Epoch [5/10], Batch [129/177], Loss: 0.0461
Epoch [5/10], Batch [130/177], Loss: 0.0683
Epoch [5/10], Batch [131/177], Loss: 0.0524
Epoch [5/10], Batch [132/177], Loss: 0.0818
Epoch [5/10], Batch [133/177], Loss: 0.1091
Epoch [5/10], Batch [134/177], Loss: 0.1819
Epoch [5/10], Batch [135/177], Loss: 0.0982
Epoch [5/10], Batch [136/177], Loss: 0.0572
Epoch [5/10], Batch [137/177], Loss: 0.0692
Epoch [5/10], Batch [138/177], Loss: 0.1047
Epoch [5/10], Batch [139/177], Loss: 0.0434
Epoch [5/10], Batch [140/177], Loss: 0.0490
Epoch [5/10], Batch [141/177], Loss: 0.1086
Epoch [5/10], Batch [142/177], Loss: 0.0697
Epoch [5/10], Batch [143/177], Loss: 0.0980
Epoch [5/10], Batch [144/177], Loss: 0.0578
Epoch [5/10], Batch [145/177], Loss: 0.1047
Epoch [5/10], Batch [146/177], Loss: 0.0187
Epoch [5/10], Batch [147/177], Loss: 0.2445
Epoch [5/10], Batch [148/177], Loss: 0.0740
Epoch [5/10], Batch [149/177], Loss: 0.0511
Epoch [5/10], Batch [150/177], Loss: 0.0536
Epoch [5/10], Batch [151/177], Loss: 0.1393
Epoch [5/10], Batch [152/177], Loss: 0.0569
Epoch [5/10], Batch [153/177], Loss: 0.1072
Epoch [5/10], Batch [154/177], Loss: 0.0320
Epoch [5/10], Batch [155/177], Loss: 0.1295
Epoch [5/10], Batch [156/177], Loss: 0.0435
Epoch [5/10], Batch [157/177], Loss: 0.1410
Epoch [5/10], Batch [158/177], Loss: 0.1362
Epoch [5/10], Batch [159/177], Loss: 0.1858
Epoch [5/10], Batch [160/177], Loss: 0.0854
Epoch [5/10], Batch [161/177], Loss: 0.0766
Epoch [5/10], Batch [162/177], Loss: 0.1116
Epoch [5/10], Batch [163/177], Loss: 0.0563
Epoch [5/10], Batch [164/177], Loss: 0.0856
Epoch [5/10], Batch [165/177], Loss: 0.1646
Epoch [5/10], Batch [166/177], Loss: 0.0319
Epoch [5/10], Batch [167/177], Loss: 0.0549
Epoch [5/10], Batch [168/177], Loss: 0.0987
Epoch [5/10], Batch [169/177], Loss: 0.0210
Epoch [5/10], Batch [170/177], Loss: 0.2113
Epoch [5/10], Batch [171/177], Loss: 0.1309
Epoch [5/10], Batch [172/177], Loss: 0.0800
Epoch [5/10], Batch [173/177], Loss: 0.0555
Epoch [5/10], Batch [174/177], Loss: 0.0236
Epoch [5/10], Batch [175/177], Loss: 0.1754
Epoch [5/10], Batch [176/177], Loss: 0.0658
Epoch [5/10], Batch [177/177], Loss: 0.1150
Epoch [5/10], Average Loss: 0.0917
-----------------------------------------------------------
strategy: BEAM
iter: 9
epoch: 4
Test Loss: 0.3294
F1_overall: 0.5810
F1_AGENT: 0.7046
F1_TARGET: 0.4655
-----------------------------------------------------------
Epoch [6/10], Batch [1/177], Loss: 0.1584
Epoch [6/10], Batch [2/177], Loss: 0.0669
Epoch [6/10], Batch [3/177], Loss: 0.0247
Epoch [6/10], Batch [4/177], Loss: 0.0847
Epoch [6/10], Batch [5/177], Loss: 0.0182
Epoch [6/10], Batch [6/177], Loss: 0.0189
Epoch [6/10], Batch [7/177], Loss: 0.0130
Epoch [6/10], Batch [8/177], Loss: 0.0440
Epoch [6/10], Batch [9/177], Loss: 0.0442
Epoch [6/10], Batch [10/177], Loss: 0.0288
Epoch [6/10], Batch [11/177], Loss: 0.0262
Epoch [6/10], Batch [12/177], Loss: 0.0378
Epoch [6/10], Batch [13/177], Loss: 0.0224
Epoch [6/10], Batch [14/177], Loss: 0.0893
Epoch [6/10], Batch [15/177], Loss: 0.0192
Epoch [6/10], Batch [16/177], Loss: 0.0451
Epoch [6/10], Batch [17/177], Loss: 0.0844
Epoch [6/10], Batch [18/177], Loss: 0.0258
Epoch [6/10], Batch [19/177], Loss: 0.0855
Epoch [6/10], Batch [20/177], Loss: 0.0417
Epoch [6/10], Batch [21/177], Loss: 0.1821
Epoch [6/10], Batch [22/177], Loss: 0.0485
Epoch [6/10], Batch [23/177], Loss: 0.0923
Epoch [6/10], Batch [24/177], Loss: 0.2614
Epoch [6/10], Batch [25/177], Loss: 0.0882
Epoch [6/10], Batch [26/177], Loss: 0.0644
Epoch [6/10], Batch [27/177], Loss: 0.0138
Epoch [6/10], Batch [28/177], Loss: 0.0477
Epoch [6/10], Batch [29/177], Loss: 0.0643
Epoch [6/10], Batch [30/177], Loss: 0.0258
Epoch [6/10], Batch [31/177], Loss: 0.0382
Epoch [6/10], Batch [32/177], Loss: 0.0835
Epoch [6/10], Batch [33/177], Loss: 0.0451
Epoch [6/10], Batch [34/177], Loss: 0.0468
Epoch [6/10], Batch [35/177], Loss: 0.0290
Epoch [6/10], Batch [36/177], Loss: 0.0190
Epoch [6/10], Batch [37/177], Loss: 0.0281
Epoch [6/10], Batch [38/177], Loss: 0.0450
Epoch [6/10], Batch [39/177], Loss: 0.0175
Epoch [6/10], Batch [40/177], Loss: 0.0436
Epoch [6/10], Batch [41/177], Loss: 0.0584
Epoch [6/10], Batch [42/177], Loss: 0.0137
Epoch [6/10], Batch [43/177], Loss: 0.0594
Epoch [6/10], Batch [44/177], Loss: 0.0159
Epoch [6/10], Batch [45/177], Loss: 0.0231
Epoch [6/10], Batch [46/177], Loss: 0.0139
Epoch [6/10], Batch [47/177], Loss: 0.0408
Epoch [6/10], Batch [48/177], Loss: 0.0125
Epoch [6/10], Batch [49/177], Loss: 0.0914
Epoch [6/10], Batch [50/177], Loss: 0.0421
Epoch [6/10], Batch [51/177], Loss: 0.0221
Epoch [6/10], Batch [52/177], Loss: 0.1029
Epoch [6/10], Batch [53/177], Loss: 0.0441
Epoch [6/10], Batch [54/177], Loss: 0.0066
Epoch [6/10], Batch [55/177], Loss: 0.0538
Epoch [6/10], Batch [56/177], Loss: 0.0506
Epoch [6/10], Batch [57/177], Loss: 0.0771
Epoch [6/10], Batch [58/177], Loss: 0.0428
Epoch [6/10], Batch [59/177], Loss: 0.0220
Epoch [6/10], Batch [60/177], Loss: 0.0491
Epoch [6/10], Batch [61/177], Loss: 0.0630
Epoch [6/10], Batch [62/177], Loss: 0.0236
Epoch [6/10], Batch [63/177], Loss: 0.1052
Epoch [6/10], Batch [64/177], Loss: 0.0052
Epoch [6/10], Batch [65/177], Loss: 0.1200
Epoch [6/10], Batch [66/177], Loss: 0.0160
Epoch [6/10], Batch [67/177], Loss: 0.0258
Epoch [6/10], Batch [68/177], Loss: 0.0402
Epoch [6/10], Batch [69/177], Loss: 0.1070
Epoch [6/10], Batch [70/177], Loss: 0.0612
Epoch [6/10], Batch [71/177], Loss: 0.0262
Epoch [6/10], Batch [72/177], Loss: 0.0614
Epoch [6/10], Batch [73/177], Loss: 0.1309
Epoch [6/10], Batch [74/177], Loss: 0.0036
Epoch [6/10], Batch [75/177], Loss: 0.0255
Epoch [6/10], Batch [76/177], Loss: 0.0320
Epoch [6/10], Batch [77/177], Loss: 0.0868
Epoch [6/10], Batch [78/177], Loss: 0.1311
Epoch [6/10], Batch [79/177], Loss: 0.0474
Epoch [6/10], Batch [80/177], Loss: 0.1116
Epoch [6/10], Batch [81/177], Loss: 0.0505
Epoch [6/10], Batch [82/177], Loss: 0.0696
Epoch [6/10], Batch [83/177], Loss: 0.0755
Epoch [6/10], Batch [84/177], Loss: 0.0783
Epoch [6/10], Batch [85/177], Loss: 0.0749
Epoch [6/10], Batch [86/177], Loss: 0.1230
Epoch [6/10], Batch [87/177], Loss: 0.0165
Epoch [6/10], Batch [88/177], Loss: 0.0144
Epoch [6/10], Batch [89/177], Loss: 0.0651
Epoch [6/10], Batch [90/177], Loss: 0.0211
Epoch [6/10], Batch [91/177], Loss: 0.1059
Epoch [6/10], Batch [92/177], Loss: 0.0568
Epoch [6/10], Batch [93/177], Loss: 0.0220
Epoch [6/10], Batch [94/177], Loss: 0.0140
Epoch [6/10], Batch [95/177], Loss: 0.1316
Epoch [6/10], Batch [96/177], Loss: 0.0077
Epoch [6/10], Batch [97/177], Loss: 0.0310
Epoch [6/10], Batch [98/177], Loss: 0.0400
Epoch [6/10], Batch [99/177], Loss: 0.0394
Epoch [6/10], Batch [100/177], Loss: 0.0328
Epoch [6/10], Batch [101/177], Loss: 0.0628
Epoch [6/10], Batch [102/177], Loss: 0.0255
Epoch [6/10], Batch [103/177], Loss: 0.0130
Epoch [6/10], Batch [104/177], Loss: 0.0823
Epoch [6/10], Batch [105/177], Loss: 0.0342
Epoch [6/10], Batch [106/177], Loss: 0.0360
Epoch [6/10], Batch [107/177], Loss: 0.0768
Epoch [6/10], Batch [108/177], Loss: 0.0153
Epoch [6/10], Batch [109/177], Loss: 0.0441
Epoch [6/10], Batch [110/177], Loss: 0.1478
Epoch [6/10], Batch [111/177], Loss: 0.0679
Epoch [6/10], Batch [112/177], Loss: 0.0354
Epoch [6/10], Batch [113/177], Loss: 0.1142
Epoch [6/10], Batch [114/177], Loss: 0.0296
Epoch [6/10], Batch [115/177], Loss: 0.0283
Epoch [6/10], Batch [116/177], Loss: 0.0294
Epoch [6/10], Batch [117/177], Loss: 0.0541
Epoch [6/10], Batch [118/177], Loss: 0.0513
Epoch [6/10], Batch [119/177], Loss: 0.1061
Epoch [6/10], Batch [120/177], Loss: 0.0263
Epoch [6/10], Batch [121/177], Loss: 0.0528
Epoch [6/10], Batch [122/177], Loss: 0.0120
Epoch [6/10], Batch [123/177], Loss: 0.0538
Epoch [6/10], Batch [124/177], Loss: 0.0740
Epoch [6/10], Batch [125/177], Loss: 0.1256
Epoch [6/10], Batch [126/177], Loss: 0.0406
Epoch [6/10], Batch [127/177], Loss: 0.0142
Epoch [6/10], Batch [128/177], Loss: 0.0503
Epoch [6/10], Batch [129/177], Loss: 0.0397
Epoch [6/10], Batch [130/177], Loss: 0.0893
Epoch [6/10], Batch [131/177], Loss: 0.0617
Epoch [6/10], Batch [132/177], Loss: 0.0854
Epoch [6/10], Batch [133/177], Loss: 0.0391
Epoch [6/10], Batch [134/177], Loss: 0.1120
Epoch [6/10], Batch [135/177], Loss: 0.0746
Epoch [6/10], Batch [136/177], Loss: 0.0927
Epoch [6/10], Batch [137/177], Loss: 0.2120
Epoch [6/10], Batch [138/177], Loss: 0.0778
Epoch [6/10], Batch [139/177], Loss: 0.0636
Epoch [6/10], Batch [140/177], Loss: 0.0712
Epoch [6/10], Batch [141/177], Loss: 0.0836
Epoch [6/10], Batch [142/177], Loss: 0.0325
Epoch [6/10], Batch [143/177], Loss: 0.1222
Epoch [6/10], Batch [144/177], Loss: 0.0271
Epoch [6/10], Batch [145/177], Loss: 0.0641
Epoch [6/10], Batch [146/177], Loss: 0.0632
Epoch [6/10], Batch [147/177], Loss: 0.1359
Epoch [6/10], Batch [148/177], Loss: 0.0280
Epoch [6/10], Batch [149/177], Loss: 0.2823
Epoch [6/10], Batch [150/177], Loss: 0.1863
Epoch [6/10], Batch [151/177], Loss: 0.0639
Epoch [6/10], Batch [152/177], Loss: 0.0361
Epoch [6/10], Batch [153/177], Loss: 0.0716
Epoch [6/10], Batch [154/177], Loss: 0.1107
Epoch [6/10], Batch [155/177], Loss: 0.0940
Epoch [6/10], Batch [156/177], Loss: 0.0278
Epoch [6/10], Batch [157/177], Loss: 0.0558
Epoch [6/10], Batch [158/177], Loss: 0.0667
Epoch [6/10], Batch [159/177], Loss: 0.1384
Epoch [6/10], Batch [160/177], Loss: 0.1851
Epoch [6/10], Batch [161/177], Loss: 0.0985
Epoch [6/10], Batch [162/177], Loss: 0.1970
Epoch [6/10], Batch [163/177], Loss: 0.0737
Epoch [6/10], Batch [164/177], Loss: 0.2751
Epoch [6/10], Batch [165/177], Loss: 0.0410
Epoch [6/10], Batch [166/177], Loss: 0.1265
Epoch [6/10], Batch [167/177], Loss: 0.0797
Epoch [6/10], Batch [168/177], Loss: 0.0239
Epoch [6/10], Batch [169/177], Loss: 0.0966
Epoch [6/10], Batch [170/177], Loss: 0.0219
Epoch [6/10], Batch [171/177], Loss: 0.1932
Epoch [6/10], Batch [172/177], Loss: 0.1604
Epoch [6/10], Batch [173/177], Loss: 0.0813
Epoch [6/10], Batch [174/177], Loss: 0.1646
Epoch [6/10], Batch [175/177], Loss: 0.1066
Epoch [6/10], Batch [176/177], Loss: 0.0590
Epoch [6/10], Batch [177/177], Loss: 0.0929
Epoch [6/10], Average Loss: 0.0660
-----------------------------------------------------------
strategy: BEAM
iter: 9
epoch: 5
Test Loss: 0.3433
F1_overall: 0.5916
F1_AGENT: 0.7386
F1_TARGET: 0.4550
-----------------------------------------------------------
Epoch [7/10], Batch [1/177], Loss: 0.0205
Epoch [7/10], Batch [2/177], Loss: 0.0466
Epoch [7/10], Batch [3/177], Loss: 0.0761
Epoch [7/10], Batch [4/177], Loss: 0.0175
Epoch [7/10], Batch [5/177], Loss: 0.0736
Epoch [7/10], Batch [6/177], Loss: 0.0504
Epoch [7/10], Batch [7/177], Loss: 0.1191
Epoch [7/10], Batch [8/177], Loss: 0.1732
Epoch [7/10], Batch [9/177], Loss: 0.0618
Epoch [7/10], Batch [10/177], Loss: 0.0509
Epoch [7/10], Batch [11/177], Loss: 0.1224
Epoch [7/10], Batch [12/177], Loss: 0.0261
Epoch [7/10], Batch [13/177], Loss: 0.0499
Epoch [7/10], Batch [14/177], Loss: 0.1039
Epoch [7/10], Batch [15/177], Loss: 0.0103
Epoch [7/10], Batch [16/177], Loss: 0.0689
Epoch [7/10], Batch [17/177], Loss: 0.0369
Epoch [7/10], Batch [18/177], Loss: 0.0488
Epoch [7/10], Batch [19/177], Loss: 0.1356
Epoch [7/10], Batch [20/177], Loss: 0.0187
Epoch [7/10], Batch [21/177], Loss: 0.0239
Epoch [7/10], Batch [22/177], Loss: 0.1392
Epoch [7/10], Batch [23/177], Loss: 0.0443
Epoch [7/10], Batch [24/177], Loss: 0.1074
Epoch [7/10], Batch [25/177], Loss: 0.0533
Epoch [7/10], Batch [26/177], Loss: 0.1329
Epoch [7/10], Batch [27/177], Loss: 0.0935
Epoch [7/10], Batch [28/177], Loss: 0.0205
Epoch [7/10], Batch [29/177], Loss: 0.0319
Epoch [7/10], Batch [30/177], Loss: 0.0376
Epoch [7/10], Batch [31/177], Loss: 0.0457
Epoch [7/10], Batch [32/177], Loss: 0.0868
Epoch [7/10], Batch [33/177], Loss: 0.0222
Epoch [7/10], Batch [34/177], Loss: 0.0454
Epoch [7/10], Batch [35/177], Loss: 0.0853
Epoch [7/10], Batch [36/177], Loss: 0.1039
Epoch [7/10], Batch [37/177], Loss: 0.0427
Epoch [7/10], Batch [38/177], Loss: 0.0898
Epoch [7/10], Batch [39/177], Loss: 0.0267
Epoch [7/10], Batch [40/177], Loss: 0.0304
Epoch [7/10], Batch [41/177], Loss: 0.0632
Epoch [7/10], Batch [42/177], Loss: 0.0513
Epoch [7/10], Batch [43/177], Loss: 0.1806
Epoch [7/10], Batch [44/177], Loss: 0.0494
Epoch [7/10], Batch [45/177], Loss: 0.1080
Epoch [7/10], Batch [46/177], Loss: 0.0972
Epoch [7/10], Batch [47/177], Loss: 0.0709
Epoch [7/10], Batch [48/177], Loss: 0.0300
Epoch [7/10], Batch [49/177], Loss: 0.0374
Epoch [7/10], Batch [50/177], Loss: 0.1271
Epoch [7/10], Batch [51/177], Loss: 0.0390
Epoch [7/10], Batch [52/177], Loss: 0.1355
Epoch [7/10], Batch [53/177], Loss: 0.0358
Epoch [7/10], Batch [54/177], Loss: 0.0623
Epoch [7/10], Batch [55/177], Loss: 0.0152
Epoch [7/10], Batch [56/177], Loss: 0.0699
Epoch [7/10], Batch [57/177], Loss: 0.1065
Epoch [7/10], Batch [58/177], Loss: 0.0360
Epoch [7/10], Batch [59/177], Loss: 0.0627
Epoch [7/10], Batch [60/177], Loss: 0.0316
Epoch [7/10], Batch [61/177], Loss: 0.0419
Epoch [7/10], Batch [62/177], Loss: 0.0270
Epoch [7/10], Batch [63/177], Loss: 0.0337
Epoch [7/10], Batch [64/177], Loss: 0.0373
Epoch [7/10], Batch [65/177], Loss: 0.0778
Epoch [7/10], Batch [66/177], Loss: 0.0129
Epoch [7/10], Batch [67/177], Loss: 0.0729
Epoch [7/10], Batch [68/177], Loss: 0.0126
Epoch [7/10], Batch [69/177], Loss: 0.0708
Epoch [7/10], Batch [70/177], Loss: 0.0740
Epoch [7/10], Batch [71/177], Loss: 0.0263
Epoch [7/10], Batch [72/177], Loss: 0.0434
Epoch [7/10], Batch [73/177], Loss: 0.1113
Epoch [7/10], Batch [74/177], Loss: 0.0485
Epoch [7/10], Batch [75/177], Loss: 0.1695
Epoch [7/10], Batch [76/177], Loss: 0.1210
Epoch [7/10], Batch [77/177], Loss: 0.0627
Epoch [7/10], Batch [78/177], Loss: 0.0926
Epoch [7/10], Batch [79/177], Loss: 0.0210
Epoch [7/10], Batch [80/177], Loss: 0.0367
Epoch [7/10], Batch [81/177], Loss: 0.0389
Epoch [7/10], Batch [82/177], Loss: 0.0397
Epoch [7/10], Batch [83/177], Loss: 0.1988
Epoch [7/10], Batch [84/177], Loss: 0.0419
Epoch [7/10], Batch [85/177], Loss: 0.0077
Epoch [7/10], Batch [86/177], Loss: 0.0784
Epoch [7/10], Batch [87/177], Loss: 0.1070
Epoch [7/10], Batch [88/177], Loss: 0.0466
Epoch [7/10], Batch [89/177], Loss: 0.0489
Epoch [7/10], Batch [90/177], Loss: 0.0428
Epoch [7/10], Batch [91/177], Loss: 0.0239
Epoch [7/10], Batch [92/177], Loss: 0.0409
Epoch [7/10], Batch [93/177], Loss: 0.0333
Epoch [7/10], Batch [94/177], Loss: 0.0586
Epoch [7/10], Batch [95/177], Loss: 0.0130
Epoch [7/10], Batch [96/177], Loss: 0.0261
Epoch [7/10], Batch [97/177], Loss: 0.0335
Epoch [7/10], Batch [98/177], Loss: 0.0334
Epoch [7/10], Batch [99/177], Loss: 0.0135
Epoch [7/10], Batch [100/177], Loss: 0.0907
Epoch [7/10], Batch [101/177], Loss: 0.1026
Epoch [7/10], Batch [102/177], Loss: 0.0090
Epoch [7/10], Batch [103/177], Loss: 0.0255
Epoch [7/10], Batch [104/177], Loss: 0.0710
Epoch [7/10], Batch [105/177], Loss: 0.0366
Epoch [7/10], Batch [106/177], Loss: 0.2238
Epoch [7/10], Batch [107/177], Loss: 0.0524
Epoch [7/10], Batch [108/177], Loss: 0.2216
Epoch [7/10], Batch [109/177], Loss: 0.0687
Epoch [7/10], Batch [110/177], Loss: 0.0580
Epoch [7/10], Batch [111/177], Loss: 0.0154
Epoch [7/10], Batch [112/177], Loss: 0.0607
Epoch [7/10], Batch [113/177], Loss: 0.0417
Epoch [7/10], Batch [114/177], Loss: 0.0448
Epoch [7/10], Batch [115/177], Loss: 0.0555
Epoch [7/10], Batch [116/177], Loss: 0.1590
Epoch [7/10], Batch [117/177], Loss: 0.1178
Epoch [7/10], Batch [118/177], Loss: 0.0839
Epoch [7/10], Batch [119/177], Loss: 0.0309
Epoch [7/10], Batch [120/177], Loss: 0.0131
Epoch [7/10], Batch [121/177], Loss: 0.1297
Epoch [7/10], Batch [122/177], Loss: 0.0300
Epoch [7/10], Batch [123/177], Loss: 0.1965
Epoch [7/10], Batch [124/177], Loss: 0.0061
Epoch [7/10], Batch [125/177], Loss: 0.0826
Epoch [7/10], Batch [126/177], Loss: 0.0781
Epoch [7/10], Batch [127/177], Loss: 0.0526
Epoch [7/10], Batch [128/177], Loss: 0.0445
Epoch [7/10], Batch [129/177], Loss: 0.0550
Epoch [7/10], Batch [130/177], Loss: 0.0832
Epoch [7/10], Batch [131/177], Loss: 0.0924
Epoch [7/10], Batch [132/177], Loss: 0.0301
Epoch [7/10], Batch [133/177], Loss: 0.0972
Epoch [7/10], Batch [134/177], Loss: 0.0910
Epoch [7/10], Batch [135/177], Loss: 0.0385
Epoch [7/10], Batch [136/177], Loss: 0.0529
Epoch [7/10], Batch [137/177], Loss: 0.0794
Epoch [7/10], Batch [138/177], Loss: 0.1642
Epoch [7/10], Batch [139/177], Loss: 0.0651
Epoch [7/10], Batch [140/177], Loss: 0.0406
Epoch [7/10], Batch [141/177], Loss: 0.0533
Epoch [7/10], Batch [142/177], Loss: 0.0959
Epoch [7/10], Batch [143/177], Loss: 0.1798
Epoch [7/10], Batch [144/177], Loss: 0.0568
Epoch [7/10], Batch [145/177], Loss: 0.1662
Epoch [7/10], Batch [146/177], Loss: 0.1258
Epoch [7/10], Batch [147/177], Loss: 0.0274
Epoch [7/10], Batch [148/177], Loss: 0.0132
Epoch [7/10], Batch [149/177], Loss: 0.0431
Epoch [7/10], Batch [150/177], Loss: 0.0623
Epoch [7/10], Batch [151/177], Loss: 0.0477
Epoch [7/10], Batch [152/177], Loss: 0.0194
Epoch [7/10], Batch [153/177], Loss: 0.2425
Epoch [7/10], Batch [154/177], Loss: 0.0478
Epoch [7/10], Batch [155/177], Loss: 0.0403
Epoch [7/10], Batch [156/177], Loss: 0.0665
Epoch [7/10], Batch [157/177], Loss: 0.0561
Epoch [7/10], Batch [158/177], Loss: 0.0805
Epoch [7/10], Batch [159/177], Loss: 0.0278
Epoch [7/10], Batch [160/177], Loss: 0.0363
Epoch [7/10], Batch [161/177], Loss: 0.0449
Epoch [7/10], Batch [162/177], Loss: 0.0570
Epoch [7/10], Batch [163/177], Loss: 0.0338
Epoch [7/10], Batch [164/177], Loss: 0.0464
Epoch [7/10], Batch [165/177], Loss: 0.0105
Epoch [7/10], Batch [166/177], Loss: 0.1461
Epoch [7/10], Batch [167/177], Loss: 0.0354
Epoch [7/10], Batch [168/177], Loss: 0.0366
Epoch [7/10], Batch [169/177], Loss: 0.2673
Epoch [7/10], Batch [170/177], Loss: 0.1447
Epoch [7/10], Batch [171/177], Loss: 0.1958
Epoch [7/10], Batch [172/177], Loss: 0.1287
Epoch [7/10], Batch [173/177], Loss: 0.0406
Epoch [7/10], Batch [174/177], Loss: 0.0674
Epoch [7/10], Batch [175/177], Loss: 0.1179
Epoch [7/10], Batch [176/177], Loss: 0.0890
Epoch [7/10], Batch [177/177], Loss: 0.0364
Epoch [7/10], Average Loss: 0.0688
-----------------------------------------------------------
strategy: BEAM
iter: 9
epoch: 6
Test Loss: 0.3517
F1_overall: 0.6039
F1_AGENT: 0.7343
F1_TARGET: 0.4771
-----------------------------------------------------------
Epoch [8/10], Batch [1/177], Loss: 0.0339
Epoch [8/10], Batch [2/177], Loss: 0.0101
Epoch [8/10], Batch [3/177], Loss: 0.0534
Epoch [8/10], Batch [4/177], Loss: 0.1585
Epoch [8/10], Batch [5/177], Loss: 0.0525
Epoch [8/10], Batch [6/177], Loss: 0.0401
Epoch [8/10], Batch [7/177], Loss: 0.1163
Epoch [8/10], Batch [8/177], Loss: 0.0274
Epoch [8/10], Batch [9/177], Loss: 0.0135
Epoch [8/10], Batch [10/177], Loss: 0.0526
Epoch [8/10], Batch [11/177], Loss: 0.0322
Epoch [8/10], Batch [12/177], Loss: 0.0155
Epoch [8/10], Batch [13/177], Loss: 0.0558
Epoch [8/10], Batch [14/177], Loss: 0.0285
Epoch [8/10], Batch [15/177], Loss: 0.0864
Epoch [8/10], Batch [16/177], Loss: 0.0222
Epoch [8/10], Batch [17/177], Loss: 0.0185
Epoch [8/10], Batch [18/177], Loss: 0.0269
Epoch [8/10], Batch [19/177], Loss: 0.0366
Epoch [8/10], Batch [20/177], Loss: 0.1094
Epoch [8/10], Batch [21/177], Loss: 0.0092
Epoch [8/10], Batch [22/177], Loss: 0.0074
Epoch [8/10], Batch [23/177], Loss: 0.0934
Epoch [8/10], Batch [24/177], Loss: 0.0062
Epoch [8/10], Batch [25/177], Loss: 0.0146
Epoch [8/10], Batch [26/177], Loss: 0.0210
Epoch [8/10], Batch [27/177], Loss: 0.0058
Epoch [8/10], Batch [28/177], Loss: 0.0529
Epoch [8/10], Batch [29/177], Loss: 0.0166
Epoch [8/10], Batch [30/177], Loss: 0.0255
Epoch [8/10], Batch [31/177], Loss: 0.0383
Epoch [8/10], Batch [32/177], Loss: 0.2238
Epoch [8/10], Batch [33/177], Loss: 0.0189
Epoch [8/10], Batch [34/177], Loss: 0.0516
Epoch [8/10], Batch [35/177], Loss: 0.0465
Epoch [8/10], Batch [36/177], Loss: 0.2004
Epoch [8/10], Batch [37/177], Loss: 0.3077
Epoch [8/10], Batch [38/177], Loss: 0.0222
Epoch [8/10], Batch [39/177], Loss: 0.0339
Epoch [8/10], Batch [40/177], Loss: 0.0184
Epoch [8/10], Batch [41/177], Loss: 0.0890
Epoch [8/10], Batch [42/177], Loss: 0.0504
Epoch [8/10], Batch [43/177], Loss: 0.0321
Epoch [8/10], Batch [44/177], Loss: 0.0233
Epoch [8/10], Batch [45/177], Loss: 0.0824
Epoch [8/10], Batch [46/177], Loss: 0.0569
Epoch [8/10], Batch [47/177], Loss: 0.0313
Epoch [8/10], Batch [48/177], Loss: 0.0717
Epoch [8/10], Batch [49/177], Loss: 0.0842
Epoch [8/10], Batch [50/177], Loss: 0.0366
Epoch [8/10], Batch [51/177], Loss: 0.1235
Epoch [8/10], Batch [52/177], Loss: 0.1378
Epoch [8/10], Batch [53/177], Loss: 0.0624
Epoch [8/10], Batch [54/177], Loss: 0.0076
Epoch [8/10], Batch [55/177], Loss: 0.0492
Epoch [8/10], Batch [56/177], Loss: 0.0294
Epoch [8/10], Batch [57/177], Loss: 0.0212
Epoch [8/10], Batch [58/177], Loss: 0.0284
Epoch [8/10], Batch [59/177], Loss: 0.0364
Epoch [8/10], Batch [60/177], Loss: 0.1200
Epoch [8/10], Batch [61/177], Loss: 0.0084
Epoch [8/10], Batch [62/177], Loss: 0.0641
Epoch [8/10], Batch [63/177], Loss: 0.0305
Epoch [8/10], Batch [64/177], Loss: 0.0109
Epoch [8/10], Batch [65/177], Loss: 0.0220
Epoch [8/10], Batch [66/177], Loss: 0.0757
Epoch [8/10], Batch [67/177], Loss: 0.0195
Epoch [8/10], Batch [68/177], Loss: 0.0609
Epoch [8/10], Batch [69/177], Loss: 0.0974
Epoch [8/10], Batch [70/177], Loss: 0.0189
Epoch [8/10], Batch [71/177], Loss: 0.1800
Epoch [8/10], Batch [72/177], Loss: 0.0228
Epoch [8/10], Batch [73/177], Loss: 0.0739
Epoch [8/10], Batch [74/177], Loss: 0.0269
Epoch [8/10], Batch [75/177], Loss: 0.1722
Epoch [8/10], Batch [76/177], Loss: 0.0090
Epoch [8/10], Batch [77/177], Loss: 0.0726
Epoch [8/10], Batch [78/177], Loss: 0.0149
Epoch [8/10], Batch [79/177], Loss: 0.0451
Epoch [8/10], Batch [80/177], Loss: 0.0955
Epoch [8/10], Batch [81/177], Loss: 0.0279
Epoch [8/10], Batch [82/177], Loss: 0.0462
Epoch [8/10], Batch [83/177], Loss: 0.0306
Epoch [8/10], Batch [84/177], Loss: 0.0364
Epoch [8/10], Batch [85/177], Loss: 0.1125
Epoch [8/10], Batch [86/177], Loss: 0.0413
Epoch [8/10], Batch [87/177], Loss: 0.0415
Epoch [8/10], Batch [88/177], Loss: 0.1080
Epoch [8/10], Batch [89/177], Loss: 0.1196
Epoch [8/10], Batch [90/177], Loss: 0.0189
Epoch [8/10], Batch [91/177], Loss: 0.0791
Epoch [8/10], Batch [92/177], Loss: 0.1231
Epoch [8/10], Batch [93/177], Loss: 0.1241
Epoch [8/10], Batch [94/177], Loss: 0.0258
Epoch [8/10], Batch [95/177], Loss: 0.0296
Epoch [8/10], Batch [96/177], Loss: 0.0452
Epoch [8/10], Batch [97/177], Loss: 0.0574
Epoch [8/10], Batch [98/177], Loss: 0.0595
Epoch [8/10], Batch [99/177], Loss: 0.0303
Epoch [8/10], Batch [100/177], Loss: 0.0255
Epoch [8/10], Batch [101/177], Loss: 0.0603
Epoch [8/10], Batch [102/177], Loss: 0.0069
Epoch [8/10], Batch [103/177], Loss: 0.0154
Epoch [8/10], Batch [104/177], Loss: 0.0728
Epoch [8/10], Batch [105/177], Loss: 0.0260
Epoch [8/10], Batch [106/177], Loss: 0.0255
Epoch [8/10], Batch [107/177], Loss: 0.0173
Epoch [8/10], Batch [108/177], Loss: 0.0523
Epoch [8/10], Batch [109/177], Loss: 0.0582
Epoch [8/10], Batch [110/177], Loss: 0.0421
Epoch [8/10], Batch [111/177], Loss: 0.0331
Epoch [8/10], Batch [112/177], Loss: 0.1124
Epoch [8/10], Batch [113/177], Loss: 0.1590
Epoch [8/10], Batch [114/177], Loss: 0.0513
Epoch [8/10], Batch [115/177], Loss: 0.1259
Epoch [8/10], Batch [116/177], Loss: 0.0214
Epoch [8/10], Batch [117/177], Loss: 0.0437
Epoch [8/10], Batch [118/177], Loss: 0.0342
Epoch [8/10], Batch [119/177], Loss: 0.0273
Epoch [8/10], Batch [120/177], Loss: 0.0272
Epoch [8/10], Batch [121/177], Loss: 0.0224
Epoch [8/10], Batch [122/177], Loss: 0.1079
Epoch [8/10], Batch [123/177], Loss: 0.0237
Epoch [8/10], Batch [124/177], Loss: 0.0254
Epoch [8/10], Batch [125/177], Loss: 0.0358
Epoch [8/10], Batch [126/177], Loss: 0.0428
Epoch [8/10], Batch [127/177], Loss: 0.0077
Epoch [8/10], Batch [128/177], Loss: 0.0142
Epoch [8/10], Batch [129/177], Loss: 0.1166
Epoch [8/10], Batch [130/177], Loss: 0.1087
Epoch [8/10], Batch [131/177], Loss: 0.0253
Epoch [8/10], Batch [132/177], Loss: 0.0542
Epoch [8/10], Batch [133/177], Loss: 0.0213
Epoch [8/10], Batch [134/177], Loss: 0.0162
Epoch [8/10], Batch [135/177], Loss: 0.0289
Epoch [8/10], Batch [136/177], Loss: 0.0508
Epoch [8/10], Batch [137/177], Loss: 0.1091
Epoch [8/10], Batch [138/177], Loss: 0.0597
Epoch [8/10], Batch [139/177], Loss: 0.0280
Epoch [8/10], Batch [140/177], Loss: 0.1504
Epoch [8/10], Batch [141/177], Loss: 0.0287
Epoch [8/10], Batch [142/177], Loss: 0.0599
Epoch [8/10], Batch [143/177], Loss: 0.0178
Epoch [8/10], Batch [144/177], Loss: 0.0323
Epoch [8/10], Batch [145/177], Loss: 0.0748
Epoch [8/10], Batch [146/177], Loss: 0.0503
Epoch [8/10], Batch [147/177], Loss: 0.1112
Epoch [8/10], Batch [148/177], Loss: 0.0187
Epoch [8/10], Batch [149/177], Loss: 0.0391
Epoch [8/10], Batch [150/177], Loss: 0.0124
Epoch [8/10], Batch [151/177], Loss: 0.0323
Epoch [8/10], Batch [152/177], Loss: 0.0580
Epoch [8/10], Batch [153/177], Loss: 0.0515
Epoch [8/10], Batch [154/177], Loss: 0.0192
Epoch [8/10], Batch [155/177], Loss: 0.0315
Epoch [8/10], Batch [156/177], Loss: 0.0149
Epoch [8/10], Batch [157/177], Loss: 0.0075
Epoch [8/10], Batch [158/177], Loss: 0.1708
Epoch [8/10], Batch [159/177], Loss: 0.0102
Epoch [8/10], Batch [160/177], Loss: 0.0359
Epoch [8/10], Batch [161/177], Loss: 0.1488
Epoch [8/10], Batch [162/177], Loss: 0.0724
Epoch [8/10], Batch [163/177], Loss: 0.1152
Epoch [8/10], Batch [164/177], Loss: 0.2371
Epoch [8/10], Batch [165/177], Loss: 0.0173
Epoch [8/10], Batch [166/177], Loss: 0.0088
Epoch [8/10], Batch [167/177], Loss: 0.0086
Epoch [8/10], Batch [168/177], Loss: 0.0523
Epoch [8/10], Batch [169/177], Loss: 0.1123
Epoch [8/10], Batch [170/177], Loss: 0.0213
Epoch [8/10], Batch [171/177], Loss: 0.0223
Epoch [8/10], Batch [172/177], Loss: 0.0462
Epoch [8/10], Batch [173/177], Loss: 0.0315
Epoch [8/10], Batch [174/177], Loss: 0.2132
Epoch [8/10], Batch [175/177], Loss: 0.0457
Epoch [8/10], Batch [176/177], Loss: 0.0189
Epoch [8/10], Batch [177/177], Loss: 0.0205
Epoch [8/10], Average Loss: 0.0554
-----------------------------------------------------------
strategy: BEAM
iter: 9
epoch: 7
Test Loss: 0.3810
F1_overall: 0.5966
F1_AGENT: 0.7463
F1_TARGET: 0.4493
-----------------------------------------------------------
Epoch [9/10], Batch [1/177], Loss: 0.0388
Epoch [9/10], Batch [2/177], Loss: 0.0102
Epoch [9/10], Batch [3/177], Loss: 0.0058
Epoch [9/10], Batch [4/177], Loss: 0.0840
Epoch [9/10], Batch [5/177], Loss: 0.0120
Epoch [9/10], Batch [6/177], Loss: 0.0083
Epoch [9/10], Batch [7/177], Loss: 0.0258
Epoch [9/10], Batch [8/177], Loss: 0.0084
Epoch [9/10], Batch [9/177], Loss: 0.0300
Epoch [9/10], Batch [10/177], Loss: 0.0286
Epoch [9/10], Batch [11/177], Loss: 0.0362
Epoch [9/10], Batch [12/177], Loss: 0.0193
Epoch [9/10], Batch [13/177], Loss: 0.0124
Epoch [9/10], Batch [14/177], Loss: 0.0146
Epoch [9/10], Batch [15/177], Loss: 0.0313
Epoch [9/10], Batch [16/177], Loss: 0.0163
Epoch [9/10], Batch [17/177], Loss: 0.0141
Epoch [9/10], Batch [18/177], Loss: 0.0152
Epoch [9/10], Batch [19/177], Loss: 0.0081
Epoch [9/10], Batch [20/177], Loss: 0.0217
Epoch [9/10], Batch [21/177], Loss: 0.0468
Epoch [9/10], Batch [22/177], Loss: 0.0040
Epoch [9/10], Batch [23/177], Loss: 0.0225
Epoch [9/10], Batch [24/177], Loss: 0.0206
Epoch [9/10], Batch [25/177], Loss: 0.0481
Epoch [9/10], Batch [26/177], Loss: 0.0033
Epoch [9/10], Batch [27/177], Loss: 0.0164
Epoch [9/10], Batch [28/177], Loss: 0.0407
Epoch [9/10], Batch [29/177], Loss: 0.0090
Epoch [9/10], Batch [30/177], Loss: 0.0132
Epoch [9/10], Batch [31/177], Loss: 0.0120
Epoch [9/10], Batch [32/177], Loss: 0.0345
Epoch [9/10], Batch [33/177], Loss: 0.0042
Epoch [9/10], Batch [34/177], Loss: 0.0280
Epoch [9/10], Batch [35/177], Loss: 0.0968
Epoch [9/10], Batch [36/177], Loss: 0.0416
Epoch [9/10], Batch [37/177], Loss: 0.0345
Epoch [9/10], Batch [38/177], Loss: 0.0400
Epoch [9/10], Batch [39/177], Loss: 0.0064
Epoch [9/10], Batch [40/177], Loss: 0.1094
Epoch [9/10], Batch [41/177], Loss: 0.0217
Epoch [9/10], Batch [42/177], Loss: 0.0254
Epoch [9/10], Batch [43/177], Loss: 0.0214
Epoch [9/10], Batch [44/177], Loss: 0.0048
Epoch [9/10], Batch [45/177], Loss: 0.0089
Epoch [9/10], Batch [46/177], Loss: 0.1057
Epoch [9/10], Batch [47/177], Loss: 0.0764
Epoch [9/10], Batch [48/177], Loss: 0.0172
Epoch [9/10], Batch [49/177], Loss: 0.0190
Epoch [9/10], Batch [50/177], Loss: 0.0627
Epoch [9/10], Batch [51/177], Loss: 0.0092
Epoch [9/10], Batch [52/177], Loss: 0.0285
Epoch [9/10], Batch [53/177], Loss: 0.0085
Epoch [9/10], Batch [54/177], Loss: 0.0115
Epoch [9/10], Batch [55/177], Loss: 0.0495
Epoch [9/10], Batch [56/177], Loss: 0.0213
Epoch [9/10], Batch [57/177], Loss: 0.0417
Epoch [9/10], Batch [58/177], Loss: 0.0065
Epoch [9/10], Batch [59/177], Loss: 0.0476
Epoch [9/10], Batch [60/177], Loss: 0.0197
Epoch [9/10], Batch [61/177], Loss: 0.0023
Epoch [9/10], Batch [62/177], Loss: 0.0627
Epoch [9/10], Batch [63/177], Loss: 0.0122
Epoch [9/10], Batch [64/177], Loss: 0.0033
Epoch [9/10], Batch [65/177], Loss: 0.0112
Epoch [9/10], Batch [66/177], Loss: 0.0216
Epoch [9/10], Batch [67/177], Loss: 0.0127
Epoch [9/10], Batch [68/177], Loss: 0.0823
Epoch [9/10], Batch [69/177], Loss: 0.0409
Epoch [9/10], Batch [70/177], Loss: 0.0181
Epoch [9/10], Batch [71/177], Loss: 0.0094
Epoch [9/10], Batch [72/177], Loss: 0.0410
Epoch [9/10], Batch [73/177], Loss: 0.0452
Epoch [9/10], Batch [74/177], Loss: 0.0102
Epoch [9/10], Batch [75/177], Loss: 0.0091
Epoch [9/10], Batch [76/177], Loss: 0.0399
Epoch [9/10], Batch [77/177], Loss: 0.1041
Epoch [9/10], Batch [78/177], Loss: 0.0850
Epoch [9/10], Batch [79/177], Loss: 0.0869
Epoch [9/10], Batch [80/177], Loss: 0.0030
Epoch [9/10], Batch [81/177], Loss: 0.0845
Epoch [9/10], Batch [82/177], Loss: 0.0128
Epoch [9/10], Batch [83/177], Loss: 0.0115
Epoch [9/10], Batch [84/177], Loss: 0.1359
Epoch [9/10], Batch [85/177], Loss: 0.0520
Epoch [9/10], Batch [86/177], Loss: 0.0995
Epoch [9/10], Batch [87/177], Loss: 0.0405
Epoch [9/10], Batch [88/177], Loss: 0.0206
Epoch [9/10], Batch [89/177], Loss: 0.0122
Epoch [9/10], Batch [90/177], Loss: 0.0277
Epoch [9/10], Batch [91/177], Loss: 0.0301
Epoch [9/10], Batch [92/177], Loss: 0.0057
Epoch [9/10], Batch [93/177], Loss: 0.0071
Epoch [9/10], Batch [94/177], Loss: 0.0211
Epoch [9/10], Batch [95/177], Loss: 0.0422
Epoch [9/10], Batch [96/177], Loss: 0.0763
Epoch [9/10], Batch [97/177], Loss: 0.0530
Epoch [9/10], Batch [98/177], Loss: 0.0486
Epoch [9/10], Batch [99/177], Loss: 0.0104
Epoch [9/10], Batch [100/177], Loss: 0.0682
Epoch [9/10], Batch [101/177], Loss: 0.0036
Epoch [9/10], Batch [102/177], Loss: 0.1487
Epoch [9/10], Batch [103/177], Loss: 0.1020
Epoch [9/10], Batch [104/177], Loss: 0.0606
Epoch [9/10], Batch [105/177], Loss: 0.0205
Epoch [9/10], Batch [106/177], Loss: 0.0251
Epoch [9/10], Batch [107/177], Loss: 0.0626
Epoch [9/10], Batch [108/177], Loss: 0.0213
Epoch [9/10], Batch [109/177], Loss: 0.0356
Epoch [9/10], Batch [110/177], Loss: 0.0110
Epoch [9/10], Batch [111/177], Loss: 0.0142
Epoch [9/10], Batch [112/177], Loss: 0.0238
Epoch [9/10], Batch [113/177], Loss: 0.0284
Epoch [9/10], Batch [114/177], Loss: 0.0527
Epoch [9/10], Batch [115/177], Loss: 0.0144
Epoch [9/10], Batch [116/177], Loss: 0.0432
Epoch [9/10], Batch [117/177], Loss: 0.1740
Epoch [9/10], Batch [118/177], Loss: 0.0092
Epoch [9/10], Batch [119/177], Loss: 0.0564
Epoch [9/10], Batch [120/177], Loss: 0.0357
Epoch [9/10], Batch [121/177], Loss: 0.0075
Epoch [9/10], Batch [122/177], Loss: 0.0636
Epoch [9/10], Batch [123/177], Loss: 0.0559
Epoch [9/10], Batch [124/177], Loss: 0.0514
Epoch [9/10], Batch [125/177], Loss: 0.0286
Epoch [9/10], Batch [126/177], Loss: 0.0198
Epoch [9/10], Batch [127/177], Loss: 0.0125
Epoch [9/10], Batch [128/177], Loss: 0.0057
Epoch [9/10], Batch [129/177], Loss: 0.0686
Epoch [9/10], Batch [130/177], Loss: 0.0085
Epoch [9/10], Batch [131/177], Loss: 0.0169
Epoch [9/10], Batch [132/177], Loss: 0.0463
Epoch [9/10], Batch [133/177], Loss: 0.0273
Epoch [9/10], Batch [134/177], Loss: 0.0228
Epoch [9/10], Batch [135/177], Loss: 0.0267
Epoch [9/10], Batch [136/177], Loss: 0.0906
Epoch [9/10], Batch [137/177], Loss: 0.1124
Epoch [9/10], Batch [138/177], Loss: 0.0110
Epoch [9/10], Batch [139/177], Loss: 0.0619
Epoch [9/10], Batch [140/177], Loss: 0.0186
Epoch [9/10], Batch [141/177], Loss: 0.0207
Epoch [9/10], Batch [142/177], Loss: 0.0150
Epoch [9/10], Batch [143/177], Loss: 0.1319
Epoch [9/10], Batch [144/177], Loss: 0.0083
Epoch [9/10], Batch [145/177], Loss: 0.0504
Epoch [9/10], Batch [146/177], Loss: 0.2965
Epoch [9/10], Batch [147/177], Loss: 0.0087
Epoch [9/10], Batch [148/177], Loss: 0.0888
Epoch [9/10], Batch [149/177], Loss: 0.1348
Epoch [9/10], Batch [150/177], Loss: 0.0335
Epoch [9/10], Batch [151/177], Loss: 0.0105
Epoch [9/10], Batch [152/177], Loss: 0.0180
Epoch [9/10], Batch [153/177], Loss: 0.0582
Epoch [9/10], Batch [154/177], Loss: 0.0090
Epoch [9/10], Batch [155/177], Loss: 0.0101
Epoch [9/10], Batch [156/177], Loss: 0.0422
Epoch [9/10], Batch [157/177], Loss: 0.0115
Epoch [9/10], Batch [158/177], Loss: 0.0389
Epoch [9/10], Batch [159/177], Loss: 0.0236
Epoch [9/10], Batch [160/177], Loss: 0.1650
Epoch [9/10], Batch [161/177], Loss: 0.0248
Epoch [9/10], Batch [162/177], Loss: 0.0177
Epoch [9/10], Batch [163/177], Loss: 0.0956
Epoch [9/10], Batch [164/177], Loss: 0.0731
Epoch [9/10], Batch [165/177], Loss: 0.0073
Epoch [9/10], Batch [166/177], Loss: 0.0174
Epoch [9/10], Batch [167/177], Loss: 0.0123
Epoch [9/10], Batch [168/177], Loss: 0.0326
Epoch [9/10], Batch [169/177], Loss: 0.0466
Epoch [9/10], Batch [170/177], Loss: 0.0132
Epoch [9/10], Batch [171/177], Loss: 0.0065
Epoch [9/10], Batch [172/177], Loss: 0.0514
Epoch [9/10], Batch [173/177], Loss: 0.0198
Epoch [9/10], Batch [174/177], Loss: 0.0137
Epoch [9/10], Batch [175/177], Loss: 0.0283
Epoch [9/10], Batch [176/177], Loss: 0.0632
Epoch [9/10], Batch [177/177], Loss: 0.0252
Epoch [9/10], Average Loss: 0.0377
-----------------------------------------------------------
strategy: BEAM
iter: 9
epoch: 8
Test Loss: 0.4568
F1_overall: 0.5988
F1_AGENT: 0.7428
F1_TARGET: 0.4500
-----------------------------------------------------------
Epoch [10/10], Batch [1/177], Loss: 0.0071
Epoch [10/10], Batch [2/177], Loss: 0.0406
Epoch [10/10], Batch [3/177], Loss: 0.1792
Epoch [10/10], Batch [4/177], Loss: 0.0097
Epoch [10/10], Batch [5/177], Loss: 0.0656
Epoch [10/10], Batch [6/177], Loss: 0.0489
Epoch [10/10], Batch [7/177], Loss: 0.0386
Epoch [10/10], Batch [8/177], Loss: 0.0055
Epoch [10/10], Batch [9/177], Loss: 0.0069
Epoch [10/10], Batch [10/177], Loss: 0.0122
Epoch [10/10], Batch [11/177], Loss: 0.0391
Epoch [10/10], Batch [12/177], Loss: 0.0731
Epoch [10/10], Batch [13/177], Loss: 0.0137
Epoch [10/10], Batch [14/177], Loss: 0.0125
Epoch [10/10], Batch [15/177], Loss: 0.0230
Epoch [10/10], Batch [16/177], Loss: 0.0253
Epoch [10/10], Batch [17/177], Loss: 0.0367
Epoch [10/10], Batch [18/177], Loss: 0.0091
Epoch [10/10], Batch [19/177], Loss: 0.0101
Epoch [10/10], Batch [20/177], Loss: 0.0709
Epoch [10/10], Batch [21/177], Loss: 0.0083
Epoch [10/10], Batch [22/177], Loss: 0.0066
Epoch [10/10], Batch [23/177], Loss: 0.0361
Epoch [10/10], Batch [24/177], Loss: 0.0344
Epoch [10/10], Batch [25/177], Loss: 0.0209
Epoch [10/10], Batch [26/177], Loss: 0.0206
Epoch [10/10], Batch [27/177], Loss: 0.0363
Epoch [10/10], Batch [28/177], Loss: 0.0251
Epoch [10/10], Batch [29/177], Loss: 0.1147
Epoch [10/10], Batch [30/177], Loss: 0.0049
Epoch [10/10], Batch [31/177], Loss: 0.0504
Epoch [10/10], Batch [32/177], Loss: 0.0436
Epoch [10/10], Batch [33/177], Loss: 0.0155
Epoch [10/10], Batch [34/177], Loss: 0.0127
Epoch [10/10], Batch [35/177], Loss: 0.0491
Epoch [10/10], Batch [36/177], Loss: 0.0032
Epoch [10/10], Batch [37/177], Loss: 0.1284
Epoch [10/10], Batch [38/177], Loss: 0.0167
Epoch [10/10], Batch [39/177], Loss: 0.0727
Epoch [10/10], Batch [40/177], Loss: 0.0049
Epoch [10/10], Batch [41/177], Loss: 0.0077
Epoch [10/10], Batch [42/177], Loss: 0.0188
Epoch [10/10], Batch [43/177], Loss: 0.0468
Epoch [10/10], Batch [44/177], Loss: 0.0314
Epoch [10/10], Batch [45/177], Loss: 0.0187
Epoch [10/10], Batch [46/177], Loss: 0.0510
Epoch [10/10], Batch [47/177], Loss: 0.0195
Epoch [10/10], Batch [48/177], Loss: 0.1191
Epoch [10/10], Batch [49/177], Loss: 0.0194
Epoch [10/10], Batch [50/177], Loss: 0.0173
Epoch [10/10], Batch [51/177], Loss: 0.0572
Epoch [10/10], Batch [52/177], Loss: 0.0453
Epoch [10/10], Batch [53/177], Loss: 0.0064
Epoch [10/10], Batch [54/177], Loss: 0.0404
Epoch [10/10], Batch [55/177], Loss: 0.0074
Epoch [10/10], Batch [56/177], Loss: 0.0356
Epoch [10/10], Batch [57/177], Loss: 0.2038
Epoch [10/10], Batch [58/177], Loss: 0.0150
Epoch [10/10], Batch [59/177], Loss: 0.0154
Epoch [10/10], Batch [60/177], Loss: 0.0074
Epoch [10/10], Batch [61/177], Loss: 0.0056
Epoch [10/10], Batch [62/177], Loss: 0.0057
Epoch [10/10], Batch [63/177], Loss: 0.0360
Epoch [10/10], Batch [64/177], Loss: 0.0039
Epoch [10/10], Batch [65/177], Loss: 0.0052
Epoch [10/10], Batch [66/177], Loss: 0.0367
Epoch [10/10], Batch [67/177], Loss: 0.0036
Epoch [10/10], Batch [68/177], Loss: 0.0862
Epoch [10/10], Batch [69/177], Loss: 0.0166
Epoch [10/10], Batch [70/177], Loss: 0.0082
Epoch [10/10], Batch [71/177], Loss: 0.0074
Epoch [10/10], Batch [72/177], Loss: 0.0308
Epoch [10/10], Batch [73/177], Loss: 0.0080
Epoch [10/10], Batch [74/177], Loss: 0.0150
Epoch [10/10], Batch [75/177], Loss: 0.0162
Epoch [10/10], Batch [76/177], Loss: 0.0369
Epoch [10/10], Batch [77/177], Loss: 0.0263
Epoch [10/10], Batch [78/177], Loss: 0.0663
Epoch [10/10], Batch [79/177], Loss: 0.0385
Epoch [10/10], Batch [80/177], Loss: 0.0024
Epoch [10/10], Batch [81/177], Loss: 0.0104
Epoch [10/10], Batch [82/177], Loss: 0.0059
Epoch [10/10], Batch [83/177], Loss: 0.0092
Epoch [10/10], Batch [84/177], Loss: 0.0199
Epoch [10/10], Batch [85/177], Loss: 0.0049
Epoch [10/10], Batch [86/177], Loss: 0.0053
Epoch [10/10], Batch [87/177], Loss: 0.0238
Epoch [10/10], Batch [88/177], Loss: 0.0575
Epoch [10/10], Batch [89/177], Loss: 0.0352
Epoch [10/10], Batch [90/177], Loss: 0.1781
Epoch [10/10], Batch [91/177], Loss: 0.0133
Epoch [10/10], Batch [92/177], Loss: 0.0282
Epoch [10/10], Batch [93/177], Loss: 0.0516
Epoch [10/10], Batch [94/177], Loss: 0.0061
Epoch [10/10], Batch [95/177], Loss: 0.0388
Epoch [10/10], Batch [96/177], Loss: 0.0090
Epoch [10/10], Batch [97/177], Loss: 0.0029
Epoch [10/10], Batch [98/177], Loss: 0.0554
Epoch [10/10], Batch [99/177], Loss: 0.0071
Epoch [10/10], Batch [100/177], Loss: 0.2306
Epoch [10/10], Batch [101/177], Loss: 0.0336
Epoch [10/10], Batch [102/177], Loss: 0.0264
Epoch [10/10], Batch [103/177], Loss: 0.0038
Epoch [10/10], Batch [104/177], Loss: 0.0123
Epoch [10/10], Batch [105/177], Loss: 0.0422
Epoch [10/10], Batch [106/177], Loss: 0.0311
Epoch [10/10], Batch [107/177], Loss: 0.0056
Epoch [10/10], Batch [108/177], Loss: 0.0573
Epoch [10/10], Batch [109/177], Loss: 0.0029
Epoch [10/10], Batch [110/177], Loss: 0.0385
Epoch [10/10], Batch [111/177], Loss: 0.0745
Epoch [10/10], Batch [112/177], Loss: 0.0249
Epoch [10/10], Batch [113/177], Loss: 0.0242
Epoch [10/10], Batch [114/177], Loss: 0.0153
Epoch [10/10], Batch [115/177], Loss: 0.0763
Epoch [10/10], Batch [116/177], Loss: 0.0181
Epoch [10/10], Batch [117/177], Loss: 0.0033
Epoch [10/10], Batch [118/177], Loss: 0.1189
Epoch [10/10], Batch [119/177], Loss: 0.0154
Epoch [10/10], Batch [120/177], Loss: 0.0370
Epoch [10/10], Batch [121/177], Loss: 0.0038
Epoch [10/10], Batch [122/177], Loss: 0.0243
Epoch [10/10], Batch [123/177], Loss: 0.0276
Epoch [10/10], Batch [124/177], Loss: 0.0226
Epoch [10/10], Batch [125/177], Loss: 0.0029
Epoch [10/10], Batch [126/177], Loss: 0.0640
Epoch [10/10], Batch [127/177], Loss: 0.0098
Epoch [10/10], Batch [128/177], Loss: 0.0149
Epoch [10/10], Batch [129/177], Loss: 0.0412
Epoch [10/10], Batch [130/177], Loss: 0.0234
Epoch [10/10], Batch [131/177], Loss: 0.0232
Epoch [10/10], Batch [132/177], Loss: 0.0146
Epoch [10/10], Batch [133/177], Loss: 0.0115
Epoch [10/10], Batch [134/177], Loss: 0.0976
Epoch [10/10], Batch [135/177], Loss: 0.0167
Epoch [10/10], Batch [136/177], Loss: 0.0304
Epoch [10/10], Batch [137/177], Loss: 0.0077
Epoch [10/10], Batch [138/177], Loss: 0.1617
Epoch [10/10], Batch [139/177], Loss: 0.0194
Epoch [10/10], Batch [140/177], Loss: 0.0306
Epoch [10/10], Batch [141/177], Loss: 0.0105
Epoch [10/10], Batch [142/177], Loss: 0.0105
Epoch [10/10], Batch [143/177], Loss: 0.0700
Epoch [10/10], Batch [144/177], Loss: 0.0146
Epoch [10/10], Batch [145/177], Loss: 0.0105
Epoch [10/10], Batch [146/177], Loss: 0.0306
Epoch [10/10], Batch [147/177], Loss: 0.0769
Epoch [10/10], Batch [148/177], Loss: 0.0036
Epoch [10/10], Batch [149/177], Loss: 0.0154
Epoch [10/10], Batch [150/177], Loss: 0.0415
Epoch [10/10], Batch [151/177], Loss: 0.0111
Epoch [10/10], Batch [152/177], Loss: 0.0649
Epoch [10/10], Batch [153/177], Loss: 0.0072
Epoch [10/10], Batch [154/177], Loss: 0.0113
Epoch [10/10], Batch [155/177], Loss: 0.0228
Epoch [10/10], Batch [156/177], Loss: 0.0128
Epoch [10/10], Batch [157/177], Loss: 0.0530
Epoch [10/10], Batch [158/177], Loss: 0.0266
Epoch [10/10], Batch [159/177], Loss: 0.0176
Epoch [10/10], Batch [160/177], Loss: 0.0654
Epoch [10/10], Batch [161/177], Loss: 0.0941
Epoch [10/10], Batch [162/177], Loss: 0.0187
Epoch [10/10], Batch [163/177], Loss: 0.0700
Epoch [10/10], Batch [164/177], Loss: 0.0240
Epoch [10/10], Batch [165/177], Loss: 0.0050
Epoch [10/10], Batch [166/177], Loss: 0.0510
Epoch [10/10], Batch [167/177], Loss: 0.0481
Epoch [10/10], Batch [168/177], Loss: 0.0334
Epoch [10/10], Batch [169/177], Loss: 0.0300
Epoch [10/10], Batch [170/177], Loss: 0.0130
Epoch [10/10], Batch [171/177], Loss: 0.0072
Epoch [10/10], Batch [172/177], Loss: 0.0140
Epoch [10/10], Batch [173/177], Loss: 0.0543
Epoch [10/10], Batch [174/177], Loss: 0.0440
Epoch [10/10], Batch [175/177], Loss: 0.0400
Epoch [10/10], Batch [176/177], Loss: 0.0402
Epoch [10/10], Batch [177/177], Loss: 0.0161
Epoch [10/10], Average Loss: 0.0336
-----------------------------------------------------------
strategy: BEAM
iter: 9
epoch: 9
Test Loss: 0.4379
F1_overall: 0.6076
F1_AGENT: 0.7387
F1_TARGET: 0.4783
-----------------------------------------------------------
sorted_beam_scores: [(19, tensor(-0.2630, dtype=torch.float64)), (148, tensor(-0.2613, dtype=torch.float64)), (1193, tensor(-0.2365, dtype=torch.float64)), (1497, tensor(-0.1918, dtype=torch.float64)), (1391, tensor(-0.1916, dtype=torch.float64)), (176, tensor(-0.1806, dtype=torch.float64)), (2043, tensor(-0.1743, dtype=torch.float64)), (427, tensor(-0.1641, dtype=torch.float64)), (1784, tensor(-0.1552, dtype=torch.float64)), (1914, tensor(-0.1527, dtype=torch.float64)), (1553, tensor(-0.1503, dtype=torch.float64)), (691, tensor(-0.1439, dtype=torch.float64)), (1975, tensor(-0.1329, dtype=torch.float64)), (1253, tensor(-0.1314, dtype=torch.float64)), (1663, tensor(-0.1309, dtype=torch.float64)), (1995, tensor(-0.1309, dtype=torch.float64)), (1119, tensor(-0.1279, dtype=torch.float64)), (235, tensor(-0.1269, dtype=torch.float64)), (732, tensor(-0.1255, dtype=torch.float64)), (1369, tensor(-0.1207, dtype=torch.float64)), (1020, tensor(-0.1204, dtype=torch.float64)), (2038, tensor(-0.1203, dtype=torch.float64)), (1209, tensor(-0.1189, dtype=torch.float64)), (866, tensor(-0.1183, dtype=torch.float64)), (576, tensor(-0.1182, dtype=torch.float64)), (1288, tensor(-0.1180, dtype=torch.float64)), (1075, tensor(-0.1168, dtype=torch.float64)), (607, tensor(-0.1161, dtype=torch.float64)), (1429, tensor(-0.1148, dtype=torch.float64)), (1065, tensor(-0.1110, dtype=torch.float64)), (1016, tensor(-0.1105, dtype=torch.float64)), (1047, tensor(-0.1100, dtype=torch.float64)), (816, tensor(-0.1092, dtype=torch.float64)), (211, tensor(-0.1089, dtype=torch.float64)), (1976, tensor(-0.1088, dtype=torch.float64)), (1052, tensor(-0.1085, dtype=torch.float64)), (921, tensor(-0.1073, dtype=torch.float64)), (1831, tensor(-0.1071, dtype=torch.float64)), (1725, tensor(-0.1068, dtype=torch.float64)), (1095, tensor(-0.1054, dtype=torch.float64)), (125, tensor(-0.1051, dtype=torch.float64)), (1970, tensor(-0.1049, dtype=torch.float64)), (564, tensor(-0.1040, dtype=torch.float64)), (88, tensor(-0.1035, dtype=torch.float64)), (1714, tensor(-0.1034, dtype=torch.float64)), (1176, tensor(-0.1034, dtype=torch.float64)), (1720, tensor(-0.1034, dtype=torch.float64)), (1223, tensor(-0.1032, dtype=torch.float64)), (986, tensor(-0.1029, dtype=torch.float64)), (1996, tensor(-0.1027, dtype=torch.float64)), (1581, tensor(-0.1015, dtype=torch.float64)), (551, tensor(-0.1013, dtype=torch.float64)), (910, tensor(-0.0983, dtype=torch.float64)), (991, tensor(-0.0980, dtype=torch.float64)), (299, tensor(-0.0979, dtype=torch.float64)), (1082, tensor(-0.0978, dtype=torch.float64)), (60, tensor(-0.0972, dtype=torch.float64)), (1208, tensor(-0.0972, dtype=torch.float64)), (1378, tensor(-0.0965, dtype=torch.float64)), (1826, tensor(-0.0961, dtype=torch.float64)), (1931, tensor(-0.0959, dtype=torch.float64)), (901, tensor(-0.0958, dtype=torch.float64)), (1057, tensor(-0.0952, dtype=torch.float64)), (1889, tensor(-0.0944, dtype=torch.float64)), (563, tensor(-0.0943, dtype=torch.float64)), (464, tensor(-0.0941, dtype=torch.float64)), (1373, tensor(-0.0937, dtype=torch.float64)), (1595, tensor(-0.0935, dtype=torch.float64)), (763, tensor(-0.0932, dtype=torch.float64)), (653, tensor(-0.0930, dtype=torch.float64)), (1543, tensor(-0.0918, dtype=torch.float64)), (32, tensor(-0.0911, dtype=torch.float64)), (1660, tensor(-0.0902, dtype=torch.float64)), (974, tensor(-0.0898, dtype=torch.float64)), (1457, tensor(-0.0895, dtype=torch.float64)), (194, tensor(-0.0880, dtype=torch.float64)), (1115, tensor(-0.0879, dtype=torch.float64)), (1813, tensor(-0.0878, dtype=torch.float64)), (1533, tensor(-0.0876, dtype=torch.float64)), (606, tensor(-0.0871, dtype=torch.float64)), (1989, tensor(-0.0870, dtype=torch.float64)), (1619, tensor(-0.0867, dtype=torch.float64)), (2, tensor(-0.0867, dtype=torch.float64)), (1539, tensor(-0.0863, dtype=torch.float64)), (2115, tensor(-0.0852, dtype=torch.float64)), (1699, tensor(-0.0849, dtype=torch.float64)), (202, tensor(-0.0849, dtype=torch.float64)), (1370, tensor(-0.0845, dtype=torch.float64)), (149, tensor(-0.0845, dtype=torch.float64)), (1012, tensor(-0.0844, dtype=torch.float64)), (746, tensor(-0.0843, dtype=torch.float64)), (61, tensor(-0.0841, dtype=torch.float64)), (1593, tensor(-0.0841, dtype=torch.float64)), (62, tensor(-0.0840, dtype=torch.float64)), (1766, tensor(-0.0838, dtype=torch.float64)), (624, tensor(-0.0834, dtype=torch.float64)), (1656, tensor(-0.0832, dtype=torch.float64)), (840, tensor(-0.0829, dtype=torch.float64)), (584, tensor(-0.0827, dtype=torch.float64)), (1511, tensor(-0.0824, dtype=torch.float64)), (919, tensor(-0.0822, dtype=torch.float64)), (1361, tensor(-0.0816, dtype=torch.float64)), (175, tensor(-0.0811, dtype=torch.float64)), (358, tensor(-0.0809, dtype=torch.float64)), (1946, tensor(-0.0805, dtype=torch.float64)), (305, tensor(-0.0802, dtype=torch.float64)), (1178, tensor(-0.0795, dtype=torch.float64)), (209, tensor(-0.0792, dtype=torch.float64)), (1904, tensor(-0.0792, dtype=torch.float64)), (1801, tensor(-0.0787, dtype=torch.float64)), (1857, tensor(-0.0787, dtype=torch.float64)), (1770, tensor(-0.0787, dtype=torch.float64)), (263, tensor(-0.0787, dtype=torch.float64)), (1247, tensor(-0.0785, dtype=torch.float64)), (939, tensor(-0.0781, dtype=torch.float64)), (934, tensor(-0.0781, dtype=torch.float64)), (789, tensor(-0.0779, dtype=torch.float64)), (859, tensor(-0.0777, dtype=torch.float64)), (434, tensor(-0.0777, dtype=torch.float64)), (8, tensor(-0.0776, dtype=torch.float64)), (1741, tensor(-0.0772, dtype=torch.float64)), (418, tensor(-0.0770, dtype=torch.float64)), (1888, tensor(-0.0767, dtype=torch.float64)), (806, tensor(-0.0767, dtype=torch.float64)), (1018, tensor(-0.0763, dtype=torch.float64)), (58, tensor(-0.0761, dtype=torch.float64)), (867, tensor(-0.0759, dtype=torch.float64)), (548, tensor(-0.0757, dtype=torch.float64)), (1456, tensor(-0.0756, dtype=torch.float64)), (1257, tensor(-0.0751, dtype=torch.float64)), (1921, tensor(-0.0749, dtype=torch.float64)), (1159, tensor(-0.0749, dtype=torch.float64)), (1706, tensor(-0.0749, dtype=torch.float64)), (46, tensor(-0.0749, dtype=torch.float64)), (1276, tensor(-0.0745, dtype=torch.float64)), (421, tensor(-0.0745, dtype=torch.float64)), (1022, tensor(-0.0744, dtype=torch.float64)), (2041, tensor(-0.0740, dtype=torch.float64)), (1093, tensor(-0.0740, dtype=torch.float64)), (2100, tensor(-0.0738, dtype=torch.float64)), (1756, tensor(-0.0737, dtype=torch.float64)), (2014, tensor(-0.0736, dtype=torch.float64)), (316, tensor(-0.0736, dtype=torch.float64)), (757, tensor(-0.0734, dtype=torch.float64)), (7, tensor(-0.0733, dtype=torch.float64)), (663, tensor(-0.0731, dtype=torch.float64)), (483, tensor(-0.0731, dtype=torch.float64)), (296, tensor(-0.0729, dtype=torch.float64)), (366, tensor(-0.0729, dtype=torch.float64)), (1815, tensor(-0.0729, dtype=torch.float64)), (1750, tensor(-0.0728, dtype=torch.float64)), (1827, tensor(-0.0725, dtype=torch.float64)), (1793, tensor(-0.0722, dtype=torch.float64)), (579, tensor(-0.0721, dtype=torch.float64)), (1110, tensor(-0.0720, dtype=torch.float64)), (232, tensor(-0.0718, dtype=torch.float64)), (677, tensor(-0.0716, dtype=torch.float64)), (717, tensor(-0.0716, dtype=torch.float64)), (1344, tensor(-0.0712, dtype=torch.float64)), (1526, tensor(-0.0711, dtype=torch.float64)), (219, tensor(-0.0710, dtype=torch.float64)), (1700, tensor(-0.0709, dtype=torch.float64)), (128, tensor(-0.0709, dtype=torch.float64)), (281, tensor(-0.0709, dtype=torch.float64)), (166, tensor(-0.0708, dtype=torch.float64)), (1299, tensor(-0.0707, dtype=torch.float64)), (1620, tensor(-0.0707, dtype=torch.float64)), (1454, tensor(-0.0705, dtype=torch.float64)), (1577, tensor(-0.0704, dtype=torch.float64)), (957, tensor(-0.0704, dtype=torch.float64)), (493, tensor(-0.0699, dtype=torch.float64)), (1531, tensor(-0.0697, dtype=torch.float64)), (830, tensor(-0.0691, dtype=torch.float64)), (250, tensor(-0.0690, dtype=torch.float64)), (872, tensor(-0.0686, dtype=torch.float64)), (423, tensor(-0.0682, dtype=torch.float64)), (692, tensor(-0.0679, dtype=torch.float64)), (776, tensor(-0.0679, dtype=torch.float64)), (352, tensor(-0.0679, dtype=torch.float64)), (2040, tensor(-0.0678, dtype=torch.float64)), (848, tensor(-0.0678, dtype=torch.float64)), (857, tensor(-0.0676, dtype=torch.float64)), (569, tensor(-0.0675, dtype=torch.float64)), (847, tensor(-0.0667, dtype=torch.float64)), (1679, tensor(-0.0666, dtype=torch.float64)), (1819, tensor(-0.0666, dtype=torch.float64)), (1189, tensor(-0.0666, dtype=torch.float64)), (331, tensor(-0.0665, dtype=torch.float64)), (1372, tensor(-0.0663, dtype=torch.float64)), (590, tensor(-0.0661, dtype=torch.float64)), (2118, tensor(-0.0660, dtype=torch.float64)), (544, tensor(-0.0657, dtype=torch.float64)), (348, tensor(-0.0656, dtype=torch.float64)), (925, tensor(-0.0656, dtype=torch.float64)), (1867, tensor(-0.0654, dtype=torch.float64)), (1814, tensor(-0.0653, dtype=torch.float64)), (344, tensor(-0.0650, dtype=torch.float64)), (359, tensor(-0.0648, dtype=torch.float64)), (462, tensor(-0.0648, dtype=torch.float64)), (2015, tensor(-0.0647, dtype=torch.float64)), (439, tensor(-0.0644, dtype=torch.float64)), (1352, tensor(-0.0642, dtype=torch.float64)), (1261, tensor(-0.0640, dtype=torch.float64)), (1740, tensor(-0.0639, dtype=torch.float64)), (1207, tensor(-0.0639, dtype=torch.float64)), (96, tensor(-0.0637, dtype=torch.float64)), (1948, tensor(-0.0635, dtype=torch.float64)), (173, tensor(-0.0634, dtype=torch.float64)), (1264, tensor(-0.0630, dtype=torch.float64)), (916, tensor(-0.0629, dtype=torch.float64)), (2111, tensor(-0.0627, dtype=torch.float64)), (1174, tensor(-0.0624, dtype=torch.float64)), (999, tensor(-0.0622, dtype=torch.float64)), (704, tensor(-0.0617, dtype=torch.float64)), (556, tensor(-0.0616, dtype=torch.float64)), (310, tensor(-0.0616, dtype=torch.float64)), (1170, tensor(-0.0616, dtype=torch.float64)), (1442, tensor(-0.0611, dtype=torch.float64)), (288, tensor(-0.0610, dtype=torch.float64)), (1735, tensor(-0.0609, dtype=torch.float64)), (685, tensor(-0.0608, dtype=torch.float64)), (1099, tensor(-0.0607, dtype=torch.float64)), (1902, tensor(-0.0607, dtype=torch.float64)), (431, tensor(-0.0606, dtype=torch.float64)), (287, tensor(-0.0606, dtype=torch.float64)), (240, tensor(-0.0605, dtype=torch.float64)), (1548, tensor(-0.0604, dtype=torch.float64)), (1459, tensor(-0.0603, dtype=torch.float64)), (372, tensor(-0.0596, dtype=torch.float64)), (1611, tensor(-0.0595, dtype=torch.float64)), (1546, tensor(-0.0592, dtype=torch.float64)), (1736, tensor(-0.0592, dtype=torch.float64)), (1489, tensor(-0.0591, dtype=torch.float64)), (1614, tensor(-0.0587, dtype=torch.float64)), (1240, tensor(-0.0587, dtype=torch.float64)), (540, tensor(-0.0587, dtype=torch.float64)), (1114, tensor(-0.0585, dtype=torch.float64)), (1236, tensor(-0.0585, dtype=torch.float64)), (129, tensor(-0.0584, dtype=torch.float64)), (1880, tensor(-0.0584, dtype=torch.float64)), (678, tensor(-0.0582, dtype=torch.float64)), (852, tensor(-0.0582, dtype=torch.float64)), (327, tensor(-0.0581, dtype=torch.float64)), (603, tensor(-0.0580, dtype=torch.float64)), (605, tensor(-0.0580, dtype=torch.float64)), (1445, tensor(-0.0578, dtype=torch.float64)), (1094, tensor(-0.0578, dtype=torch.float64)), (907, tensor(-0.0577, dtype=torch.float64)), (1538, tensor(-0.0575, dtype=torch.float64)), (470, tensor(-0.0575, dtype=torch.float64)), (575, tensor(-0.0574, dtype=torch.float64)), (2054, tensor(-0.0574, dtype=torch.float64)), (1331, tensor(-0.0574, dtype=torch.float64)), (1474, tensor(-0.0572, dtype=torch.float64)), (1431, tensor(-0.0571, dtype=torch.float64)), (1434, tensor(-0.0568, dtype=torch.float64)), (47, tensor(-0.0568, dtype=torch.float64)), (514, tensor(-0.0566, dtype=torch.float64)), (21, tensor(-0.0565, dtype=torch.float64)), (983, tensor(-0.0564, dtype=torch.float64)), (1205, tensor(-0.0564, dtype=torch.float64)), (1896, tensor(-0.0559, dtype=torch.float64)), (1629, tensor(-0.0559, dtype=torch.float64)), (943, tensor(-0.0558, dtype=torch.float64)), (318, tensor(-0.0557, dtype=torch.float64)), (836, tensor(-0.0557, dtype=torch.float64)), (1335, tensor(-0.0556, dtype=torch.float64)), (930, tensor(-0.0556, dtype=torch.float64)), (1357, tensor(-0.0556, dtype=torch.float64)), (1108, tensor(-0.0554, dtype=torch.float64)), (1848, tensor(-0.0554, dtype=torch.float64)), (1937, tensor(-0.0553, dtype=torch.float64)), (1556, tensor(-0.0551, dtype=torch.float64)), (452, tensor(-0.0550, dtype=torch.float64)), (730, tensor(-0.0549, dtype=torch.float64)), (812, tensor(-0.0549, dtype=torch.float64)), (754, tensor(-0.0549, dtype=torch.float64)), (1875, tensor(-0.0547, dtype=torch.float64)), (467, tensor(-0.0546, dtype=torch.float64)), (139, tensor(-0.0546, dtype=torch.float64)), (1555, tensor(-0.0545, dtype=torch.float64)), (177, tensor(-0.0544, dtype=torch.float64)), (1659, tensor(-0.0543, dtype=torch.float64)), (1608, tensor(-0.0542, dtype=torch.float64)), (207, tensor(-0.0541, dtype=torch.float64)), (669, tensor(-0.0540, dtype=torch.float64)), (770, tensor(-0.0538, dtype=torch.float64)), (539, tensor(-0.0537, dtype=torch.float64)), (1954, tensor(-0.0534, dtype=torch.float64)), (726, tensor(-0.0534, dtype=torch.float64)), (329, tensor(-0.0533, dtype=torch.float64)), (779, tensor(-0.0532, dtype=torch.float64)), (168, tensor(-0.0532, dtype=torch.float64)), (256, tensor(-0.0530, dtype=torch.float64)), (253, tensor(-0.0530, dtype=torch.float64)), (2087, tensor(-0.0529, dtype=torch.float64)), (244, tensor(-0.0527, dtype=torch.float64)), (1675, tensor(-0.0525, dtype=torch.float64)), (1067, tensor(-0.0525, dtype=torch.float64)), (834, tensor(-0.0524, dtype=torch.float64)), (971, tensor(-0.0522, dtype=torch.float64)), (1077, tensor(-0.0521, dtype=torch.float64)), (980, tensor(-0.0521, dtype=torch.float64)), (1251, tensor(-0.0520, dtype=torch.float64)), (949, tensor(-0.0518, dtype=torch.float64)), (1947, tensor(-0.0517, dtype=torch.float64)), (690, tensor(-0.0517, dtype=torch.float64)), (1674, tensor(-0.0516, dtype=torch.float64)), (443, tensor(-0.0515, dtype=torch.float64)), (1484, tensor(-0.0514, dtype=torch.float64)), (1321, tensor(-0.0513, dtype=torch.float64)), (1051, tensor(-0.0513, dtype=torch.float64)), (1493, tensor(-0.0513, dtype=torch.float64)), (1325, tensor(-0.0511, dtype=torch.float64)), (761, tensor(-0.0510, dtype=torch.float64)), (1746, tensor(-0.0510, dtype=torch.float64)), (821, tensor(-0.0508, dtype=torch.float64)), (124, tensor(-0.0507, dtype=torch.float64)), (2105, tensor(-0.0507, dtype=torch.float64)), (862, tensor(-0.0503, dtype=torch.float64)), (1582, tensor(-0.0502, dtype=torch.float64)), (1076, tensor(-0.0502, dtype=torch.float64)), (1927, tensor(-0.0502, dtype=torch.float64)), (868, tensor(-0.0501, dtype=torch.float64)), (2034, tensor(-0.0500, dtype=torch.float64)), (1803, tensor(-0.0500, dtype=torch.float64)), (12, tensor(-0.0500, dtype=torch.float64)), (1359, tensor(-0.0500, dtype=torch.float64)), (1516, tensor(-0.0499, dtype=torch.float64)), (633, tensor(-0.0498, dtype=torch.float64)), (1071, tensor(-0.0498, dtype=torch.float64)), (1865, tensor(-0.0497, dtype=torch.float64)), (522, tensor(-0.0497, dtype=torch.float64)), (1353, tensor(-0.0496, dtype=torch.float64)), (843, tensor(-0.0494, dtype=torch.float64)), (2045, tensor(-0.0493, dtype=torch.float64)), (1131, tensor(-0.0493, dtype=torch.float64)), (1160, tensor(-0.0492, dtype=torch.float64)), (1468, tensor(-0.0492, dtype=torch.float64)), (638, tensor(-0.0492, dtype=torch.float64)), (1282, tensor(-0.0491, dtype=torch.float64)), (50, tensor(-0.0491, dtype=torch.float64)), (1508, tensor(-0.0491, dtype=torch.float64)), (1380, tensor(-0.0488, dtype=torch.float64)), (368, tensor(-0.0487, dtype=torch.float64)), (1063, tensor(-0.0487, dtype=torch.float64)), (158, tensor(-0.0487, dtype=torch.float64)), (602, tensor(-0.0487, dtype=torch.float64)), (2008, tensor(-0.0487, dtype=torch.float64)), (962, tensor(-0.0486, dtype=torch.float64)), (1358, tensor(-0.0486, dtype=torch.float64)), (684, tensor(-0.0482, dtype=torch.float64)), (1597, tensor(-0.0482, dtype=torch.float64)), (1005, tensor(-0.0482, dtype=torch.float64)), (849, tensor(-0.0481, dtype=torch.float64)), (1441, tensor(-0.0480, dtype=torch.float64)), (1415, tensor(-0.0480, dtype=torch.float64)), (2042, tensor(-0.0480, dtype=torch.float64)), (510, tensor(-0.0479, dtype=torch.float64)), (1748, tensor(-0.0479, dtype=torch.float64)), (740, tensor(-0.0477, dtype=torch.float64)), (501, tensor(-0.0476, dtype=torch.float64)), (2057, tensor(-0.0476, dtype=torch.float64)), (498, tensor(-0.0475, dtype=torch.float64)), (887, tensor(-0.0474, dtype=torch.float64)), (2029, tensor(-0.0473, dtype=torch.float64)), (709, tensor(-0.0473, dtype=torch.float64)), (465, tensor(-0.0472, dtype=torch.float64)), (651, tensor(-0.0472, dtype=torch.float64)), (1273, tensor(-0.0472, dtype=torch.float64)), (285, tensor(-0.0471, dtype=torch.float64)), (1664, tensor(-0.0470, dtype=torch.float64)), (1541, tensor(-0.0469, dtype=torch.float64)), (856, tensor(-0.0468, dtype=torch.float64)), (108, tensor(-0.0467, dtype=torch.float64)), (2070, tensor(-0.0465, dtype=torch.float64)), (407, tensor(-0.0463, dtype=torch.float64)), (631, tensor(-0.0463, dtype=torch.float64)), (1862, tensor(-0.0463, dtype=torch.float64)), (722, tensor(-0.0463, dtype=torch.float64)), (1025, tensor(-0.0462, dtype=torch.float64)), (832, tensor(-0.0462, dtype=torch.float64)), (778, tensor(-0.0462, dtype=torch.float64)), (1632, tensor(-0.0462, dtype=torch.float64)), (844, tensor(-0.0461, dtype=torch.float64)), (1197, tensor(-0.0461, dtype=torch.float64)), (681, tensor(-0.0461, dtype=torch.float64)), (55, tensor(-0.0460, dtype=torch.float64)), (2003, tensor(-0.0460, dtype=torch.float64)), (1007, tensor(-0.0459, dtype=torch.float64)), (1056, tensor(-0.0457, dtype=torch.float64)), (1991, tensor(-0.0457, dtype=torch.float64)), (1571, tensor(-0.0456, dtype=torch.float64)), (384, tensor(-0.0456, dtype=torch.float64)), (1303, tensor(-0.0455, dtype=torch.float64)), (1419, tensor(-0.0455, dtype=torch.float64)), (1894, tensor(-0.0455, dtype=torch.float64)), (1792, tensor(-0.0454, dtype=torch.float64)), (1877, tensor(-0.0454, dtype=torch.float64)), (1277, tensor(-0.0453, dtype=torch.float64)), (741, tensor(-0.0453, dtype=torch.float64)), (56, tensor(-0.0452, dtype=torch.float64)), (621, tensor(-0.0451, dtype=torch.float64)), (1014, tensor(-0.0451, dtype=torch.float64)), (781, tensor(-0.0450, dtype=torch.float64)), (90, tensor(-0.0450, dtype=torch.float64)), (1096, tensor(-0.0449, dtype=torch.float64)), (1379, tensor(-0.0449, dtype=torch.float64)), (1360, tensor(-0.0449, dtype=torch.float64)), (397, tensor(-0.0449, dtype=torch.float64)), (2079, tensor(-0.0448, dtype=torch.float64)), (1778, tensor(-0.0447, dtype=torch.float64)), (623, tensor(-0.0447, dtype=torch.float64)), (809, tensor(-0.0446, dtype=torch.float64)), (699, tensor(-0.0446, dtype=torch.float64)), (869, tensor(-0.0446, dtype=torch.float64)), (1271, tensor(-0.0445, dtype=torch.float64)), (1841, tensor(-0.0444, dtype=torch.float64)), (1002, tensor(-0.0444, dtype=torch.float64)), (78, tensor(-0.0444, dtype=torch.float64)), (1323, tensor(-0.0443, dtype=torch.float64)), (2056, tensor(-0.0443, dtype=torch.float64)), (1732, tensor(-0.0441, dtype=torch.float64)), (1738, tensor(-0.0441, dtype=torch.float64)), (1949, tensor(-0.0441, dtype=torch.float64)), (274, tensor(-0.0440, dtype=torch.float64)), (712, tensor(-0.0439, dtype=torch.float64)), (1121, tensor(-0.0439, dtype=torch.float64)), (578, tensor(-0.0437, dtype=torch.float64)), (1630, tensor(-0.0437, dtype=torch.float64)), (1522, tensor(-0.0436, dtype=torch.float64)), (1724, tensor(-0.0435, dtype=torch.float64)), (892, tensor(-0.0435, dtype=torch.float64)), (864, tensor(-0.0434, dtype=torch.float64)), (1812, tensor(-0.0433, dtype=torch.float64)), (1579, tensor(-0.0433, dtype=torch.float64)), (303, tensor(-0.0431, dtype=torch.float64)), (1453, tensor(-0.0431, dtype=torch.float64)), (509, tensor(-0.0430, dtype=torch.float64)), (313, tensor(-0.0429, dtype=torch.float64)), (898, tensor(-0.0429, dtype=torch.float64)), (1851, tensor(-0.0429, dtype=torch.float64)), (1399, tensor(-0.0429, dtype=torch.float64)), (37, tensor(-0.0428, dtype=torch.float64)), (1481, tensor(-0.0428, dtype=torch.float64)), (309, tensor(-0.0427, dtype=torch.float64)), (1956, tensor(-0.0427, dtype=torch.float64)), (1899, tensor(-0.0427, dtype=torch.float64)), (1340, tensor(-0.0426, dtype=torch.float64)), (1874, tensor(-0.0426, dtype=torch.float64)), (2123, tensor(-0.0425, dtype=torch.float64)), (1149, tensor(-0.0425, dtype=torch.float64)), (1475, tensor(-0.0425, dtype=torch.float64)), (679, tensor(-0.0424, dtype=torch.float64)), (1583, tensor(-0.0423, dtype=torch.float64)), (2125, tensor(-0.0422, dtype=torch.float64)), (791, tensor(-0.0422, dtype=torch.float64)), (944, tensor(-0.0422, dtype=torch.float64)), (1838, tensor(-0.0421, dtype=torch.float64)), (1873, tensor(-0.0421, dtype=torch.float64)), (645, tensor(-0.0420, dtype=torch.float64)), (377, tensor(-0.0419, dtype=torch.float64)), (875, tensor(-0.0419, dtype=torch.float64)), (533, tensor(-0.0419, dtype=torch.float64)), (224, tensor(-0.0418, dtype=torch.float64)), (320, tensor(-0.0418, dtype=torch.float64)), (1388, tensor(-0.0417, dtype=torch.float64)), (662, tensor(-0.0417, dtype=torch.float64)), (1615, tensor(-0.0416, dtype=torch.float64)), (1376, tensor(-0.0416, dtype=torch.float64)), (978, tensor(-0.0416, dtype=torch.float64)), (475, tensor(-0.0416, dtype=torch.float64)), (395, tensor(-0.0415, dtype=torch.float64)), (1693, tensor(-0.0414, dtype=torch.float64)), (500, tensor(-0.0414, dtype=torch.float64)), (945, tensor(-0.0414, dtype=torch.float64)), (1329, tensor(-0.0414, dtype=torch.float64)), (1168, tensor(-0.0412, dtype=torch.float64)), (1210, tensor(-0.0412, dtype=torch.float64)), (2051, tensor(-0.0411, dtype=torch.float64)), (558, tensor(-0.0410, dtype=torch.float64)), (2030, tensor(-0.0410, dtype=torch.float64)), (1557, tensor(-0.0410, dtype=torch.float64)), (850, tensor(-0.0409, dtype=torch.float64)), (477, tensor(-0.0408, dtype=torch.float64)), (923, tensor(-0.0408, dtype=torch.float64)), (155, tensor(-0.0407, dtype=torch.float64)), (1588, tensor(-0.0406, dtype=torch.float64)), (1337, tensor(-0.0405, dtype=torch.float64)), (1864, tensor(-0.0404, dtype=torch.float64)), (1769, tensor(-0.0404, dtype=torch.float64)), (1934, tensor(-0.0402, dtype=torch.float64)), (543, tensor(-0.0402, dtype=torch.float64)), (982, tensor(-0.0401, dtype=torch.float64)), (2023, tensor(-0.0401, dtype=torch.float64)), (1086, tensor(-0.0401, dtype=torch.float64)), (375, tensor(-0.0400, dtype=torch.float64)), (109, tensor(-0.0400, dtype=torch.float64)), (581, tensor(-0.0400, dtype=torch.float64)), (146, tensor(-0.0399, dtype=torch.float64)), (1536, tensor(-0.0399, dtype=torch.float64)), (1808, tensor(-0.0398, dtype=torch.float64)), (2067, tensor(-0.0398, dtype=torch.float64)), (1416, tensor(-0.0398, dtype=torch.float64)), (727, tensor(-0.0397, dtype=torch.float64)), (1639, tensor(-0.0397, dtype=torch.float64)), (160, tensor(-0.0397, dtype=torch.float64)), (1673, tensor(-0.0395, dtype=torch.float64)), (75, tensor(-0.0394, dtype=torch.float64)), (565, tensor(-0.0394, dtype=torch.float64)), (1186, tensor(-0.0392, dtype=torch.float64)), (936, tensor(-0.0392, dtype=torch.float64)), (1367, tensor(-0.0392, dtype=torch.float64)), (381, tensor(-0.0392, dtype=torch.float64)), (2073, tensor(-0.0392, dtype=torch.float64)), (1525, tensor(-0.0391, dtype=torch.float64)), (1677, tensor(-0.0390, dtype=torch.float64)), (131, tensor(-0.0389, dtype=torch.float64)), (1125, tensor(-0.0388, dtype=torch.float64)), (1084, tensor(-0.0388, dtype=torch.float64)), (143, tensor(-0.0387, dtype=torch.float64)), (416, tensor(-0.0386, dtype=torch.float64)), (802, tensor(-0.0386, dtype=torch.float64)), (1809, tensor(-0.0386, dtype=torch.float64)), (1319, tensor(-0.0386, dtype=torch.float64)), (755, tensor(-0.0384, dtype=torch.float64)), (672, tensor(-0.0383, dtype=torch.float64)), (1447, tensor(-0.0380, dtype=torch.float64)), (1636, tensor(-0.0380, dtype=torch.float64)), (495, tensor(-0.0379, dtype=torch.float64)), (879, tensor(-0.0379, dtype=torch.float64)), (1764, tensor(-0.0378, dtype=torch.float64)), (734, tensor(-0.0378, dtype=torch.float64)), (1037, tensor(-0.0378, dtype=torch.float64)), (1692, tensor(-0.0378, dtype=torch.float64)), (828, tensor(-0.0378, dtype=torch.float64)), (1897, tensor(-0.0377, dtype=torch.float64)), (985, tensor(-0.0377, dtype=torch.float64)), (246, tensor(-0.0376, dtype=torch.float64)), (1963, tensor(-0.0376, dtype=torch.float64)), (334, tensor(-0.0376, dtype=torch.float64)), (1505, tensor(-0.0375, dtype=torch.float64)), (488, tensor(-0.0374, dtype=torch.float64)), (819, tensor(-0.0374, dtype=torch.float64)), (380, tensor(-0.0374, dtype=torch.float64)), (1466, tensor(-0.0374, dtype=torch.float64)), (1471, tensor(-0.0373, dtype=torch.float64)), (137, tensor(-0.0372, dtype=torch.float64)), (955, tensor(-0.0372, dtype=torch.float64)), (1903, tensor(-0.0371, dtype=torch.float64)), (1982, tensor(-0.0371, dtype=torch.float64)), (1829, tensor(-0.0371, dtype=torch.float64)), (1498, tensor(-0.0370, dtype=torch.float64)), (283, tensor(-0.0370, dtype=torch.float64)), (1850, tensor(-0.0370, dtype=torch.float64)), (2027, tensor(-0.0370, dtype=torch.float64)), (824, tensor(-0.0369, dtype=torch.float64)), (48, tensor(-0.0368, dtype=torch.float64)), (2058, tensor(-0.0367, dtype=torch.float64)), (231, tensor(-0.0367, dtype=torch.float64)), (1883, tensor(-0.0366, dtype=torch.float64)), (478, tensor(-0.0366, dtype=torch.float64)), (743, tensor(-0.0363, dtype=torch.float64)), (913, tensor(-0.0363, dtype=torch.float64)), (1969, tensor(-0.0362, dtype=torch.float64)), (1185, tensor(-0.0361, dtype=torch.float64)), (1283, tensor(-0.0359, dtype=torch.float64)), (1191, tensor(-0.0359, dtype=torch.float64)), (192, tensor(-0.0359, dtype=torch.float64)), (1120, tensor(-0.0358, dtype=torch.float64)), (1761, tensor(-0.0357, dtype=torch.float64)), (861, tensor(-0.0355, dtype=torch.float64)), (932, tensor(-0.0355, dtype=torch.float64)), (1017, tensor(-0.0354, dtype=torch.float64)), (1599, tensor(-0.0354, dtype=torch.float64)), (333, tensor(-0.0354, dtype=torch.float64)), (899, tensor(-0.0354, dtype=torch.float64)), (1015, tensor(-0.0354, dtype=torch.float64)), (1395, tensor(-0.0353, dtype=torch.float64)), (815, tensor(-0.0353, dtype=torch.float64)), (513, tensor(-0.0352, dtype=torch.float64)), (1926, tensor(-0.0352, dtype=torch.float64)), (401, tensor(-0.0351, dtype=torch.float64)), (40, tensor(-0.0351, dtype=torch.float64)), (1983, tensor(-0.0350, dtype=torch.float64)), (1685, tensor(-0.0350, dtype=torch.float64)), (1467, tensor(-0.0350, dtype=torch.float64)), (616, tensor(-0.0348, dtype=torch.float64)), (1520, tensor(-0.0347, dtype=torch.float64)), (106, tensor(-0.0347, dtype=torch.float64)), (1458, tensor(-0.0347, dtype=torch.float64)), (2103, tensor(-0.0347, dtype=torch.float64)), (1540, tensor(-0.0346, dtype=torch.float64)), (883, tensor(-0.0345, dtype=torch.float64)), (1409, tensor(-0.0345, dtype=torch.float64)), (59, tensor(-0.0345, dtype=torch.float64)), (714, tensor(-0.0344, dtype=torch.float64)), (527, tensor(-0.0343, dtype=torch.float64)), (371, tensor(-0.0343, dtype=torch.float64)), (68, tensor(-0.0342, dtype=torch.float64)), (542, tensor(-0.0342, dtype=torch.float64)), (1589, tensor(-0.0342, dtype=torch.float64)), (951, tensor(-0.0342, dtype=torch.float64)), (11, tensor(-0.0341, dtype=torch.float64)), (449, tensor(-0.0340, dtype=torch.float64)), (595, tensor(-0.0339, dtype=torch.float64)), (2102, tensor(-0.0339, dtype=torch.float64)), (1922, tensor(-0.0339, dtype=torch.float64)), (1097, tensor(-0.0339, dtype=torch.float64)), (247, tensor(-0.0338, dtype=torch.float64)), (2013, tensor(-0.0338, dtype=torch.float64)), (1694, tensor(-0.0337, dtype=torch.float64)), (1981, tensor(-0.0336, dtype=torch.float64)), (1213, tensor(-0.0335, dtype=torch.float64)), (2053, tensor(-0.0335, dtype=torch.float64)), (954, tensor(-0.0335, dtype=torch.float64)), (1103, tensor(-0.0334, dtype=torch.float64)), (1294, tensor(-0.0334, dtype=torch.float64)), (908, tensor(-0.0334, dtype=torch.float64)), (1998, tensor(-0.0333, dtype=torch.float64)), (1550, tensor(-0.0332, dtype=torch.float64)), (1839, tensor(-0.0331, dtype=torch.float64)), (77, tensor(-0.0331, dtype=torch.float64)), (161, tensor(-0.0330, dtype=torch.float64)), (1661, tensor(-0.0330, dtype=torch.float64)), (2069, tensor(-0.0329, dtype=torch.float64)), (1631, tensor(-0.0329, dtype=torch.float64)), (1199, tensor(-0.0329, dtype=torch.float64)), (831, tensor(-0.0328, dtype=torch.float64)), (1684, tensor(-0.0328, dtype=torch.float64)), (1320, tensor(-0.0328, dtype=torch.float64)), (686, tensor(-0.0328, dtype=torch.float64)), (1269, tensor(-0.0328, dtype=torch.float64)), (1150, tensor(-0.0327, dtype=torch.float64)), (419, tensor(-0.0327, dtype=torch.float64)), (1626, tensor(-0.0327, dtype=torch.float64)), (1559, tensor(-0.0326, dtype=torch.float64)), (1910, tensor(-0.0325, dtype=torch.float64)), (1163, tensor(-0.0325, dtype=torch.float64)), (2012, tensor(-0.0325, dtype=torch.float64)), (1278, tensor(-0.0324, dtype=torch.float64)), (1175, tensor(-0.0324, dtype=torch.float64)), (275, tensor(-0.0323, dtype=torch.float64)), (70, tensor(-0.0323, dtype=torch.float64)), (873, tensor(-0.0323, dtype=torch.float64)), (1752, tensor(-0.0322, dtype=torch.float64)), (1847, tensor(-0.0321, dtype=torch.float64)), (1962, tensor(-0.0320, dtype=torch.float64)), (1575, tensor(-0.0320, dtype=torch.float64)), (234, tensor(-0.0318, dtype=torch.float64)), (1428, tensor(-0.0318, dtype=torch.float64)), (116, tensor(-0.0318, dtype=torch.float64)), (1887, tensor(-0.0318, dtype=torch.float64)), (1130, tensor(-0.0318, dtype=torch.float64)), (2036, tensor(-0.0316, dtype=torch.float64)), (574, tensor(-0.0316, dtype=torch.float64)), (2005, tensor(-0.0316, dtype=torch.float64)), (210, tensor(-0.0316, dtype=torch.float64)), (351, tensor(-0.0314, dtype=torch.float64)), (424, tensor(-0.0314, dtype=torch.float64)), (906, tensor(-0.0313, dtype=torch.float64)), (671, tensor(-0.0313, dtype=torch.float64)), (1605, tensor(-0.0310, dtype=torch.float64)), (1777, tensor(-0.0310, dtype=torch.float64)), (1590, tensor(-0.0310, dtype=torch.float64)), (1423, tensor(-0.0309, dtype=torch.float64)), (2075, tensor(-0.0309, dtype=torch.float64)), (1843, tensor(-0.0309, dtype=torch.float64)), (64, tensor(-0.0307, dtype=torch.float64)), (970, tensor(-0.0306, dtype=torch.float64)), (1686, tensor(-0.0306, dtype=torch.float64)), (1384, tensor(-0.0305, dtype=torch.float64)), (17, tensor(-0.0304, dtype=torch.float64)), (2048, tensor(-0.0304, dtype=torch.float64)), (687, tensor(-0.0303, dtype=torch.float64)), (1844, tensor(-0.0302, dtype=torch.float64)), (1145, tensor(-0.0302, dtype=torch.float64)), (1483, tensor(-0.0302, dtype=torch.float64)), (1284, tensor(-0.0302, dtype=torch.float64)), (93, tensor(-0.0301, dtype=torch.float64)), (1156, tensor(-0.0301, dtype=torch.float64)), (1866, tensor(-0.0298, dtype=torch.float64)), (339, tensor(-0.0298, dtype=torch.float64)), (1117, tensor(-0.0298, dtype=torch.float64)), (413, tensor(-0.0298, dtype=torch.float64)), (561, tensor(-0.0298, dtype=torch.float64)), (446, tensor(-0.0297, dtype=torch.float64)), (1650, tensor(-0.0297, dtype=torch.float64)), (1393, tensor(-0.0296, dtype=torch.float64)), (52, tensor(-0.0296, dtype=torch.float64)), (370, tensor(-0.0296, dtype=torch.float64)), (1918, tensor(-0.0296, dtype=torch.float64)), (1900, tensor(-0.0296, dtype=torch.float64)), (1933, tensor(-0.0296, dtype=torch.float64)), (1708, tensor(-0.0295, dtype=torch.float64)), (1797, tensor(-0.0293, dtype=torch.float64)), (1038, tensor(-0.0293, dtype=torch.float64)), (1275, tensor(-0.0293, dtype=torch.float64)), (929, tensor(-0.0293, dtype=torch.float64)), (1162, tensor(-0.0292, dtype=torch.float64)), (739, tensor(-0.0292, dtype=torch.float64)), (1953, tensor(-0.0292, dtype=torch.float64)), (1678, tensor(-0.0291, dtype=torch.float64)), (1315, tensor(-0.0291, dtype=torch.float64)), (1177, tensor(-0.0291, dtype=torch.float64)), (130, tensor(-0.0291, dtype=torch.float64)), (459, tensor(-0.0290, dtype=torch.float64)), (346, tensor(-0.0290, dtype=torch.float64)), (185, tensor(-0.0290, dtype=torch.float64)), (1567, tensor(-0.0290, dtype=torch.float64)), (441, tensor(-0.0289, dtype=torch.float64)), (1563, tensor(-0.0289, dtype=torch.float64)), (1274, tensor(-0.0289, dtype=torch.float64)), (1666, tensor(-0.0288, dtype=torch.float64)), (180, tensor(-0.0287, dtype=torch.float64)), (2090, tensor(-0.0286, dtype=torch.float64)), (1032, tensor(-0.0286, dtype=torch.float64)), (217, tensor(-0.0285, dtype=torch.float64)), (1306, tensor(-0.0285, dtype=torch.float64)), (400, tensor(-0.0284, dtype=torch.float64)), (1513, tensor(-0.0284, dtype=torch.float64)), (1491, tensor(-0.0283, dtype=torch.float64)), (1486, tensor(-0.0283, dtype=torch.float64)), (84, tensor(-0.0282, dtype=torch.float64)), (1035, tensor(-0.0282, dtype=torch.float64)), (2097, tensor(-0.0282, dtype=torch.float64)), (878, tensor(-0.0282, dtype=torch.float64)), (324, tensor(-0.0281, dtype=torch.float64)), (420, tensor(-0.0281, dtype=torch.float64)), (748, tensor(-0.0280, dtype=torch.float64)), (1817, tensor(-0.0280, dtype=torch.float64)), (1003, tensor(-0.0280, dtype=torch.float64)), (1239, tensor(-0.0280, dtype=torch.float64)), (1488, tensor(-0.0280, dtype=torch.float64)), (1061, tensor(-0.0279, dtype=torch.float64)), (536, tensor(-0.0279, dtype=torch.float64)), (940, tensor(-0.0277, dtype=torch.float64)), (1730, tensor(-0.0277, dtype=torch.float64)), (1113, tensor(-0.0276, dtype=torch.float64)), (100, tensor(-0.0276, dtype=torch.float64)), (512, tensor(-0.0276, dtype=torch.float64)), (1722, tensor(-0.0276, dtype=torch.float64)), (967, tensor(-0.0274, dtype=torch.float64)), (282, tensor(-0.0274, dtype=torch.float64)), (926, tensor(-0.0272, dtype=torch.float64)), (472, tensor(-0.0271, dtype=torch.float64)), (630, tensor(-0.0271, dtype=torch.float64)), (1524, tensor(-0.0270, dtype=torch.float64)), (874, tensor(-0.0270, dtype=torch.float64)), (1932, tensor(-0.0269, dtype=torch.float64)), (95, tensor(-0.0266, dtype=torch.float64)), (1226, tensor(-0.0266, dtype=torch.float64)), (1799, tensor(-0.0266, dtype=torch.float64)), (1212, tensor(-0.0266, dtype=torch.float64)), (2002, tensor(-0.0265, dtype=torch.float64)), (456, tensor(-0.0265, dtype=torch.float64)), (1129, tensor(-0.0265, dtype=torch.float64)), (1280, tensor(-0.0265, dtype=torch.float64)), (711, tensor(-0.0264, dtype=torch.float64)), (928, tensor(-0.0264, dtype=torch.float64)), (1842, tensor(-0.0264, dtype=torch.float64)), (36, tensor(-0.0263, dtype=torch.float64)), (729, tensor(-0.0263, dtype=torch.float64)), (1955, tensor(-0.0263, dtype=torch.float64)), (1146, tensor(-0.0263, dtype=torch.float64)), (349, tensor(-0.0262, dtype=torch.float64)), (1472, tensor(-0.0262, dtype=torch.float64)), (179, tensor(-0.0262, dtype=torch.float64)), (322, tensor(-0.0262, dtype=torch.float64)), (818, tensor(-0.0262, dtype=torch.float64)), (1202, tensor(-0.0261, dtype=torch.float64)), (1244, tensor(-0.0261, dtype=torch.float64)), (706, tensor(-0.0261, dtype=torch.float64)), (1027, tensor(-0.0261, dtype=torch.float64)), (1173, tensor(-0.0260, dtype=torch.float64)), (1939, tensor(-0.0260, dtype=torch.float64)), (1633, tensor(-0.0259, dtype=torch.float64)), (350, tensor(-0.0259, dtype=torch.float64)), (805, tensor(-0.0258, dtype=torch.float64)), (1068, tensor(-0.0258, dtype=torch.float64)), (1822, tensor(-0.0257, dtype=torch.float64)), (553, tensor(-0.0257, dtype=torch.float64)), (708, tensor(-0.0256, dtype=torch.float64)), (200, tensor(-0.0256, dtype=torch.float64)), (1166, tensor(-0.0256, dtype=torch.float64)), (568, tensor(-0.0255, dtype=torch.float64)), (1884, tensor(-0.0255, dtype=torch.float64)), (30, tensor(-0.0255, dtype=torch.float64)), (1219, tensor(-0.0254, dtype=torch.float64)), (1406, tensor(-0.0254, dtype=torch.float64)), (1979, tensor(-0.0253, dtype=torch.float64)), (938, tensor(-0.0253, dtype=torch.float64)), (524, tensor(-0.0252, dtype=torch.float64)), (640, tensor(-0.0252, dtype=torch.float64)), (1586, tensor(-0.0251, dtype=torch.float64)), (330, tensor(-0.0251, dtype=torch.float64)), (237, tensor(-0.0251, dtype=torch.float64)), (582, tensor(-0.0251, dtype=torch.float64)), (1622, tensor(-0.0250, dtype=torch.float64)), (995, tensor(-0.0250, dtype=torch.float64)), (1444, tensor(-0.0249, dtype=torch.float64)), (1882, tensor(-0.0249, dtype=torch.float64)), (485, tensor(-0.0248, dtype=torch.float64)), (20, tensor(-0.0248, dtype=torch.float64)), (258, tensor(-0.0247, dtype=torch.float64)), (273, tensor(-0.0247, dtype=torch.float64)), (1448, tensor(-0.0245, dtype=torch.float64)), (1805, tensor(-0.0245, dtype=torch.float64)), (716, tensor(-0.0245, dtype=torch.float64)), (528, tensor(-0.0245, dtype=torch.float64)), (507, tensor(-0.0245, dtype=torch.float64)), (1242, tensor(-0.0244, dtype=torch.float64)), (1302, tensor(-0.0243, dtype=torch.float64)), (1859, tensor(-0.0243, dtype=torch.float64)), (608, tensor(-0.0243, dtype=torch.float64)), (1289, tensor(-0.0243, dtype=torch.float64)), (657, tensor(-0.0243, dtype=torch.float64)), (968, tensor(-0.0243, dtype=torch.float64)), (2028, tensor(-0.0242, dtype=torch.float64)), (2099, tensor(-0.0242, dtype=torch.float64)), (1878, tensor(-0.0241, dtype=torch.float64)), (1798, tensor(-0.0240, dtype=torch.float64)), (661, tensor(-0.0240, dtype=torch.float64)), (2059, tensor(-0.0239, dtype=torch.float64)), (639, tensor(-0.0239, dtype=torch.float64)), (340, tensor(-0.0239, dtype=torch.float64)), (79, tensor(-0.0239, dtype=torch.float64)), (893, tensor(-0.0238, dtype=torch.float64)), (636, tensor(-0.0238, dtype=torch.float64)), (1398, tensor(-0.0237, dtype=torch.float64)), (1821, tensor(-0.0236, dtype=torch.float64)), (1142, tensor(-0.0236, dtype=torch.float64)), (386, tensor(-0.0236, dtype=torch.float64)), (979, tensor(-0.0235, dtype=torch.float64)), (236, tensor(-0.0234, dtype=torch.float64)), (159, tensor(-0.0234, dtype=torch.float64)), (794, tensor(-0.0234, dtype=torch.float64)), (1504, tensor(-0.0233, dtype=torch.float64)), (554, tensor(-0.0232, dtype=torch.float64)), (1, tensor(-0.0231, dtype=torch.float64)), (259, tensor(-0.0231, dtype=torch.float64)), (2019, tensor(-0.0230, dtype=torch.float64)), (1681, tensor(-0.0230, dtype=torch.float64)), (823, tensor(-0.0229, dtype=torch.float64)), (1030, tensor(-0.0229, dtype=torch.float64)), (629, tensor(-0.0229, dtype=torch.float64)), (643, tensor(-0.0228, dtype=torch.float64)), (1408, tensor(-0.0228, dtype=torch.float64)), (83, tensor(-0.0228, dtype=torch.float64)), (1316, tensor(-0.0228, dtype=torch.float64)), (1779, tensor(-0.0228, dtype=torch.float64)), (325, tensor(-0.0228, dtype=torch.float64)), (909, tensor(-0.0227, dtype=torch.float64)), (2062, tensor(-0.0227, dtype=torch.float64)), (72, tensor(-0.0227, dtype=torch.float64)), (1246, tensor(-0.0227, dtype=torch.float64)), (1871, tensor(-0.0226, dtype=torch.float64)), (2006, tensor(-0.0226, dtype=torch.float64)), (865, tensor(-0.0226, dtype=torch.float64)), (615, tensor(-0.0225, dtype=torch.float64)), (289, tensor(-0.0225, dtype=torch.float64)), (1837, tensor(-0.0224, dtype=torch.float64)), (502, tensor(-0.0221, dtype=torch.float64)), (941, tensor(-0.0221, dtype=torch.float64)), (1341, tensor(-0.0220, dtype=torch.float64)), (1215, tensor(-0.0220, dtype=torch.float64)), (1574, tensor(-0.0219, dtype=torch.float64)), (592, tensor(-0.0219, dtype=torch.float64)), (537, tensor(-0.0219, dtype=torch.float64)), (1198, tensor(-0.0219, dtype=torch.float64)), (336, tensor(-0.0218, dtype=torch.float64)), (1123, tensor(-0.0217, dtype=torch.float64)), (1438, tensor(-0.0217, dtype=torch.float64)), (580, tensor(-0.0216, dtype=torch.float64)), (1413, tensor(-0.0216, dtype=torch.float64)), (1285, tensor(-0.0216, dtype=torch.float64)), (292, tensor(-0.0215, dtype=torch.float64)), (76, tensor(-0.0215, dtype=torch.float64)), (1610, tensor(-0.0215, dtype=torch.float64)), (1090, tensor(-0.0215, dtype=torch.float64)), (410, tensor(-0.0215, dtype=torch.float64)), (1503, tensor(-0.0215, dtype=torch.float64)), (383, tensor(-0.0214, dtype=torch.float64)), (1252, tensor(-0.0214, dtype=torch.float64)), (1440, tensor(-0.0214, dtype=torch.float64)), (1296, tensor(-0.0213, dtype=torch.float64)), (255, tensor(-0.0213, dtype=torch.float64)), (572, tensor(-0.0213, dtype=torch.float64)), (774, tensor(-0.0213, dtype=torch.float64)), (2050, tensor(-0.0213, dtype=torch.float64)), (555, tensor(-0.0213, dtype=torch.float64)), (271, tensor(-0.0212, dtype=torch.float64)), (365, tensor(-0.0212, dtype=torch.float64)), (609, tensor(-0.0212, dtype=torch.float64)), (311, tensor(-0.0212, dtype=torch.float64)), (1139, tensor(-0.0211, dtype=torch.float64)), (302, tensor(-0.0211, dtype=torch.float64)), (997, tensor(-0.0210, dtype=torch.float64)), (1091, tensor(-0.0210, dtype=torch.float64)), (1031, tensor(-0.0209, dtype=torch.float64)), (948, tensor(-0.0209, dtype=torch.float64)), (599, tensor(-0.0208, dtype=torch.float64)), (1800, tensor(-0.0208, dtype=torch.float64)), (1796, tensor(-0.0208, dtype=torch.float64)), (782, tensor(-0.0207, dtype=torch.float64)), (1941, tensor(-0.0206, dtype=torch.float64)), (764, tensor(-0.0206, dtype=torch.float64)), (269, tensor(-0.0206, dtype=torch.float64)), (628, tensor(-0.0206, dtype=torch.float64)), (1088, tensor(-0.0205, dtype=torch.float64)), (1978, tensor(-0.0205, dtype=torch.float64)), (895, tensor(-0.0205, dtype=torch.float64)), (637, tensor(-0.0205, dtype=torch.float64)), (1143, tensor(-0.0205, dtype=torch.float64)), (110, tensor(-0.0204, dtype=torch.float64)), (1690, tensor(-0.0203, dtype=torch.float64)), (252, tensor(-0.0203, dtype=torch.float64)), (321, tensor(-0.0202, dtype=torch.float64)), (1157, tensor(-0.0202, dtype=torch.float64)), (751, tensor(-0.0202, dtype=torch.float64)), (141, tensor(-0.0202, dtype=torch.float64)), (597, tensor(-0.0201, dtype=torch.float64)), (1892, tensor(-0.0201, dtype=torch.float64)), (1612, tensor(-0.0201, dtype=torch.float64)), (1534, tensor(-0.0201, dtype=torch.float64)), (1293, tensor(-0.0200, dtype=torch.float64)), (1377, tensor(-0.0199, dtype=torch.float64)), (1138, tensor(-0.0199, dtype=torch.float64)), (391, tensor(-0.0199, dtype=torch.float64)), (1064, tensor(-0.0198, dtype=torch.float64)), (780, tensor(-0.0198, dtype=torch.float64)), (15, tensor(-0.0198, dtype=torch.float64)), (1654, tensor(-0.0198, dtype=torch.float64)), (1290, tensor(-0.0197, dtype=torch.float64)), (279, tensor(-0.0197, dtype=torch.float64)), (1349, tensor(-0.0197, dtype=torch.float64)), (756, tensor(-0.0196, dtype=torch.float64)), (1137, tensor(-0.0196, dtype=torch.float64)), (197, tensor(-0.0196, dtype=torch.float64)), (2098, tensor(-0.0195, dtype=torch.float64)), (113, tensor(-0.0195, dtype=torch.float64)), (487, tensor(-0.0194, dtype=torch.float64)), (1043, tensor(-0.0194, dtype=torch.float64)), (886, tensor(-0.0194, dtype=torch.float64)), (251, tensor(-0.0194, dtype=torch.float64)), (958, tensor(-0.0194, dtype=torch.float64)), (652, tensor(-0.0194, dtype=torch.float64)), (2095, tensor(-0.0193, dtype=torch.float64)), (642, tensor(-0.0193, dtype=torch.float64)), (433, tensor(-0.0192, dtype=torch.float64)), (1961, tensor(-0.0192, dtype=torch.float64)), (1723, tensor(-0.0191, dtype=torch.float64)), (1392, tensor(-0.0191, dtype=torch.float64)), (163, tensor(-0.0191, dtype=torch.float64)), (147, tensor(-0.0191, dtype=torch.float64)), (863, tensor(-0.0191, dtype=torch.float64)), (1281, tensor(-0.0191, dtype=torch.float64)), (1570, tensor(-0.0191, dtype=torch.float64)), (2064, tensor(-0.0190, dtype=torch.float64)), (1265, tensor(-0.0190, dtype=torch.float64)), (749, tensor(-0.0190, dtype=torch.float64)), (853, tensor(-0.0190, dtype=torch.float64)), (80, tensor(-0.0190, dtype=torch.float64)), (715, tensor(-0.0189, dtype=torch.float64)), (382, tensor(-0.0189, dtype=torch.float64)), (1739, tensor(-0.0189, dtype=torch.float64)), (314, tensor(-0.0189, dtype=torch.float64)), (851, tensor(-0.0188, dtype=torch.float64)), (900, tensor(-0.0188, dtype=torch.float64)), (1600, tensor(-0.0187, dtype=torch.float64)), (793, tensor(-0.0187, dtype=torch.float64)), (2063, tensor(-0.0187, dtype=torch.float64)), (1823, tensor(-0.0186, dtype=torch.float64)), (1411, tensor(-0.0185, dtype=torch.float64)), (89, tensor(-0.0184, dtype=torch.float64)), (567, tensor(-0.0184, dtype=torch.float64)), (1895, tensor(-0.0183, dtype=torch.float64)), (2068, tensor(-0.0183, dtype=torch.float64)), (2016, tensor(-0.0182, dtype=torch.float64)), (1648, tensor(-0.0182, dtype=torch.float64)), (1529, tensor(-0.0182, dtype=torch.float64)), (1374, tensor(-0.0181, dtype=torch.float64)), (243, tensor(-0.0181, dtype=torch.float64)), (362, tensor(-0.0180, dtype=torch.float64)), (1004, tensor(-0.0180, dtype=torch.float64)), (750, tensor(-0.0179, dtype=torch.float64)), (664, tensor(-0.0179, dtype=torch.float64)), (601, tensor(-0.0179, dtype=torch.float64)), (649, tensor(-0.0178, dtype=torch.float64)), (170, tensor(-0.0178, dtype=torch.float64)), (426, tensor(-0.0178, dtype=torch.float64)), (118, tensor(-0.0177, dtype=torch.float64)), (398, tensor(-0.0177, dtype=torch.float64)), (1569, tensor(-0.0176, dtype=torch.float64)), (1104, tensor(-0.0176, dtype=torch.float64)), (1469, tensor(-0.0176, dtype=torch.float64)), (1641, tensor(-0.0176, dtype=torch.float64)), (267, tensor(-0.0175, dtype=torch.float64)), (1053, tensor(-0.0175, dtype=torch.float64)), (2082, tensor(-0.0175, dtype=torch.float64)), (713, tensor(-0.0174, dtype=torch.float64)), (1385, tensor(-0.0173, dtype=torch.float64)), (242, tensor(-0.0172, dtype=torch.float64)), (1461, tensor(-0.0172, dtype=torch.float64)), (41, tensor(-0.0172, dtype=torch.float64)), (1668, tensor(-0.0171, dtype=torch.float64)), (1858, tensor(-0.0171, dtype=torch.float64)), (86, tensor(-0.0170, dtype=torch.float64)), (1220, tensor(-0.0168, dtype=torch.float64)), (1382, tensor(-0.0168, dtype=torch.float64)), (612, tensor(-0.0168, dtype=torch.float64)), (846, tensor(-0.0167, dtype=torch.float64)), (2110, tensor(-0.0167, dtype=torch.float64)), (1767, tensor(-0.0167, dtype=torch.float64)), (1182, tensor(-0.0167, dtype=torch.float64)), (992, tensor(-0.0167, dtype=torch.float64)), (1172, tensor(-0.0167, dtype=torch.float64)), (747, tensor(-0.0167, dtype=torch.float64)), (1397, tensor(-0.0167, dtype=torch.float64)), (903, tensor(-0.0167, dtype=torch.float64)), (1203, tensor(-0.0166, dtype=torch.float64)), (266, tensor(-0.0166, dtype=torch.float64)), (341, tensor(-0.0166, dtype=torch.float64)), (506, tensor(-0.0165, dtype=torch.float64)), (390, tensor(-0.0165, dtype=torch.float64)), (1381, tensor(-0.0165, dtype=torch.float64)), (1169, tensor(-0.0165, dtype=torch.float64)), (94, tensor(-0.0165, dtype=torch.float64)), (474, tensor(-0.0165, dtype=torch.float64)), (701, tensor(-0.0165, dtype=torch.float64)), (911, tensor(-0.0165, dtype=torch.float64)), (39, tensor(-0.0165, dtype=torch.float64)), (1726, tensor(-0.0164, dtype=torch.float64)), (1985, tensor(-0.0164, dtype=torch.float64)), (2055, tensor(-0.0164, dtype=torch.float64)), (2046, tensor(-0.0164, dtype=torch.float64)), (1775, tensor(-0.0164, dtype=torch.float64)), (1140, tensor(-0.0164, dtype=torch.float64)), (492, tensor(-0.0164, dtype=torch.float64)), (2052, tensor(-0.0164, dtype=torch.float64)), (482, tensor(-0.0163, dtype=torch.float64)), (1554, tensor(-0.0163, dtype=torch.float64)), (1701, tensor(-0.0163, dtype=torch.float64)), (1019, tensor(-0.0163, dtype=torch.float64)), (1719, tensor(-0.0162, dtype=torch.float64)), (1919, tensor(-0.0162, dtype=torch.float64)), (1609, tensor(-0.0162, dtype=torch.float64)), (343, tensor(-0.0162, dtype=torch.float64)), (284, tensor(-0.0162, dtype=torch.float64)), (1909, tensor(-0.0161, dtype=torch.float64)), (783, tensor(-0.0161, dtype=torch.float64)), (2083, tensor(-0.0161, dtype=torch.float64)), (988, tensor(-0.0161, dtype=torch.float64)), (1439, tensor(-0.0161, dtype=torch.float64)), (1386, tensor(-0.0161, dtype=torch.float64)), (1854, tensor(-0.0161, dtype=torch.float64)), (122, tensor(-0.0160, dtype=torch.float64)), (35, tensor(-0.0160, dtype=torch.float64)), (225, tensor(-0.0160, dtype=torch.float64)), (680, tensor(-0.0159, dtype=torch.float64)), (1644, tensor(-0.0159, dtype=torch.float64)), (976, tensor(-0.0159, dtype=torch.float64)), (516, tensor(-0.0159, dtype=torch.float64)), (1928, tensor(-0.0159, dtype=torch.float64)), (1021, tensor(-0.0158, dtype=torch.float64)), (1045, tensor(-0.0158, dtype=torch.float64)), (337, tensor(-0.0158, dtype=torch.float64)), (1190, tensor(-0.0158, dtype=torch.float64)), (1144, tensor(-0.0158, dtype=torch.float64)), (534, tensor(-0.0158, dtype=torch.float64)), (1765, tensor(-0.0157, dtype=torch.float64)), (1195, tensor(-0.0157, dtype=torch.float64)), (1552, tensor(-0.0156, dtype=torch.float64)), (1549, tensor(-0.0156, dtype=torch.float64)), (2004, tensor(-0.0156, dtype=torch.float64)), (1683, tensor(-0.0156, dtype=torch.float64)), (270, tensor(-0.0156, dtype=torch.float64)), (1010, tensor(-0.0156, dtype=torch.float64)), (1625, tensor(-0.0155, dtype=torch.float64)), (1999, tensor(-0.0155, dtype=torch.float64)), (238, tensor(-0.0155, dtype=torch.float64)), (1716, tensor(-0.0155, dtype=torch.float64)), (447, tensor(-0.0155, dtype=torch.float64)), (854, tensor(-0.0155, dtype=torch.float64)), (1737, tensor(-0.0152, dtype=torch.float64)), (181, tensor(-0.0152, dtype=torch.float64)), (2088, tensor(-0.0152, dtype=torch.float64)), (1304, tensor(-0.0152, dtype=torch.float64)), (1676, tensor(-0.0152, dtype=torch.float64)), (496, tensor(-0.0151, dtype=torch.float64)), (1547, tensor(-0.0151, dtype=torch.float64)), (1492, tensor(-0.0151, dtype=torch.float64)), (1950, tensor(-0.0150, dtype=torch.float64)), (361, tensor(-0.0150, dtype=torch.float64)), (914, tensor(-0.0150, dtype=torch.float64)), (417, tensor(-0.0149, dtype=torch.float64)), (801, tensor(-0.0149, dtype=torch.float64)), (9, tensor(-0.0148, dtype=torch.float64)), (1180, tensor(-0.0148, dtype=torch.float64)), (1318, tensor(-0.0148, dtype=torch.float64)), (297, tensor(-0.0147, dtype=torch.float64)), (1225, tensor(-0.0147, dtype=torch.float64)), (1734, tensor(-0.0147, dtype=torch.float64)), (768, tensor(-0.0147, dtype=torch.float64)), (87, tensor(-0.0146, dtype=torch.float64)), (1868, tensor(-0.0146, dtype=torch.float64)), (810, tensor(-0.0146, dtype=torch.float64)), (702, tensor(-0.0146, dtype=torch.float64)), (950, tensor(-0.0145, dtype=torch.float64)), (964, tensor(-0.0145, dtype=torch.float64)), (1697, tensor(-0.0144, dtype=torch.float64)), (1627, tensor(-0.0144, dtype=torch.float64)), (1645, tensor(-0.0144, dtype=torch.float64)), (454, tensor(-0.0144, dtype=torch.float64)), (1248, tensor(-0.0143, dtype=torch.float64)), (1743, tensor(-0.0143, dtype=torch.float64)), (150, tensor(-0.0143, dtype=torch.float64)), (775, tensor(-0.0142, dtype=torch.float64)), (254, tensor(-0.0142, dtype=torch.float64)), (632, tensor(-0.0141, dtype=torch.float64)), (881, tensor(-0.0141, dtype=torch.float64)), (822, tensor(-0.0141, dtype=torch.float64)), (759, tensor(-0.0141, dtype=torch.float64)), (646, tensor(-0.0140, dtype=torch.float64)), (111, tensor(-0.0140, dtype=torch.float64)), (1705, tensor(-0.0138, dtype=torch.float64)), (1216, tensor(-0.0138, dtype=torch.float64)), (1473, tensor(-0.0137, dtype=torch.float64)), (43, tensor(-0.0137, dtype=torch.float64)), (204, tensor(-0.0136, dtype=torch.float64)), (1266, tensor(-0.0136, dtype=torch.float64)), (369, tensor(-0.0136, dtype=torch.float64)), (1452, tensor(-0.0136, dtype=torch.float64)), (1712, tensor(-0.0136, dtype=torch.float64)), (67, tensor(-0.0135, dtype=torch.float64)), (157, tensor(-0.0135, dtype=torch.float64)), (98, tensor(-0.0135, dtype=torch.float64)), (2022, tensor(-0.0135, dtype=torch.float64)), (1501, tensor(-0.0135, dtype=torch.float64)), (1747, tensor(-0.0134, dtype=torch.float64)), (1715, tensor(-0.0134, dtype=torch.float64)), (1804, tensor(-0.0134, dtype=torch.float64)), (1977, tensor(-0.0134, dtype=torch.float64)), (614, tensor(-0.0134, dtype=torch.float64)), (104, tensor(-0.0133, dtype=torch.float64)), (1414, tensor(-0.0133, dtype=torch.float64)), (817, tensor(-0.0133, dtype=torch.float64)), (174, tensor(-0.0133, dtype=torch.float64)), (2076, tensor(-0.0133, dtype=torch.float64)), (1292, tensor(-0.0133, dtype=torch.float64)), (530, tensor(-0.0132, dtype=torch.float64)), (1105, tensor(-0.0132, dtype=torch.float64)), (665, tensor(-0.0132, dtype=torch.float64)), (1127, tensor(-0.0132, dtype=torch.float64)), (897, tensor(-0.0132, dtype=torch.float64)), (376, tensor(-0.0132, dtype=torch.float64)), (798, tensor(-0.0131, dtype=torch.float64)), (1840, tensor(-0.0131, dtype=torch.float64)), (1811, tensor(-0.0131, dtype=torch.float64)), (2018, tensor(-0.0131, dtype=torch.float64)), (1657, tensor(-0.0131, dtype=torch.float64)), (990, tensor(-0.0130, dtype=torch.float64)), (1891, tensor(-0.0130, dtype=torch.float64)), (103, tensor(-0.0130, dtype=torch.float64)), (760, tensor(-0.0130, dtype=torch.float64)), (85, tensor(-0.0129, dtype=torch.float64)), (1407, tensor(-0.0129, dtype=torch.float64)), (1537, tensor(-0.0129, dtype=torch.float64)), (1033, tensor(-0.0129, dtype=torch.float64)), (249, tensor(-0.0128, dtype=torch.float64)), (1194, tensor(-0.0128, dtype=torch.float64)), (1717, tensor(-0.0128, dtype=torch.float64)), (724, tensor(-0.0128, dtype=torch.float64)), (1879, tensor(-0.0128, dtype=torch.float64)), (268, tensor(-0.0128, dtype=torch.float64)), (549, tensor(-0.0128, dtype=torch.float64)), (655, tensor(-0.0127, dtype=torch.float64)), (1465, tensor(-0.0127, dtype=torch.float64)), (1029, tensor(-0.0127, dtype=torch.float64)), (1073, tensor(-0.0127, dtype=torch.float64)), (1432, tensor(-0.0127, dtype=torch.float64)), (2107, tensor(-0.0127, dtype=torch.float64)), (737, tensor(-0.0126, dtype=torch.float64)), (99, tensor(-0.0126, dtype=torch.float64)), (101, tensor(-0.0125, dtype=torch.float64)), (138, tensor(-0.0125, dtype=torch.float64)), (1200, tensor(-0.0124, dtype=torch.float64)), (644, tensor(-0.0124, dtype=torch.float64)), (1621, tensor(-0.0124, dtype=torch.float64)), (489, tensor(-0.0124, dtype=torch.float64)), (1211, tensor(-0.0124, dtype=torch.float64)), (1523, tensor(-0.0124, dtype=torch.float64)), (1783, tensor(-0.0124, dtype=torch.float64)), (1404, tensor(-0.0124, dtype=torch.float64)), (264, tensor(-0.0123, dtype=torch.float64)), (1147, tensor(-0.0123, dtype=torch.float64)), (1580, tensor(-0.0123, dtype=torch.float64)), (1322, tensor(-0.0123, dtype=torch.float64)), (1227, tensor(-0.0122, dtype=torch.float64)), (374, tensor(-0.0122, dtype=torch.float64)), (1158, tensor(-0.0122, dtype=torch.float64)), (491, tensor(-0.0122, dtype=torch.float64)), (1387, tensor(-0.0121, dtype=torch.float64)), (479, tensor(-0.0121, dtype=torch.float64)), (2106, tensor(-0.0121, dtype=torch.float64)), (1232, tensor(-0.0121, dtype=torch.float64)), (668, tensor(-0.0121, dtype=torch.float64)), (1346, tensor(-0.0120, dtype=torch.float64)), (769, tensor(-0.0120, dtype=torch.float64)), (1665, tensor(-0.0120, dtype=torch.float64)), (167, tensor(-0.0120, dtype=torch.float64)), (1102, tensor(-0.0120, dtype=torch.float64)), (105, tensor(-0.0119, dtype=torch.float64)), (1234, tensor(-0.0119, dtype=torch.float64)), (2117, tensor(-0.0119, dtype=torch.float64)), (771, tensor(-0.0119, dtype=torch.float64)), (471, tensor(-0.0118, dtype=torch.float64)), (1042, tensor(-0.0118, dtype=torch.float64)), (199, tensor(-0.0117, dtype=torch.float64)), (1001, tensor(-0.0117, dtype=torch.float64)), (1825, tensor(-0.0117, dtype=torch.float64)), (1425, tensor(-0.0116, dtype=torch.float64)), (45, tensor(-0.0116, dtype=torch.float64)), (585, tensor(-0.0116, dtype=torch.float64)), (24, tensor(-0.0116, dtype=torch.float64)), (1034, tensor(-0.0116, dtype=torch.float64)), (1680, tensor(-0.0116, dtype=torch.float64)), (272, tensor(-0.0115, dtype=torch.float64)), (444, tensor(-0.0115, dtype=torch.float64)), (1192, tensor(-0.0115, dtype=torch.float64)), (1132, tensor(-0.0115, dtype=torch.float64)), (1774, tensor(-0.0114, dtype=torch.float64)), (1426, tensor(-0.0114, dtype=torch.float64)), (1832, tensor(-0.0114, dtype=torch.float64)), (1351, tensor(-0.0113, dtype=torch.float64)), (1345, tensor(-0.0113, dtype=torch.float64)), (171, tensor(-0.0112, dtype=torch.float64)), (1957, tensor(-0.0112, dtype=torch.float64)), (1485, tensor(-0.0112, dtype=torch.float64)), (342, tensor(-0.0112, dtype=torch.float64)), (1542, tensor(-0.0112, dtype=torch.float64)), (1069, tensor(-0.0112, dtype=torch.float64)), (807, tensor(-0.0111, dtype=torch.float64)), (738, tensor(-0.0111, dtype=torch.float64)), (186, tensor(-0.0111, dtype=torch.float64)), (587, tensor(-0.0111, dtype=torch.float64)), (14, tensor(-0.0110, dtype=torch.float64)), (193, tensor(-0.0110, dtype=torch.float64)), (839, tensor(-0.0110, dtype=torch.float64)), (845, tensor(-0.0110, dtype=torch.float64)), (659, tensor(-0.0110, dtype=torch.float64)), (396, tensor(-0.0110, dtype=torch.float64)), (1640, tensor(-0.0110, dtype=torch.float64)), (1141, tensor(-0.0110, dtype=torch.float64)), (1074, tensor(-0.0109, dtype=torch.float64)), (1984, tensor(-0.0109, dtype=torch.float64)), (965, tensor(-0.0109, dtype=torch.float64)), (248, tensor(-0.0108, dtype=torch.float64)), (800, tensor(-0.0108, dtype=torch.float64)), (1916, tensor(-0.0108, dtype=torch.float64)), (1449, tensor(-0.0107, dtype=torch.float64)), (855, tensor(-0.0107, dtype=torch.float64)), (1008, tensor(-0.0107, dtype=torch.float64)), (226, tensor(-0.0107, dtype=torch.float64)), (1560, tensor(-0.0107, dtype=torch.float64)), (673, tensor(-0.0107, dtype=torch.float64)), (1890, tensor(-0.0107, dtype=torch.float64)), (494, tensor(-0.0106, dtype=torch.float64)), (1655, tensor(-0.0106, dtype=torch.float64)), (984, tensor(-0.0105, dtype=torch.float64)), (1059, tensor(-0.0105, dtype=torch.float64)), (1355, tensor(-0.0104, dtype=torch.float64)), (1576, tensor(-0.0104, dtype=torch.float64)), (735, tensor(-0.0104, dtype=torch.float64)), (1443, tensor(-0.0104, dtype=torch.float64)), (2119, tensor(-0.0103, dtype=torch.float64)), (1435, tensor(-0.0103, dtype=torch.float64)), (705, tensor(-0.0103, dtype=torch.float64)), (1528, tensor(-0.0102, dtype=torch.float64)), (1791, tensor(-0.0102, dtype=torch.float64)), (378, tensor(-0.0102, dtype=torch.float64)), (835, tensor(-0.0102, dtype=torch.float64)), (1598, tensor(-0.0101, dtype=torch.float64)), (1828, tensor(-0.0100, dtype=torch.float64)), (412, tensor(-0.0100, dtype=torch.float64)), (315, tensor(-0.0100, dtype=torch.float64)), (34, tensor(-0.0100, dtype=torch.float64)), (1112, tensor(-0.0099, dtype=torch.float64)), (473, tensor(-0.0099, dtype=torch.float64)), (1080, tensor(-0.0099, dtype=torch.float64)), (1592, tensor(-0.0099, dtype=torch.float64)), (1092, tensor(-0.0099, dtype=torch.float64)), (1268, tensor(-0.0099, dtype=torch.float64)), (1691, tensor(-0.0098, dtype=torch.float64)), (1383, tensor(-0.0098, dtype=torch.float64)), (1901, tensor(-0.0098, dtype=torch.float64)), (1646, tensor(-0.0097, dtype=torch.float64)), (808, tensor(-0.0097, dtype=torch.float64)), (1233, tensor(-0.0097, dtype=torch.float64)), (38, tensor(-0.0097, dtype=torch.float64)), (1635, tensor(-0.0096, dtype=torch.float64)), (1695, tensor(-0.0096, dtype=torch.float64)), (1418, tensor(-0.0096, dtype=torch.float64)), (525, tensor(-0.0096, dtype=torch.float64)), (1987, tensor(-0.0095, dtype=torch.float64)), (1785, tensor(-0.0095, dtype=torch.float64)), (1338, tensor(-0.0095, dtype=torch.float64)), (1402, tensor(-0.0095, dtype=torch.float64)), (1155, tensor(-0.0094, dtype=torch.float64)), (1036, tensor(-0.0094, dtype=torch.float64)), (308, tensor(-0.0094, dtype=torch.float64)), (1044, tensor(-0.0094, dtype=torch.float64)), (698, tensor(-0.0094, dtype=torch.float64)), (676, tensor(-0.0093, dtype=torch.float64)), (183, tensor(-0.0093, dtype=torch.float64)), (307, tensor(-0.0093, dtype=torch.float64)), (389, tensor(-0.0093, dtype=torch.float64)), (804, tensor(-0.0092, dtype=torch.float64)), (1224, tensor(-0.0092, dtype=torch.float64)), (66, tensor(-0.0092, dtype=torch.float64)), (1250, tensor(-0.0091, dtype=torch.float64)), (154, tensor(-0.0091, dtype=torch.float64)), (451, tensor(-0.0091, dtype=torch.float64)), (221, tensor(-0.0091, dtype=torch.float64)), (295, tensor(-0.0091, dtype=torch.float64)), (1728, tensor(-0.0091, dtype=torch.float64)), (51, tensor(-0.0090, dtype=torch.float64)), (1171, tensor(-0.0090, dtype=torch.float64)), (1669, tensor(-0.0090, dtype=torch.float64)), (1667, tensor(-0.0090, dtype=torch.float64)), (1696, tensor(-0.0090, dtype=torch.float64)), (1433, tensor(-0.0090, dtype=torch.float64)), (1794, tensor(-0.0089, dtype=torch.float64)), (404, tensor(-0.0089, dtype=torch.float64)), (1462, tensor(-0.0089, dtype=torch.float64)), (1405, tensor(-0.0088, dtype=torch.float64)), (591, tensor(-0.0088, dtype=torch.float64)), (683, tensor(-0.0088, dtype=torch.float64)), (529, tensor(-0.0088, dtype=torch.float64)), (1305, tensor(-0.0088, dtype=torch.float64)), (1601, tensor(-0.0088, dtype=torch.float64)), (826, tensor(-0.0088, dtype=torch.float64)), (1375, tensor(-0.0087, dtype=torch.float64)), (547, tensor(-0.0087, dtype=torch.float64)), (1255, tensor(-0.0087, dtype=torch.float64)), (490, tensor(-0.0087, dtype=torch.float64)), (1389, tensor(-0.0087, dtype=torch.float64)), (1587, tensor(-0.0087, dtype=torch.float64)), (190, tensor(-0.0087, dtype=torch.float64)), (1510, tensor(-0.0087, dtype=torch.float64)), (788, tensor(-0.0086, dtype=torch.float64)), (1936, tensor(-0.0086, dtype=torch.float64)), (694, tensor(-0.0086, dtype=torch.float64)), (1872, tensor(-0.0086, dtype=torch.float64)), (182, tensor(-0.0085, dtype=torch.float64)), (1184, tensor(-0.0085, dtype=torch.float64)), (188, tensor(-0.0084, dtype=torch.float64)), (896, tensor(-0.0084, dtype=torch.float64)), (1994, tensor(-0.0084, dtype=torch.float64)), (825, tensor(-0.0084, dtype=torch.float64)), (1286, tensor(-0.0083, dtype=torch.float64)), (392, tensor(-0.0083, dtype=torch.float64)), (1806, tensor(-0.0083, dtype=torch.float64)), (201, tensor(-0.0083, dtype=torch.float64)), (600, tensor(-0.0083, dtype=torch.float64)), (1390, tensor(-0.0083, dtype=torch.float64)), (1682, tensor(-0.0082, dtype=torch.float64)), (144, tensor(-0.0082, dtype=torch.float64)), (1181, tensor(-0.0082, dtype=torch.float64)), (1731, tensor(-0.0082, dtype=torch.float64)), (1148, tensor(-0.0081, dtype=torch.float64)), (1403, tensor(-0.0081, dtype=torch.float64)), (956, tensor(-0.0081, dtype=torch.float64)), (1041, tensor(-0.0081, dtype=torch.float64)), (2001, tensor(-0.0081, dtype=torch.float64)), (833, tensor(-0.0081, dtype=torch.float64)), (905, tensor(-0.0081, dtype=torch.float64)), (120, tensor(-0.0080, dtype=torch.float64)), (611, tensor(-0.0080, dtype=torch.float64)), (117, tensor(-0.0080, dtype=torch.float64)), (515, tensor(-0.0080, dtype=torch.float64)), (1228, tensor(-0.0080, dtype=torch.float64)), (2007, tensor(-0.0079, dtype=torch.float64)), (414, tensor(-0.0079, dtype=torch.float64)), (2091, tensor(-0.0079, dtype=torch.float64)), (2113, tensor(-0.0079, dtype=torch.float64)), (1128, tensor(-0.0079, dtype=torch.float64)), (481, tensor(-0.0079, dtype=torch.float64)), (1356, tensor(-0.0078, dtype=torch.float64)), (697, tensor(-0.0078, dtype=torch.float64)), (1710, tensor(-0.0078, dtype=torch.float64)), (1562, tensor(-0.0078, dtype=torch.float64)), (165, tensor(-0.0078, dtype=torch.float64)), (300, tensor(-0.0077, dtype=torch.float64)), (2024, tensor(-0.0077, dtype=torch.float64)), (723, tensor(-0.0077, dtype=torch.float64)), (703, tensor(-0.0077, dtype=torch.float64)), (795, tensor(-0.0077, dtype=torch.float64)), (280, tensor(-0.0076, dtype=torch.float64)), (33, tensor(-0.0076, dtype=torch.float64)), (126, tensor(-0.0076, dtype=torch.float64)), (931, tensor(-0.0076, dtype=torch.float64)), (301, tensor(-0.0076, dtype=torch.float64)), (1494, tensor(-0.0076, dtype=torch.float64)), (594, tensor(-0.0076, dtype=torch.float64)), (1238, tensor(-0.0076, dtype=torch.float64)), (920, tensor(-0.0076, dtype=torch.float64)), (2009, tensor(-0.0076, dtype=torch.float64)), (25, tensor(-0.0075, dtype=torch.float64)), (1221, tensor(-0.0075, dtype=torch.float64)), (430, tensor(-0.0075, dtype=torch.float64)), (65, tensor(-0.0075, dtype=torch.float64)), (1365, tensor(-0.0075, dtype=torch.float64)), (1230, tensor(-0.0075, dtype=torch.float64)), (1262, tensor(-0.0075, dtype=torch.float64)), (205, tensor(-0.0075, dtype=torch.float64)), (476, tensor(-0.0074, dtype=torch.float64)), (972, tensor(-0.0074, dtype=torch.float64)), (394, tensor(-0.0073, dtype=torch.float64)), (1643, tensor(-0.0073, dtype=torch.float64)), (306, tensor(-0.0073, dtype=torch.float64)), (1070, tensor(-0.0073, dtype=torch.float64)), (379, tensor(-0.0073, dtype=torch.float64)), (626, tensor(-0.0071, dtype=torch.float64)), (1256, tensor(-0.0071, dtype=torch.float64)), (508, tensor(-0.0071, dtype=torch.float64)), (2085, tensor(-0.0071, dtype=torch.float64)), (1116, tensor(-0.0071, dtype=torch.float64)), (1482, tensor(-0.0071, dtype=torch.float64)), (387, tensor(-0.0071, dtype=torch.float64)), (1083, tensor(-0.0070, dtype=torch.float64)), (1898, tensor(-0.0070, dtype=torch.float64)), (933, tensor(-0.0070, dtype=torch.float64)), (1450, tensor(-0.0070, dtype=torch.float64)), (660, tensor(-0.0070, dtype=torch.float64)), (1023, tensor(-0.0070, dtype=torch.float64)), (996, tensor(-0.0070, dtype=torch.float64)), (917, tensor(-0.0069, dtype=torch.float64)), (1971, tensor(-0.0069, dtype=torch.float64)), (1913, tensor(-0.0069, dtype=torch.float64)), (1206, tensor(-0.0068, dtype=torch.float64)), (1427, tensor(-0.0068, dtype=torch.float64)), (1855, tensor(-0.0068, dtype=torch.float64)), (618, tensor(-0.0068, dtype=torch.float64)), (1500, tensor(-0.0068, dtype=torch.float64)), (1853, tensor(-0.0068, dtype=torch.float64)), (541, tensor(-0.0068, dtype=torch.float64)), (1833, tensor(-0.0068, dtype=torch.float64)), (960, tensor(-0.0068, dtype=torch.float64)), (912, tensor(-0.0067, dtype=torch.float64)), (53, tensor(-0.0067, dtype=torch.float64)), (1780, tensor(-0.0067, dtype=torch.float64)), (550, tensor(-0.0067, dtype=torch.float64)), (1000, tensor(-0.0067, dtype=torch.float64)), (1421, tensor(-0.0067, dtype=torch.float64)), (1187, tensor(-0.0067, dtype=torch.float64)), (466, tensor(-0.0067, dtype=torch.float64)), (1165, tensor(-0.0066, dtype=torch.float64)), (1845, tensor(-0.0066, dtype=torch.float64)), (222, tensor(-0.0066, dtype=torch.float64)), (228, tensor(-0.0066, dtype=torch.float64)), (1566, tensor(-0.0066, dtype=torch.float64)), (2078, tensor(-0.0066, dtype=torch.float64)), (882, tensor(-0.0065, dtype=torch.float64)), (1993, tensor(-0.0065, dtype=torch.float64)), (429, tensor(-0.0065, dtype=torch.float64)), (1028, tensor(-0.0065, dtype=torch.float64)), (2089, tensor(-0.0065, dtype=torch.float64)), (312, tensor(-0.0065, dtype=torch.float64)), (1607, tensor(-0.0065, dtype=torch.float64)), (784, tensor(-0.0065, dtype=torch.float64)), (773, tensor(-0.0065, dtype=torch.float64)), (230, tensor(-0.0064, dtype=torch.float64)), (1336, tensor(-0.0064, dtype=torch.float64)), (91, tensor(-0.0064, dtype=torch.float64)), (229, tensor(-0.0064, dtype=torch.float64)), (1245, tensor(-0.0064, dtype=torch.float64)), (707, tensor(-0.0063, dtype=torch.float64)), (689, tensor(-0.0063, dtype=torch.float64)), (915, tensor(-0.0063, dtype=torch.float64)), (437, tensor(-0.0063, dtype=torch.float64)), (752, tensor(-0.0063, dtype=torch.float64)), (1624, tensor(-0.0062, dtype=torch.float64)), (733, tensor(-0.0062, dtype=torch.float64)), (613, tensor(-0.0062, dtype=torch.float64)), (2032, tensor(-0.0062, dtype=torch.float64)), (276, tensor(-0.0062, dtype=torch.float64)), (1782, tensor(-0.0062, dtype=torch.float64)), (725, tensor(-0.0062, dtype=torch.float64)), (820, tensor(-0.0061, dtype=torch.float64)), (1951, tensor(-0.0061, dtype=torch.float64)), (559, tensor(-0.0061, dtype=torch.float64)), (666, tensor(-0.0061, dtype=torch.float64)), (1912, tensor(-0.0061, dtype=torch.float64)), (1287, tensor(-0.0061, dtype=torch.float64)), (961, tensor(-0.0060, dtype=torch.float64)), (731, tensor(-0.0060, dtype=torch.float64)), (115, tensor(-0.0060, dtype=torch.float64)), (1704, tensor(-0.0060, dtype=torch.float64)), (838, tensor(-0.0060, dtype=torch.float64)), (718, tensor(-0.0060, dtype=torch.float64)), (2010, tensor(-0.0060, dtype=torch.float64)), (1965, tensor(-0.0060, dtype=torch.float64)), (1810, tensor(-0.0060, dtype=torch.float64)), (552, tensor(-0.0060, dtype=torch.float64)), (1430, tensor(-0.0060, dtype=torch.float64)), (1079, tensor(-0.0060, dtype=torch.float64)), (28, tensor(-0.0059, dtype=torch.float64)), (114, tensor(-0.0059, dtype=torch.float64)), (975, tensor(-0.0059, dtype=torch.float64)), (538, tensor(-0.0059, dtype=torch.float64)), (1312, tensor(-0.0059, dtype=torch.float64)), (902, tensor(-0.0059, dtype=torch.float64)), (1451, tensor(-0.0059, dtype=torch.float64)), (140, tensor(-0.0059, dtype=torch.float64)), (827, tensor(-0.0058, dtype=torch.float64)), (132, tensor(-0.0058, dtype=torch.float64)), (286, tensor(-0.0058, dtype=torch.float64)), (1013, tensor(-0.0058, dtype=torch.float64)), (216, tensor(-0.0058, dtype=torch.float64)), (1326, tensor(-0.0058, dtype=torch.float64)), (2108, tensor(-0.0058, dtype=torch.float64)), (952, tensor(-0.0057, dtype=torch.float64)), (2077, tensor(-0.0057, dtype=torch.float64)), (1762, tensor(-0.0057, dtype=torch.float64)), (790, tensor(-0.0056, dtype=torch.float64)), (468, tensor(-0.0056, dtype=torch.float64)), (526, tensor(-0.0056, dtype=torch.float64)), (1787, tensor(-0.0056, dtype=torch.float64)), (1628, tensor(-0.0056, dtype=torch.float64)), (517, tensor(-0.0056, dtype=torch.float64)), (2020, tensor(-0.0056, dtype=torch.float64)), (406, tensor(-0.0056, dtype=torch.float64)), (425, tensor(-0.0056, dtype=torch.float64)), (97, tensor(-0.0056, dtype=torch.float64)), (2112, tensor(-0.0056, dtype=torch.float64)), (1334, tensor(-0.0055, dtype=torch.float64)), (1790, tensor(-0.0055, dtype=torch.float64)), (1464, tensor(-0.0055, dtype=torch.float64)), (1943, tensor(-0.0055, dtype=torch.float64)), (1911, tensor(-0.0055, dtype=torch.float64)), (1066, tensor(-0.0055, dtype=torch.float64)), (682, tensor(-0.0055, dtype=torch.float64)), (891, tensor(-0.0055, dtype=torch.float64)), (586, tensor(-0.0054, dtype=torch.float64)), (560, tensor(-0.0054, dtype=torch.float64)), (162, tensor(-0.0054, dtype=torch.float64)), (1167, tensor(-0.0054, dtype=torch.float64)), (1733, tensor(-0.0054, dtype=torch.float64)), (870, tensor(-0.0054, dtype=torch.float64)), (772, tensor(-0.0053, dtype=torch.float64)), (277, tensor(-0.0053, dtype=torch.float64)), (145, tensor(-0.0053, dtype=torch.float64)), (871, tensor(-0.0053, dtype=torch.float64)), (1532, tensor(-0.0053, dtype=torch.float64)), (766, tensor(-0.0053, dtype=torch.float64)), (291, tensor(-0.0053, dtype=torch.float64)), (792, tensor(-0.0053, dtype=torch.float64)), (294, tensor(-0.0053, dtype=torch.float64)), (811, tensor(-0.0052, dtype=torch.float64)), (323, tensor(-0.0052, dtype=torch.float64)), (1718, tensor(-0.0052, dtype=torch.float64)), (858, tensor(-0.0051, dtype=torch.float64)), (1259, tensor(-0.0051, dtype=torch.float64)), (1905, tensor(-0.0051, dtype=torch.float64)), (499, tensor(-0.0051, dtype=torch.float64)), (841, tensor(-0.0051, dtype=torch.float64)), (1424, tensor(-0.0051, dtype=torch.float64)), (2021, tensor(-0.0051, dtype=torch.float64)), (54, tensor(-0.0051, dtype=torch.float64)), (593, tensor(-0.0050, dtype=torch.float64)), (1935, tensor(-0.0050, dtype=torch.float64)), (1885, tensor(-0.0050, dtype=torch.float64)), (461, tensor(-0.0050, dtype=torch.float64)), (373, tensor(-0.0050, dtype=torch.float64)), (545, tensor(-0.0050, dtype=torch.float64)), (13, tensor(-0.0050, dtype=torch.float64)), (842, tensor(-0.0050, dtype=torch.float64)), (2092, tensor(-0.0050, dtype=torch.float64)), (877, tensor(-0.0049, dtype=torch.float64)), (480, tensor(-0.0049, dtype=torch.float64)), (829, tensor(-0.0049, dtype=torch.float64)), (813, tensor(-0.0049, dtype=torch.float64)), (1603, tensor(-0.0049, dtype=torch.float64)), (675, tensor(-0.0049, dtype=torch.float64)), (1487, tensor(-0.0049, dtype=torch.float64)), (1350, tensor(-0.0049, dtype=torch.float64)), (388, tensor(-0.0048, dtype=torch.float64)), (1188, tensor(-0.0048, dtype=torch.float64)), (989, tensor(-0.0048, dtype=torch.float64)), (837, tensor(-0.0048, dtype=torch.float64)), (1400, tensor(-0.0048, dtype=torch.float64)), (156, tensor(-0.0048, dtype=torch.float64)), (1709, tensor(-0.0048, dtype=torch.float64)), (1081, tensor(-0.0048, dtype=torch.float64)), (448, tensor(-0.0048, dtype=torch.float64)), (1347, tensor(-0.0048, dtype=torch.float64)), (191, tensor(-0.0047, dtype=torch.float64)), (1512, tensor(-0.0047, dtype=torch.float64)), (218, tensor(-0.0047, dtype=torch.float64)), (293, tensor(-0.0047, dtype=torch.float64)), (1333, tensor(-0.0047, dtype=torch.float64)), (1869, tensor(-0.0047, dtype=torch.float64)), (880, tensor(-0.0047, dtype=torch.float64)), (1009, tensor(-0.0047, dtype=torch.float64)), (1362, tensor(-0.0047, dtype=torch.float64)), (74, tensor(-0.0047, dtype=torch.float64)), (1835, tensor(-0.0046, dtype=torch.float64)), (1992, tensor(-0.0046, dtype=torch.float64)), (570, tensor(-0.0046, dtype=torch.float64)), (710, tensor(-0.0046, dtype=torch.float64)), (1309, tensor(-0.0046, dtype=torch.float64)), (415, tensor(-0.0046, dtype=torch.float64)), (1960, tensor(-0.0046, dtype=torch.float64)), (1990, tensor(-0.0046, dtype=torch.float64)), (220, tensor(-0.0046, dtype=torch.float64)), (1729, tensor(-0.0045, dtype=torch.float64)), (1366, tensor(-0.0045, dtype=torch.float64)), (363, tensor(-0.0045, dtype=torch.float64)), (1594, tensor(-0.0045, dtype=torch.float64)), (598, tensor(-0.0045, dtype=torch.float64)), (1662, tensor(-0.0045, dtype=torch.float64)), (1371, tensor(-0.0045, dtype=torch.float64)), (767, tensor(-0.0045, dtype=torch.float64)), (335, tensor(-0.0045, dtype=torch.float64)), (1049, tensor(-0.0045, dtype=torch.float64)), (1024, tensor(-0.0044, dtype=torch.float64)), (1945, tensor(-0.0044, dtype=torch.float64)), (2081, tensor(-0.0044, dtype=torch.float64)), (1613, tensor(-0.0044, dtype=torch.float64)), (658, tensor(-0.0044, dtype=torch.float64)), (1846, tensor(-0.0043, dtype=torch.float64)), (432, tensor(-0.0043, dtype=torch.float64)), (1241, tensor(-0.0043, dtype=torch.float64)), (1856, tensor(-0.0043, dtype=torch.float64)), (18, tensor(-0.0043, dtype=torch.float64)), (304, tensor(-0.0043, dtype=torch.float64)), (1642, tensor(-0.0043, dtype=torch.float64)), (355, tensor(-0.0043, dtype=torch.float64)), (347, tensor(-0.0042, dtype=torch.float64)), (1802, tensor(-0.0042, dtype=torch.float64)), (81, tensor(-0.0042, dtype=torch.float64)), (1258, tensor(-0.0042, dtype=torch.float64)), (44, tensor(-0.0042, dtype=torch.float64)), (695, tensor(-0.0042, dtype=torch.float64)), (531, tensor(-0.0042, dtype=torch.float64)), (796, tensor(-0.0041, dtype=torch.float64)), (169, tensor(-0.0041, dtype=torch.float64)), (648, tensor(-0.0041, dtype=torch.float64)), (1521, tensor(-0.0041, dtype=torch.float64)), (136, tensor(-0.0041, dtype=torch.float64)), (261, tensor(-0.0041, dtype=torch.float64)), (442, tensor(-0.0041, dtype=torch.float64)), (1807, tensor(-0.0041, dtype=torch.float64)), (1050, tensor(-0.0040, dtype=torch.float64)), (16, tensor(-0.0040, dtype=torch.float64)), (532, tensor(-0.0040, dtype=torch.float64)), (152, tensor(-0.0040, dtype=torch.float64)), (1470, tensor(-0.0040, dtype=torch.float64)), (977, tensor(-0.0040, dtype=torch.float64)), (1058, tensor(-0.0039, dtype=torch.float64)), (1396, tensor(-0.0039, dtype=torch.float64)), (1711, tensor(-0.0039, dtype=torch.float64)), (546, tensor(-0.0039, dtype=torch.float64)), (119, tensor(-0.0039, dtype=torch.float64)), (357, tensor(-0.0039, dtype=torch.float64)), (2044, tensor(-0.0039, dtype=torch.float64)), (1772, tensor(-0.0039, dtype=torch.float64)), (135, tensor(-0.0039, dtype=torch.float64)), (1578, tensor(-0.0038, dtype=torch.float64)), (1101, tensor(-0.0038, dtype=torch.float64)), (1478, tensor(-0.0038, dtype=torch.float64)), (1204, tensor(-0.0038, dtype=torch.float64)), (1254, tensor(-0.0038, dtype=torch.float64)), (1412, tensor(-0.0038, dtype=torch.float64)), (1124, tensor(-0.0038, dtype=torch.float64)), (203, tensor(-0.0038, dtype=torch.float64)), (1924, tensor(-0.0038, dtype=torch.float64)), (966, tensor(-0.0038, dtype=torch.float64)), (31, tensor(-0.0037, dtype=torch.float64)), (1455, tensor(-0.0037, dtype=torch.float64)), (1820, tensor(-0.0037, dtype=torch.float64)), (1915, tensor(-0.0037, dtype=torch.float64)), (1107, tensor(-0.0037, dtype=torch.float64)), (1118, tensor(-0.0037, dtype=torch.float64)), (758, tensor(-0.0037, dtype=torch.float64)), (625, tensor(-0.0037, dtype=torch.float64)), (1098, tensor(-0.0037, dtype=torch.float64)), (1653, tensor(-0.0036, dtype=torch.float64)), (3, tensor(-0.0036, dtype=torch.float64)), (393, tensor(-0.0036, dtype=torch.float64)), (2066, tensor(-0.0036, dtype=torch.float64)), (1834, tensor(-0.0036, dtype=torch.float64)), (953, tensor(-0.0036, dtype=torch.float64)), (450, tensor(-0.0036, dtype=torch.float64)), (26, tensor(-0.0036, dtype=torch.float64)), (2025, tensor(-0.0036, dtype=torch.float64)), (786, tensor(-0.0036, dtype=torch.float64)), (1152, tensor(-0.0036, dtype=torch.float64)), (885, tensor(-0.0035, dtype=torch.float64)), (1054, tensor(-0.0035, dtype=torch.float64)), (1161, tensor(-0.0035, dtype=torch.float64)), (924, tensor(-0.0035, dtype=torch.float64)), (1311, tensor(-0.0035, dtype=torch.float64)), (2122, tensor(-0.0034, dtype=torch.float64)), (1602, tensor(-0.0034, dtype=torch.float64)), (353, tensor(-0.0034, dtype=torch.float64)), (403, tensor(-0.0034, dtype=torch.float64)), (521, tensor(-0.0034, dtype=torch.float64)), (1721, tensor(-0.0034, dtype=torch.float64)), (1342, tensor(-0.0034, dtype=torch.float64)), (27, tensor(-0.0034, dtype=torch.float64)), (189, tensor(-0.0034, dtype=torch.float64)), (1324, tensor(-0.0034, dtype=torch.float64)), (1755, tensor(-0.0034, dtype=torch.float64)), (557, tensor(-0.0034, dtype=torch.float64)), (1111, tensor(-0.0033, dtype=torch.float64)), (2096, tensor(-0.0033, dtype=torch.float64)), (1870, tensor(-0.0033, dtype=torch.float64)), (674, tensor(-0.0033, dtype=torch.float64)), (213, tensor(-0.0033, dtype=torch.float64)), (1638, tensor(-0.0033, dtype=torch.float64)), (1153, tensor(-0.0033, dtype=torch.float64)), (1515, tensor(-0.0033, dtype=torch.float64)), (888, tensor(-0.0033, dtype=torch.float64)), (1307, tensor(-0.0033, dtype=torch.float64)), (1133, tensor(-0.0033, dtype=torch.float64)), (1824, tensor(-0.0033, dtype=torch.float64)), (1568, tensor(-0.0033, dtype=torch.float64)), (1477, tensor(-0.0032, dtype=torch.float64)), (1988, tensor(-0.0032, dtype=torch.float64)), (1134, tensor(-0.0032, dtype=torch.float64)), (1072, tensor(-0.0032, dtype=torch.float64)), (1908, tensor(-0.0032, dtype=torch.float64)), (520, tensor(-0.0032, dtype=torch.float64)), (1314, tensor(-0.0032, dtype=torch.float64)), (1604, tensor(-0.0032, dtype=torch.float64)), (1818, tensor(-0.0032, dtype=torch.float64)), (1087, tensor(-0.0032, dtype=torch.float64)), (405, tensor(-0.0031, dtype=torch.float64)), (5, tensor(-0.0031, dtype=torch.float64)), (445, tensor(-0.0031, dtype=torch.float64)), (1183, tensor(-0.0031, dtype=torch.float64)), (2109, tensor(-0.0031, dtype=torch.float64)), (1422, tensor(-0.0031, dtype=torch.float64)), (1300, tensor(-0.0031, dtype=torch.float64)), (1671, tensor(-0.0031, dtype=torch.float64)), (364, tensor(-0.0031, dtype=torch.float64)), (1201, tensor(-0.0031, dtype=torch.float64)), (1301, tensor(-0.0030, dtype=torch.float64)), (49, tensor(-0.0030, dtype=torch.float64)), (1270, tensor(-0.0030, dtype=torch.float64)), (2035, tensor(-0.0030, dtype=torch.float64)), (1713, tensor(-0.0030, dtype=torch.float64)), (1616, tensor(-0.0030, dtype=torch.float64)), (942, tensor(-0.0030, dtype=torch.float64)), (604, tensor(-0.0030, dtype=torch.float64)), (1308, tensor(-0.0030, dtype=torch.float64)), (121, tensor(-0.0030, dtype=torch.float64)), (736, tensor(-0.0029, dtype=torch.float64)), (1930, tensor(-0.0029, dtype=torch.float64)), (1585, tensor(-0.0029, dtype=torch.float64)), (1480, tensor(-0.0029, dtype=torch.float64)), (1816, tensor(-0.0029, dtype=torch.float64)), (1506, tensor(-0.0029, dtype=torch.float64)), (1109, tensor(-0.0029, dtype=torch.float64)), (1781, tensor(-0.0028, dtype=torch.float64)), (2124, tensor(-0.0028, dtype=torch.float64)), (195, tensor(-0.0028, dtype=torch.float64)), (1297, tensor(-0.0028, dtype=torch.float64)), (998, tensor(-0.0028, dtype=torch.float64)), (700, tensor(-0.0028, dtype=torch.float64)), (1394, tensor(-0.0028, dtype=torch.float64)), (356, tensor(-0.0028, dtype=torch.float64)), (402, tensor(-0.0028, dtype=torch.float64)), (1217, tensor(-0.0028, dtype=torch.float64)), (2093, tensor(-0.0027, dtype=torch.float64)), (2060, tensor(-0.0027, dtype=torch.float64)), (1584, tensor(-0.0027, dtype=torch.float64)), (1507, tensor(-0.0027, dtype=torch.float64)), (797, tensor(-0.0027, dtype=torch.float64)), (1179, tensor(-0.0027, dtype=torch.float64)), (1707, tensor(-0.0027, dtype=torch.float64)), (1727, tensor(-0.0027, dtype=torch.float64)), (1968, tensor(-0.0026, dtype=torch.float64)), (2031, tensor(-0.0026, dtype=torch.float64)), (1637, tensor(-0.0026, dtype=torch.float64)), (1222, tensor(-0.0026, dtype=torch.float64)), (1085, tensor(-0.0026, dtype=torch.float64)), (1436, tensor(-0.0026, dtype=torch.float64)), (2049, tensor(-0.0026, dtype=torch.float64)), (1229, tensor(-0.0026, dtype=torch.float64)), (1634, tensor(-0.0026, dtype=torch.float64)), (1618, tensor(-0.0026, dtype=torch.float64)), (1055, tensor(-0.0025, dtype=torch.float64)), (721, tensor(-0.0025, dtype=torch.float64)), (22, tensor(-0.0025, dtype=torch.float64)), (278, tensor(-0.0025, dtype=torch.float64)), (571, tensor(-0.0025, dtype=torch.float64)), (1980, tensor(-0.0025, dtype=torch.float64)), (922, tensor(-0.0024, dtype=torch.float64)), (1938, tensor(-0.0024, dtype=torch.float64)), (1327, tensor(-0.0024, dtype=torch.float64)), (1952, tensor(-0.0024, dtype=torch.float64)), (635, tensor(-0.0024, dtype=torch.float64)), (227, tensor(-0.0024, dtype=torch.float64)), (1136, tensor(-0.0024, dtype=torch.float64)), (1263, tensor(-0.0024, dtype=torch.float64)), (1499, tensor(-0.0024, dtype=torch.float64)), (367, tensor(-0.0024, dtype=torch.float64)), (742, tensor(-0.0024, dtype=torch.float64)), (1298, tensor(-0.0024, dtype=torch.float64)), (573, tensor(-0.0023, dtype=torch.float64)), (1886, tensor(-0.0023, dtype=torch.float64)), (2047, tensor(-0.0023, dtype=torch.float64)), (2120, tensor(-0.0023, dtype=torch.float64)), (1893, tensor(-0.0023, dtype=torch.float64)), (1417, tensor(-0.0023, dtype=torch.float64)), (29, tensor(-0.0023, dtype=torch.float64)), (1401, tensor(-0.0023, dtype=torch.float64)), (993, tensor(-0.0023, dtype=torch.float64)), (1652, tensor(-0.0023, dtype=torch.float64)), (123, tensor(-0.0023, dtype=torch.float64)), (4, tensor(-0.0023, dtype=torch.float64)), (92, tensor(-0.0023, dtype=torch.float64)), (1135, tensor(-0.0023, dtype=torch.float64)), (1751, tensor(-0.0022, dtype=torch.float64)), (460, tensor(-0.0022, dtype=torch.float64)), (73, tensor(-0.0022, dtype=torch.float64)), (1490, tensor(-0.0022, dtype=torch.float64)), (1267, tensor(-0.0022, dtype=torch.float64)), (360, tensor(-0.0022, dtype=torch.float64)), (2084, tensor(-0.0022, dtype=torch.float64)), (641, tensor(-0.0022, dtype=torch.float64)), (63, tensor(-0.0022, dtype=torch.float64)), (133, tensor(-0.0022, dtype=torch.float64)), (0, tensor(-0.0022, dtype=torch.float64)), (1744, tensor(-0.0022, dtype=torch.float64)), (860, tensor(-0.0022, dtype=torch.float64)), (1100, tensor(-0.0022, dtype=torch.float64)), (239, tensor(-0.0022, dtype=torch.float64)), (1126, tensor(-0.0021, dtype=torch.float64)), (317, tensor(-0.0021, dtype=torch.float64)), (484, tensor(-0.0021, dtype=torch.float64)), (884, tensor(-0.0021, dtype=torch.float64)), (1759, tensor(-0.0021, dtype=torch.float64)), (385, tensor(-0.0021, dtype=torch.float64)), (409, tensor(-0.0021, dtype=torch.float64)), (428, tensor(-0.0021, dtype=torch.float64)), (1925, tensor(-0.0021, dtype=torch.float64)), (2114, tensor(-0.0021, dtype=torch.float64)), (1243, tensor(-0.0021, dtype=torch.float64)), (71, tensor(-0.0021, dtype=torch.float64)), (622, tensor(-0.0021, dtype=torch.float64)), (1363, tensor(-0.0021, dtype=torch.float64)), (134, tensor(-0.0021, dtype=torch.float64)), (1476, tensor(-0.0020, dtype=torch.float64)), (172, tensor(-0.0020, dtype=torch.float64)), (1763, tensor(-0.0020, dtype=torch.float64)), (1788, tensor(-0.0020, dtype=torch.float64)), (523, tensor(-0.0020, dtype=torch.float64)), (2065, tensor(-0.0020, dtype=torch.float64)), (787, tensor(-0.0020, dtype=torch.float64)), (1863, tensor(-0.0020, dtype=torch.float64)), (728, tensor(-0.0020, dtype=torch.float64)), (1861, tensor(-0.0020, dtype=torch.float64)), (1348, tensor(-0.0020, dtype=torch.float64)), (1518, tensor(-0.0019, dtype=torch.float64)), (2074, tensor(-0.0019, dtype=torch.float64)), (1986, tensor(-0.0019, dtype=torch.float64)), (2086, tensor(-0.0019, dtype=torch.float64)), (946, tensor(-0.0019, dtype=torch.float64)), (1040, tensor(-0.0019, dtype=torch.float64)), (1564, tensor(-0.0019, dtype=torch.float64)), (2011, tensor(-0.0019, dtype=torch.float64)), (1906, tensor(-0.0019, dtype=torch.float64)), (151, tensor(-0.0019, dtype=torch.float64)), (504, tensor(-0.0019, dtype=torch.float64)), (1591, tensor(-0.0019, dtype=torch.float64)), (187, tensor(-0.0019, dtype=torch.float64)), (1495, tensor(-0.0019, dtype=torch.float64)), (688, tensor(-0.0019, dtype=torch.float64)), (215, tensor(-0.0019, dtype=torch.float64)), (1964, tensor(-0.0019, dtype=torch.float64)), (223, tensor(-0.0019, dtype=torch.float64)), (1446, tensor(-0.0018, dtype=torch.float64)), (1235, tensor(-0.0018, dtype=torch.float64)), (1617, tensor(-0.0018, dtype=torch.float64)), (1572, tensor(-0.0018, dtype=torch.float64)), (1773, tensor(-0.0018, dtype=torch.float64)), (566, tensor(-0.0018, dtype=torch.float64)), (1122, tensor(-0.0018, dtype=torch.float64)), (696, tensor(-0.0018, dtype=torch.float64)), (262, tensor(-0.0018, dtype=torch.float64)), (233, tensor(-0.0018, dtype=torch.float64)), (42, tensor(-0.0018, dtype=torch.float64)), (814, tensor(-0.0018, dtype=torch.float64)), (153, tensor(-0.0018, dtype=torch.float64)), (2104, tensor(-0.0017, dtype=torch.float64)), (23, tensor(-0.0017, dtype=torch.float64)), (1011, tensor(-0.0017, dtype=torch.float64)), (562, tensor(-0.0017, dtype=torch.float64)), (457, tensor(-0.0017, dtype=torch.float64)), (1860, tensor(-0.0017, dtype=torch.float64)), (127, tensor(-0.0017, dtype=torch.float64)), (1768, tensor(-0.0017, dtype=torch.float64)), (1460, tensor(-0.0017, dtype=torch.float64)), (927, tensor(-0.0017, dtype=torch.float64)), (1944, tensor(-0.0016, dtype=torch.float64)), (2037, tensor(-0.0016, dtype=torch.float64)), (1852, tensor(-0.0016, dtype=torch.float64)), (164, tensor(-0.0016, dtype=torch.float64)), (1749, tensor(-0.0016, dtype=torch.float64)), (1771, tensor(-0.0016, dtype=torch.float64)), (107, tensor(-0.0016, dtype=torch.float64)), (1154, tensor(-0.0016, dtype=torch.float64)), (1670, tensor(-0.0016, dtype=torch.float64)), (617, tensor(-0.0016, dtype=torch.float64)), (1354, tensor(-0.0016, dtype=torch.float64)), (1758, tensor(-0.0015, dtype=torch.float64)), (987, tensor(-0.0015, dtype=torch.float64)), (2033, tensor(-0.0015, dtype=torch.float64)), (667, tensor(-0.0015, dtype=torch.float64)), (178, tensor(-0.0015, dtype=torch.float64)), (435, tensor(-0.0015, dtype=torch.float64)), (1606, tensor(-0.0015, dtype=torch.float64)), (1343, tensor(-0.0015, dtype=torch.float64)), (1757, tensor(-0.0014, dtype=torch.float64)), (1339, tensor(-0.0014, dtype=torch.float64)), (1997, tensor(-0.0014, dtype=torch.float64)), (904, tensor(-0.0014, dtype=torch.float64)), (1920, tensor(-0.0014, dtype=torch.float64)), (1876, tensor(-0.0014, dtype=torch.float64)), (1272, tensor(-0.0014, dtype=torch.float64)), (1647, tensor(-0.0014, dtype=torch.float64)), (1849, tensor(-0.0014, dtype=torch.float64)), (505, tensor(-0.0014, dtype=torch.float64)), (458, tensor(-0.0014, dtype=torch.float64)), (1545, tensor(-0.0014, dtype=torch.float64)), (889, tensor(-0.0014, dtype=torch.float64)), (2121, tensor(-0.0014, dtype=torch.float64)), (1958, tensor(-0.0014, dtype=torch.float64)), (1702, tensor(-0.0014, dtype=torch.float64)), (1237, tensor(-0.0014, dtype=torch.float64)), (1551, tensor(-0.0014, dtype=torch.float64)), (326, tensor(-0.0014, dtype=torch.float64)), (214, tensor(-0.0014, dtype=torch.float64)), (2101, tensor(-0.0014, dtype=torch.float64)), (1048, tensor(-0.0014, dtype=torch.float64)), (399, tensor(-0.0014, dtype=torch.float64)), (10, tensor(-0.0013, dtype=torch.float64)), (265, tensor(-0.0013, dtype=torch.float64)), (518, tensor(-0.0013, dtype=torch.float64)), (102, tensor(-0.0013, dtype=torch.float64)), (198, tensor(-0.0013, dtype=torch.float64)), (720, tensor(-0.0013, dtype=torch.float64)), (762, tensor(-0.0013, dtype=torch.float64)), (2094, tensor(-0.0013, dtype=torch.float64)), (1544, tensor(-0.0013, dtype=torch.float64)), (2071, tensor(-0.0013, dtype=torch.float64)), (1514, tensor(-0.0013, dtype=torch.float64)), (1530, tensor(-0.0013, dtype=torch.float64)), (1658, tensor(-0.0013, dtype=torch.float64)), (745, tensor(-0.0013, dtype=torch.float64)), (1687, tensor(-0.0013, dtype=torch.float64)), (620, tensor(-0.0013, dtype=torch.float64)), (1972, tensor(-0.0012, dtype=torch.float64)), (1923, tensor(-0.0012, dtype=torch.float64)), (503, tensor(-0.0012, dtype=torch.float64)), (1561, tensor(-0.0012, dtype=torch.float64)), (1509, tensor(-0.0012, dtype=torch.float64)), (1089, tensor(-0.0012, dtype=torch.float64)), (588, tensor(-0.0012, dtype=torch.float64)), (753, tensor(-0.0012, dtype=torch.float64)), (338, tensor(-0.0012, dtype=torch.float64)), (1218, tensor(-0.0012, dtype=torch.float64)), (785, tensor(-0.0012, dtype=torch.float64)), (328, tensor(-0.0011, dtype=torch.float64)), (777, tensor(-0.0011, dtype=torch.float64)), (438, tensor(-0.0011, dtype=torch.float64)), (422, tensor(-0.0011, dtype=torch.float64)), (969, tensor(-0.0011, dtype=torch.float64)), (1649, tensor(-0.0011, dtype=torch.float64)), (799, tensor(-0.0011, dtype=torch.float64)), (670, tensor(-0.0011, dtype=torch.float64)), (82, tensor(-0.0011, dtype=torch.float64)), (1078, tensor(-0.0011, dtype=torch.float64)), (455, tensor(-0.0011, dtype=torch.float64)), (1742, tensor(-0.0011, dtype=torch.float64)), (918, tensor(-0.0011, dtype=torch.float64)), (245, tensor(-0.0011, dtype=torch.float64)), (693, tensor(-0.0011, dtype=torch.float64)), (112, tensor(-0.0011, dtype=torch.float64)), (1437, tensor(-0.0011, dtype=torch.float64)), (257, tensor(-0.0011, dtype=torch.float64)), (1565, tensor(-0.0011, dtype=torch.float64)), (535, tensor(-0.0011, dtype=torch.float64)), (1279, tensor(-0.0010, dtype=torch.float64)), (184, tensor(-0.0010, dtype=torch.float64)), (1973, tensor(-0.0010, dtype=torch.float64)), (719, tensor(-0.0010, dtype=torch.float64)), (1196, tensor(-0.0010, dtype=torch.float64)), (1420, tensor(-0.0010, dtype=torch.float64)), (803, tensor(-0.0010, dtype=torch.float64)), (6, tensor(-0.0010, dtype=torch.float64)), (981, tensor(-0.0010, dtype=torch.float64)), (1672, tensor(-0.0010, dtype=torch.float64)), (1330, tensor(-0.0010, dtype=torch.float64)), (2061, tensor(-0.0010, dtype=torch.float64)), (2072, tensor(-0.0010, dtype=torch.float64)), (1881, tensor(-0.0010, dtype=torch.float64)), (319, tensor(-0.0010, dtype=torch.float64)), (994, tensor(-0.0009, dtype=torch.float64)), (1479, tensor(-0.0009, dtype=torch.float64)), (1836, tensor(-0.0009, dtype=torch.float64)), (408, tensor(-0.0009, dtype=torch.float64)), (469, tensor(-0.0009, dtype=torch.float64)), (453, tensor(-0.0009, dtype=torch.float64)), (894, tensor(-0.0009, dtype=torch.float64)), (596, tensor(-0.0009, dtype=torch.float64)), (1519, tensor(-0.0009, dtype=torch.float64)), (208, tensor(-0.0009, dtype=torch.float64)), (1942, tensor(-0.0009, dtype=torch.float64)), (241, tensor(-0.0009, dtype=torch.float64)), (1310, tensor(-0.0009, dtype=torch.float64)), (1974, tensor(-0.0009, dtype=torch.float64)), (1535, tensor(-0.0009, dtype=torch.float64)), (1745, tensor(-0.0009, dtype=torch.float64)), (1026, tensor(-0.0009, dtype=torch.float64)), (1368, tensor(-0.0009, dtype=torch.float64)), (973, tensor(-0.0009, dtype=torch.float64)), (212, tensor(-0.0008, dtype=torch.float64)), (890, tensor(-0.0008, dtype=torch.float64)), (2116, tensor(-0.0008, dtype=torch.float64)), (1688, tensor(-0.0008, dtype=torch.float64)), (1830, tensor(-0.0008, dtype=torch.float64)), (876, tensor(-0.0008, dtype=torch.float64)), (1959, tensor(-0.0008, dtype=torch.float64)), (577, tensor(-0.0008, dtype=torch.float64)), (1060, tensor(-0.0008, dtype=torch.float64)), (1967, tensor(-0.0008, dtype=torch.float64)), (1260, tensor(-0.0008, dtype=torch.float64)), (2039, tensor(-0.0008, dtype=torch.float64)), (1966, tensor(-0.0008, dtype=torch.float64)), (206, tensor(-0.0008, dtype=torch.float64)), (1502, tensor(-0.0008, dtype=torch.float64)), (656, tensor(-0.0008, dtype=torch.float64)), (937, tensor(-0.0007, dtype=torch.float64)), (1786, tensor(-0.0007, dtype=torch.float64)), (619, tensor(-0.0007, dtype=torch.float64)), (650, tensor(-0.0007, dtype=torch.float64)), (1062, tensor(-0.0007, dtype=torch.float64)), (1463, tensor(-0.0007, dtype=torch.float64)), (345, tensor(-0.0007, dtype=torch.float64)), (1364, tensor(-0.0007, dtype=torch.float64)), (1291, tensor(-0.0007, dtype=torch.float64)), (583, tensor(-0.0007, dtype=torch.float64)), (1754, tensor(-0.0007, dtype=torch.float64)), (486, tensor(-0.0007, dtype=torch.float64)), (1295, tensor(-0.0007, dtype=torch.float64)), (519, tensor(-0.0007, dtype=torch.float64)), (2017, tensor(-0.0007, dtype=torch.float64)), (647, tensor(-0.0006, dtype=torch.float64)), (260, tensor(-0.0006, dtype=torch.float64)), (1917, tensor(-0.0006, dtype=torch.float64)), (1689, tensor(-0.0006, dtype=torch.float64)), (1753, tensor(-0.0006, dtype=torch.float64)), (1106, tensor(-0.0006, dtype=torch.float64)), (440, tensor(-0.0006, dtype=torch.float64)), (196, tensor(-0.0006, dtype=torch.float64)), (765, tensor(-0.0006, dtype=torch.float64)), (497, tensor(-0.0006, dtype=torch.float64)), (511, tensor(-0.0006, dtype=torch.float64)), (2026, tensor(-0.0006, dtype=torch.float64)), (1929, tensor(-0.0006, dtype=torch.float64)), (142, tensor(-0.0006, dtype=torch.float64)), (1907, tensor(-0.0005, dtype=torch.float64)), (1496, tensor(-0.0005, dtype=torch.float64)), (1313, tensor(-0.0005, dtype=torch.float64)), (436, tensor(-0.0005, dtype=torch.float64)), (1317, tensor(-0.0005, dtype=torch.float64)), (1940, tensor(-0.0005, dtype=torch.float64)), (332, tensor(-0.0005, dtype=torch.float64)), (947, tensor(-0.0005, dtype=torch.float64)), (463, tensor(-0.0005, dtype=torch.float64)), (589, tensor(-0.0005, dtype=torch.float64)), (2000, tensor(-0.0005, dtype=torch.float64)), (1039, tensor(-0.0005, dtype=torch.float64)), (354, tensor(-0.0005, dtype=torch.float64)), (1328, tensor(-0.0004, dtype=torch.float64)), (935, tensor(-0.0004, dtype=torch.float64)), (963, tensor(-0.0004, dtype=torch.float64)), (1651, tensor(-0.0004, dtype=torch.float64)), (69, tensor(-0.0004, dtype=torch.float64)), (627, tensor(-0.0004, dtype=torch.float64)), (411, tensor(-0.0004, dtype=torch.float64)), (654, tensor(-0.0004, dtype=torch.float64)), (1795, tensor(-0.0004, dtype=torch.float64)), (610, tensor(-0.0004, dtype=torch.float64)), (1214, tensor(-0.0004, dtype=torch.float64)), (1249, tensor(-0.0004, dtype=torch.float64)), (1623, tensor(-0.0004, dtype=torch.float64)), (1164, tensor(-0.0004, dtype=torch.float64)), (959, tensor(-0.0004, dtype=torch.float64)), (1703, tensor(-0.0004, dtype=torch.float64)), (1151, tensor(-0.0003, dtype=torch.float64)), (1006, tensor(-0.0003, dtype=torch.float64)), (1332, tensor(-0.0003, dtype=torch.float64)), (1596, tensor(-0.0003, dtype=torch.float64)), (1410, tensor(-0.0003, dtype=torch.float64)), (57, tensor(-0.0003, dtype=torch.float64)), (1558, tensor(-0.0003, dtype=torch.float64)), (744, tensor(-0.0003, dtype=torch.float64)), (1573, tensor(-0.0003, dtype=torch.float64)), (298, tensor(-0.0003, dtype=torch.float64)), (1517, tensor(-0.0002, dtype=torch.float64)), (290, tensor(-0.0002, dtype=torch.float64)), (1789, tensor(-0.0002, dtype=torch.float64)), (1231, tensor(-0.0002, dtype=torch.float64)), (634, tensor(-0.0002, dtype=torch.float64)), (1527, tensor(-0.0002, dtype=torch.float64)), (1698, tensor(-0.0001, dtype=torch.float64)), (1760, tensor(-0.0001, dtype=torch.float64)), (1046, tensor(-0.0001, dtype=torch.float64)), (1776, tensor(-0.0001, dtype=torch.float64)), (2080, tensor(-8.2366e-05, dtype=torch.float64))]
annotated_samples_num: 1524
unannotated_samples_num: 2020
update datapool!
annotated_samples_num: 1524
unannotated_samples_num: 2020
strategy: RANDOM
iter: 0
annotated_samples_num: 177
unannotated_samples_num: 3367
Epoch [1/10], Batch [1/22], Loss: 2.6050
Epoch [1/10], Batch [2/22], Loss: 1.9409
Epoch [1/10], Batch [3/22], Loss: 2.0518
Epoch [1/10], Batch [4/22], Loss: 1.6050
Epoch [1/10], Batch [5/22], Loss: 1.4072
Epoch [1/10], Batch [6/22], Loss: 1.4406
Epoch [1/10], Batch [7/22], Loss: 1.0484
Epoch [1/10], Batch [8/22], Loss: 0.3947
Epoch [1/10], Batch [9/22], Loss: 0.4476
Epoch [1/10], Batch [10/22], Loss: 0.6505
Epoch [1/10], Batch [11/22], Loss: 0.4862
Epoch [1/10], Batch [12/22], Loss: 0.5464
Epoch [1/10], Batch [13/22], Loss: 0.3107
Epoch [1/10], Batch [14/22], Loss: 0.5877
Epoch [1/10], Batch [15/22], Loss: 0.2462
Epoch [1/10], Batch [16/22], Loss: 0.2858
Epoch [1/10], Batch [17/22], Loss: 0.4063
Epoch [1/10], Batch [18/22], Loss: 0.4146
Epoch [1/10], Batch [19/22], Loss: 0.5873
Epoch [1/10], Batch [20/22], Loss: 0.3186
Epoch [1/10], Batch [21/22], Loss: 0.3089
Epoch [1/10], Batch [22/22], Loss: 0.5749
Epoch [1/10], Average Loss: 0.8484
-----------------------------------------------------------
strategy: RANDOM
iter: 0
epoch: 0
Test Loss: 0.4281
F1_overall: 0.4226
F1_AGENT: 0.6057
F1_TARGET: 0.2462
-----------------------------------------------------------
